<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="classtiny_1_1_im_gui_debug_pass" kind="class" language="C++" prot="public">
    <compoundname>tiny::ImGuiDebugPass</compoundname>
    <basecompoundref refid="classtiny_1_1_i_render_pass" prot="public" virt="non-virtual">tiny::IRenderPass</basecompoundref>
    <includes refid="gfxdebug_8h" local="no">gfxdebug.h</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classtiny_1_1_im_gui_debug_pass_1a00128ef4bf5c74a93f182fe73c6699d0" prot="private" static="no" mutable="no">
        <type><ref refid="structtiny_1_1_render_texture_handle" kindref="compound">RenderTextureHandle</ref></type>
        <definition>RenderTextureHandle tiny::ImGuiDebugPass::mTargetTexture</definition>
        <argsstring></argsstring>
        <name>mTargetTexture</name>
        <qualifiedname>tiny::ImGuiDebugPass::mTargetTexture</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/gfxdebug.h" line="17" column="21" bodyfile="graphics/gfxdebug.h" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtiny_1_1_im_gui_debug_pass_1a2a892c79c264fb8d70ab4ecf7fca3eff" prot="private" static="no" mutable="no">
        <type><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref> *</type>
        <definition>ImGuiContext* tiny::ImGuiDebugPass::mImContext</definition>
        <argsstring></argsstring>
        <name>mImContext</name>
        <qualifiedname>tiny::ImGuiDebugPass::mImContext</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/gfxdebug.h" line="18" column="14" bodyfile="graphics/gfxdebug.h" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtiny_1_1_im_gui_debug_pass_1ae7a8dcff2eb1424d606fa2524c12b816" prot="private" static="no" mutable="no">
        <type><ref refid="classtiny_1_1_descriptor_handle" kindref="compound">DescriptorHandle</ref></type>
        <definition>DescriptorHandle tiny::ImGuiDebugPass::mImguiSrv</definition>
        <argsstring></argsstring>
        <name>mImguiSrv</name>
        <qualifiedname>tiny::ImGuiDebugPass::mImguiSrv</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/gfxdebug.h" line="19" column="18" bodyfile="graphics/gfxdebug.h" bodystart="19" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classtiny_1_1_im_gui_debug_pass_1a343bd22ad502a17de34b803f6e4325eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tiny::ImGuiDebugPass::ImGuiDebugPass</definition>
        <argsstring>(HWND hWnd, RenderTextureHandle targetTexture)</argsstring>
        <name>ImGuiDebugPass</name>
        <qualifiedname>tiny::ImGuiDebugPass::ImGuiDebugPass</qualifiedname>
        <param>
          <type>HWND</type>
          <declname>hWnd</declname>
        </param>
        <param>
          <type><ref refid="structtiny_1_1_render_texture_handle" kindref="compound">RenderTextureHandle</ref></type>
          <declname>targetTexture</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/gfxdebug.h" line="11" column="1" bodyfile="graphics/gfxdebug.cpp" bodystart="10" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="classtiny_1_1_im_gui_debug_pass_1a1124f567c28cc4073c0ecaa8bb809d05" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tiny::ImGuiDebugPass::~ImGuiDebugPass</definition>
        <argsstring>() override</argsstring>
        <name>~ImGuiDebugPass</name>
        <qualifiedname>tiny::ImGuiDebugPass::~ImGuiDebugPass</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/gfxdebug.h" line="12" column="1" bodyfile="graphics/gfxdebug.cpp" bodystart="22" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="classtiny_1_1_im_gui_debug_pass_1afb0801ba38157ddefdc9a816d5e215f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void tiny::ImGuiDebugPass::Setup</definition>
        <argsstring>(FrameGraph::Builder &amp;builder) override</argsstring>
        <name>Setup</name>
        <qualifiedname>tiny::ImGuiDebugPass::Setup</qualifiedname>
        <reimplements refid="classtiny_1_1_i_render_pass_1a1bb24bef78077a26beb2b3e049e85a71">Setup</reimplements>
        <param>
          <type><ref refid="classtiny_1_1_frame_graph_1_1_builder" kindref="compound">FrameGraph::Builder</ref> &amp;</type>
          <declname>builder</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/gfxdebug.h" line="14" column="6" bodyfile="graphics/gfxdebug.cpp" bodystart="32" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="classtiny_1_1_im_gui_debug_pass_1ac30ff101c57bc24d5722adccc8c912d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void tiny::ImGuiDebugPass::Execute</definition>
        <argsstring>(RenderContext &amp;ctx, FrameGraphResources &amp;res) override</argsstring>
        <name>Execute</name>
        <qualifiedname>tiny::ImGuiDebugPass::Execute</qualifiedname>
        <reimplements refid="classtiny_1_1_i_render_pass_1a3cbbca0afaaa0c644c81d3e4c6e9524d">Execute</reimplements>
        <param>
          <type><ref refid="structtiny_1_1_render_context" kindref="compound">RenderContext</ref> &amp;</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type><ref refid="classtiny_1_1_frame_graph_resources" kindref="compound">FrameGraphResources</ref> &amp;</type>
          <declname>res</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/gfxdebug.h" line="15" column="6" bodyfile="graphics/gfxdebug.cpp" bodystart="37" bodyend="54"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>tiny::IRenderPass</label>
        <link refid="classtiny_1_1_i_render_pass"/>
      </node>
      <node id="1">
        <label>tiny::ImGuiDebugPass</label>
        <link refid="classtiny_1_1_im_gui_debug_pass"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>tiny::IRenderPass</label>
        <link refid="classtiny_1_1_i_render_pass"/>
      </node>
      <node id="1">
        <label>tiny::ImGuiDebugPass</label>
        <link refid="classtiny_1_1_im_gui_debug_pass"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="graphics/gfxdebug.h" line="8" column="1" bodyfile="graphics/gfxdebug.h" bodystart="9" bodyend="20"/>
    <listofallmembers>
      <member refid="classtiny_1_1_i_render_pass_1ac9144bdb0b89038daf768d7a978b592a" prot="public" virt="non-virtual"><scope>tiny::ImGuiDebugPass</scope><name>EstimateCost</name></member>
      <member refid="classtiny_1_1_im_gui_debug_pass_1ac30ff101c57bc24d5722adccc8c912d4" prot="public" virt="virtual"><scope>tiny::ImGuiDebugPass</scope><name>Execute</name></member>
      <member refid="classtiny_1_1_im_gui_debug_pass_1a343bd22ad502a17de34b803f6e4325eb" prot="public" virt="non-virtual"><scope>tiny::ImGuiDebugPass</scope><name>ImGuiDebugPass</name></member>
      <member refid="classtiny_1_1_im_gui_debug_pass_1a2a892c79c264fb8d70ab4ecf7fca3eff" prot="private" virt="non-virtual"><scope>tiny::ImGuiDebugPass</scope><name>mImContext</name></member>
      <member refid="classtiny_1_1_im_gui_debug_pass_1ae7a8dcff2eb1424d606fa2524c12b816" prot="private" virt="non-virtual"><scope>tiny::ImGuiDebugPass</scope><name>mImguiSrv</name></member>
      <member refid="classtiny_1_1_im_gui_debug_pass_1a00128ef4bf5c74a93f182fe73c6699d0" prot="private" virt="non-virtual"><scope>tiny::ImGuiDebugPass</scope><name>mTargetTexture</name></member>
      <member refid="classtiny_1_1_im_gui_debug_pass_1afb0801ba38157ddefdc9a816d5e215f1" prot="public" virt="virtual"><scope>tiny::ImGuiDebugPass</scope><name>Setup</name></member>
      <member refid="classtiny_1_1_im_gui_debug_pass_1a1124f567c28cc4073c0ecaa8bb809d05" prot="public" virt="non-virtual"><scope>tiny::ImGuiDebugPass</scope><name>~ImGuiDebugPass</name></member>
      <member refid="classtiny_1_1_i_render_pass_1acdc0504e7a298aa148112b0e4b33d9eb" prot="public" virt="virtual"><scope>tiny::ImGuiDebugPass</scope><name>~IRenderPass</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
