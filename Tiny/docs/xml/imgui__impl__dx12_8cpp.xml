<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="imgui__impl__dx12_8cpp" kind="file" language="C++">
    <compoundname>imgui_impl_dx12.cpp</compoundname>
    <includes refid="imgui_8h" local="yes">imgui.h</includes>
    <includes refid="imgui__impl__dx12_8h" local="yes">imgui_impl_dx12.h</includes>
    <includes local="no">d3d12.h</includes>
    <includes local="no">dxgi1_4.h</includes>
    <includes local="no">d3dcompiler.h</includes>
    <incdepgraph>
      <node id="3">
        <label>imconfig.h</label>
        <link refid="imconfig_8h"/>
      </node>
      <node id="2">
        <label>imgui.h</label>
        <link refid="imgui_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>graphics/imgui/imgui_impl_dx12.cpp</label>
        <link refid="imgui__impl__dx12_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>imgui_impl_dx12.h</label>
        <link refid="imgui__impl__dx12_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>assert.h</label>
      </node>
      <node id="11">
        <label>d3d12.h</label>
      </node>
      <node id="13">
        <label>d3dcompiler.h</label>
      </node>
      <node id="12">
        <label>dxgi1_4.h</label>
      </node>
      <node id="10">
        <label>dxgiformat.h</label>
      </node>
      <node id="4">
        <label>float.h</label>
      </node>
      <node id="5">
        <label>stdarg.h</label>
      </node>
      <node id="6">
        <label>stddef.h</label>
      </node>
      <node id="7">
        <label>string.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="struct_im_gui___impl_d_x12___data" prot="public">ImGui_ImplDX12_Data</innerclass>
    <innerclass refid="struct_im_gui___impl_d_x12___render_buffers" prot="public">ImGui_ImplDX12_RenderBuffers</innerclass>
    <innerclass refid="struct_v_e_r_t_e_x___c_o_n_s_t_a_n_t___b_u_f_f_e_r___d_x12" prot="public">VERTEX_CONSTANT_BUFFER_DX12</innerclass>
    <sectiondef kind="func">
      <memberdef kind="function" id="imgui__impl__dx12_8cpp_1a118f15106bbcb283366c42001bb9374f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_im_gui___impl_d_x12___data" kindref="compound">ImGui_ImplDX12_Data</ref> *</type>
        <definition>static ImGui_ImplDX12_Data * ImGui_ImplDX12_GetBackendData</definition>
        <argsstring>(ImGuiContext *ctx)</argsstring>
        <name>ImGui_ImplDX12_GetBackendData</name>
        <param>
          <type><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imgui_impl_dx12.cpp" line="78" column="28" bodyfile="graphics/imgui/imgui_impl_dx12.cpp" bodystart="78" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__dx12_8cpp_1ae0cf22b18199557f4a195d12386a7acb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ImGui_ImplDX12_SetupRenderState</definition>
        <argsstring>(ImGuiContext *imctx, ImDrawData *draw_data, ID3D12GraphicsCommandList *ctx, ImGui_ImplDX12_RenderBuffers *fr)</argsstring>
        <name>ImGui_ImplDX12_SetupRenderState</name>
        <param>
          <type><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref> *</type>
          <declname>imctx</declname>
        </param>
        <param>
          <type><ref refid="struct_im_draw_data" kindref="compound">ImDrawData</ref> *</type>
          <declname>draw_data</declname>
        </param>
        <param>
          <type>ID3D12GraphicsCommandList *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type><ref refid="struct_im_gui___impl_d_x12___render_buffers" kindref="compound">ImGui_ImplDX12_RenderBuffers</ref> *</type>
          <declname>fr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imgui_impl_dx12.cpp" line="98" column="13" bodyfile="graphics/imgui/imgui_impl_dx12.cpp" bodystart="98" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__dx12_8cpp_1a1b7b2cbda67e86c4835baedc87d17f7b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>static void SafeRelease</definition>
        <argsstring>(T *&amp;res)</argsstring>
        <name>SafeRelease</name>
        <param>
          <type>T *&amp;</type>
          <declname>res</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imgui_impl_dx12.cpp" line="156" column="20" bodyfile="graphics/imgui/imgui_impl_dx12.cpp" bodystart="156" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__dx12_8cpp_1a247aa49a601118c9e436d851b27fd4c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ImGui_ImplDX12_RenderDrawData</definition>
        <argsstring>(ImGuiContext *imctx, ImDrawData *draw_data, ID3D12GraphicsCommandList *ctx)</argsstring>
        <name>ImGui_ImplDX12_RenderDrawData</name>
        <param>
          <type><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref> *</type>
          <declname>imctx</declname>
        </param>
        <param>
          <type><ref refid="struct_im_draw_data" kindref="compound">ImDrawData</ref> *</type>
          <declname>draw_data</declname>
        </param>
        <param>
          <type>ID3D12GraphicsCommandList *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imgui_impl_dx12.cpp" line="164" column="6" bodyfile="graphics/imgui/imgui_impl_dx12.cpp" bodystart="164" bodyend="288"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__dx12_8cpp_1a7c4a2e05b9c02c298fe813aaf49a8330" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ImGui_ImplDX12_CreateFontsTexture</definition>
        <argsstring>(ImGuiContext *ctx)</argsstring>
        <name>ImGui_ImplDX12_CreateFontsTexture</name>
        <param>
          <type><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imgui_impl_dx12.cpp" line="290" column="13" bodyfile="graphics/imgui/imgui_impl_dx12.cpp" bodystart="290" bodyend="445"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__dx12_8cpp_1a2201cb1896b022b998668ceeacc82acd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ImGui_ImplDX12_CreateDeviceObjects</definition>
        <argsstring>(ImGuiContext *ctx)</argsstring>
        <name>ImGui_ImplDX12_CreateDeviceObjects</name>
        <param>
          <type><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imgui_impl_dx12.cpp" line="447" column="9" bodyfile="graphics/imgui/imgui_impl_dx12.cpp" bodystart="447" bodyend="679"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__dx12_8cpp_1aad9c507a917437f52a06c472ccf3985f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ImGui_ImplDX12_InvalidateDeviceObjects</definition>
        <argsstring>(ImGuiContext *ctx)</argsstring>
        <name>ImGui_ImplDX12_InvalidateDeviceObjects</name>
        <param>
          <type><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imgui_impl_dx12.cpp" line="681" column="9" bodyfile="graphics/imgui/imgui_impl_dx12.cpp" bodystart="681" bodyend="699"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__dx12_8cpp_1a943e453aaf5c2a6a21fe05a32e1fb522" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ImGui_ImplDX12_Init</definition>
        <argsstring>(ImGuiContext *ctx, ID3D12Device *device, int num_frames_in_flight, DXGI_FORMAT rtv_format, ID3D12DescriptorHeap *cbv_srv_heap, D3D12_CPU_DESCRIPTOR_HANDLE font_srv_cpu_desc_handle, D3D12_GPU_DESCRIPTOR_HANDLE font_srv_gpu_desc_handle)</argsstring>
        <name>ImGui_ImplDX12_Init</name>
        <param>
          <type><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>ID3D12Device *</type>
          <declname>device</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_frames_in_flight</declname>
        </param>
        <param>
          <type>DXGI_FORMAT</type>
          <declname>rtv_format</declname>
        </param>
        <param>
          <type>ID3D12DescriptorHeap *</type>
          <declname>cbv_srv_heap</declname>
        </param>
        <param>
          <type>D3D12_CPU_DESCRIPTOR_HANDLE</type>
          <declname>font_srv_cpu_desc_handle</declname>
        </param>
        <param>
          <type>D3D12_GPU_DESCRIPTOR_HANDLE</type>
          <declname>font_srv_gpu_desc_handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imgui_impl_dx12.cpp" line="701" column="6" bodyfile="graphics/imgui/imgui_impl_dx12.cpp" bodystart="701" bodyend="733"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__dx12_8cpp_1a4e5588d32785e2e86bdf9b7d8657922d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ImGui_ImplDX12_Shutdown</definition>
        <argsstring>(ImGuiContext *ctx)</argsstring>
        <name>ImGui_ImplDX12_Shutdown</name>
        <param>
          <type><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imgui_impl_dx12.cpp" line="735" column="6" bodyfile="graphics/imgui/imgui_impl_dx12.cpp" bodystart="735" bodyend="748"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__dx12_8cpp_1a3636d7406f6493b1bea678cd840e6e03" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ImGui_ImplDX12_NewFrame</definition>
        <argsstring>(ImGuiContext *ctx)</argsstring>
        <name>ImGui_ImplDX12_NewFrame</name>
        <param>
          <type><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imgui_impl_dx12.cpp" line="750" column="6" bodyfile="graphics/imgui/imgui_impl_dx12.cpp" bodystart="750" bodyend="757"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>dear<sp/>imgui:<sp/>Renderer<sp/>Backend<sp/>for<sp/>DirectX12</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>needs<sp/>to<sp/>be<sp/>used<sp/>along<sp/>with<sp/>a<sp/>Platform<sp/>Backend<sp/>(e.g.<sp/>Win32)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Implemented<sp/>features:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>[X]<sp/>Renderer:<sp/>User<sp/>texture<sp/>binding.<sp/>Use<sp/>&apos;D3D12_GPU_DESCRIPTOR_HANDLE&apos;<sp/>as<sp/>ImTextureID.<sp/>Read<sp/>the<sp/>FAQ<sp/>about<sp/>ImTextureID!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>[X]<sp/>Renderer:<sp/>Large<sp/>meshes<sp/>support<sp/>(64k+<sp/>vertices)<sp/>with<sp/>16-bit<sp/>indices.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Important:<sp/>to<sp/>compile<sp/>on<sp/>32-bit<sp/>systems,<sp/>this<sp/>backend<sp/>requires<sp/>code<sp/>to<sp/>be<sp/>compiled<sp/>with<sp/>&apos;#define<sp/>ImTextureID<sp/>ImU64&apos;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>because<sp/>we<sp/>need<sp/>ImTextureID<sp/>to<sp/>carry<sp/>a<sp/>64-bit<sp/>value<sp/>and<sp/>by<sp/>default<sp/>ImTextureID<sp/>is<sp/>defined<sp/>as<sp/>void*.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>To<sp/>build<sp/>this<sp/>on<sp/>32-bit<sp/>systems:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>[Solution<sp/>1]<sp/>IDE/msbuild:<sp/>in<sp/>&quot;Properties/C++/Preprocessor<sp/>Definitions&quot;<sp/>add<sp/>&apos;ImTextureID=ImU64&apos;<sp/>(this<sp/>is<sp/>what<sp/>we<sp/>do<sp/>in<sp/>the<sp/>&apos;example_win32_direct12/example_win32_direct12.vcxproj&apos;<sp/>project<sp/>file)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>[Solution<sp/>2]<sp/>IDE/msbuild:<sp/>in<sp/>&quot;Properties/C++/Preprocessor<sp/>Definitions&quot;<sp/>add<sp/>&apos;IMGUI_USER_CONFIG=&quot;my_imgui_config.h&quot;&apos;<sp/>and<sp/>inside<sp/>&apos;my_imgui_config.h&apos;<sp/>add<sp/>&apos;#define<sp/>ImTextureID<sp/>ImU64&apos;<sp/>and<sp/>as<sp/>many<sp/>other<sp/>options<sp/>as<sp/>you<sp/>like.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>[Solution<sp/>3]<sp/>IDE/msbuild:<sp/>edit<sp/>imconfig.h<sp/>and<sp/>add<sp/>&apos;#define<sp/>ImTextureID<sp/>ImU64&apos;<sp/>(prefer<sp/>solution<sp/>2<sp/>to<sp/>create<sp/>your<sp/>own<sp/>config<sp/>file!)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>[Solution<sp/>4]<sp/>command-line:<sp/>add<sp/>&apos;/D<sp/>ImTextureID=ImU64&apos;<sp/>to<sp/>your<sp/>cl.exe<sp/>command-line<sp/>(this<sp/>is<sp/>what<sp/>we<sp/>do<sp/>in<sp/>the<sp/>example_win32_direct12/build_win32.bat<sp/>file)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>can<sp/>use<sp/>unmodified<sp/>imgui_impl_*<sp/>files<sp/>in<sp/>your<sp/>project.<sp/>See<sp/>examples/<sp/>folder<sp/>for<sp/>examples<sp/>of<sp/>using<sp/>this.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Prefer<sp/>including<sp/>the<sp/>entire<sp/>imgui/<sp/>repository<sp/>into<sp/>your<sp/>project<sp/>(either<sp/>as<sp/>a<sp/>copy<sp/>or<sp/>as<sp/>a<sp/>submodule),<sp/>and<sp/>only<sp/>build<sp/>the<sp/>backends<sp/>you<sp/>need.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Learn<sp/>about<sp/>Dear<sp/>ImGui:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>FAQ<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>https://dearimgui.com/faq</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>Getting<sp/>Started<sp/><sp/><sp/><sp/><sp/><sp/>https://dearimgui.com/getting-started</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>Documentation<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>https://dearimgui.com/docs<sp/>(same<sp/>as<sp/>your<sp/>local<sp/>docs/<sp/>folder).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>Introduction,<sp/>links<sp/>and<sp/>more<sp/>at<sp/>the<sp/>top<sp/>of<sp/>imgui.cpp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>CHANGELOG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(minor<sp/>and<sp/>older<sp/>changes<sp/>stripped<sp/>away,<sp/>please<sp/>see<sp/>git<sp/>history<sp/>for<sp/>details)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2022-10-11:<sp/>Using<sp/>&apos;nullptr&apos;<sp/>instead<sp/>of<sp/>&apos;NULL&apos;<sp/>as<sp/>per<sp/>our<sp/>switch<sp/>to<sp/>C++11.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2021-06-29:<sp/>Reorganized<sp/>backend<sp/>to<sp/>pull<sp/>data<sp/>from<sp/>a<sp/>single<sp/>structure<sp/>to<sp/>facilitate<sp/>usage<sp/>with<sp/>multiple-contexts<sp/>(all<sp/>g_XXXX<sp/>access<sp/>changed<sp/>to<sp/>bd-&gt;XXXX).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2021-05-19:<sp/>DirectX12:<sp/>Replaced<sp/>direct<sp/>access<sp/>to<sp/>ImDrawCmd::TextureId<sp/>with<sp/>a<sp/>call<sp/>to<sp/>ImDrawCmd::GetTexID().<sp/>(will<sp/>become<sp/>a<sp/>requirement)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2021-02-18:<sp/>DirectX12:<sp/>Change<sp/>blending<sp/>equation<sp/>to<sp/>preserve<sp/>alpha<sp/>in<sp/>output<sp/>buffer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2021-01-11:<sp/>DirectX12:<sp/>Improve<sp/>Windows<sp/>7<sp/>compatibility<sp/>(for<sp/>D3D12On7)<sp/>by<sp/>loading<sp/>d3d12.dll<sp/>dynamically.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2020-09-16:<sp/>DirectX12:<sp/>Avoid<sp/>rendering<sp/>calls<sp/>with<sp/>zero-sized<sp/>scissor<sp/>rectangle<sp/>since<sp/>it<sp/>generates<sp/>a<sp/>validation<sp/>layer<sp/>warning.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2020-09-08:<sp/>DirectX12:<sp/>Clarified<sp/>support<sp/>for<sp/>building<sp/>on<sp/>32-bit<sp/>systems<sp/>by<sp/>redefining<sp/>ImTextureID.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2019-10-18:<sp/>DirectX12:<sp/>*BREAKING<sp/>CHANGE*<sp/>Added<sp/>extra<sp/>ID3D12DescriptorHeap<sp/>parameter<sp/>to<sp/>ImGui_ImplDX12_Init()<sp/>function.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2019-05-29:<sp/>DirectX12:<sp/>Added<sp/>support<sp/>for<sp/>large<sp/>mesh<sp/>(64K+<sp/>vertices),<sp/>enable<sp/>ImGuiBackendFlags_RendererHasVtxOffset<sp/>flag.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2019-04-30:<sp/>DirectX12:<sp/>Added<sp/>support<sp/>for<sp/>special<sp/>ImDrawCallback_ResetRenderState<sp/>callback<sp/>to<sp/>reset<sp/>render<sp/>state.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2019-03-29:<sp/>Misc:<sp/>Various<sp/>minor<sp/>tidying<sp/>up.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2018-12-03:<sp/>Misc:<sp/>Added<sp/>#pragma<sp/>comment<sp/>statement<sp/>to<sp/>automatically<sp/>link<sp/>with<sp/>d3dcompiler.lib<sp/>when<sp/>using<sp/>D3DCompile().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2018-11-30:<sp/>Misc:<sp/>Setting<sp/>up<sp/>io.BackendRendererName<sp/>so<sp/>it<sp/>can<sp/>be<sp/>displayed<sp/>in<sp/>the<sp/>About<sp/>Window.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2018-06-12:<sp/>DirectX12:<sp/>Moved<sp/>the<sp/>ID3D12GraphicsCommandList*<sp/>parameter<sp/>from<sp/>NewFrame()<sp/>to<sp/>RenderDrawData().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2018-06-08:<sp/>Misc:<sp/>Extracted<sp/>imgui_impl_dx12.cpp/.h<sp/>away<sp/>from<sp/>the<sp/>old<sp/>combined<sp/>DX12+Win32<sp/>example.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2018-06-08:<sp/>DirectX12:<sp/>Use<sp/>draw_data-&gt;DisplayPos<sp/>and<sp/>draw_data-&gt;DisplaySize<sp/>to<sp/>setup<sp/>projection<sp/>matrix<sp/>and<sp/>clipping<sp/>rectangle<sp/>(to<sp/>ease<sp/>support<sp/>for<sp/>future<sp/>multi-viewport).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2018-02-22:<sp/>Merged<sp/>into<sp/>master<sp/>with<sp/>all<sp/>Win32<sp/>code<sp/>synchronized<sp/>to<sp/>other<sp/>examples.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="imgui_8h" kindref="compound">imgui.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>IMGUI_DISABLE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="imgui__impl__dx12_8h" kindref="compound">imgui_impl_dx12.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">//<sp/>DirectX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;d3d12.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;dxgi1_4.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;d3dcompiler.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_MSC_VER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>comment(lib,<sp/>&quot;d3dcompiler&quot;)<sp/></highlight><highlight class="comment">//<sp/>Automatically<sp/>link<sp/>with<sp/>d3dcompiler.lib<sp/>as<sp/>we<sp/>are<sp/>using<sp/>D3DCompile()<sp/>below.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">//<sp/>DirectX<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_im_gui___impl_d_x12___render_buffers" kindref="compound">ImGui_ImplDX12_RenderBuffers</ref>;</highlight></codeline>
<codeline lineno="58" refid="struct_im_gui___impl_d_x12___data" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_im_gui___impl_d_x12___data_1a2dc01db87c392f50d408e5bb4135206d" kindref="member">ImGui_ImplDX12_Data</ref></highlight></codeline>
<codeline lineno="59"><highlight class="normal">{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>ID3D12Device*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_d_x12___data_1a1c8a790e04e775e3dc8e3f9b5a8f886e" kindref="member">pd3dDevice</ref>;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>ID3D12RootSignature*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_d_x12___data_1a5ec586be9457edb382e26db52b84bba5" kindref="member">pRootSignature</ref>;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>ID3D12PipelineState*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_d_x12___data_1a56ca2ec999af6c639ad32f7204248500" kindref="member">pPipelineState</ref>;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>DXGI_FORMAT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_d_x12___data_1ac51215a8aa27a0c0fa095abc87e0a80b" kindref="member">RTVFormat</ref>;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>ID3D12Resource*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_d_x12___data_1a3157f6d9f8b586f4fbabb8dc59e74ece" kindref="member">pFontTextureResource</ref>;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>D3D12_CPU_DESCRIPTOR_HANDLE<sp/><ref refid="struct_im_gui___impl_d_x12___data_1a0a595d2e3657b5d3b6933d74e65adc3c" kindref="member">hFontSrvCpuDescHandle</ref>;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>D3D12_GPU_DESCRIPTOR_HANDLE<sp/><ref refid="struct_im_gui___impl_d_x12___data_1afbc904e7880493b7d4813238233c3db6" kindref="member">hFontSrvGpuDescHandle</ref>;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>ID3D12DescriptorHeap*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_d_x12___data_1a470d80e9fd5c7b77c19640654466721b" kindref="member">pd3dSrvDescHeap</ref>;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>UINT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_d_x12___data_1a6a541239da42836b2127d1428032cf7d" kindref="member">numFramesInFlight</ref>;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_d_x12___render_buffers" kindref="compound">ImGui_ImplDX12_RenderBuffers</ref>*<sp/><ref refid="struct_im_gui___impl_d_x12___data_1ac61eccc7bdd8782896d100ec000191c4" kindref="member">pFrameResources</ref>;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>UINT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_d_x12___data_1a36f325ca3e65ccc7185559cb6cf09c41" kindref="member">frameIndex</ref>;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_d_x12___data_1a2dc01db87c392f50d408e5bb4135206d" kindref="member">ImGui_ImplDX12_Data</ref>()<sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>memset((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">));<sp/><ref refid="struct_im_gui___impl_d_x12___data_1a36f325ca3e65ccc7185559cb6cf09c41" kindref="member">frameIndex</ref><sp/>=<sp/>UINT_MAX;<sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal">};</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Backend<sp/>data<sp/>stored<sp/>in<sp/>io.BackendRendererUserData<sp/>to<sp/>allow<sp/>support<sp/>for<sp/>multiple<sp/>Dear<sp/>ImGui<sp/>contexts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="comment">//<sp/>It<sp/>is<sp/>STRONGLY<sp/>preferred<sp/>that<sp/>you<sp/>use<sp/>docking<sp/>branch<sp/>with<sp/>multi-viewports<sp/>(==<sp/>single<sp/>Dear<sp/>ImGui<sp/>context<sp/>+<sp/>multiple<sp/>windows)<sp/>instead<sp/>of<sp/>multiple<sp/>Dear<sp/>ImGui<sp/>contexts.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct_im_gui___impl_d_x12___data" kindref="compound">ImGui_ImplDX12_Data</ref>*<sp/>ImGui_ImplDX12_GetBackendData(<ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>*<sp/>ctx)</highlight></codeline>
<codeline lineno="79"><highlight class="normal">{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ctx<sp/>?<sp/>(<ref refid="struct_im_gui___impl_d_x12___data" kindref="compound">ImGui_ImplDX12_Data</ref>*)<ref refid="namespace_im_gui_1a447aaaa626101bcb4057ab7fad5c63b2" kindref="member">ImGui::GetIO</ref>(ctx).BackendRendererUserData<sp/>:<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="81"><highlight class="normal">}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Buffers<sp/>used<sp/>during<sp/>the<sp/>rendering<sp/>of<sp/>a<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="struct_im_gui___impl_d_x12___render_buffers" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_im_gui___impl_d_x12___render_buffers" kindref="compound">ImGui_ImplDX12_RenderBuffers</ref></highlight></codeline>
<codeline lineno="85"><highlight class="normal">{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>ID3D12Resource*<sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_d_x12___render_buffers_1adea8d9622af0a5c6376f4b98840b0812" kindref="member">IndexBuffer</ref>;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>ID3D12Resource*<sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_d_x12___render_buffers_1a5ffee1b7a7d728d15dfd33739819101c" kindref="member">VertexBuffer</ref>;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_d_x12___render_buffers_1a29214b15eceea549928373591e877640" kindref="member">IndexBufferSize</ref>;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_d_x12___render_buffers_1a6643010c24e4046769271a36d596398a" kindref="member">VertexBufferSize</ref>;</highlight></codeline>
<codeline lineno="90"><highlight class="normal">};</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92" refid="struct_v_e_r_t_e_x___c_o_n_s_t_a_n_t___b_u_f_f_e_r___d_x12" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_v_e_r_t_e_x___c_o_n_s_t_a_n_t___b_u_f_f_e_r___d_x12" kindref="compound">VERTEX_CONSTANT_BUFFER_DX12</ref></highlight></codeline>
<codeline lineno="93"><highlight class="normal">{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><ref refid="struct_v_e_r_t_e_x___c_o_n_s_t_a_n_t___b_u_f_f_e_r___d_x12_1af977128a020d49a3a5478a59e4229274" kindref="member">mvp</ref>[4][4];</highlight></codeline>
<codeline lineno="95"><highlight class="normal">};</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui_ImplDX12_SetupRenderState(<ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>*<sp/>imctx,<sp/><ref refid="struct_im_draw_data" kindref="compound">ImDrawData</ref>*<sp/>draw_data,<sp/>ID3D12GraphicsCommandList*<sp/>ctx,<sp/><ref refid="struct_im_gui___impl_d_x12___render_buffers" kindref="compound">ImGui_ImplDX12_RenderBuffers</ref>*<sp/>fr)</highlight></codeline>
<codeline lineno="99"><highlight class="normal">{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_d_x12___data" kindref="compound">ImGui_ImplDX12_Data</ref>*<sp/>bd<sp/>=<sp/>ImGui_ImplDX12_GetBackendData(imctx);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Setup<sp/>orthographic<sp/>projection<sp/>matrix<sp/>into<sp/>our<sp/>constant<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Our<sp/>visible<sp/>imgui<sp/>space<sp/>lies<sp/>from<sp/>draw_data-&gt;DisplayPos<sp/>(top<sp/>left)<sp/>to<sp/>draw_data-&gt;DisplayPos+data_data-&gt;DisplaySize<sp/>(bottom<sp/>right).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_v_e_r_t_e_x___c_o_n_s_t_a_n_t___b_u_f_f_e_r___d_x12" kindref="compound">VERTEX_CONSTANT_BUFFER_DX12</ref><sp/>vertex_constant_buffer;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>L<sp/>=<sp/>draw_data-&gt;<ref refid="struct_im_draw_data_1a1e7755e98f5e24b1f4d9152766e6346e" kindref="member">DisplayPos</ref>.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>R<sp/>=<sp/>draw_data-&gt;<ref refid="struct_im_draw_data_1a1e7755e98f5e24b1f4d9152766e6346e" kindref="member">DisplayPos</ref>.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref><sp/>+<sp/>draw_data-&gt;<ref refid="struct_im_draw_data_1a74d53447c8882a3ce6dc7aaa3e081f39" kindref="member">DisplaySize</ref>.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>T<sp/>=<sp/>draw_data-&gt;<ref refid="struct_im_draw_data_1a1e7755e98f5e24b1f4d9152766e6346e" kindref="member">DisplayPos</ref>.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>B<sp/>=<sp/>draw_data-&gt;<ref refid="struct_im_draw_data_1a1e7755e98f5e24b1f4d9152766e6346e" kindref="member">DisplayPos</ref>.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref><sp/>+<sp/>draw_data-&gt;<ref refid="struct_im_draw_data_1a74d53447c8882a3ce6dc7aaa3e081f39" kindref="member">DisplaySize</ref>.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>mvp[4][4]<sp/>=</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>2.0f/(R-L),<sp/><sp/><sp/>0.0f,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.0f,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.0f<sp/>},</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>0.0f,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2.0f/(T-B),<sp/><sp/><sp/><sp/><sp/>0.0f,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.0f<sp/>},</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>0.0f,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.0f,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.5f,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.0f<sp/>},</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>(R+L)/(L-R),<sp/><sp/>(T+B)/(B-T),<sp/><sp/><sp/><sp/>0.5f,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>1.0f<sp/>},</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(&amp;vertex_constant_buffer.<ref refid="struct_v_e_r_t_e_x___c_o_n_s_t_a_n_t___b_u_f_f_e_r___d_x12_1af977128a020d49a3a5478a59e4229274" kindref="member">mvp</ref>,<sp/>mvp,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(mvp));</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Setup<sp/>viewport</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>D3D12_VIEWPORT<sp/>vp;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(&amp;vp,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(D3D12_VIEWPORT));</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>vp.Width<sp/>=<sp/>draw_data-&gt;<ref refid="struct_im_draw_data_1a74d53447c8882a3ce6dc7aaa3e081f39" kindref="member">DisplaySize</ref>.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>vp.Height<sp/>=<sp/>draw_data-&gt;<ref refid="struct_im_draw_data_1a74d53447c8882a3ce6dc7aaa3e081f39" kindref="member">DisplaySize</ref>.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>vp.MinDepth<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>vp.MaxDepth<sp/>=<sp/>1.0f;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>vp.TopLeftX<sp/>=<sp/>vp.TopLeftY<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>ctx-&gt;RSSetViewports(1,<sp/>&amp;vp);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Bind<sp/>shader<sp/>and<sp/>vertex<sp/>buffers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stride<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_im_draw_vert" kindref="compound">ImDrawVert</ref>);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offset<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>D3D12_VERTEX_BUFFER_VIEW<sp/>vbv;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(&amp;vbv,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(D3D12_VERTEX_BUFFER_VIEW));</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>vbv.BufferLocation<sp/>=<sp/>fr-&gt;<ref refid="struct_im_gui___impl_d_x12___render_buffers_1a5ffee1b7a7d728d15dfd33739819101c" kindref="member">VertexBuffer</ref>-&gt;GetGPUVirtualAddress()<sp/>+<sp/>offset;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>vbv.SizeInBytes<sp/>=<sp/>fr-&gt;<ref refid="struct_im_gui___impl_d_x12___render_buffers_1a6643010c24e4046769271a36d596398a" kindref="member">VertexBufferSize</ref><sp/>*<sp/>stride;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>vbv.StrideInBytes<sp/>=<sp/>stride;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>ctx-&gt;IASetVertexBuffers(0,<sp/>1,<sp/>&amp;vbv);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>D3D12_INDEX_BUFFER_VIEW<sp/>ibv;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(&amp;ibv,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(D3D12_INDEX_BUFFER_VIEW));</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>ibv.BufferLocation<sp/>=<sp/>fr-&gt;<ref refid="struct_im_gui___impl_d_x12___render_buffers_1adea8d9622af0a5c6376f4b98840b0812" kindref="member">IndexBuffer</ref>-&gt;GetGPUVirtualAddress();</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>ibv.SizeInBytes<sp/>=<sp/>fr-&gt;<ref refid="struct_im_gui___impl_d_x12___render_buffers_1a29214b15eceea549928373591e877640" kindref="member">IndexBufferSize</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="imgui_8h_1afdc8744a5ac1a968b1ddfa47e13b2fa1" kindref="member">ImDrawIdx</ref>);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>ibv.Format<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="imgui_8h_1afdc8744a5ac1a968b1ddfa47e13b2fa1" kindref="member">ImDrawIdx</ref>)<sp/>==<sp/>2<sp/>?<sp/>DXGI_FORMAT_R16_UINT<sp/>:<sp/>DXGI_FORMAT_R32_UINT;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>ctx-&gt;IASetIndexBuffer(&amp;ibv);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>ctx-&gt;IASetPrimitiveTopology(D3D_PRIMITIVE_TOPOLOGY_TRIANGLELIST);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>ctx-&gt;SetPipelineState(bd-&gt;<ref refid="struct_im_gui___impl_d_x12___data_1a56ca2ec999af6c639ad32f7204248500" kindref="member">pPipelineState</ref>);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>ctx-&gt;SetGraphicsRootSignature(bd-&gt;<ref refid="struct_im_gui___impl_d_x12___data_1a5ec586be9457edb382e26db52b84bba5" kindref="member">pRootSignature</ref>);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>ctx-&gt;SetGraphicsRoot32BitConstants(0,<sp/>16,<sp/>&amp;vertex_constant_buffer,<sp/>0);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Setup<sp/>blend<sp/>factor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>blend_factor[4]<sp/>=<sp/>{<sp/>0.f,<sp/>0.f,<sp/>0.f,<sp/>0.f<sp/>};</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>ctx-&gt;OMSetBlendFactor(blend_factor);</highlight></codeline>
<codeline lineno="153"><highlight class="normal">}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SafeRelease(T*&amp;<sp/>res)</highlight></codeline>
<codeline lineno="157"><highlight class="normal">{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res)</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res-&gt;Release();</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>res<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="161"><highlight class="normal">}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Render<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="imgui__impl__dx12_8cpp_1a247aa49a601118c9e436d851b27fd4c3" kindref="member">ImGui_ImplDX12_RenderDrawData</ref>(<ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>*<sp/>imctx,<sp/><ref refid="struct_im_draw_data" kindref="compound">ImDrawData</ref>*<sp/>draw_data,<sp/>ID3D12GraphicsCommandList*<sp/>ctx)</highlight></codeline>
<codeline lineno="165"><highlight class="normal">{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Avoid<sp/>rendering<sp/>when<sp/>minimized</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(draw_data-&gt;<ref refid="struct_im_draw_data_1a74d53447c8882a3ce6dc7aaa3e081f39" kindref="member">DisplaySize</ref>.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref><sp/>&lt;=<sp/>0.0f<sp/>||<sp/>draw_data-&gt;<ref refid="struct_im_draw_data_1a74d53447c8882a3ce6dc7aaa3e081f39" kindref="member">DisplaySize</ref>.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref><sp/>&lt;=<sp/>0.0f)</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME:<sp/>I&apos;m<sp/>assuming<sp/>that<sp/>this<sp/>only<sp/>gets<sp/>called<sp/>once<sp/>per<sp/>frame!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>not,<sp/>we<sp/>can&apos;t<sp/>just<sp/>re-allocate<sp/>the<sp/>IB<sp/>or<sp/>VB,<sp/>we&apos;ll<sp/>have<sp/>to<sp/>do<sp/>a<sp/>proper<sp/>allocator.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_d_x12___data" kindref="compound">ImGui_ImplDX12_Data</ref>*<sp/>bd<sp/>=<sp/>ImGui_ImplDX12_GetBackendData(imctx);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>bd-&gt;<ref refid="struct_im_gui___impl_d_x12___data_1a36f325ca3e65ccc7185559cb6cf09c41" kindref="member">frameIndex</ref><sp/>=<sp/>bd-&gt;<ref refid="struct_im_gui___impl_d_x12___data_1a36f325ca3e65ccc7185559cb6cf09c41" kindref="member">frameIndex</ref><sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_d_x12___render_buffers" kindref="compound">ImGui_ImplDX12_RenderBuffers</ref>*<sp/>fr<sp/>=<sp/>&amp;bd-&gt;<ref refid="struct_im_gui___impl_d_x12___data_1ac61eccc7bdd8782896d100ec000191c4" kindref="member">pFrameResources</ref>[bd-&gt;<ref refid="struct_im_gui___impl_d_x12___data_1a36f325ca3e65ccc7185559cb6cf09c41" kindref="member">frameIndex</ref><sp/>%<sp/>bd-&gt;<ref refid="struct_im_gui___impl_d_x12___data_1a6a541239da42836b2127d1428032cf7d" kindref="member">numFramesInFlight</ref>];</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>and<sp/>grow<sp/>vertex/index<sp/>buffers<sp/>if<sp/>needed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fr-&gt;<ref refid="struct_im_gui___impl_d_x12___render_buffers_1a5ffee1b7a7d728d15dfd33739819101c" kindref="member">VertexBuffer</ref><sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>||<sp/>fr-&gt;<ref refid="struct_im_gui___impl_d_x12___render_buffers_1a6643010c24e4046769271a36d596398a" kindref="member">VertexBufferSize</ref><sp/>&lt;<sp/>draw_data-&gt;<ref refid="struct_im_draw_data_1af0035b52cdf91932b25eaf2da853965a" kindref="member">TotalVtxCount</ref>)</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SafeRelease(fr-&gt;<ref refid="struct_im_gui___impl_d_x12___render_buffers_1a5ffee1b7a7d728d15dfd33739819101c" kindref="member">VertexBuffer</ref>);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fr-&gt;<ref refid="struct_im_gui___impl_d_x12___render_buffers_1a6643010c24e4046769271a36d596398a" kindref="member">VertexBufferSize</ref><sp/>=<sp/>draw_data-&gt;<ref refid="struct_im_draw_data_1af0035b52cdf91932b25eaf2da853965a" kindref="member">TotalVtxCount</ref><sp/>+<sp/>5000;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>D3D12_HEAP_PROPERTIES<sp/>props;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(&amp;props,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(D3D12_HEAP_PROPERTIES));</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>props.Type<sp/>=<sp/>D3D12_HEAP_TYPE_UPLOAD;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>props.CPUPageProperty<sp/>=<sp/>D3D12_CPU_PAGE_PROPERTY_UNKNOWN;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>props.MemoryPoolPreference<sp/>=<sp/>D3D12_MEMORY_POOL_UNKNOWN;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>D3D12_RESOURCE_DESC<sp/>desc;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(&amp;desc,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(D3D12_RESOURCE_DESC));</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desc.Dimension<sp/>=<sp/>D3D12_RESOURCE_DIMENSION_BUFFER;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desc.Width<sp/>=<sp/>fr-&gt;<ref refid="struct_im_gui___impl_d_x12___render_buffers_1a6643010c24e4046769271a36d596398a" kindref="member">VertexBufferSize</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_im_draw_vert" kindref="compound">ImDrawVert</ref>);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desc.Height<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desc.DepthOrArraySize<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desc.MipLevels<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desc.Format<sp/>=<sp/>DXGI_FORMAT_UNKNOWN;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desc.SampleDesc.Count<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desc.Layout<sp/>=<sp/>D3D12_TEXTURE_LAYOUT_ROW_MAJOR;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desc.Flags<sp/>=<sp/>D3D12_RESOURCE_FLAG_NONE;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bd-&gt;<ref refid="struct_im_gui___impl_d_x12___data_1a1c8a790e04e775e3dc8e3f9b5a8f886e" kindref="member">pd3dDevice</ref>-&gt;CreateCommittedResource(&amp;props,<sp/>D3D12_HEAP_FLAG_NONE,<sp/>&amp;desc,<sp/>D3D12_RESOURCE_STATE_GENERIC_READ,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>IID_PPV_ARGS(&amp;fr-&gt;<ref refid="struct_im_gui___impl_d_x12___render_buffers_1a5ffee1b7a7d728d15dfd33739819101c" kindref="member">VertexBuffer</ref>))<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fr-&gt;<ref refid="struct_im_gui___impl_d_x12___render_buffers_1adea8d9622af0a5c6376f4b98840b0812" kindref="member">IndexBuffer</ref><sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>||<sp/>fr-&gt;<ref refid="struct_im_gui___impl_d_x12___render_buffers_1a29214b15eceea549928373591e877640" kindref="member">IndexBufferSize</ref><sp/>&lt;<sp/>draw_data-&gt;<ref refid="struct_im_draw_data_1a1ac8a5d441f464628295ef91a0602fc5" kindref="member">TotalIdxCount</ref>)</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SafeRelease(fr-&gt;<ref refid="struct_im_gui___impl_d_x12___render_buffers_1adea8d9622af0a5c6376f4b98840b0812" kindref="member">IndexBuffer</ref>);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fr-&gt;<ref refid="struct_im_gui___impl_d_x12___render_buffers_1a29214b15eceea549928373591e877640" kindref="member">IndexBufferSize</ref><sp/>=<sp/>draw_data-&gt;<ref refid="struct_im_draw_data_1a1ac8a5d441f464628295ef91a0602fc5" kindref="member">TotalIdxCount</ref><sp/>+<sp/>10000;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>D3D12_HEAP_PROPERTIES<sp/>props;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(&amp;props,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(D3D12_HEAP_PROPERTIES));</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>props.Type<sp/>=<sp/>D3D12_HEAP_TYPE_UPLOAD;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>props.CPUPageProperty<sp/>=<sp/>D3D12_CPU_PAGE_PROPERTY_UNKNOWN;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>props.MemoryPoolPreference<sp/>=<sp/>D3D12_MEMORY_POOL_UNKNOWN;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>D3D12_RESOURCE_DESC<sp/>desc;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(&amp;desc,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(D3D12_RESOURCE_DESC));</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desc.Dimension<sp/>=<sp/>D3D12_RESOURCE_DIMENSION_BUFFER;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desc.Width<sp/>=<sp/>fr-&gt;<ref refid="struct_im_gui___impl_d_x12___render_buffers_1a29214b15eceea549928373591e877640" kindref="member">IndexBufferSize</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="imgui_8h_1afdc8744a5ac1a968b1ddfa47e13b2fa1" kindref="member">ImDrawIdx</ref>);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desc.Height<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desc.DepthOrArraySize<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desc.MipLevels<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desc.Format<sp/>=<sp/>DXGI_FORMAT_UNKNOWN;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desc.SampleDesc.Count<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desc.Layout<sp/>=<sp/>D3D12_TEXTURE_LAYOUT_ROW_MAJOR;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desc.Flags<sp/>=<sp/>D3D12_RESOURCE_FLAG_NONE;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bd-&gt;<ref refid="struct_im_gui___impl_d_x12___data_1a1c8a790e04e775e3dc8e3f9b5a8f886e" kindref="member">pd3dDevice</ref>-&gt;CreateCommittedResource(&amp;props,<sp/>D3D12_HEAP_FLAG_NONE,<sp/>&amp;desc,<sp/>D3D12_RESOURCE_STATE_GENERIC_READ,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>IID_PPV_ARGS(&amp;fr-&gt;<ref refid="struct_im_gui___impl_d_x12___render_buffers_1adea8d9622af0a5c6376f4b98840b0812" kindref="member">IndexBuffer</ref>))<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Upload<sp/>vertex/index<sp/>data<sp/>into<sp/>a<sp/>single<sp/>contiguous<sp/>GPU<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>vtx_resource,<sp/>*idx_resource;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>D3D12_RANGE<sp/>range;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(&amp;range,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(D3D12_RANGE));</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fr-&gt;<ref refid="struct_im_gui___impl_d_x12___render_buffers_1a5ffee1b7a7d728d15dfd33739819101c" kindref="member">VertexBuffer</ref>-&gt;Map(0,<sp/>&amp;range,<sp/>&amp;vtx_resource)<sp/>!=<sp/>S_OK)</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fr-&gt;<ref refid="struct_im_gui___impl_d_x12___render_buffers_1adea8d9622af0a5c6376f4b98840b0812" kindref="member">IndexBuffer</ref>-&gt;Map(0,<sp/>&amp;range,<sp/>&amp;idx_resource)<sp/>!=<sp/>S_OK)</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_vert" kindref="compound">ImDrawVert</ref>*<sp/>vtx_dst<sp/>=<sp/>(<ref refid="struct_im_draw_vert" kindref="compound">ImDrawVert</ref>*)vtx_resource;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui_8h_1afdc8744a5ac1a968b1ddfa47e13b2fa1" kindref="member">ImDrawIdx</ref>*<sp/>idx_dst<sp/>=<sp/>(<ref refid="imgui_8h_1afdc8744a5ac1a968b1ddfa47e13b2fa1" kindref="member">ImDrawIdx</ref>*)idx_resource;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>draw_data-&gt;<ref refid="struct_im_draw_data_1adc0bbc2881c15f78bdabe51d82582f4e" kindref="member">CmdListsCount</ref>;<sp/>n++)</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_draw_list" kindref="compound">ImDrawList</ref>*<sp/>cmd_list<sp/>=<sp/>draw_data-&gt;<ref refid="struct_im_draw_data_1ad78ff9e65c4037c492ceade5d3ddd633" kindref="member">CmdLists</ref>[n];</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(vtx_dst,<sp/>cmd_list-&gt;<ref refid="struct_im_draw_list_1aa8ff4aee39cf3c3791b7e29a7b4264be" kindref="member">VtxBuffer</ref>.<ref refid="struct_im_vector_1ac0e46e8b30cb079d93c8f0aad7d7cbd0" kindref="member">Data</ref>,<sp/>cmd_list-&gt;<ref refid="struct_im_draw_list_1aa8ff4aee39cf3c3791b7e29a7b4264be" kindref="member">VtxBuffer</ref>.<ref refid="struct_im_vector_1abbfd157947f66280d27b21d70a16df8d" kindref="member">Size</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_im_draw_vert" kindref="compound">ImDrawVert</ref>));</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(idx_dst,<sp/>cmd_list-&gt;<ref refid="struct_im_draw_list_1adf292ff70a954d82daf061c609e75dfc" kindref="member">IdxBuffer</ref>.<ref refid="struct_im_vector_1ac0e46e8b30cb079d93c8f0aad7d7cbd0" kindref="member">Data</ref>,<sp/>cmd_list-&gt;<ref refid="struct_im_draw_list_1adf292ff70a954d82daf061c609e75dfc" kindref="member">IdxBuffer</ref>.<ref refid="struct_im_vector_1abbfd157947f66280d27b21d70a16df8d" kindref="member">Size</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="imgui_8h_1afdc8744a5ac1a968b1ddfa47e13b2fa1" kindref="member">ImDrawIdx</ref>));</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vtx_dst<sp/>+=<sp/>cmd_list-&gt;<ref refid="struct_im_draw_list_1aa8ff4aee39cf3c3791b7e29a7b4264be" kindref="member">VtxBuffer</ref>.<ref refid="struct_im_vector_1abbfd157947f66280d27b21d70a16df8d" kindref="member">Size</ref>;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>idx_dst<sp/>+=<sp/>cmd_list-&gt;<ref refid="struct_im_draw_list_1adf292ff70a954d82daf061c609e75dfc" kindref="member">IdxBuffer</ref>.<ref refid="struct_im_vector_1abbfd157947f66280d27b21d70a16df8d" kindref="member">Size</ref>;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>fr-&gt;<ref refid="struct_im_gui___impl_d_x12___render_buffers_1a5ffee1b7a7d728d15dfd33739819101c" kindref="member">VertexBuffer</ref>-&gt;Unmap(0,<sp/>&amp;range);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>fr-&gt;<ref refid="struct_im_gui___impl_d_x12___render_buffers_1adea8d9622af0a5c6376f4b98840b0812" kindref="member">IndexBuffer</ref>-&gt;Unmap(0,<sp/>&amp;range);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Setup<sp/>desired<sp/>DX<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGui_ImplDX12_SetupRenderState(imctx,<sp/>draw_data,<sp/>ctx,<sp/>fr);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Render<sp/>command<sp/>lists</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(Because<sp/>we<sp/>merged<sp/>all<sp/>buffers<sp/>into<sp/>a<sp/>single<sp/>one,<sp/>we<sp/>maintain<sp/>our<sp/>own<sp/>offset<sp/>into<sp/>them)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>global_vtx_offset<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>global_idx_offset<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>clip_off<sp/>=<sp/>draw_data-&gt;<ref refid="struct_im_draw_data_1a1e7755e98f5e24b1f4d9152766e6346e" kindref="member">DisplayPos</ref>;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>draw_data-&gt;<ref refid="struct_im_draw_data_1adc0bbc2881c15f78bdabe51d82582f4e" kindref="member">CmdListsCount</ref>;<sp/>n++)</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_draw_list" kindref="compound">ImDrawList</ref>*<sp/>cmd_list<sp/>=<sp/>draw_data-&gt;<ref refid="struct_im_draw_data_1ad78ff9e65c4037c492ceade5d3ddd633" kindref="member">CmdLists</ref>[n];</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cmd_i<sp/>=<sp/>0;<sp/>cmd_i<sp/>&lt;<sp/>cmd_list-&gt;<ref refid="struct_im_draw_list_1a67a4b5cc4c83bc3b81d96c46cbd38a07" kindref="member">CmdBuffer</ref>.<ref refid="struct_im_vector_1abbfd157947f66280d27b21d70a16df8d" kindref="member">Size</ref>;<sp/>cmd_i++)</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_draw_cmd" kindref="compound">ImDrawCmd</ref>*<sp/>pcmd<sp/>=<sp/>&amp;cmd_list-&gt;<ref refid="struct_im_draw_list_1a67a4b5cc4c83bc3b81d96c46cbd38a07" kindref="member">CmdBuffer</ref>[cmd_i];</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pcmd-&gt;<ref refid="struct_im_draw_cmd_1ad26dac4e939f5c4bb892cbca0f9e3af8" kindref="member">UserCallback</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>User<sp/>callback,<sp/>registered<sp/>via<sp/>ImDrawList::AddCallback()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(ImDrawCallback_ResetRenderState<sp/>is<sp/>a<sp/>special<sp/>callback<sp/>value<sp/>used<sp/>by<sp/>the<sp/>user<sp/>to<sp/>request<sp/>the<sp/>renderer<sp/>to<sp/>reset<sp/>render<sp/>state.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pcmd-&gt;<ref refid="struct_im_draw_cmd_1ad26dac4e939f5c4bb892cbca0f9e3af8" kindref="member">UserCallback</ref><sp/>==<sp/><ref refid="imgui_8h_1a3384811ea4939104d12b6915d13f011f" kindref="member">ImDrawCallback_ResetRenderState</ref>)</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGui_ImplDX12_SetupRenderState(imctx,<sp/>draw_data,<sp/>ctx,<sp/>fr);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pcmd-&gt;<ref refid="struct_im_draw_cmd_1ad26dac4e939f5c4bb892cbca0f9e3af8" kindref="member">UserCallback</ref>(cmd_list,<sp/>pcmd);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Project<sp/>scissor/clipping<sp/>rectangles<sp/>into<sp/>framebuffer<sp/>space</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>clip_min(pcmd-&gt;<ref refid="struct_im_draw_cmd_1a838918f420ff81cb8dc7265077592daa" kindref="member">ClipRect</ref>.<ref refid="struct_im_vec4_1a2090f651f5e5b78fedae8dab87343db6" kindref="member">x</ref><sp/>-<sp/>clip_off.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref>,<sp/>pcmd-&gt;<ref refid="struct_im_draw_cmd_1a838918f420ff81cb8dc7265077592daa" kindref="member">ClipRect</ref>.<ref refid="struct_im_vec4_1a6b4d00ae261be4fe54353c759c561fe7" kindref="member">y</ref><sp/>-<sp/>clip_off.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>clip_max(pcmd-&gt;<ref refid="struct_im_draw_cmd_1a838918f420ff81cb8dc7265077592daa" kindref="member">ClipRect</ref>.<ref refid="struct_im_vec4_1aba6a75356917a28c967954bb29133a1a" kindref="member">z</ref><sp/>-<sp/>clip_off.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref>,<sp/>pcmd-&gt;<ref refid="struct_im_draw_cmd_1a838918f420ff81cb8dc7265077592daa" kindref="member">ClipRect</ref>.<ref refid="struct_im_vec4_1afeed5acd9f0d2043175f4da229d12a38" kindref="member">w</ref><sp/>-<sp/>clip_off.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(clip_max.x<sp/>&lt;=<sp/>clip_min.x<sp/>||<sp/>clip_max.y<sp/>&lt;=<sp/>clip_min.y)</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Apply<sp/>Scissor/clipping<sp/>rectangle,<sp/>Bind<sp/>texture,<sp/>Draw</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>D3D12_RECT<sp/>r<sp/>=<sp/>{<sp/>(LONG)clip_min.x,<sp/>(LONG)clip_min.y,<sp/>(LONG)clip_max.x,<sp/>(LONG)clip_max.y<sp/>};</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>D3D12_GPU_DESCRIPTOR_HANDLE<sp/>texture_handle<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>texture_handle.ptr<sp/>=<sp/>(UINT64)pcmd-&gt;<ref refid="struct_im_draw_cmd_1a8ba7df6d136db6e33d850acc9291224f" kindref="member">GetTexID</ref>();</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctx-&gt;SetGraphicsRootDescriptorTable(1,<sp/>texture_handle);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctx-&gt;RSSetScissorRects(1,<sp/>&amp;r);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctx-&gt;DrawIndexedInstanced(pcmd-&gt;<ref refid="struct_im_draw_cmd_1aafe2532964fb1f6905d67d84dd3e8730" kindref="member">ElemCount</ref>,<sp/>1,<sp/>pcmd-&gt;<ref refid="struct_im_draw_cmd_1adec5adcd0cc6cf0da193bf0437fbba47" kindref="member">IdxOffset</ref><sp/>+<sp/>global_idx_offset,<sp/>pcmd-&gt;<ref refid="struct_im_draw_cmd_1a604086d3c94a18b3a79f171ee37edabb" kindref="member">VtxOffset</ref><sp/>+<sp/>global_vtx_offset,<sp/>0);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>global_idx_offset<sp/>+=<sp/>cmd_list-&gt;<ref refid="struct_im_draw_list_1adf292ff70a954d82daf061c609e75dfc" kindref="member">IdxBuffer</ref>.<ref refid="struct_im_vector_1abbfd157947f66280d27b21d70a16df8d" kindref="member">Size</ref>;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>global_vtx_offset<sp/>+=<sp/>cmd_list-&gt;<ref refid="struct_im_draw_list_1aa8ff4aee39cf3c3791b7e29a7b4264be" kindref="member">VtxBuffer</ref>.<ref refid="struct_im_vector_1abbfd157947f66280d27b21d70a16df8d" kindref="member">Size</ref>;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="288"><highlight class="normal">}</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui_ImplDX12_CreateFontsTexture(<ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>*<sp/>ctx)</highlight></codeline>
<codeline lineno="291"><highlight class="normal">{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Build<sp/>texture<sp/>atlas</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_i_o" kindref="compound">ImGuiIO</ref>&amp;<sp/>io<sp/>=<sp/><ref refid="namespace_im_gui_1a447aaaa626101bcb4057ab7fad5c63b2" kindref="member">ImGui::GetIO</ref>(ctx);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_d_x12___data" kindref="compound">ImGui_ImplDX12_Data</ref>*<sp/>bd<sp/>=<sp/>ImGui_ImplDX12_GetBackendData(ctx);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pixels;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/>height;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>io.<ref refid="struct_im_gui_i_o_1a24e4f5201fe8780267abc2acfc24254c" kindref="member">Fonts</ref>-&gt;<ref refid="struct_im_font_atlas_1a8abb0c4e67ebb38249d4df71218c4eec" kindref="member">GetTexDataAsRGBA32</ref>(&amp;pixels,<sp/>&amp;width,<sp/>&amp;height);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Upload<sp/>texture<sp/>to<sp/>graphics<sp/>system</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>D3D12_HEAP_PROPERTIES<sp/>props;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(&amp;props,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(D3D12_HEAP_PROPERTIES));</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>props.Type<sp/>=<sp/>D3D12_HEAP_TYPE_DEFAULT;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>props.CPUPageProperty<sp/>=<sp/>D3D12_CPU_PAGE_PROPERTY_UNKNOWN;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>props.MemoryPoolPreference<sp/>=<sp/>D3D12_MEMORY_POOL_UNKNOWN;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>D3D12_RESOURCE_DESC<sp/>desc;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ZeroMemory(&amp;desc,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(desc));</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desc.Dimension<sp/>=<sp/>D3D12_RESOURCE_DIMENSION_TEXTURE2D;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desc.Alignment<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desc.Width<sp/>=<sp/>width;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desc.Height<sp/>=<sp/>height;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desc.DepthOrArraySize<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desc.MipLevels<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desc.Format<sp/>=<sp/>DXGI_FORMAT_R8G8B8A8_UNORM;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desc.SampleDesc.Count<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desc.SampleDesc.Quality<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desc.Layout<sp/>=<sp/>D3D12_TEXTURE_LAYOUT_UNKNOWN;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desc.Flags<sp/>=<sp/>D3D12_RESOURCE_FLAG_NONE;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ID3D12Resource*<sp/>pTexture<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bd-&gt;<ref refid="struct_im_gui___impl_d_x12___data_1a1c8a790e04e775e3dc8e3f9b5a8f886e" kindref="member">pd3dDevice</ref>-&gt;CreateCommittedResource(&amp;props,<sp/>D3D12_HEAP_FLAG_NONE,<sp/>&amp;desc,</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>D3D12_RESOURCE_STATE_COPY_DEST,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>IID_PPV_ARGS(&amp;pTexture));</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT<sp/>uploadPitch<sp/>=<sp/>(width<sp/>*<sp/>4<sp/>+<sp/>D3D12_TEXTURE_DATA_PITCH_ALIGNMENT<sp/>-<sp/>1u)<sp/>&amp;<sp/>~(D3D12_TEXTURE_DATA_PITCH_ALIGNMENT<sp/>-<sp/>1u);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT<sp/>uploadSize<sp/>=<sp/>height<sp/>*<sp/>uploadPitch;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desc.Dimension<sp/>=<sp/>D3D12_RESOURCE_DIMENSION_BUFFER;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desc.Alignment<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desc.Width<sp/>=<sp/>uploadSize;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desc.Height<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desc.DepthOrArraySize<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desc.MipLevels<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desc.Format<sp/>=<sp/>DXGI_FORMAT_UNKNOWN;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desc.SampleDesc.Count<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desc.SampleDesc.Quality<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desc.Layout<sp/>=<sp/>D3D12_TEXTURE_LAYOUT_ROW_MAJOR;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desc.Flags<sp/>=<sp/>D3D12_RESOURCE_FLAG_NONE;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>props.Type<sp/>=<sp/>D3D12_HEAP_TYPE_UPLOAD;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>props.CPUPageProperty<sp/>=<sp/>D3D12_CPU_PAGE_PROPERTY_UNKNOWN;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>props.MemoryPoolPreference<sp/>=<sp/>D3D12_MEMORY_POOL_UNKNOWN;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ID3D12Resource*<sp/>uploadBuffer<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HRESULT<sp/>hr<sp/>=<sp/>bd-&gt;<ref refid="struct_im_gui___impl_d_x12___data_1a1c8a790e04e775e3dc8e3f9b5a8f886e" kindref="member">pd3dDevice</ref>-&gt;CreateCommittedResource(&amp;props,<sp/>D3D12_HEAP_FLAG_NONE,<sp/>&amp;desc,</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>D3D12_RESOURCE_STATE_GENERIC_READ,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>IID_PPV_ARGS(&amp;uploadBuffer));</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imgui_8h_1acb09e7dc42e8e3cefb0ecaa197978920" kindref="member">IM_ASSERT</ref>(SUCCEEDED(hr));</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>mapped<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>D3D12_RANGE<sp/>range<sp/>=<sp/>{<sp/>0,<sp/>uploadSize<sp/>};</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hr<sp/>=<sp/>uploadBuffer-&gt;Map(0,<sp/>&amp;range,<sp/>&amp;mapped);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imgui_8h_1acb09e7dc42e8e3cefb0ecaa197978920" kindref="member">IM_ASSERT</ref>(SUCCEEDED(hr));</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>0;<sp/>y<sp/>&lt;<sp/>height;<sp/>y++)</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)<sp/>((<ref refid="stdint_8h_1a31b85deecb45924320becd11d3ee16ce" kindref="member">uintptr_t</ref>)<sp/>mapped<sp/>+<sp/>y<sp/>*<sp/>uploadPitch),<sp/>pixels<sp/>+<sp/>y<sp/>*<sp/>width<sp/>*<sp/>4,<sp/>width<sp/>*<sp/>4);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uploadBuffer-&gt;Unmap(0,<sp/>&amp;range);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>D3D12_TEXTURE_COPY_LOCATION<sp/>srcLocation<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srcLocation.pResource<sp/>=<sp/>uploadBuffer;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srcLocation.Type<sp/>=<sp/>D3D12_TEXTURE_COPY_TYPE_PLACED_FOOTPRINT;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srcLocation.PlacedFootprint.Footprint.Format<sp/>=<sp/>DXGI_FORMAT_R8G8B8A8_UNORM;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srcLocation.PlacedFootprint.Footprint.Width<sp/>=<sp/>width;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srcLocation.PlacedFootprint.Footprint.Height<sp/>=<sp/>height;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srcLocation.PlacedFootprint.Footprint.Depth<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srcLocation.PlacedFootprint.Footprint.RowPitch<sp/>=<sp/>uploadPitch;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>D3D12_TEXTURE_COPY_LOCATION<sp/>dstLocation<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dstLocation.pResource<sp/>=<sp/>pTexture;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dstLocation.Type<sp/>=<sp/>D3D12_TEXTURE_COPY_TYPE_SUBRESOURCE_INDEX;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dstLocation.SubresourceIndex<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>D3D12_RESOURCE_BARRIER<sp/>barrier<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>barrier.Type<sp/>=<sp/>D3D12_RESOURCE_BARRIER_TYPE_TRANSITION;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>barrier.Flags<sp/>=<sp/>D3D12_RESOURCE_BARRIER_FLAG_NONE;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>barrier.Transition.pResource<sp/><sp/><sp/>=<sp/>pTexture;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>barrier.Transition.Subresource<sp/>=<sp/>D3D12_RESOURCE_BARRIER_ALL_SUBRESOURCES;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>barrier.Transition.StateBefore<sp/>=<sp/>D3D12_RESOURCE_STATE_COPY_DEST;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>barrier.Transition.StateAfter<sp/><sp/>=<sp/>D3D12_RESOURCE_STATE_PIXEL_SHADER_RESOURCE;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ID3D12Fence*<sp/>fence<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hr<sp/>=<sp/>bd-&gt;<ref refid="struct_im_gui___impl_d_x12___data_1a1c8a790e04e775e3dc8e3f9b5a8f886e" kindref="member">pd3dDevice</ref>-&gt;CreateFence(0,<sp/>D3D12_FENCE_FLAG_NONE,<sp/>IID_PPV_ARGS(&amp;fence));</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imgui_8h_1acb09e7dc42e8e3cefb0ecaa197978920" kindref="member">IM_ASSERT</ref>(SUCCEEDED(hr));</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HANDLE<sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal"><sp/>=<sp/>CreateEvent(0,<sp/>0,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imgui_8h_1acb09e7dc42e8e3cefb0ecaa197978920" kindref="member">IM_ASSERT</ref>(event<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>D3D12_COMMAND_QUEUE_DESC<sp/>queueDesc<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>queueDesc.Type<sp/><sp/><sp/><sp/><sp/>=<sp/>D3D12_COMMAND_LIST_TYPE_DIRECT;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>queueDesc.Flags<sp/><sp/><sp/><sp/>=<sp/>D3D12_COMMAND_QUEUE_FLAG_NONE;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>queueDesc.NodeMask<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ID3D12CommandQueue*<sp/>cmdQueue<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hr<sp/>=<sp/>bd-&gt;<ref refid="struct_im_gui___impl_d_x12___data_1a1c8a790e04e775e3dc8e3f9b5a8f886e" kindref="member">pd3dDevice</ref>-&gt;CreateCommandQueue(&amp;queueDesc,<sp/>IID_PPV_ARGS(&amp;cmdQueue));</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imgui_8h_1acb09e7dc42e8e3cefb0ecaa197978920" kindref="member">IM_ASSERT</ref>(SUCCEEDED(hr));</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ID3D12CommandAllocator*<sp/>cmdAlloc<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hr<sp/>=<sp/>bd-&gt;<ref refid="struct_im_gui___impl_d_x12___data_1a1c8a790e04e775e3dc8e3f9b5a8f886e" kindref="member">pd3dDevice</ref>-&gt;CreateCommandAllocator(D3D12_COMMAND_LIST_TYPE_DIRECT,<sp/>IID_PPV_ARGS(&amp;cmdAlloc));</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imgui_8h_1acb09e7dc42e8e3cefb0ecaa197978920" kindref="member">IM_ASSERT</ref>(SUCCEEDED(hr));</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ID3D12GraphicsCommandList*<sp/>cmdList<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hr<sp/>=<sp/>bd-&gt;<ref refid="struct_im_gui___impl_d_x12___data_1a1c8a790e04e775e3dc8e3f9b5a8f886e" kindref="member">pd3dDevice</ref>-&gt;CreateCommandList(0,<sp/>D3D12_COMMAND_LIST_TYPE_DIRECT,<sp/>cmdAlloc,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>IID_PPV_ARGS(&amp;cmdList));</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imgui_8h_1acb09e7dc42e8e3cefb0ecaa197978920" kindref="member">IM_ASSERT</ref>(SUCCEEDED(hr));</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmdList-&gt;CopyTextureRegion(&amp;dstLocation,<sp/>0,<sp/>0,<sp/>0,<sp/>&amp;srcLocation,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmdList-&gt;ResourceBarrier(1,<sp/>&amp;barrier);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hr<sp/>=<sp/>cmdList-&gt;Close();</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imgui_8h_1acb09e7dc42e8e3cefb0ecaa197978920" kindref="member">IM_ASSERT</ref>(SUCCEEDED(hr));</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmdQueue-&gt;ExecuteCommandLists(1,<sp/>(ID3D12CommandList*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*)&amp;cmdList);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hr<sp/>=<sp/>cmdQueue-&gt;Signal(fence,<sp/>1);</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imgui_8h_1acb09e7dc42e8e3cefb0ecaa197978920" kindref="member">IM_ASSERT</ref>(SUCCEEDED(hr));</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fence-&gt;SetEventOnCompletion(1,<sp/>event);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WaitForSingleObject(event,<sp/>INFINITE);</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmdList-&gt;Release();</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmdAlloc-&gt;Release();</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmdQueue-&gt;Release();</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CloseHandle(event);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fence-&gt;Release();</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uploadBuffer-&gt;Release();</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>texture<sp/>view</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>D3D12_SHADER_RESOURCE_VIEW_DESC<sp/>srvDesc;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ZeroMemory(&amp;srvDesc,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(srvDesc));</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srvDesc.Format<sp/>=<sp/>DXGI_FORMAT_R8G8B8A8_UNORM;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srvDesc.ViewDimension<sp/>=<sp/>D3D12_SRV_DIMENSION_TEXTURE2D;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srvDesc.Texture2D.MipLevels<sp/>=<sp/>desc.MipLevels;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srvDesc.Texture2D.MostDetailedMip<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srvDesc.Shader4ComponentMapping<sp/>=<sp/>D3D12_DEFAULT_SHADER_4_COMPONENT_MAPPING;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bd-&gt;<ref refid="struct_im_gui___impl_d_x12___data_1a1c8a790e04e775e3dc8e3f9b5a8f886e" kindref="member">pd3dDevice</ref>-&gt;CreateShaderResourceView(pTexture,<sp/>&amp;srvDesc,<sp/>bd-&gt;<ref refid="struct_im_gui___impl_d_x12___data_1a0a595d2e3657b5d3b6933d74e65adc3c" kindref="member">hFontSrvCpuDescHandle</ref>);</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SafeRelease(bd-&gt;<ref refid="struct_im_gui___impl_d_x12___data_1a3157f6d9f8b586f4fbabb8dc59e74ece" kindref="member">pFontTextureResource</ref>);</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bd-&gt;<ref refid="struct_im_gui___impl_d_x12___data_1a3157f6d9f8b586f4fbabb8dc59e74ece" kindref="member">pFontTextureResource</ref><sp/>=<sp/>pTexture;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Store<sp/>our<sp/>identifier</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>READ<sp/>THIS<sp/>IF<sp/>THE<sp/>STATIC_ASSERT()<sp/>TRIGGERS:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Important:<sp/>to<sp/>compile<sp/>on<sp/>32-bit<sp/>systems,<sp/>this<sp/>backend<sp/>requires<sp/>code<sp/>to<sp/>be<sp/>compiled<sp/>with<sp/>&apos;#define<sp/>ImTextureID<sp/>ImU64&apos;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>This<sp/>is<sp/>because<sp/>we<sp/>need<sp/>ImTextureID<sp/>to<sp/>carry<sp/>a<sp/>64-bit<sp/>value<sp/>and<sp/>by<sp/>default<sp/>ImTextureID<sp/>is<sp/>defined<sp/>as<sp/>void*.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>[Solution<sp/>1]<sp/>IDE/msbuild:<sp/>in<sp/>&quot;Properties/C++/Preprocessor<sp/>Definitions&quot;<sp/>add<sp/>&apos;ImTextureID=ImU64&apos;<sp/>(this<sp/>is<sp/>what<sp/>we<sp/>do<sp/>in<sp/>the<sp/>&apos;example_win32_direct12/example_win32_direct12.vcxproj&apos;<sp/>project<sp/>file)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>[Solution<sp/>2]<sp/>IDE/msbuild:<sp/>in<sp/>&quot;Properties/C++/Preprocessor<sp/>Definitions&quot;<sp/>add<sp/>&apos;IMGUI_USER_CONFIG=&quot;my_imgui_config.h&quot;&apos;<sp/>and<sp/>inside<sp/>&apos;my_imgui_config.h&apos;<sp/>add<sp/>&apos;#define<sp/>ImTextureID<sp/>ImU64&apos;<sp/>and<sp/>as<sp/>many<sp/>other<sp/>options<sp/>as<sp/>you<sp/>like.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>[Solution<sp/>3]<sp/>IDE/msbuild:<sp/>edit<sp/>imconfig.h<sp/>and<sp/>add<sp/>&apos;#define<sp/>ImTextureID<sp/>ImU64&apos;<sp/>(prefer<sp/>solution<sp/>2<sp/>to<sp/>create<sp/>your<sp/>own<sp/>config<sp/>file!)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>[Solution<sp/>4]<sp/>command-line:<sp/>add<sp/>&apos;/D<sp/>ImTextureID=ImU64&apos;<sp/>to<sp/>your<sp/>cl.exe<sp/>command-line<sp/>(this<sp/>is<sp/>what<sp/>we<sp/>do<sp/>in<sp/>the<sp/>example_win32_direct12/build_win32.bat<sp/>file)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="imgui_8h_1a364f4447ecbc4ca176145ccff9db6286" kindref="member">ImTextureID</ref>)<sp/>&gt;=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(bd-&gt;<ref refid="struct_im_gui___impl_d_x12___data_1afbc904e7880493b7d4813238233c3db6" kindref="member">hFontSrvGpuDescHandle</ref>.ptr),<sp/></highlight><highlight class="stringliteral">&quot;Can&apos;t<sp/>pack<sp/>descriptor<sp/>handle<sp/>into<sp/>TexID,<sp/>32-bit<sp/>not<sp/>supported<sp/>yet.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>io.<ref refid="struct_im_gui_i_o_1a24e4f5201fe8780267abc2acfc24254c" kindref="member">Fonts</ref>-&gt;<ref refid="struct_im_font_atlas_1a96ffd1956c11dac4f79b43c095828445" kindref="member">SetTexID</ref>((<ref refid="imgui_8h_1a364f4447ecbc4ca176145ccff9db6286" kindref="member">ImTextureID</ref>)bd-&gt;<ref refid="struct_im_gui___impl_d_x12___data_1afbc904e7880493b7d4813238233c3db6" kindref="member">hFontSrvGpuDescHandle</ref>.ptr);</highlight></codeline>
<codeline lineno="445"><highlight class="normal">}</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui__impl__dx12_8cpp_1a2201cb1896b022b998668ceeacc82acd" kindref="member">ImGui_ImplDX12_CreateDeviceObjects</ref>(<ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>*<sp/>ctx)</highlight></codeline>
<codeline lineno="448"><highlight class="normal">{</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_d_x12___data" kindref="compound">ImGui_ImplDX12_Data</ref>*<sp/>bd<sp/>=<sp/>ImGui_ImplDX12_GetBackendData(ctx);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!bd<sp/>||<sp/>!bd-&gt;<ref refid="struct_im_gui___impl_d_x12___data_1a1c8a790e04e775e3dc8e3f9b5a8f886e" kindref="member">pd3dDevice</ref>)</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bd-&gt;<ref refid="struct_im_gui___impl_d_x12___data_1a56ca2ec999af6c639ad32f7204248500" kindref="member">pPipelineState</ref>)</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imgui__impl__dx12_8cpp_1aad9c507a917437f52a06c472ccf3985f" kindref="member">ImGui_ImplDX12_InvalidateDeviceObjects</ref>(ctx);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>the<sp/>root<sp/>signature</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>D3D12_DESCRIPTOR_RANGE<sp/>descRange<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>descRange.RangeType<sp/>=<sp/>D3D12_DESCRIPTOR_RANGE_TYPE_SRV;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>descRange.NumDescriptors<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>descRange.BaseShaderRegister<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>descRange.RegisterSpace<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>descRange.OffsetInDescriptorsFromTableStart<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>D3D12_ROOT_PARAMETER<sp/>param[2]<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>param[0].ParameterType<sp/>=<sp/>D3D12_ROOT_PARAMETER_TYPE_32BIT_CONSTANTS;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>param[0].Constants.ShaderRegister<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>param[0].Constants.RegisterSpace<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>param[0].Constants.Num32BitValues<sp/>=<sp/>16;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>param[0].ShaderVisibility<sp/>=<sp/>D3D12_SHADER_VISIBILITY_VERTEX;</highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>param[1].ParameterType<sp/>=<sp/>D3D12_ROOT_PARAMETER_TYPE_DESCRIPTOR_TABLE;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>param[1].DescriptorTable.NumDescriptorRanges<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>param[1].DescriptorTable.pDescriptorRanges<sp/>=<sp/>&amp;descRange;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>param[1].ShaderVisibility<sp/>=<sp/>D3D12_SHADER_VISIBILITY_PIXEL;</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Bilinear<sp/>sampling<sp/>is<sp/>required<sp/>by<sp/>default.<sp/>Set<sp/>&apos;io.Fonts-&gt;Flags<sp/>|=<sp/>ImFontAtlasFlags_NoBakedLines&apos;<sp/>or<sp/>&apos;style.AntiAliasedLinesUseTex<sp/>=<sp/>false&apos;<sp/>to<sp/>allow<sp/>point/nearest<sp/>sampling.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>D3D12_STATIC_SAMPLER_DESC<sp/>staticSampler<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>staticSampler.Filter<sp/>=<sp/>D3D12_FILTER_MIN_MAG_MIP_LINEAR;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>staticSampler.AddressU<sp/>=<sp/>D3D12_TEXTURE_ADDRESS_MODE_WRAP;</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>staticSampler.AddressV<sp/>=<sp/>D3D12_TEXTURE_ADDRESS_MODE_WRAP;</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>staticSampler.AddressW<sp/>=<sp/>D3D12_TEXTURE_ADDRESS_MODE_WRAP;</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>staticSampler.MipLODBias<sp/>=<sp/>0.f;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>staticSampler.MaxAnisotropy<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>staticSampler.ComparisonFunc<sp/>=<sp/>D3D12_COMPARISON_FUNC_ALWAYS;</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>staticSampler.BorderColor<sp/>=<sp/>D3D12_STATIC_BORDER_COLOR_TRANSPARENT_BLACK;</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>staticSampler.MinLOD<sp/>=<sp/>0.f;</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>staticSampler.MaxLOD<sp/>=<sp/>0.f;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>staticSampler.ShaderRegister<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>staticSampler.RegisterSpace<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>staticSampler.ShaderVisibility<sp/>=<sp/>D3D12_SHADER_VISIBILITY_PIXEL;</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>D3D12_ROOT_SIGNATURE_DESC<sp/>desc<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desc.NumParameters<sp/>=<sp/>_countof(param);</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desc.pParameters<sp/>=<sp/>param;</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desc.NumStaticSamplers<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desc.pStaticSamplers<sp/>=<sp/>&amp;staticSampler;</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desc.Flags<sp/>=</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>D3D12_ROOT_SIGNATURE_FLAG_ALLOW_INPUT_ASSEMBLER_INPUT_LAYOUT<sp/>|</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>D3D12_ROOT_SIGNATURE_FLAG_DENY_HULL_SHADER_ROOT_ACCESS<sp/>|</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>D3D12_ROOT_SIGNATURE_FLAG_DENY_DOMAIN_SHADER_ROOT_ACCESS<sp/>|</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>D3D12_ROOT_SIGNATURE_FLAG_DENY_GEOMETRY_SHADER_ROOT_ACCESS;</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Load<sp/>d3d12.dll<sp/>and<sp/>D3D12SerializeRootSignature()<sp/>function<sp/>address<sp/>dynamically<sp/>to<sp/>facilitate<sp/>using<sp/>with<sp/>D3D12On7.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>See<sp/>if<sp/>any<sp/>version<sp/>of<sp/>d3d12.dll<sp/>is<sp/>already<sp/>loaded<sp/>in<sp/>the<sp/>process.<sp/>If<sp/>so,<sp/>give<sp/>preference<sp/>to<sp/>that.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>HINSTANCE<sp/>d3d12_dll<sp/>=<sp/>::GetModuleHandleA(</highlight><highlight class="stringliteral">&quot;d3d12.dll&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d3d12_dll<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Attempt<sp/>to<sp/>load<sp/>d3d12.dll<sp/>from<sp/>local<sp/>directories.<sp/>This<sp/>will<sp/>only<sp/>succeed<sp/>if</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(1)<sp/>the<sp/>current<sp/>OS<sp/>is<sp/>Windows<sp/>7,<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(2)<sp/>there<sp/>exists<sp/>a<sp/>version<sp/>of<sp/>d3d12.dll<sp/>for<sp/>Windows<sp/>7<sp/>(D3D12On7)<sp/>in<sp/>one<sp/>of<sp/>the<sp/>following<sp/>directories.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>See<sp/>https://github.com/ocornut/imgui/pull/3696<sp/>for<sp/>details.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>localD3d12Paths[]<sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;.\\d3d12.dll&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;.\\d3d12on7\\d3d12.dll&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;.\\12on7\\d3d12.dll&quot;</highlight><highlight class="normal"><sp/>};<sp/></highlight><highlight class="comment">//<sp/>A.<sp/>current<sp/>directory,<sp/>B.<sp/>used<sp/>by<sp/>some<sp/>games,<sp/>C.<sp/>used<sp/>in<sp/>Microsoft<sp/>D3D12On7<sp/>sample</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="imgui_8h_1aeabe36f60fe45cf64cbc9641bcd58cca" kindref="member">IM_ARRAYSIZE</ref>(localD3d12Paths);<sp/>i++)</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((d3d12_dll<sp/>=<sp/>::LoadLibraryA(localD3d12Paths[i]))<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>failed,<sp/>we<sp/>are<sp/>on<sp/>Windows<sp/>&gt;=<sp/>10.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d3d12_dll<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d3d12_dll<sp/>=<sp/>::LoadLibraryA(</highlight><highlight class="stringliteral">&quot;d3d12.dll&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d3d12_dll<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PFN_D3D12_SERIALIZE_ROOT_SIGNATURE<sp/>D3D12SerializeRootSignatureFn<sp/>=<sp/>(PFN_D3D12_SERIALIZE_ROOT_SIGNATURE)::GetProcAddress(d3d12_dll,<sp/></highlight><highlight class="stringliteral">&quot;D3D12SerializeRootSignature&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(D3D12SerializeRootSignatureFn<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ID3DBlob*<sp/>blob<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(D3D12SerializeRootSignatureFn(&amp;desc,<sp/>D3D_ROOT_SIGNATURE_VERSION_1,<sp/>&amp;blob,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>!=<sp/>S_OK)</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bd-&gt;<ref refid="struct_im_gui___impl_d_x12___data_1a1c8a790e04e775e3dc8e3f9b5a8f886e" kindref="member">pd3dDevice</ref>-&gt;CreateRootSignature(0,<sp/>blob-&gt;GetBufferPointer(),<sp/>blob-&gt;GetBufferSize(),<sp/>IID_PPV_ARGS(&amp;bd-&gt;<ref refid="struct_im_gui___impl_d_x12___data_1a5ec586be9457edb382e26db52b84bba5" kindref="member">pRootSignature</ref>));</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blob-&gt;Release();</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>By<sp/>using<sp/>D3DCompile()<sp/>from<sp/>&lt;d3dcompiler.h&gt;<sp/>/<sp/>d3dcompiler.lib,<sp/>we<sp/>introduce<sp/>a<sp/>dependency<sp/>to<sp/>a<sp/>given<sp/>version<sp/>of<sp/>d3dcompiler_XX.dll<sp/>(see<sp/>D3DCOMPILER_DLL_A)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>you<sp/>would<sp/>like<sp/>to<sp/>use<sp/>this<sp/>DX12<sp/>sample<sp/>code<sp/>but<sp/>remove<sp/>this<sp/>dependency<sp/>you<sp/>can:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>1)<sp/>compile<sp/>once,<sp/>save<sp/>the<sp/>compiled<sp/>shader<sp/>blobs<sp/>into<sp/>a<sp/>file<sp/>or<sp/>source<sp/>code<sp/>and<sp/>assign<sp/>them<sp/>to<sp/>psoDesc.VS/PS<sp/>[preferred<sp/>solution]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>2)<sp/>use<sp/>code<sp/>to<sp/>detect<sp/>any<sp/>version<sp/>of<sp/>the<sp/>DLL<sp/>and<sp/>grab<sp/>a<sp/>pointer<sp/>to<sp/>D3DCompile<sp/>from<sp/>the<sp/>DLL.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>See<sp/>https://github.com/ocornut/imgui/pull/638<sp/>for<sp/>sources<sp/>and<sp/>details.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/>D3D12_GRAPHICS_PIPELINE_STATE_DESC<sp/>psoDesc;</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(&amp;psoDesc,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(D3D12_GRAPHICS_PIPELINE_STATE_DESC));</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/>psoDesc.NodeMask<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/>psoDesc.PrimitiveTopologyType<sp/>=<sp/>D3D12_PRIMITIVE_TOPOLOGY_TYPE_TRIANGLE;</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/>psoDesc.pRootSignature<sp/>=<sp/>bd-&gt;<ref refid="struct_im_gui___impl_d_x12___data_1a5ec586be9457edb382e26db52b84bba5" kindref="member">pRootSignature</ref>;</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/>psoDesc.SampleMask<sp/>=<sp/>UINT_MAX;</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/>psoDesc.NumRenderTargets<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/>psoDesc.RTVFormats[0]<sp/>=<sp/>bd-&gt;<ref refid="struct_im_gui___impl_d_x12___data_1ac51215a8aa27a0c0fa095abc87e0a80b" kindref="member">RTVFormat</ref>;</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/>psoDesc.SampleDesc.Count<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/>psoDesc.Flags<sp/>=<sp/>D3D12_PIPELINE_STATE_FLAG_NONE;</highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/>ID3DBlob*<sp/>vertexShaderBlob;</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/>ID3DBlob*<sp/>pixelShaderBlob;</highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>the<sp/>vertex<sp/>shader</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>vertexShader<sp/>=</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;cbuffer<sp/>vertexBuffer<sp/>:<sp/>register(b0)<sp/>\</highlight></codeline>
<codeline lineno="562"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{\</highlight></codeline>
<codeline lineno="563"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float4x4<sp/>ProjectionMatrix;<sp/>\</highlight></codeline>
<codeline lineno="564"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};\</highlight></codeline>
<codeline lineno="565"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>struct<sp/>VS_INPUT\</highlight></codeline>
<codeline lineno="566"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{\</highlight></codeline>
<codeline lineno="567"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float2<sp/>pos<sp/>:<sp/>POSITION;\</highlight></codeline>
<codeline lineno="568"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float4<sp/>col<sp/>:<sp/>COLOR0;\</highlight></codeline>
<codeline lineno="569"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float2<sp/>uv<sp/><sp/>:<sp/>TEXCOORD0;\</highlight></codeline>
<codeline lineno="570"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};\</highlight></codeline>
<codeline lineno="571"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="572"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>struct<sp/>PS_INPUT\</highlight></codeline>
<codeline lineno="573"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{\</highlight></codeline>
<codeline lineno="574"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float4<sp/>pos<sp/>:<sp/>SV_POSITION;\</highlight></codeline>
<codeline lineno="575"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float4<sp/>col<sp/>:<sp/>COLOR0;\</highlight></codeline>
<codeline lineno="576"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float2<sp/>uv<sp/><sp/>:<sp/>TEXCOORD0;\</highlight></codeline>
<codeline lineno="577"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};\</highlight></codeline>
<codeline lineno="578"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="579"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PS_INPUT<sp/>main(VS_INPUT<sp/>input)\</highlight></codeline>
<codeline lineno="580"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{\</highlight></codeline>
<codeline lineno="581"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PS_INPUT<sp/>output;\</highlight></codeline>
<codeline lineno="582"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.pos<sp/>=<sp/>mul(<sp/>ProjectionMatrix,<sp/>float4(input.pos.xy,<sp/>0.f,<sp/>1.f));\</highlight></codeline>
<codeline lineno="583"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.col<sp/>=<sp/>input.col;\</highlight></codeline>
<codeline lineno="584"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.uv<sp/><sp/>=<sp/>input.uv;\</highlight></codeline>
<codeline lineno="585"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>output;\</highlight></codeline>
<codeline lineno="586"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(FAILED(D3DCompile(vertexShader,<sp/>strlen(vertexShader),<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;main&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;vs_5_0&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>0,<sp/>&amp;vertexShaderBlob,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)))</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>NB:<sp/>Pass<sp/>ID3DBlob*<sp/>pErrorBlob<sp/>to<sp/>D3DCompile()<sp/>to<sp/>get<sp/>error<sp/>showing<sp/>in<sp/>(const<sp/>char*)pErrorBlob-&gt;GetBufferPointer().<sp/>Make<sp/>sure<sp/>to<sp/>Release()<sp/>the<sp/>blob!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psoDesc.VS<sp/>=<sp/>{<sp/>vertexShaderBlob-&gt;GetBufferPointer(),<sp/>vertexShaderBlob-&gt;GetBufferSize()<sp/>};</highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>the<sp/>input<sp/>layout</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>D3D12_INPUT_ELEMENT_DESC<sp/>local_layout[]<sp/>=</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;POSITION&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>DXGI_FORMAT_R32G32_FLOAT,<sp/><sp/><sp/>0,<sp/>(UINT)offsetof(<ref refid="struct_im_draw_vert" kindref="compound">ImDrawVert</ref>,<sp/>pos),<sp/>D3D12_INPUT_CLASSIFICATION_PER_VERTEX_DATA,<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;TEXCOORD&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>DXGI_FORMAT_R32G32_FLOAT,<sp/><sp/><sp/>0,<sp/>(UINT)offsetof(<ref refid="struct_im_draw_vert" kindref="compound">ImDrawVert</ref>,<sp/>uv),<sp/><sp/>D3D12_INPUT_CLASSIFICATION_PER_VERTEX_DATA,<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;COLOR&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/>0,<sp/>DXGI_FORMAT_R8G8B8A8_UNORM,<sp/>0,<sp/>(UINT)offsetof(<ref refid="struct_im_draw_vert" kindref="compound">ImDrawVert</ref>,<sp/>col),<sp/>D3D12_INPUT_CLASSIFICATION_PER_VERTEX_DATA,<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psoDesc.InputLayout<sp/>=<sp/>{<sp/>local_layout,<sp/>3<sp/>};</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>the<sp/>pixel<sp/>shader</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pixelShader<sp/>=</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;struct<sp/>PS_INPUT\</highlight></codeline>
<codeline lineno="606"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{\</highlight></codeline>
<codeline lineno="607"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float4<sp/>pos<sp/>:<sp/>SV_POSITION;\</highlight></codeline>
<codeline lineno="608"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float4<sp/>col<sp/>:<sp/>COLOR0;\</highlight></codeline>
<codeline lineno="609"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float2<sp/>uv<sp/><sp/>:<sp/>TEXCOORD0;\</highlight></codeline>
<codeline lineno="610"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};\</highlight></codeline>
<codeline lineno="611"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SamplerState<sp/>sampler0<sp/>:<sp/>register(s0);\</highlight></codeline>
<codeline lineno="612"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Texture2D<sp/>texture0<sp/>:<sp/>register(t0);\</highlight></codeline>
<codeline lineno="613"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="614"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float4<sp/>main(PS_INPUT<sp/>input)<sp/>:<sp/>SV_Target\</highlight></codeline>
<codeline lineno="615"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{\</highlight></codeline>
<codeline lineno="616"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float4<sp/>out_col<sp/>=<sp/>input.col<sp/>*<sp/>texture0.Sample(sampler0,<sp/>input.uv);<sp/>\</highlight></codeline>
<codeline lineno="617"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>out_col;<sp/>\</highlight></codeline>
<codeline lineno="618"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(FAILED(D3DCompile(pixelShader,<sp/>strlen(pixelShader),<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;main&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;ps_5_0&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>0,<sp/>&amp;pixelShaderBlob,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)))</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vertexShaderBlob-&gt;Release();</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>NB:<sp/>Pass<sp/>ID3DBlob*<sp/>pErrorBlob<sp/>to<sp/>D3DCompile()<sp/>to<sp/>get<sp/>error<sp/>showing<sp/>in<sp/>(const<sp/>char*)pErrorBlob-&gt;GetBufferPointer().<sp/>Make<sp/>sure<sp/>to<sp/>Release()<sp/>the<sp/>blob!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psoDesc.PS<sp/>=<sp/>{<sp/>pixelShaderBlob-&gt;GetBufferPointer(),<sp/>pixelShaderBlob-&gt;GetBufferSize()<sp/>};</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>the<sp/>blending<sp/>setup</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>D3D12_BLEND_DESC&amp;<sp/>desc<sp/>=<sp/>psoDesc.BlendState;</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desc.AlphaToCoverageEnable<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desc.RenderTarget[0].BlendEnable<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desc.RenderTarget[0].SrcBlend<sp/>=<sp/>D3D12_BLEND_SRC_ALPHA;</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desc.RenderTarget[0].DestBlend<sp/>=<sp/>D3D12_BLEND_INV_SRC_ALPHA;</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desc.RenderTarget[0].BlendOp<sp/>=<sp/>D3D12_BLEND_OP_ADD;</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desc.RenderTarget[0].SrcBlendAlpha<sp/>=<sp/>D3D12_BLEND_ONE;</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desc.RenderTarget[0].DestBlendAlpha<sp/>=<sp/>D3D12_BLEND_INV_SRC_ALPHA;</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desc.RenderTarget[0].BlendOpAlpha<sp/>=<sp/>D3D12_BLEND_OP_ADD;</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desc.RenderTarget[0].RenderTargetWriteMask<sp/>=<sp/>D3D12_COLOR_WRITE_ENABLE_ALL;</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>the<sp/>rasterizer<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>D3D12_RASTERIZER_DESC&amp;<sp/>desc<sp/>=<sp/>psoDesc.RasterizerState;</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desc.FillMode<sp/>=<sp/>D3D12_FILL_MODE_SOLID;</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desc.CullMode<sp/>=<sp/>D3D12_CULL_MODE_NONE;</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desc.FrontCounterClockwise<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desc.DepthBias<sp/>=<sp/>D3D12_DEFAULT_DEPTH_BIAS;</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desc.DepthBiasClamp<sp/>=<sp/>D3D12_DEFAULT_DEPTH_BIAS_CLAMP;</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desc.SlopeScaledDepthBias<sp/>=<sp/>D3D12_DEFAULT_SLOPE_SCALED_DEPTH_BIAS;</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desc.DepthClipEnable<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desc.MultisampleEnable<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desc.AntialiasedLineEnable<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desc.ForcedSampleCount<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desc.ConservativeRaster<sp/>=<sp/>D3D12_CONSERVATIVE_RASTERIZATION_MODE_OFF;</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>depth-stencil<sp/>State</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>D3D12_DEPTH_STENCIL_DESC&amp;<sp/>desc<sp/>=<sp/>psoDesc.DepthStencilState;</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desc.DepthEnable<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desc.DepthWriteMask<sp/>=<sp/>D3D12_DEPTH_WRITE_MASK_ALL;</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desc.DepthFunc<sp/>=<sp/>D3D12_COMPARISON_FUNC_ALWAYS;</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desc.StencilEnable<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desc.FrontFace.StencilFailOp<sp/>=<sp/>desc.FrontFace.StencilDepthFailOp<sp/>=<sp/>desc.FrontFace.StencilPassOp<sp/>=<sp/>D3D12_STENCIL_OP_KEEP;</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desc.FrontFace.StencilFunc<sp/>=<sp/>D3D12_COMPARISON_FUNC_ALWAYS;</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desc.BackFace<sp/>=<sp/>desc.FrontFace;</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="669"><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/>HRESULT<sp/>result_pipeline_state<sp/>=<sp/>bd-&gt;<ref refid="struct_im_gui___impl_d_x12___data_1a1c8a790e04e775e3dc8e3f9b5a8f886e" kindref="member">pd3dDevice</ref>-&gt;CreateGraphicsPipelineState(&amp;psoDesc,<sp/>IID_PPV_ARGS(&amp;bd-&gt;<ref refid="struct_im_gui___impl_d_x12___data_1a56ca2ec999af6c639ad32f7204248500" kindref="member">pPipelineState</ref>));</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/>vertexShaderBlob-&gt;Release();</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/>pixelShaderBlob-&gt;Release();</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result_pipeline_state<sp/>!=<sp/>S_OK)</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGui_ImplDX12_CreateFontsTexture(ctx);</highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="679"><highlight class="normal">}</highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui__impl__dx12_8cpp_1aad9c507a917437f52a06c472ccf3985f" kindref="member">ImGui_ImplDX12_InvalidateDeviceObjects</ref>(<ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>*<sp/>ctx)</highlight></codeline>
<codeline lineno="682"><highlight class="normal">{</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_d_x12___data" kindref="compound">ImGui_ImplDX12_Data</ref>*<sp/>bd<sp/>=<sp/>ImGui_ImplDX12_GetBackendData(ctx);</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!bd<sp/>||<sp/>!bd-&gt;<ref refid="struct_im_gui___impl_d_x12___data_1a1c8a790e04e775e3dc8e3f9b5a8f886e" kindref="member">pd3dDevice</ref>)</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="686"><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_i_o" kindref="compound">ImGuiIO</ref>&amp;<sp/>io<sp/>=<sp/><ref refid="namespace_im_gui_1a447aaaa626101bcb4057ab7fad5c63b2" kindref="member">ImGui::GetIO</ref>(ctx);</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/>SafeRelease(bd-&gt;<ref refid="struct_im_gui___impl_d_x12___data_1a5ec586be9457edb382e26db52b84bba5" kindref="member">pRootSignature</ref>);</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/>SafeRelease(bd-&gt;<ref refid="struct_im_gui___impl_d_x12___data_1a56ca2ec999af6c639ad32f7204248500" kindref="member">pPipelineState</ref>);</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/>SafeRelease(bd-&gt;<ref refid="struct_im_gui___impl_d_x12___data_1a3157f6d9f8b586f4fbabb8dc59e74ece" kindref="member">pFontTextureResource</ref>);</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/>io.<ref refid="struct_im_gui_i_o_1a24e4f5201fe8780267abc2acfc24254c" kindref="member">Fonts</ref>-&gt;<ref refid="struct_im_font_atlas_1a96ffd1956c11dac4f79b43c095828445" kindref="member">SetTexID</ref>(0);<sp/></highlight><highlight class="comment">//<sp/>We<sp/>copied<sp/>bd-&gt;pFontTextureView<sp/>to<sp/>io.Fonts-&gt;TexID<sp/>so<sp/>let&apos;s<sp/>clear<sp/>that<sp/>as<sp/>well.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(UINT<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>bd-&gt;<ref refid="struct_im_gui___impl_d_x12___data_1a6a541239da42836b2127d1428032cf7d" kindref="member">numFramesInFlight</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_d_x12___render_buffers" kindref="compound">ImGui_ImplDX12_RenderBuffers</ref>*<sp/>fr<sp/>=<sp/>&amp;bd-&gt;<ref refid="struct_im_gui___impl_d_x12___data_1ac61eccc7bdd8782896d100ec000191c4" kindref="member">pFrameResources</ref>[i];</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SafeRelease(fr-&gt;<ref refid="struct_im_gui___impl_d_x12___render_buffers_1adea8d9622af0a5c6376f4b98840b0812" kindref="member">IndexBuffer</ref>);</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SafeRelease(fr-&gt;<ref refid="struct_im_gui___impl_d_x12___render_buffers_1a5ffee1b7a7d728d15dfd33739819101c" kindref="member">VertexBuffer</ref>);</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="699"><highlight class="normal">}</highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="imgui__impl__dx12_8cpp_1a943e453aaf5c2a6a21fe05a32e1fb522" kindref="member">ImGui_ImplDX12_Init</ref>(<ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>*<sp/>ctx,<sp/>ID3D12Device*<sp/>device,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_frames_in_flight,<sp/>DXGI_FORMAT<sp/>rtv_format,<sp/>ID3D12DescriptorHeap*<sp/>cbv_srv_heap,</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>D3D12_CPU_DESCRIPTOR_HANDLE<sp/>font_srv_cpu_desc_handle,<sp/>D3D12_GPU_DESCRIPTOR_HANDLE<sp/>font_srv_gpu_desc_handle)</highlight></codeline>
<codeline lineno="703"><highlight class="normal">{</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_i_o" kindref="compound">ImGuiIO</ref>&amp;<sp/>io<sp/>=<sp/><ref refid="namespace_im_gui_1a447aaaa626101bcb4057ab7fad5c63b2" kindref="member">ImGui::GetIO</ref>(ctx);</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui_8h_1acb09e7dc42e8e3cefb0ecaa197978920" kindref="member">IM_ASSERT</ref>(io.<ref refid="struct_im_gui_i_o_1a9d1b2553e914286e9f92ab62f3d38265" kindref="member">BackendRendererUserData</ref><sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;Already<sp/>initialized<sp/>a<sp/>renderer<sp/>backend!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Setup<sp/>backend<sp/>capabilities<sp/>flags</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_d_x12___data" kindref="compound">ImGui_ImplDX12_Data</ref>*<sp/>bd<sp/>=<sp/><ref refid="imgui_8h_1a5e3b2a8968432747cd4932c539d76723" kindref="member">IM_NEW</ref>(<ref refid="struct_im_gui___impl_d_x12___data" kindref="compound">ImGui_ImplDX12_Data</ref>)();</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/>io.<ref refid="struct_im_gui_i_o_1a9d1b2553e914286e9f92ab62f3d38265" kindref="member">BackendRendererUserData</ref><sp/>=<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)bd;</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/>io.<ref refid="struct_im_gui_i_o_1ad0902d7c892cff675fc0a685e8f1481d" kindref="member">BackendRendererName</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;imgui_impl_dx12&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/>io.<ref refid="struct_im_gui_i_o_1a92288d3e802788c8c408eac2c12e709c" kindref="member">BackendFlags</ref><sp/>|=<sp/><ref refid="imgui_8h_1a29add481c904a47bbbd2980555524fbead612101d424ac3203d379e0e30671277" kindref="member">ImGuiBackendFlags_RendererHasVtxOffset</ref>;<sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>honor<sp/>the<sp/>ImDrawCmd::VtxOffset<sp/>field,<sp/>allowing<sp/>for<sp/>large<sp/>meshes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/>bd-&gt;<ref refid="struct_im_gui___impl_d_x12___data_1a1c8a790e04e775e3dc8e3f9b5a8f886e" kindref="member">pd3dDevice</ref><sp/>=<sp/>device;</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/>bd-&gt;<ref refid="struct_im_gui___impl_d_x12___data_1ac51215a8aa27a0c0fa095abc87e0a80b" kindref="member">RTVFormat</ref><sp/>=<sp/>rtv_format;</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/>bd-&gt;<ref refid="struct_im_gui___impl_d_x12___data_1a0a595d2e3657b5d3b6933d74e65adc3c" kindref="member">hFontSrvCpuDescHandle</ref><sp/>=<sp/>font_srv_cpu_desc_handle;</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/>bd-&gt;<ref refid="struct_im_gui___impl_d_x12___data_1afbc904e7880493b7d4813238233c3db6" kindref="member">hFontSrvGpuDescHandle</ref><sp/>=<sp/>font_srv_gpu_desc_handle;</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/>bd-&gt;<ref refid="struct_im_gui___impl_d_x12___data_1ac61eccc7bdd8782896d100ec000191c4" kindref="member">pFrameResources</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_im_gui___impl_d_x12___render_buffers" kindref="compound">ImGui_ImplDX12_RenderBuffers</ref>[num_frames_in_flight];</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/>bd-&gt;<ref refid="struct_im_gui___impl_d_x12___data_1a6a541239da42836b2127d1428032cf7d" kindref="member">numFramesInFlight</ref><sp/>=<sp/>num_frames_in_flight;</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/>bd-&gt;<ref refid="struct_im_gui___impl_d_x12___data_1a470d80e9fd5c7b77c19640654466721b" kindref="member">pd3dSrvDescHeap</ref><sp/>=<sp/>cbv_srv_heap;</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/>bd-&gt;<ref refid="struct_im_gui___impl_d_x12___data_1a36f325ca3e65ccc7185559cb6cf09c41" kindref="member">frameIndex</ref><sp/>=<sp/>UINT_MAX;</highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>buffers<sp/>with<sp/>a<sp/>default<sp/>size<sp/>(they<sp/>will<sp/>later<sp/>be<sp/>grown<sp/>as<sp/>needed)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>num_frames_in_flight;<sp/>i++)</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_d_x12___render_buffers" kindref="compound">ImGui_ImplDX12_RenderBuffers</ref>*<sp/>fr<sp/>=<sp/>&amp;bd-&gt;<ref refid="struct_im_gui___impl_d_x12___data_1ac61eccc7bdd8782896d100ec000191c4" kindref="member">pFrameResources</ref>[i];</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fr-&gt;<ref refid="struct_im_gui___impl_d_x12___render_buffers_1adea8d9622af0a5c6376f4b98840b0812" kindref="member">IndexBuffer</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fr-&gt;<ref refid="struct_im_gui___impl_d_x12___render_buffers_1a5ffee1b7a7d728d15dfd33739819101c" kindref="member">VertexBuffer</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fr-&gt;<ref refid="struct_im_gui___impl_d_x12___render_buffers_1a29214b15eceea549928373591e877640" kindref="member">IndexBufferSize</ref><sp/>=<sp/>10000;</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fr-&gt;<ref refid="struct_im_gui___impl_d_x12___render_buffers_1a6643010c24e4046769271a36d596398a" kindref="member">VertexBufferSize</ref><sp/>=<sp/>5000;</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="731"><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="733"><highlight class="normal">}</highlight></codeline>
<codeline lineno="734"><highlight class="normal"></highlight></codeline>
<codeline lineno="735"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="imgui__impl__dx12_8cpp_1a4e5588d32785e2e86bdf9b7d8657922d" kindref="member">ImGui_ImplDX12_Shutdown</ref>(<ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>*<sp/>ctx)</highlight></codeline>
<codeline lineno="736"><highlight class="normal">{</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_d_x12___data" kindref="compound">ImGui_ImplDX12_Data</ref>*<sp/>bd<sp/>=<sp/>ImGui_ImplDX12_GetBackendData(ctx);</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui_8h_1acb09e7dc42e8e3cefb0ecaa197978920" kindref="member">IM_ASSERT</ref>(bd<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;No<sp/>renderer<sp/>backend<sp/>to<sp/>shutdown,<sp/>or<sp/>already<sp/>shutdown?&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_i_o" kindref="compound">ImGuiIO</ref>&amp;<sp/>io<sp/>=<sp/><ref refid="namespace_im_gui_1a447aaaa626101bcb4057ab7fad5c63b2" kindref="member">ImGui::GetIO</ref>(ctx);</highlight></codeline>
<codeline lineno="740"><highlight class="normal"></highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clean<sp/>up<sp/>windows<sp/>and<sp/>device<sp/>objects</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui__impl__dx12_8cpp_1aad9c507a917437f52a06c472ccf3985f" kindref="member">ImGui_ImplDX12_InvalidateDeviceObjects</ref>(ctx);</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>bd-&gt;<ref refid="struct_im_gui___impl_d_x12___data_1ac61eccc7bdd8782896d100ec000191c4" kindref="member">pFrameResources</ref>;</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/>io.<ref refid="struct_im_gui_i_o_1ad0902d7c892cff675fc0a685e8f1481d" kindref="member">BackendRendererName</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/>io.<ref refid="struct_im_gui_i_o_1a9d1b2553e914286e9f92ab62f3d38265" kindref="member">BackendRendererUserData</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/>io.<ref refid="struct_im_gui_i_o_1a92288d3e802788c8c408eac2c12e709c" kindref="member">BackendFlags</ref><sp/>&amp;=<sp/><ref refid="imgui_8h_1a29add481c904a47bbbd2980555524fbead612101d424ac3203d379e0e30671277" kindref="member">~ImGuiBackendFlags_RendererHasVtxOffset</ref>;</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui_8h_1a3c856832c3fe1da8767a9353da3707e1" kindref="member">IM_DELETE</ref>(bd);</highlight></codeline>
<codeline lineno="748"><highlight class="normal">}</highlight></codeline>
<codeline lineno="749"><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="imgui__impl__dx12_8cpp_1a3636d7406f6493b1bea678cd840e6e03" kindref="member">ImGui_ImplDX12_NewFrame</ref>(<ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>*<sp/>ctx)</highlight></codeline>
<codeline lineno="751"><highlight class="normal">{</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_d_x12___data" kindref="compound">ImGui_ImplDX12_Data</ref>*<sp/>bd<sp/>=<sp/>ImGui_ImplDX12_GetBackendData(ctx);</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui_8h_1acb09e7dc42e8e3cefb0ecaa197978920" kindref="member">IM_ASSERT</ref>(bd<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;Did<sp/>you<sp/>call<sp/>ImGui_ImplDX12_Init()?&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="754"><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!bd-&gt;<ref refid="struct_im_gui___impl_d_x12___data_1a56ca2ec999af6c639ad32f7204248500" kindref="member">pPipelineState</ref>)</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imgui__impl__dx12_8cpp_1a2201cb1896b022b998668ceeacc82acd" kindref="member">ImGui_ImplDX12_CreateDeviceObjects</ref>(ctx);</highlight></codeline>
<codeline lineno="757"><highlight class="normal">}</highlight></codeline>
<codeline lineno="758"><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal"></highlight></codeline>
<codeline lineno="761"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>#ifndef<sp/>IMGUI_DISABLE</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="graphics/imgui/imgui_impl_dx12.cpp"/>
  </compounddef>
</doxygen>
