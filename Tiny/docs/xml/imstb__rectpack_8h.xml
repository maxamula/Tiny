<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="imstb__rectpack_8h" kind="file" language="C++">
    <compoundname>imstb_rectpack.h</compoundname>
    <includedby refid="imgui__draw_8cpp" local="yes">graphics/imgui/imgui_draw.cpp</includedby>
    <invincdepgraph>
      <node id="2">
        <label>graphics/imgui/imgui_draw.cpp</label>
        <link refid="imgui__draw_8cpp"/>
      </node>
      <node id="1">
        <label>graphics/imgui/imstb_rectpack.h</label>
        <link refid="imstb__rectpack_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structstbrp__rect" prot="public">stbrp_rect</innerclass>
    <innerclass refid="structstbrp__node" prot="public">stbrp_node</innerclass>
    <innerclass refid="structstbrp__context" prot="public">stbrp_context</innerclass>
    <sectiondef kind="define">
      <memberdef kind="define" id="imstb__rectpack_8h_1af2f15dfcc6ad60b1df4f5902e2cc25ce" prot="public" static="no">
        <name>STB_RECT_PACK_VERSION</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imstb_rectpack.h" line="73" column="9" bodyfile="graphics/imgui/imstb_rectpack.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imstb__rectpack_8h_1a0b73f2d2521fb81afc056a823e3ca753" prot="public" static="no">
        <name>STBRP_DEF</name>
        <initializer>extern</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imstb_rectpack.h" line="78" column="10" bodyfile="graphics/imgui/imstb_rectpack.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imstb__rectpack_8h_1a114ed17dfa71ac93774494ab6d14bfbc" prot="public" static="no">
        <name>STBRP__MAXVAL</name>
        <initializer>0x7fffffff</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imstb_rectpack.h" line="91" column="9" bodyfile="graphics/imgui/imstb_rectpack.h" bodystart="91" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="enum">
      <memberdef kind="enum" id="imstb__rectpack_8h_1ae41a58cfc9b24fd51205531c477941d8" prot="public" static="no" strong="no">
        <type></type>
        <name></name>
        <enumvalue id="imstb__rectpack_8h_1ae41a58cfc9b24fd51205531c477941d8a5e4dd0b1cbee654bbfeebc5311f03525" prot="public">
          <name>STBRP_HEURISTIC_Skyline_default</name>
          <initializer>=0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imstb__rectpack_8h_1ae41a58cfc9b24fd51205531c477941d8a13530b067fb1f9707dc0f9d51f8b074a" prot="public">
          <name>STBRP_HEURISTIC_Skyline_BL_sortHeight</name>
          <initializer>= STBRP_HEURISTIC_Skyline_default</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imstb__rectpack_8h_1ae41a58cfc9b24fd51205531c477941d8a11d62749c4405a231a6fd1dd9d46615c" prot="public">
          <name>STBRP_HEURISTIC_Skyline_BF_sortHeight</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imstb_rectpack.h" line="166" column="1" bodyfile="graphics/imgui/imstb_rectpack.h" bodystart="167" bodyend="171"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="typedef">
      <memberdef kind="typedef" id="imstb__rectpack_8h_1a0455046a8d5457bbc4f3f3ec995c338f" prot="public" static="no">
        <type>struct stbrp_context</type>
        <definition>typedef struct stbrp_context stbrp_context</definition>
        <argsstring></argsstring>
        <name>stbrp_context</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imstb_rectpack.h" line="85" column="28" bodyfile="graphics/imgui/imstb_rectpack.h" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="imstb__rectpack_8h_1ae8f871c209d2e6218baf9c0e2a209ea1" prot="public" static="no">
        <type>struct stbrp_node</type>
        <definition>typedef struct stbrp_node stbrp_node</definition>
        <argsstring></argsstring>
        <name>stbrp_node</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imstb_rectpack.h" line="86" column="25" bodyfile="graphics/imgui/imstb_rectpack.h" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="imstb__rectpack_8h_1a7c4a99b31ea2207a0b2bbcbdab8f3840" prot="public" static="no">
        <type>struct stbrp_rect</type>
        <definition>typedef struct stbrp_rect stbrp_rect</definition>
        <argsstring></argsstring>
        <name>stbrp_rect</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imstb_rectpack.h" line="87" column="25" bodyfile="graphics/imgui/imstb_rectpack.h" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="imstb__rectpack_8h_1a4a396a45893c12de32e2d598abd6b302" prot="public" static="no">
        <type>int</type>
        <definition>typedef int stbrp_coord</definition>
        <argsstring></argsstring>
        <name>stbrp_coord</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imstb_rectpack.h" line="89" column="24" bodyfile="graphics/imgui/imstb_rectpack.h" bodystart="89" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="imstb__rectpack_8h_1af038ae1b98573f24736c9a3eed0478ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="imstb__rectpack_8h_1a0b73f2d2521fb81afc056a823e3ca753" kindref="member">STBRP_DEF</ref> int</type>
        <definition>STBRP_DEF int stbrp_pack_rects</definition>
        <argsstring>(stbrp_context *context, stbrp_rect *rects, int num_rects)</argsstring>
        <name>stbrp_pack_rects</name>
        <param>
          <type><ref refid="structstbrp__context" kindref="compound">stbrp_context</ref> *</type>
          <declname>context</declname>
        </param>
        <param>
          <type><ref refid="structstbrp__rect" kindref="compound">stbrp_rect</ref> *</type>
          <declname>rects</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_rects</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imstb_rectpack.h" line="94" column="15" declfile="graphics/imgui/imstb_rectpack.h" declline="94" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="imstb__rectpack_8h_1a8b32f5ad458f614f5d419ef26cef5b3c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="imstb__rectpack_8h_1a0b73f2d2521fb81afc056a823e3ca753" kindref="member">STBRP_DEF</ref> void</type>
        <definition>STBRP_DEF void stbrp_init_target</definition>
        <argsstring>(stbrp_context *context, int width, int height, stbrp_node *nodes, int num_nodes)</argsstring>
        <name>stbrp_init_target</name>
        <param>
          <type><ref refid="structstbrp__context" kindref="compound">stbrp_context</ref> *</type>
          <declname>context</declname>
        </param>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>height</declname>
        </param>
        <param>
          <type><ref refid="structstbrp__node" kindref="compound">stbrp_node</ref> *</type>
          <declname>nodes</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_nodes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imstb_rectpack.h" line="134" column="16" declfile="graphics/imgui/imstb_rectpack.h" declline="134" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="imstb__rectpack_8h_1a1babd70b223e571305fd9753a83a4fda" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="imstb__rectpack_8h_1a0b73f2d2521fb81afc056a823e3ca753" kindref="member">STBRP_DEF</ref> void</type>
        <definition>STBRP_DEF void stbrp_setup_allow_out_of_mem</definition>
        <argsstring>(stbrp_context *context, int allow_out_of_mem)</argsstring>
        <name>stbrp_setup_allow_out_of_mem</name>
        <param>
          <type><ref refid="structstbrp__context" kindref="compound">stbrp_context</ref> *</type>
          <declname>context</declname>
        </param>
        <param>
          <type>int</type>
          <declname>allow_out_of_mem</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imstb_rectpack.h" line="155" column="16" declfile="graphics/imgui/imstb_rectpack.h" declline="155" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="imstb__rectpack_8h_1a5a8223866c146933da3e152066bf61a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="imstb__rectpack_8h_1a0b73f2d2521fb81afc056a823e3ca753" kindref="member">STBRP_DEF</ref> void</type>
        <definition>STBRP_DEF void stbrp_setup_heuristic</definition>
        <argsstring>(stbrp_context *context, int heuristic)</argsstring>
        <name>stbrp_setup_heuristic</name>
        <param>
          <type><ref refid="structstbrp__context" kindref="compound">stbrp_context</ref> *</type>
          <declname>context</declname>
        </param>
        <param>
          <type>int</type>
          <declname>heuristic</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imstb_rectpack.h" line="161" column="16" declfile="graphics/imgui/imstb_rectpack.h" declline="161" declcolumn="16"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>[DEAR<sp/>IMGUI]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>a<sp/>slightly<sp/>modified<sp/>version<sp/>of<sp/>stb_rect_pack.h<sp/>1.01.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Grep<sp/>for<sp/>[DEAR<sp/>IMGUI]<sp/>to<sp/>find<sp/>the<sp/>changes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>stb_rect_pack.h<sp/>-<sp/>v1.01<sp/>-<sp/>public<sp/>domain<sp/>-<sp/>rectangle<sp/>packing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Sean<sp/>Barrett<sp/>2014</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Useful<sp/>for<sp/>e.g.<sp/>packing<sp/>rectangular<sp/>textures<sp/>into<sp/>an<sp/>atlas.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Does<sp/>not<sp/>do<sp/>rotation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Before<sp/>#including,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>#define<sp/>STB_RECT_PACK_IMPLEMENTATION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>in<sp/>the<sp/>file<sp/>that<sp/>you<sp/>want<sp/>to<sp/>have<sp/>the<sp/>implementation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Not<sp/>necessarily<sp/>the<sp/>awesomest<sp/>packing<sp/>method,<sp/>but<sp/>better<sp/>than</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>totally<sp/>naive<sp/>one<sp/>in<sp/>stb_truetype<sp/>(which<sp/>is<sp/>primarily<sp/>what</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>meant<sp/>to<sp/>replace).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Has<sp/>only<sp/>had<sp/>a<sp/>few<sp/>tests<sp/>run,<sp/>may<sp/>have<sp/>issues.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>More<sp/>docs<sp/>to<sp/>come.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/>No<sp/>memory<sp/>allocations;<sp/>uses<sp/>qsort()<sp/>and<sp/>assert()<sp/>from<sp/>stdlib.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Can<sp/>override<sp/>those<sp/>by<sp/>defining<sp/>STBRP_SORT<sp/>and<sp/>STBRP_ASSERT.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>library<sp/>currently<sp/>uses<sp/>the<sp/>Skyline<sp/>Bottom-Left<sp/>algorithm.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Please<sp/>note:<sp/>better<sp/>rectangle<sp/>packers<sp/>are<sp/>welcome!<sp/>Please</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//<sp/>implement<sp/>them<sp/>to<sp/>the<sp/>same<sp/>API,<sp/>but<sp/>with<sp/>a<sp/>different<sp/>init</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//<sp/>function.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Credits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Library</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>Sean<sp/>Barrett</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Minor<sp/>features</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>Martins<sp/>Mozeiko</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>github:IntellectualKitty</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Bugfixes<sp/>/<sp/>warning<sp/>fixes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>Jeremy<sp/>Jaussaud</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>Fabian<sp/>Giesen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Version<sp/>history:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>1.01<sp/><sp/>(2021-07-11)<sp/><sp/>always<sp/>use<sp/>large<sp/>rect<sp/>mode,<sp/>expose<sp/>STBRP__MAXVAL<sp/>in<sp/>public<sp/>section</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>1.00<sp/><sp/>(2019-02-25)<sp/><sp/>avoid<sp/>small<sp/>space<sp/>waste;<sp/>gracefully<sp/>fail<sp/>too-wide<sp/>rectangles</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>0.99<sp/><sp/>(2019-02-07)<sp/><sp/>warning<sp/>fixes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>0.11<sp/><sp/>(2017-03-03)<sp/><sp/>return<sp/>packing<sp/>success/fail<sp/>result</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>0.10<sp/><sp/>(2016-10-25)<sp/><sp/>remove<sp/>cast-away-const<sp/>to<sp/>avoid<sp/>warnings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>0.09<sp/><sp/>(2016-08-27)<sp/><sp/>fix<sp/>compiler<sp/>warnings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>0.08<sp/><sp/>(2015-09-13)<sp/><sp/>really<sp/>fix<sp/>bug<sp/>with<sp/>empty<sp/>rects<sp/>(w=0<sp/>or<sp/>h=0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>0.07<sp/><sp/>(2015-09-13)<sp/><sp/>fix<sp/>bug<sp/>with<sp/>empty<sp/>rects<sp/>(w=0<sp/>or<sp/>h=0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>0.06<sp/><sp/>(2015-04-15)<sp/><sp/>added<sp/>STBRP_SORT<sp/>to<sp/>allow<sp/>replacing<sp/>qsort</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>0.05:<sp/><sp/>added<sp/>STBRP_ASSERT<sp/>to<sp/>allow<sp/>replacing<sp/>assert</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>0.04:<sp/><sp/>fixed<sp/>minor<sp/>bug<sp/>in<sp/>STBRP_LARGE_RECTS<sp/>support</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>0.01:<sp/><sp/>initial<sp/>release</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LICENSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>See<sp/>end<sp/>of<sp/>file<sp/>for<sp/>license<sp/>information.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>INCLUDE<sp/>SECTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>STB_INCLUDE_STB_RECT_PACK_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STB_INCLUDE_STB_RECT_PACK_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="imstb__rectpack_8h_1af2f15dfcc6ad60b1df4f5902e2cc25ce" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STB_RECT_PACK_VERSION<sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>STBRP_STATIC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBRP_DEF<sp/>static</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="imstb__rectpack_8h_1a0b73f2d2521fb81afc056a823e3ca753" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBRP_DEF<sp/>extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85" refid="imstb__rectpack_8h_1a0455046a8d5457bbc4f3f3ec995c338f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structstbrp__context" kindref="compound">stbrp_context</ref><sp/><ref refid="structstbrp__context" kindref="compound">stbrp_context</ref>;</highlight></codeline>
<codeline lineno="86" refid="imstb__rectpack_8h_1ae8f871c209d2e6218baf9c0e2a209ea1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structstbrp__node" kindref="compound">stbrp_node</ref><sp/><sp/><sp/><sp/><ref refid="structstbrp__node" kindref="compound">stbrp_node</ref>;</highlight></codeline>
<codeline lineno="87" refid="imstb__rectpack_8h_1a7c4a99b31ea2207a0b2bbcbdab8f3840" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structstbrp__rect" kindref="compound">stbrp_rect</ref><sp/><sp/><sp/><sp/><ref refid="structstbrp__rect" kindref="compound">stbrp_rect</ref>;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89" refid="imstb__rectpack_8h_1a4a396a45893c12de32e2d598abd6b302" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imstb__rectpack_8h_1a4a396a45893c12de32e2d598abd6b302" kindref="member">stbrp_coord</ref>;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="imstb__rectpack_8h_1a114ed17dfa71ac93774494ab6d14bfbc" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBRP__MAXVAL<sp/><sp/>0x7fffffff</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Mostly<sp/>for<sp/>internal<sp/>use,<sp/>but<sp/>this<sp/>is<sp/>the<sp/>maximum<sp/>supported<sp/>coordinate<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94" refid="imstb__rectpack_8h_1af038ae1b98573f24736c9a3eed0478ba" refkind="member"><highlight class="normal"><ref refid="imstb__rectpack_8h_1a0b73f2d2521fb81afc056a823e3ca753" kindref="member">STBRP_DEF</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="imstb__rectpack_8h_1af038ae1b98573f24736c9a3eed0478ba" kindref="member">stbrp_pack_rects</ref><sp/>(<ref refid="structstbrp__context" kindref="compound">stbrp_context</ref><sp/>*context,<sp/><ref refid="structstbrp__rect" kindref="compound">stbrp_rect</ref><sp/>*rects,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_rects);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Assign<sp/>packed<sp/>locations<sp/>to<sp/>rectangles.<sp/>The<sp/>rectangles<sp/>are<sp/>of<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&apos;stbrp_rect&apos;<sp/>defined<sp/>below,<sp/>stored<sp/>in<sp/>the<sp/>array<sp/>&apos;rects&apos;,<sp/>and<sp/>there</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="comment">//<sp/>are<sp/>&apos;num_rects&apos;<sp/>many<sp/>of<sp/>them.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Rectangles<sp/>which<sp/>are<sp/>successfully<sp/>packed<sp/>have<sp/>the<sp/>&apos;was_packed&apos;<sp/>flag</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="comment">//<sp/>set<sp/>to<sp/>a<sp/>non-zero<sp/>value<sp/>and<sp/>&apos;x&apos;<sp/>and<sp/>&apos;y&apos;<sp/>store<sp/>the<sp/>minimum<sp/>location</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="comment">//<sp/>on<sp/>each<sp/>axis<sp/>(i.e.<sp/>bottom-left<sp/>in<sp/>cartesian<sp/>coordinates,<sp/>top-left</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="comment">//<sp/>if<sp/>you<sp/>imagine<sp/>y<sp/>increasing<sp/>downwards).<sp/>Rectangles<sp/>which<sp/>do<sp/>not<sp/>fit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="comment">//<sp/>have<sp/>the<sp/>&apos;was_packed&apos;<sp/>flag<sp/>set<sp/>to<sp/>0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>should<sp/>not<sp/>try<sp/>to<sp/>access<sp/>the<sp/>&apos;rects&apos;<sp/>array<sp/>from<sp/>another<sp/>thread</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="comment">//<sp/>while<sp/>this<sp/>function<sp/>is<sp/>running,<sp/>as<sp/>the<sp/>function<sp/>temporarily<sp/>reorders</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>array<sp/>while<sp/>it<sp/>executes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="comment">//<sp/>To<sp/>pack<sp/>into<sp/>another<sp/>rectangle,<sp/>you<sp/>need<sp/>to<sp/>call<sp/>stbrp_init_target</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="comment">//<sp/>again.<sp/>To<sp/>continue<sp/>packing<sp/>into<sp/>the<sp/>same<sp/>rectangle,<sp/>you<sp/>can<sp/>call</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="comment">//<sp/>this<sp/>function<sp/>again.<sp/>Calling<sp/>this<sp/>multiple<sp/>times<sp/>with<sp/>multiple<sp/>rect</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="comment">//<sp/>arrays<sp/>will<sp/>probably<sp/>produce<sp/>worse<sp/>packing<sp/>results<sp/>than<sp/>calling<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="comment">//<sp/>a<sp/>single<sp/>time<sp/>with<sp/>the<sp/>full<sp/>rectangle<sp/>array,<sp/>but<sp/>the<sp/>option<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="comment">//<sp/>available.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>function<sp/>returns<sp/>1<sp/>if<sp/>all<sp/>of<sp/>the<sp/>rectangles<sp/>were<sp/>successfully</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="comment">//<sp/>packed<sp/>and<sp/>0<sp/>otherwise.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119" refid="structstbrp__rect" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structstbrp__rect" kindref="compound">stbrp_rect</ref></highlight></codeline>
<codeline lineno="120"><highlight class="normal">{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>reserved<sp/>for<sp/>your<sp/>use:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122" refid="structstbrp__rect_1a92da8626bc99df041c0c3bfd01c25f7a" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structstbrp__rect_1a92da8626bc99df041c0c3bfd01c25f7a" kindref="member">id</ref>;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>input:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125" refid="structstbrp__rect_1af68de2dadc7972b7c089d5e0c0558398" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="imstb__rectpack_8h_1a4a396a45893c12de32e2d598abd6b302" kindref="member">stbrp_coord</ref><sp/><sp/><sp/><sp/><ref refid="structstbrp__rect_1a248d43f1eb979c1e7b92ba6df431dec5" kindref="member">w</ref>,<sp/><ref refid="structstbrp__rect_1af68de2dadc7972b7c089d5e0c0558398" kindref="member">h</ref>;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>output:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128" refid="structstbrp__rect_1a4cc623a3e29f0bc0d3375f6645c84d18" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="imstb__rectpack_8h_1a4a396a45893c12de32e2d598abd6b302" kindref="member">stbrp_coord</ref><sp/><sp/><sp/><sp/><ref refid="structstbrp__rect_1a4cc623a3e29f0bc0d3375f6645c84d18" kindref="member">x</ref>,<sp/><ref refid="structstbrp__rect_1ae3034c1fbf86043b568f5a4dddf946fa" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="129" refid="structstbrp__rect_1a74ba347755ce17f2f8a2ea66c612af49" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structstbrp__rect_1a74ba347755ce17f2f8a2ea66c612af49" kindref="member">was_packed</ref>;<sp/><sp/></highlight><highlight class="comment">//<sp/>non-zero<sp/>if<sp/>valid<sp/>packing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal">};<sp/></highlight><highlight class="comment">//<sp/>16<sp/>bytes,<sp/>nominally</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134" refid="imstb__rectpack_8h_1a8b32f5ad458f614f5d419ef26cef5b3c" refkind="member"><highlight class="normal"><ref refid="imstb__rectpack_8h_1a0b73f2d2521fb81afc056a823e3ca753" kindref="member">STBRP_DEF</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="imstb__rectpack_8h_1a8b32f5ad458f614f5d419ef26cef5b3c" kindref="member">stbrp_init_target</ref><sp/>(<ref refid="structstbrp__context" kindref="compound">stbrp_context</ref><sp/>*context,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height,<sp/><ref refid="structstbrp__node" kindref="compound">stbrp_node</ref><sp/>*nodes,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_nodes);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Initialize<sp/>a<sp/>rectangle<sp/>packer<sp/>to:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>pack<sp/>a<sp/>rectangle<sp/>that<sp/>is<sp/>&apos;width&apos;<sp/>by<sp/>&apos;height&apos;<sp/>in<sp/>dimensions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>using<sp/>temporary<sp/>storage<sp/>provided<sp/>by<sp/>the<sp/>array<sp/>&apos;nodes&apos;,<sp/>which<sp/>is<sp/>&apos;num_nodes&apos;<sp/>long</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>must<sp/>call<sp/>this<sp/>function<sp/>every<sp/>time<sp/>you<sp/>start<sp/>packing<sp/>into<sp/>a<sp/>new<sp/>target.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="comment">//<sp/>There<sp/>is<sp/>no<sp/>&quot;shutdown&quot;<sp/>function.<sp/>The<sp/>&apos;nodes&apos;<sp/>memory<sp/>must<sp/>stay<sp/>valid<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>following<sp/>stbrp_pack_rects()<sp/>call<sp/>(or<sp/>calls),<sp/>but<sp/>can<sp/>be<sp/>freed<sp/>after</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>call<sp/>(or<sp/>calls)<sp/>finish.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Note:<sp/>to<sp/>guarantee<sp/>best<sp/>results,<sp/>either:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>1.<sp/>make<sp/>sure<sp/>&apos;num_nodes&apos;<sp/>&gt;=<sp/>&apos;width&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>or<sp/><sp/>2.<sp/>call<sp/>stbrp_allow_out_of_mem()<sp/>defined<sp/>below<sp/>with<sp/>&apos;allow_out_of_mem<sp/>=<sp/>1&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>you<sp/>don&apos;t<sp/>do<sp/>either<sp/>of<sp/>the<sp/>above<sp/>things,<sp/>widths<sp/>will<sp/>be<sp/>quantized<sp/>to<sp/>multiples</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="comment">//<sp/>of<sp/>small<sp/>integers<sp/>to<sp/>guarantee<sp/>the<sp/>algorithm<sp/>doesn&apos;t<sp/>run<sp/>out<sp/>of<sp/>temporary<sp/>storage.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>you<sp/>do<sp/>#2,<sp/>then<sp/>the<sp/>non-quantized<sp/>algorithm<sp/>will<sp/>be<sp/>used,<sp/>but<sp/>the<sp/>algorithm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="comment">//<sp/>may<sp/>run<sp/>out<sp/>of<sp/>temporary<sp/>storage<sp/>and<sp/>be<sp/>unable<sp/>to<sp/>pack<sp/>some<sp/>rectangles.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155" refid="imstb__rectpack_8h_1a1babd70b223e571305fd9753a83a4fda" refkind="member"><highlight class="normal"><ref refid="imstb__rectpack_8h_1a0b73f2d2521fb81afc056a823e3ca753" kindref="member">STBRP_DEF</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="imstb__rectpack_8h_1a1babd70b223e571305fd9753a83a4fda" kindref="member">stbrp_setup_allow_out_of_mem</ref><sp/>(<ref refid="structstbrp__context" kindref="compound">stbrp_context</ref><sp/>*context,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>allow_out_of_mem);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Optionally<sp/>call<sp/>this<sp/>function<sp/>after<sp/>init<sp/>but<sp/>before<sp/>doing<sp/>any<sp/>packing<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="comment">//<sp/>change<sp/>the<sp/>handling<sp/>of<sp/>the<sp/>out-of-temp-memory<sp/>scenario,<sp/>described<sp/>above.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>you<sp/>call<sp/>init<sp/>again,<sp/>this<sp/>will<sp/>be<sp/>reset<sp/>to<sp/>the<sp/>default<sp/>(false).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161" refid="imstb__rectpack_8h_1a5a8223866c146933da3e152066bf61a1" refkind="member"><highlight class="normal"><ref refid="imstb__rectpack_8h_1a0b73f2d2521fb81afc056a823e3ca753" kindref="member">STBRP_DEF</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="imstb__rectpack_8h_1a5a8223866c146933da3e152066bf61a1" kindref="member">stbrp_setup_heuristic</ref><sp/>(<ref refid="structstbrp__context" kindref="compound">stbrp_context</ref><sp/>*context,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>heuristic);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Optionally<sp/>select<sp/>which<sp/>packing<sp/>heuristic<sp/>the<sp/>library<sp/>should<sp/>use.<sp/>Different</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="comment">//<sp/>heuristics<sp/>will<sp/>produce<sp/>better/worse<sp/>results<sp/>for<sp/>different<sp/>data<sp/>sets.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>you<sp/>call<sp/>init<sp/>again,<sp/>this<sp/>will<sp/>be<sp/>reset<sp/>to<sp/>the<sp/>default.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal">{</highlight></codeline>
<codeline lineno="168" refid="imstb__rectpack_8h_1ae41a58cfc9b24fd51205531c477941d8a5e4dd0b1cbee654bbfeebc5311f03525" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="imstb__rectpack_8h_1ae41a58cfc9b24fd51205531c477941d8a5e4dd0b1cbee654bbfeebc5311f03525" kindref="member">STBRP_HEURISTIC_Skyline_default</ref>=0,</highlight></codeline>
<codeline lineno="169" refid="imstb__rectpack_8h_1ae41a58cfc9b24fd51205531c477941d8a13530b067fb1f9707dc0f9d51f8b074a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="imstb__rectpack_8h_1ae41a58cfc9b24fd51205531c477941d8a13530b067fb1f9707dc0f9d51f8b074a" kindref="member">STBRP_HEURISTIC_Skyline_BL_sortHeight</ref><sp/>=<sp/><ref refid="imstb__rectpack_8h_1ae41a58cfc9b24fd51205531c477941d8a5e4dd0b1cbee654bbfeebc5311f03525" kindref="member">STBRP_HEURISTIC_Skyline_default</ref>,</highlight></codeline>
<codeline lineno="170" refid="imstb__rectpack_8h_1ae41a58cfc9b24fd51205531c477941d8a11d62749c4405a231a6fd1dd9d46615c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="imstb__rectpack_8h_1ae41a58cfc9b24fd51205531c477941d8a11d62749c4405a231a6fd1dd9d46615c" kindref="member">STBRP_HEURISTIC_Skyline_BF_sortHeight</ref></highlight></codeline>
<codeline lineno="171"><highlight class="normal">};</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>details<sp/>of<sp/>the<sp/>following<sp/>structures<sp/>don&apos;t<sp/>matter<sp/>to<sp/>you,<sp/>but<sp/>they<sp/>must</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="comment">//<sp/>be<sp/>visible<sp/>so<sp/>you<sp/>can<sp/>handle<sp/>the<sp/>memory<sp/>allocations<sp/>for<sp/>them</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179" refid="structstbrp__node" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structstbrp__node" kindref="compound">stbrp_node</ref></highlight></codeline>
<codeline lineno="180"><highlight class="normal">{</highlight></codeline>
<codeline lineno="181" refid="structstbrp__node_1a45ab31a88025db27d08040d715b129ea" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="imstb__rectpack_8h_1a4a396a45893c12de32e2d598abd6b302" kindref="member">stbrp_coord</ref><sp/><sp/><ref refid="structstbrp__node_1a45ab31a88025db27d08040d715b129ea" kindref="member">x</ref>,<ref refid="structstbrp__node_1ad0415cb102a4f37aa45073653307e67e" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="182" refid="structstbrp__node_1a933cb2dd6cddc4fcaf10e3b40634bed4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="structstbrp__node" kindref="compound">stbrp_node</ref><sp/><sp/>*<ref refid="structstbrp__node_1a933cb2dd6cddc4fcaf10e3b40634bed4" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="183"><highlight class="normal">};</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185" refid="structstbrp__context" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structstbrp__context" kindref="compound">stbrp_context</ref></highlight></codeline>
<codeline lineno="186"><highlight class="normal">{</highlight></codeline>
<codeline lineno="187" refid="structstbrp__context_1a70cfcb2044ce8397cc440d28b30c09b2" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structstbrp__context_1a70cfcb2044ce8397cc440d28b30c09b2" kindref="member">width</ref>;</highlight></codeline>
<codeline lineno="188" refid="structstbrp__context_1af3715a6f3faecfb4fac8f6ccbb71f9c7" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structstbrp__context_1af3715a6f3faecfb4fac8f6ccbb71f9c7" kindref="member">height</ref>;</highlight></codeline>
<codeline lineno="189" refid="structstbrp__context_1ae36053e2001a725aec2b5756dc990481" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structstbrp__context_1ae36053e2001a725aec2b5756dc990481" kindref="member">align</ref>;</highlight></codeline>
<codeline lineno="190" refid="structstbrp__context_1a007509feee322404083034e4c2d3dc5d" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structstbrp__context_1a007509feee322404083034e4c2d3dc5d" kindref="member">init_mode</ref>;</highlight></codeline>
<codeline lineno="191" refid="structstbrp__context_1a4b61a7f94e50a54c075e2a8f99f6503a" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structstbrp__context_1a4b61a7f94e50a54c075e2a8f99f6503a" kindref="member">heuristic</ref>;</highlight></codeline>
<codeline lineno="192" refid="structstbrp__context_1afa8105d4ef6d3e0ae5aaf8e1ed4b2c58" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structstbrp__context_1afa8105d4ef6d3e0ae5aaf8e1ed4b2c58" kindref="member">num_nodes</ref>;</highlight></codeline>
<codeline lineno="193" refid="structstbrp__context_1a13277239636803aff28f00b0a0376120" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="structstbrp__node" kindref="compound">stbrp_node</ref><sp/>*<ref refid="structstbrp__context_1a13277239636803aff28f00b0a0376120" kindref="member">active_head</ref>;</highlight></codeline>
<codeline lineno="194" refid="structstbrp__context_1a1336ae32373663847866cc65904c2839" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="structstbrp__node" kindref="compound">stbrp_node</ref><sp/>*<ref refid="structstbrp__context_1a1336ae32373663847866cc65904c2839" kindref="member">free_head</ref>;</highlight></codeline>
<codeline lineno="195" refid="structstbrp__context_1a0b80e1fbdac125427526f3500d4e7624" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="structstbrp__node" kindref="compound">stbrp_node</ref><sp/><ref refid="structstbrp__context_1a0b80e1fbdac125427526f3500d4e7624" kindref="member">extra</ref>[2];<sp/></highlight><highlight class="comment">//<sp/>we<sp/>allocate<sp/>two<sp/>extra<sp/>nodes<sp/>so<sp/>optimal<sp/>user-node-count<sp/>is<sp/>&apos;width&apos;<sp/>not<sp/>&apos;width+2&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal">};</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal">}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>IMPLEMENTATION<sp/>SECTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>STB_RECT_PACK_IMPLEMENTATION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>STBRP_SORT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBRP_SORT<sp/>qsort</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>STBRP_ASSERT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;assert.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBRP_ASSERT<sp/>assert</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_MSC_VER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBRP__NOTUSED(v)<sp/><sp/>(void)(v)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBRP__CDECL<sp/><sp/><sp/><sp/><sp/><sp/><sp/>__cdecl</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBRP__NOTUSED(v)<sp/><sp/>(void)sizeof(v)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBRP__CDECL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal">{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/>STBRP__INIT_skyline<sp/>=<sp/>1</highlight></codeline>
<codeline lineno="231"><highlight class="normal">};</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><ref refid="imstb__rectpack_8h_1a0b73f2d2521fb81afc056a823e3ca753" kindref="member">STBRP_DEF</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="imstb__rectpack_8h_1a5a8223866c146933da3e152066bf61a1" kindref="member">stbrp_setup_heuristic</ref>(<ref refid="structstbrp__context" kindref="compound">stbrp_context</ref><sp/>*context,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>heuristic)</highlight></codeline>
<codeline lineno="234"><highlight class="normal">{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(context-&gt;<ref refid="structstbrp__context_1a007509feee322404083034e4c2d3dc5d" kindref="member">init_mode</ref>)<sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>STBRP__INIT_skyline:</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imgui__draw_8cpp_1a9592e63d0df8b6f0712e8da3aea5db23" kindref="member">STBRP_ASSERT</ref>(heuristic<sp/>==<sp/><ref refid="imstb__rectpack_8h_1ae41a58cfc9b24fd51205531c477941d8a13530b067fb1f9707dc0f9d51f8b074a" kindref="member">STBRP_HEURISTIC_Skyline_BL_sortHeight</ref><sp/>||<sp/>heuristic<sp/>==<sp/><ref refid="imstb__rectpack_8h_1ae41a58cfc9b24fd51205531c477941d8a11d62749c4405a231a6fd1dd9d46615c" kindref="member">STBRP_HEURISTIC_Skyline_BF_sortHeight</ref>);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>context-&gt;<ref refid="structstbrp__context_1a4b61a7f94e50a54c075e2a8f99f6503a" kindref="member">heuristic</ref><sp/>=<sp/>heuristic;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imgui__draw_8cpp_1a9592e63d0df8b6f0712e8da3aea5db23" kindref="member">STBRP_ASSERT</ref>(0);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="243"><highlight class="normal">}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><ref refid="imstb__rectpack_8h_1a0b73f2d2521fb81afc056a823e3ca753" kindref="member">STBRP_DEF</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="imstb__rectpack_8h_1a1babd70b223e571305fd9753a83a4fda" kindref="member">stbrp_setup_allow_out_of_mem</ref>(<ref refid="structstbrp__context" kindref="compound">stbrp_context</ref><sp/>*context,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>allow_out_of_mem)</highlight></codeline>
<codeline lineno="246"><highlight class="normal">{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(allow_out_of_mem)</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>it&apos;s<sp/>ok<sp/>to<sp/>run<sp/>out<sp/>of<sp/>memory,<sp/>then<sp/>don&apos;t<sp/>bother<sp/>aligning<sp/>them;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>gives<sp/>better<sp/>packing,<sp/>but<sp/>may<sp/>fail<sp/>due<sp/>to<sp/>OOM<sp/>(even<sp/>though</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>rectangles<sp/>easily<sp/>fit).<sp/>@TODO<sp/>a<sp/>smarter<sp/>approach<sp/>would<sp/>be<sp/>to<sp/>only</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>quantize<sp/>once<sp/>we&apos;ve<sp/>hit<sp/>OOM,<sp/>then<sp/>we<sp/>could<sp/>get<sp/>rid<sp/>of<sp/>this<sp/>parameter.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>context-&gt;<ref refid="structstbrp__context_1ae36053e2001a725aec2b5756dc990481" kindref="member">align</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>it&apos;s<sp/>not<sp/>ok<sp/>to<sp/>run<sp/>out<sp/>of<sp/>memory,<sp/>then<sp/>quantize<sp/>the<sp/>widths</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>so<sp/>that<sp/>num_nodes<sp/>is<sp/>always<sp/>enough<sp/>nodes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>I.e.<sp/>num_nodes<sp/>*<sp/>align<sp/>&gt;=<sp/>width</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>align<sp/>&gt;=<sp/>width<sp/>/<sp/>num_nodes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>align<sp/>=<sp/>ceil(width/num_nodes)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>context-&gt;<ref refid="structstbrp__context_1ae36053e2001a725aec2b5756dc990481" kindref="member">align</ref><sp/>=<sp/>(context-&gt;<ref refid="structstbrp__context_1a70cfcb2044ce8397cc440d28b30c09b2" kindref="member">width</ref><sp/>+<sp/>context-&gt;<ref refid="structstbrp__context_1afa8105d4ef6d3e0ae5aaf8e1ed4b2c58" kindref="member">num_nodes</ref>-1)<sp/>/<sp/>context-&gt;<ref refid="structstbrp__context_1afa8105d4ef6d3e0ae5aaf8e1ed4b2c58" kindref="member">num_nodes</ref>;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="263"><highlight class="normal">}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><ref refid="imstb__rectpack_8h_1a0b73f2d2521fb81afc056a823e3ca753" kindref="member">STBRP_DEF</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="imstb__rectpack_8h_1a8b32f5ad458f614f5d419ef26cef5b3c" kindref="member">stbrp_init_target</ref>(<ref refid="structstbrp__context" kindref="compound">stbrp_context</ref><sp/>*context,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height,<sp/><ref refid="structstbrp__node" kindref="compound">stbrp_node</ref><sp/>*nodes,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_nodes)</highlight></codeline>
<codeline lineno="266"><highlight class="normal">{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>num_nodes-1;<sp/>++i)</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nodes[i].next<sp/>=<sp/>&amp;nodes[i+1];</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/>nodes[i].<ref refid="structstbrp__node_1a933cb2dd6cddc4fcaf10e3b40634bed4" kindref="member">next</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/>context-&gt;<ref refid="structstbrp__context_1a007509feee322404083034e4c2d3dc5d" kindref="member">init_mode</ref><sp/>=<sp/>STBRP__INIT_skyline;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/>context-&gt;<ref refid="structstbrp__context_1a4b61a7f94e50a54c075e2a8f99f6503a" kindref="member">heuristic</ref><sp/>=<sp/><ref refid="imstb__rectpack_8h_1ae41a58cfc9b24fd51205531c477941d8a5e4dd0b1cbee654bbfeebc5311f03525" kindref="member">STBRP_HEURISTIC_Skyline_default</ref>;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/>context-&gt;<ref refid="structstbrp__context_1a1336ae32373663847866cc65904c2839" kindref="member">free_head</ref><sp/>=<sp/>&amp;nodes[0];</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/>context-&gt;<ref refid="structstbrp__context_1a13277239636803aff28f00b0a0376120" kindref="member">active_head</ref><sp/>=<sp/>&amp;context-&gt;<ref refid="structstbrp__context_1a0b80e1fbdac125427526f3500d4e7624" kindref="member">extra</ref>[0];</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/>context-&gt;<ref refid="structstbrp__context_1a70cfcb2044ce8397cc440d28b30c09b2" kindref="member">width</ref><sp/>=<sp/>width;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/>context-&gt;<ref refid="structstbrp__context_1af3715a6f3faecfb4fac8f6ccbb71f9c7" kindref="member">height</ref><sp/>=<sp/>height;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/>context-&gt;<ref refid="structstbrp__context_1afa8105d4ef6d3e0ae5aaf8e1ed4b2c58" kindref="member">num_nodes</ref><sp/>=<sp/>num_nodes;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><ref refid="imstb__rectpack_8h_1a1babd70b223e571305fd9753a83a4fda" kindref="member">stbrp_setup_allow_out_of_mem</ref>(context,<sp/>0);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>node<sp/>0<sp/>is<sp/>the<sp/>full<sp/>width,<sp/>node<sp/>1<sp/>is<sp/>the<sp/>sentinel<sp/>(lets<sp/>us<sp/>not<sp/>store<sp/>width<sp/>explicitly)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/>context-&gt;<ref refid="structstbrp__context_1a0b80e1fbdac125427526f3500d4e7624" kindref="member">extra</ref>[0].<ref refid="structstbrp__node_1a45ab31a88025db27d08040d715b129ea" kindref="member">x</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/>context-&gt;<ref refid="structstbrp__context_1a0b80e1fbdac125427526f3500d4e7624" kindref="member">extra</ref>[0].<ref refid="structstbrp__node_1ad0415cb102a4f37aa45073653307e67e" kindref="member">y</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/>context-&gt;<ref refid="structstbrp__context_1a0b80e1fbdac125427526f3500d4e7624" kindref="member">extra</ref>[0].<ref refid="structstbrp__node_1a933cb2dd6cddc4fcaf10e3b40634bed4" kindref="member">next</ref><sp/>=<sp/>&amp;context-&gt;<ref refid="structstbrp__context_1a0b80e1fbdac125427526f3500d4e7624" kindref="member">extra</ref>[1];</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/>context-&gt;<ref refid="structstbrp__context_1a0b80e1fbdac125427526f3500d4e7624" kindref="member">extra</ref>[1].<ref refid="structstbrp__node_1a45ab31a88025db27d08040d715b129ea" kindref="member">x</ref><sp/>=<sp/>(<ref refid="imstb__rectpack_8h_1a4a396a45893c12de32e2d598abd6b302" kindref="member">stbrp_coord</ref>)<sp/>width;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/>context-&gt;<ref refid="structstbrp__context_1a0b80e1fbdac125427526f3500d4e7624" kindref="member">extra</ref>[1].<ref refid="structstbrp__node_1ad0415cb102a4f37aa45073653307e67e" kindref="member">y</ref><sp/>=<sp/>(1&lt;&lt;30);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/>context-&gt;<ref refid="structstbrp__context_1a0b80e1fbdac125427526f3500d4e7624" kindref="member">extra</ref>[1].<ref refid="structstbrp__node_1a933cb2dd6cddc4fcaf10e3b40634bed4" kindref="member">next</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="288"><highlight class="normal">}</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight><highlight class="comment">//<sp/>find<sp/>minimum<sp/>y<sp/>position<sp/>if<sp/>it<sp/>starts<sp/>at<sp/>x1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbrp__skyline_find_min_y(<ref refid="structstbrp__context" kindref="compound">stbrp_context</ref><sp/>*c,<sp/><ref refid="structstbrp__node" kindref="compound">stbrp_node</ref><sp/>*first,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*pwaste)</highlight></codeline>
<codeline lineno="292"><highlight class="normal">{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><ref refid="structstbrp__node" kindref="compound">stbrp_node</ref><sp/>*node<sp/>=<sp/>first;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x1<sp/>=<sp/>x0<sp/>+<sp/>width;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>min_y,<sp/>visited_width,<sp/>waste_area;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/>STBRP__NOTUSED(c);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><ref refid="imgui__draw_8cpp_1a9592e63d0df8b6f0712e8da3aea5db23" kindref="member">STBRP_ASSERT</ref>(first-&gt;<ref refid="structstbrp__node_1a45ab31a88025db27d08040d715b129ea" kindref="member">x</ref><sp/>&lt;=<sp/>x0);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>skip<sp/>in<sp/>case<sp/>we&apos;re<sp/>past<sp/>the<sp/>node</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(node-&gt;<ref refid="structstbrp__node_1a933cb2dd6cddc4fcaf10e3b40634bed4" kindref="member">next</ref>-&gt;<ref refid="structstbrp__node_1a45ab31a88025db27d08040d715b129ea" kindref="member">x</ref><sp/>&lt;=<sp/>x0)</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++node;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><ref refid="imgui__draw_8cpp_1a9592e63d0df8b6f0712e8da3aea5db23" kindref="member">STBRP_ASSERT</ref>(node-&gt;<ref refid="structstbrp__node_1a933cb2dd6cddc4fcaf10e3b40634bed4" kindref="member">next</ref>-&gt;<ref refid="structstbrp__node_1a45ab31a88025db27d08040d715b129ea" kindref="member">x</ref><sp/>&gt;<sp/>x0);<sp/></highlight><highlight class="comment">//<sp/>we<sp/>ended<sp/>up<sp/>handling<sp/>this<sp/>in<sp/>the<sp/>caller<sp/>for<sp/>efficiency</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><ref refid="imgui__draw_8cpp_1a9592e63d0df8b6f0712e8da3aea5db23" kindref="member">STBRP_ASSERT</ref>(node-&gt;<ref refid="structstbrp__node_1a45ab31a88025db27d08040d715b129ea" kindref="member">x</ref><sp/>&lt;=<sp/>x0);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/>min_y<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/>waste_area<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/>visited_width<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(node-&gt;<ref refid="structstbrp__node_1a45ab31a88025db27d08040d715b129ea" kindref="member">x</ref><sp/>&lt;<sp/>x1)<sp/>{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;<ref refid="structstbrp__node_1ad0415cb102a4f37aa45073653307e67e" kindref="member">y</ref><sp/>&gt;<sp/>min_y)<sp/>{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>raise<sp/>min_y<sp/>higher.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we&apos;ve<sp/>accounted<sp/>for<sp/>all<sp/>waste<sp/>up<sp/>to<sp/>min_y,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>we&apos;ll<sp/>now<sp/>add<sp/>more<sp/>waste<sp/>for<sp/>everything<sp/>we&apos;ve<sp/>visted</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>waste_area<sp/>+=<sp/>visited_width<sp/>*<sp/>(node-&gt;<ref refid="structstbrp__node_1ad0415cb102a4f37aa45073653307e67e" kindref="member">y</ref><sp/>-<sp/>min_y);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_y<sp/>=<sp/>node-&gt;<ref refid="structstbrp__node_1ad0415cb102a4f37aa45073653307e67e" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>first<sp/>time<sp/>through,<sp/>visited_width<sp/>might<sp/>be<sp/>reduced</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;<ref refid="structstbrp__node_1a45ab31a88025db27d08040d715b129ea" kindref="member">x</ref><sp/>&lt;<sp/>x0)</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>visited_width<sp/>+=<sp/>node-&gt;<ref refid="structstbrp__node_1a933cb2dd6cddc4fcaf10e3b40634bed4" kindref="member">next</ref>-&gt;<ref refid="structstbrp__node_1a45ab31a88025db27d08040d715b129ea" kindref="member">x</ref><sp/>-<sp/>x0;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>visited_width<sp/>+=<sp/>node-&gt;<ref refid="structstbrp__node_1a933cb2dd6cddc4fcaf10e3b40634bed4" kindref="member">next</ref>-&gt;<ref refid="structstbrp__node_1a45ab31a88025db27d08040d715b129ea" kindref="member">x</ref><sp/>-<sp/>node-&gt;<ref refid="structstbrp__node_1a45ab31a88025db27d08040d715b129ea" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>waste<sp/>area</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>under_width<sp/>=<sp/>node-&gt;<ref refid="structstbrp__node_1a933cb2dd6cddc4fcaf10e3b40634bed4" kindref="member">next</ref>-&gt;<ref refid="structstbrp__node_1a45ab31a88025db27d08040d715b129ea" kindref="member">x</ref><sp/>-<sp/>node-&gt;<ref refid="structstbrp__node_1a45ab31a88025db27d08040d715b129ea" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(under_width<sp/>+<sp/>visited_width<sp/>&gt;<sp/>width)</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>under_width<sp/>=<sp/>width<sp/>-<sp/>visited_width;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>waste_area<sp/>+=<sp/>under_width<sp/>*<sp/>(min_y<sp/>-<sp/>node-&gt;<ref refid="structstbrp__node_1ad0415cb102a4f37aa45073653307e67e" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>visited_width<sp/>+=<sp/>under_width;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>node<sp/>=<sp/>node-&gt;<ref refid="structstbrp__node_1a933cb2dd6cddc4fcaf10e3b40634bed4" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/>*pwaste<sp/>=<sp/>waste_area;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>min_y;</highlight></codeline>
<codeline lineno="339"><highlight class="normal">}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal">{</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,y;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><ref refid="structstbrp__node" kindref="compound">stbrp_node</ref><sp/>**prev_link;</highlight></codeline>
<codeline lineno="345"><highlight class="normal">}<sp/>stbrp__findresult;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>stbrp__findresult<sp/>stbrp__skyline_find_best_pos(<ref refid="structstbrp__context" kindref="compound">stbrp_context</ref><sp/>*c,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height)</highlight></codeline>
<codeline lineno="348"><highlight class="normal">{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>best_waste<sp/>=<sp/>(1&lt;&lt;30),<sp/>best_x,<sp/>best_y<sp/>=<sp/>(1<sp/>&lt;&lt;<sp/>30);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/>stbrp__findresult<sp/>fr;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><ref refid="structstbrp__node" kindref="compound">stbrp_node</ref><sp/>**prev,<sp/>*node,<sp/>*tail,<sp/>**best<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>align<sp/>to<sp/>multiple<sp/>of<sp/>c-&gt;align</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/>width<sp/>=<sp/>(width<sp/>+<sp/>c-&gt;<ref refid="structstbrp__context_1ae36053e2001a725aec2b5756dc990481" kindref="member">align</ref><sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/>width<sp/>-=<sp/>width<sp/>%<sp/>c-&gt;<ref refid="structstbrp__context_1ae36053e2001a725aec2b5756dc990481" kindref="member">align</ref>;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><ref refid="imgui__draw_8cpp_1a9592e63d0df8b6f0712e8da3aea5db23" kindref="member">STBRP_ASSERT</ref>(width<sp/>%<sp/>c-&gt;<ref refid="structstbrp__context_1ae36053e2001a725aec2b5756dc990481" kindref="member">align</ref><sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>it<sp/>can&apos;t<sp/>possibly<sp/>fit,<sp/>bail<sp/>immediately</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(width<sp/>&gt;<sp/>c-&gt;<ref refid="structstbrp__context_1a70cfcb2044ce8397cc440d28b30c09b2" kindref="member">width</ref><sp/>||<sp/>height<sp/>&gt;<sp/>c-&gt;<ref refid="structstbrp__context_1af3715a6f3faecfb4fac8f6ccbb71f9c7" kindref="member">height</ref>)<sp/>{</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fr.prev_link<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fr.x<sp/>=<sp/>fr.y<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fr;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/>node<sp/>=<sp/>c-&gt;<ref refid="structstbrp__context_1a13277239636803aff28f00b0a0376120" kindref="member">active_head</ref>;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/>prev<sp/>=<sp/>&amp;c-&gt;<ref refid="structstbrp__context_1a13277239636803aff28f00b0a0376120" kindref="member">active_head</ref>;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(node-&gt;<ref refid="structstbrp__node_1a45ab31a88025db27d08040d715b129ea" kindref="member">x</ref><sp/>+<sp/>width<sp/>&lt;=<sp/>c-&gt;width)<sp/>{</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,waste;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>stbrp__skyline_find_min_y(c,<sp/>node,<sp/>node-&gt;<ref refid="structstbrp__node_1a45ab31a88025db27d08040d715b129ea" kindref="member">x</ref>,<sp/>width,<sp/>&amp;waste);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c-&gt;<ref refid="structstbrp__context_1a4b61a7f94e50a54c075e2a8f99f6503a" kindref="member">heuristic</ref><sp/>==<sp/><ref refid="imstb__rectpack_8h_1ae41a58cfc9b24fd51205531c477941d8a13530b067fb1f9707dc0f9d51f8b074a" kindref="member">STBRP_HEURISTIC_Skyline_BL_sortHeight</ref>)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>actually<sp/>just<sp/>want<sp/>to<sp/>test<sp/>BL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bottom<sp/>left</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y<sp/>&lt;<sp/>best_y)<sp/>{</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best_y<sp/>=<sp/>y;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best<sp/>=<sp/>prev;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>best-fit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y<sp/>+<sp/>height<sp/>&lt;=<sp/>c-&gt;height)<sp/>{</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>can<sp/>only<sp/>use<sp/>it<sp/>if<sp/>it<sp/>first<sp/>vertically</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y<sp/>&lt;<sp/>best_y<sp/>||<sp/>(y<sp/>==<sp/>best_y<sp/>&amp;&amp;<sp/>waste<sp/>&lt;<sp/>best_waste))<sp/>{</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best_y<sp/>=<sp/>y;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best_waste<sp/>=<sp/>waste;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best<sp/>=<sp/>prev;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>prev<sp/>=<sp/>&amp;node-&gt;<ref refid="structstbrp__node_1a933cb2dd6cddc4fcaf10e3b40634bed4" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>node<sp/>=<sp/>node-&gt;<ref refid="structstbrp__node_1a933cb2dd6cddc4fcaf10e3b40634bed4" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/>best_x<sp/>=<sp/>(best<sp/>==<sp/>NULL)<sp/>?<sp/>0<sp/>:<sp/>(*best)-&gt;x;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>doing<sp/>best-fit<sp/>(BF),<sp/>we<sp/>also<sp/>have<sp/>to<sp/>try<sp/>aligning<sp/>right<sp/>edge<sp/>to<sp/>each<sp/>node<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>e.g,<sp/>if<sp/>fitting</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>____________________</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>|____________________|</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>into</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>____________|</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>|____________|</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>then<sp/>right-aligned<sp/>reduces<sp/>waste,<sp/>but<sp/>bottom-left<sp/>BL<sp/>is<sp/>always<sp/>chooses<sp/>left-aligned</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>makes<sp/>BF<sp/>take<sp/>about<sp/>2x<sp/>the<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c-&gt;<ref refid="structstbrp__context_1a4b61a7f94e50a54c075e2a8f99f6503a" kindref="member">heuristic</ref><sp/>==<sp/><ref refid="imstb__rectpack_8h_1ae41a58cfc9b24fd51205531c477941d8a11d62749c4405a231a6fd1dd9d46615c" kindref="member">STBRP_HEURISTIC_Skyline_BF_sortHeight</ref>)<sp/>{</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tail<sp/>=<sp/>c-&gt;active_head;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>node<sp/>=<sp/>c-&gt;active_head;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>prev<sp/>=<sp/>&amp;c-&gt;active_head;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>find<sp/>first<sp/>node<sp/>that&apos;s<sp/>admissible</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>while<sp/>(tail-&gt;x<sp/>&lt;<sp/>width)</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tail<sp/>=<sp/>tail-&gt;next;</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>while<sp/>(tail)<sp/>{</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>xpos<sp/>=<sp/>tail-&gt;x<sp/>-<sp/>width;</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>y,waste;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STBRP_ASSERT(xpos<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>find<sp/>the<sp/>left<sp/>position<sp/>that<sp/>matches<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>while<sp/>(node-&gt;next-&gt;x<sp/>&lt;=<sp/>xpos)<sp/>{</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prev<sp/>=<sp/>&amp;node-&gt;next;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node<sp/>=<sp/>node-&gt;next;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STBRP_ASSERT(node-&gt;next-&gt;x<sp/>&gt;<sp/>xpos<sp/>&amp;&amp;<sp/>node-&gt;x<sp/>&lt;=<sp/>xpos);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>stbrp__skyline_find_min_y(c,<sp/>node,<sp/>xpos,<sp/>width,<sp/>&amp;waste);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(y<sp/>+<sp/>height<sp/>&lt;=<sp/>c-&gt;height)<sp/>{</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(y<sp/>&lt;=<sp/>best_y)<sp/>{</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(y<sp/>&lt;<sp/>best_y<sp/>||<sp/>waste<sp/>&lt;<sp/>best_waste<sp/>||<sp/>(waste==best_waste<sp/>&amp;&amp;<sp/>xpos<sp/>&lt;<sp/>best_x))<sp/>{</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best_x<sp/>=<sp/>xpos;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//STBRP_ASSERT(y<sp/>&lt;=<sp/>best_y);<sp/>[DEAR<sp/>IMGUI]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best_y<sp/>=<sp/>y;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best_waste<sp/>=<sp/>waste;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best<sp/>=<sp/>prev;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tail<sp/>=<sp/>tail-&gt;next;</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/>fr.prev_link<sp/>=<sp/>best;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/>fr.<ref refid="structstbrp__node_1a45ab31a88025db27d08040d715b129ea" kindref="member">x</ref><sp/>=<sp/>best_x;</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/>fr.y<sp/>=<sp/>best_y;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fr;</highlight></codeline>
<codeline lineno="447"><highlight class="normal">}</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>stbrp__findresult<sp/>stbrp__skyline_pack_rectangle(<ref refid="structstbrp__context" kindref="compound">stbrp_context</ref><sp/>*context,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height)</highlight></codeline>
<codeline lineno="450"><highlight class="normal">{</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>find<sp/>best<sp/>position<sp/>according<sp/>to<sp/>heuristic</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/>stbrp__findresult<sp/>res<sp/>=<sp/>stbrp__skyline_find_best_pos(context,<sp/>width,<sp/>height);</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><ref refid="structstbrp__node" kindref="compound">stbrp_node</ref><sp/>*node,<sp/>*cur;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bail<sp/>if:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>1.<sp/>it<sp/>failed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>2.<sp/>the<sp/>best<sp/>node<sp/>doesn&apos;t<sp/>fit<sp/>(we<sp/>don&apos;t<sp/>always<sp/>check<sp/>this)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>3.<sp/>we&apos;re<sp/>out<sp/>of<sp/>memory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res.prev_link<sp/>==<sp/>NULL<sp/>||<sp/>res.y<sp/>+<sp/>height<sp/>&gt;<sp/>context-&gt;<ref refid="structstbrp__context_1af3715a6f3faecfb4fac8f6ccbb71f9c7" kindref="member">height</ref><sp/>||<sp/>context-&gt;<ref refid="structstbrp__context_1a1336ae32373663847866cc65904c2839" kindref="member">free_head</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>res.prev_link<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>on<sp/>success,<sp/>create<sp/>new<sp/>node</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/>node<sp/>=<sp/>context-&gt;<ref refid="structstbrp__context_1a1336ae32373663847866cc65904c2839" kindref="member">free_head</ref>;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/>node-&gt;<ref refid="structstbrp__node_1a45ab31a88025db27d08040d715b129ea" kindref="member">x</ref><sp/>=<sp/>(<ref refid="imstb__rectpack_8h_1a4a396a45893c12de32e2d598abd6b302" kindref="member">stbrp_coord</ref>)<sp/>res.x;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/>node-&gt;<ref refid="structstbrp__node_1ad0415cb102a4f37aa45073653307e67e" kindref="member">y</ref><sp/>=<sp/>(<ref refid="imstb__rectpack_8h_1a4a396a45893c12de32e2d598abd6b302" kindref="member">stbrp_coord</ref>)<sp/>(res.y<sp/>+<sp/>height);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/>context-&gt;<ref refid="structstbrp__context_1a1336ae32373663847866cc65904c2839" kindref="member">free_head</ref><sp/>=<sp/>node-&gt;<ref refid="structstbrp__node_1a933cb2dd6cddc4fcaf10e3b40634bed4" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>insert<sp/>the<sp/>new<sp/>node<sp/>into<sp/>the<sp/>right<sp/>starting<sp/>point,<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>let<sp/>&apos;cur&apos;<sp/>point<sp/>to<sp/>the<sp/>remaining<sp/>nodes<sp/>needing<sp/>to<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>stiched<sp/>back<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/>cur<sp/>=<sp/>*res.prev_link;</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cur-&gt;<ref refid="structstbrp__node_1a45ab31a88025db27d08040d715b129ea" kindref="member">x</ref><sp/>&lt;<sp/>res.x)<sp/>{</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>preserve<sp/>the<sp/>existing<sp/>one,<sp/>so<sp/>start<sp/>testing<sp/>with<sp/>the<sp/>next<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structstbrp__node" kindref="compound">stbrp_node</ref><sp/>*next<sp/>=<sp/>cur-&gt;<ref refid="structstbrp__node_1a933cb2dd6cddc4fcaf10e3b40634bed4" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cur-&gt;<ref refid="structstbrp__node_1a933cb2dd6cddc4fcaf10e3b40634bed4" kindref="member">next</ref><sp/>=<sp/>node;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cur<sp/>=<sp/>next;</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*res.prev_link<sp/>=<sp/>node;</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>from<sp/>here,<sp/>traverse<sp/>cur<sp/>and<sp/>free<sp/>the<sp/>nodes,<sp/>until<sp/>we<sp/>get<sp/>to<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>that<sp/>shouldn&apos;t<sp/>be<sp/>freed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(cur-&gt;<ref refid="structstbrp__node_1a933cb2dd6cddc4fcaf10e3b40634bed4" kindref="member">next</ref><sp/>&amp;&amp;<sp/>cur-&gt;<ref refid="structstbrp__node_1a933cb2dd6cddc4fcaf10e3b40634bed4" kindref="member">next</ref>-&gt;<ref refid="structstbrp__node_1a45ab31a88025db27d08040d715b129ea" kindref="member">x</ref><sp/>&lt;=<sp/>res.x<sp/>+<sp/>width)<sp/>{</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structstbrp__node" kindref="compound">stbrp_node</ref><sp/>*next<sp/>=<sp/>cur-&gt;<ref refid="structstbrp__node_1a933cb2dd6cddc4fcaf10e3b40634bed4" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>move<sp/>the<sp/>current<sp/>node<sp/>to<sp/>the<sp/>free<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cur-&gt;<ref refid="structstbrp__node_1a933cb2dd6cddc4fcaf10e3b40634bed4" kindref="member">next</ref><sp/>=<sp/>context-&gt;<ref refid="structstbrp__context_1a1336ae32373663847866cc65904c2839" kindref="member">free_head</ref>;</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>context-&gt;<ref refid="structstbrp__context_1a1336ae32373663847866cc65904c2839" kindref="member">free_head</ref><sp/>=<sp/>cur;</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cur<sp/>=<sp/>next;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>stitch<sp/>the<sp/>list<sp/>back<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/>node-&gt;<ref refid="structstbrp__node_1a933cb2dd6cddc4fcaf10e3b40634bed4" kindref="member">next</ref><sp/>=<sp/>cur;</highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cur-&gt;<ref refid="structstbrp__node_1a45ab31a88025db27d08040d715b129ea" kindref="member">x</ref><sp/>&lt;<sp/>res.x<sp/>+<sp/>width)</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cur-&gt;<ref refid="structstbrp__node_1a45ab31a88025db27d08040d715b129ea" kindref="member">x</ref><sp/>=<sp/>(<ref refid="imstb__rectpack_8h_1a4a396a45893c12de32e2d598abd6b302" kindref="member">stbrp_coord</ref>)<sp/>(res.x<sp/>+<sp/>width);</highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/>cur<sp/>=<sp/>context-&gt;<ref refid="structstbrp__context_1a13277239636803aff28f00b0a0376120" kindref="member">active_head</ref>;</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(cur-&gt;<ref refid="structstbrp__node_1a45ab31a88025db27d08040d715b129ea" kindref="member">x</ref><sp/>&lt;<sp/>context-&gt;<ref refid="structstbrp__context_1a70cfcb2044ce8397cc440d28b30c09b2" kindref="member">width</ref>)<sp/>{</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imgui__draw_8cpp_1a9592e63d0df8b6f0712e8da3aea5db23" kindref="member">STBRP_ASSERT</ref>(cur-&gt;<ref refid="structstbrp__node_1a45ab31a88025db27d08040d715b129ea" kindref="member">x</ref><sp/>&lt;<sp/>cur-&gt;<ref refid="structstbrp__node_1a933cb2dd6cddc4fcaf10e3b40634bed4" kindref="member">next</ref>-&gt;<ref refid="structstbrp__node_1a45ab31a88025db27d08040d715b129ea" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cur<sp/>=<sp/>cur-&gt;<ref refid="structstbrp__node_1a933cb2dd6cddc4fcaf10e3b40634bed4" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><ref refid="imgui__draw_8cpp_1a9592e63d0df8b6f0712e8da3aea5db23" kindref="member">STBRP_ASSERT</ref>(cur-&gt;<ref refid="structstbrp__node_1a933cb2dd6cddc4fcaf10e3b40634bed4" kindref="member">next</ref><sp/>==<sp/>NULL);</highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count=0;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cur<sp/>=<sp/>context-&gt;<ref refid="structstbrp__context_1a13277239636803aff28f00b0a0376120" kindref="member">active_head</ref>;</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(cur)<sp/>{</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cur<sp/>=<sp/>cur-&gt;<ref refid="structstbrp__node_1a933cb2dd6cddc4fcaf10e3b40634bed4" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++count;</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cur<sp/>=<sp/>context-&gt;<ref refid="structstbrp__context_1a1336ae32373663847866cc65904c2839" kindref="member">free_head</ref>;</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(cur)<sp/>{</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cur<sp/>=<sp/>cur-&gt;<ref refid="structstbrp__node_1a933cb2dd6cddc4fcaf10e3b40634bed4" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++count;</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imgui__draw_8cpp_1a9592e63d0df8b6f0712e8da3aea5db23" kindref="member">STBRP_ASSERT</ref>(count<sp/>==<sp/>context-&gt;<ref refid="structstbrp__context_1afa8105d4ef6d3e0ae5aaf8e1ed4b2c58" kindref="member">num_nodes</ref>+2);</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="526"><highlight class="normal">}</highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>STBRP__CDECL<sp/>rect_height_compare(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*b)</highlight></codeline>
<codeline lineno="529"><highlight class="normal">{</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structstbrp__rect" kindref="compound">stbrp_rect</ref><sp/>*p<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structstbrp__rect" kindref="compound">stbrp_rect</ref><sp/>*)<sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>;</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structstbrp__rect" kindref="compound">stbrp_rect</ref><sp/>*q<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structstbrp__rect" kindref="compound">stbrp_rect</ref><sp/>*)<sp/>b;</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p-&gt;<ref refid="structstbrp__rect_1af68de2dadc7972b7c089d5e0c0558398" kindref="member">h</ref><sp/>&gt;<sp/>q-&gt;<ref refid="structstbrp__rect_1af68de2dadc7972b7c089d5e0c0558398" kindref="member">h</ref>)</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p-&gt;<ref refid="structstbrp__rect_1af68de2dadc7972b7c089d5e0c0558398" kindref="member">h</ref><sp/>&lt;<sp/>q-&gt;<ref refid="structstbrp__rect_1af68de2dadc7972b7c089d5e0c0558398" kindref="member">h</ref>)</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/>1;</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(p-&gt;<ref refid="structstbrp__rect_1a248d43f1eb979c1e7b92ba6df431dec5" kindref="member">w</ref><sp/>&gt;<sp/>q-&gt;<ref refid="structstbrp__rect_1a248d43f1eb979c1e7b92ba6df431dec5" kindref="member">w</ref>)<sp/>?<sp/>-1<sp/>:<sp/>(p-&gt;<ref refid="structstbrp__rect_1a248d43f1eb979c1e7b92ba6df431dec5" kindref="member">w</ref><sp/>&lt;<sp/>q-&gt;<ref refid="structstbrp__rect_1a248d43f1eb979c1e7b92ba6df431dec5" kindref="member">w</ref>);</highlight></codeline>
<codeline lineno="537"><highlight class="normal">}</highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>STBRP__CDECL<sp/>rect_original_order(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*b)</highlight></codeline>
<codeline lineno="540"><highlight class="normal">{</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structstbrp__rect" kindref="compound">stbrp_rect</ref><sp/>*p<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structstbrp__rect" kindref="compound">stbrp_rect</ref><sp/>*)<sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>;</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structstbrp__rect" kindref="compound">stbrp_rect</ref><sp/>*q<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structstbrp__rect" kindref="compound">stbrp_rect</ref><sp/>*)<sp/>b;</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(p-&gt;<ref refid="structstbrp__rect_1a74ba347755ce17f2f8a2ea66c612af49" kindref="member">was_packed</ref><sp/>&lt;<sp/>q-&gt;<ref refid="structstbrp__rect_1a74ba347755ce17f2f8a2ea66c612af49" kindref="member">was_packed</ref>)<sp/>?<sp/>-1<sp/>:<sp/>(p-&gt;<ref refid="structstbrp__rect_1a74ba347755ce17f2f8a2ea66c612af49" kindref="member">was_packed</ref><sp/>&gt;<sp/>q-&gt;<ref refid="structstbrp__rect_1a74ba347755ce17f2f8a2ea66c612af49" kindref="member">was_packed</ref>);</highlight></codeline>
<codeline lineno="544"><highlight class="normal">}</highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><ref refid="imstb__rectpack_8h_1a0b73f2d2521fb81afc056a823e3ca753" kindref="member">STBRP_DEF</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="imstb__rectpack_8h_1af038ae1b98573f24736c9a3eed0478ba" kindref="member">stbrp_pack_rects</ref>(<ref refid="structstbrp__context" kindref="compound">stbrp_context</ref><sp/>*context,<sp/><ref refid="structstbrp__rect" kindref="compound">stbrp_rect</ref><sp/>*rects,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_rects)</highlight></codeline>
<codeline lineno="547"><highlight class="normal">{</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>all_rects_packed<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>use<sp/>the<sp/>&apos;was_packed&apos;<sp/>field<sp/>internally<sp/>to<sp/>allow<sp/>sorting/unsorting</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>num_rects;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rects[i].<ref refid="structstbrp__rect_1a74ba347755ce17f2f8a2ea66c612af49" kindref="member">was_packed</ref><sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sort<sp/>according<sp/>to<sp/>heuristic</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><ref refid="imgui__draw_8cpp_1a152aa757fb023d39f16dd537e66b60f0" kindref="member">STBRP_SORT</ref>(rects,<sp/>num_rects,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(rects[0]),<sp/>rect_height_compare);</highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>num_rects;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rects[i].w<sp/>==<sp/>0<sp/>||<sp/>rects[i].h<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rects[i].<ref refid="structstbrp__rect_1a4cc623a3e29f0bc0d3375f6645c84d18" kindref="member">x</ref><sp/>=<sp/>rects[i].<ref refid="structstbrp__rect_1ae3034c1fbf86043b568f5a4dddf946fa" kindref="member">y</ref><sp/>=<sp/>0;<sp/><sp/></highlight><highlight class="comment">//<sp/>empty<sp/>rect<sp/>needs<sp/>no<sp/>space</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbrp__findresult<sp/>fr<sp/>=<sp/>stbrp__skyline_pack_rectangle(context,<sp/>rects[i].w,<sp/>rects[i].h);</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fr.prev_link)<sp/>{</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rects[i].<ref refid="structstbrp__rect_1a4cc623a3e29f0bc0d3375f6645c84d18" kindref="member">x</ref><sp/>=<sp/>(<ref refid="imstb__rectpack_8h_1a4a396a45893c12de32e2d598abd6b302" kindref="member">stbrp_coord</ref>)<sp/>fr.x;</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rects[i].<ref refid="structstbrp__rect_1ae3034c1fbf86043b568f5a4dddf946fa" kindref="member">y</ref><sp/>=<sp/>(<ref refid="imstb__rectpack_8h_1a4a396a45893c12de32e2d598abd6b302" kindref="member">stbrp_coord</ref>)<sp/>fr.y;</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rects[i].<ref refid="structstbrp__rect_1a4cc623a3e29f0bc0d3375f6645c84d18" kindref="member">x</ref><sp/>=<sp/>rects[i].<ref refid="structstbrp__rect_1ae3034c1fbf86043b568f5a4dddf946fa" kindref="member">y</ref><sp/>=<sp/><ref refid="imstb__rectpack_8h_1a114ed17dfa71ac93774494ab6d14bfbc" kindref="member">STBRP__MAXVAL</ref>;</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>unsort</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><ref refid="imgui__draw_8cpp_1a152aa757fb023d39f16dd537e66b60f0" kindref="member">STBRP_SORT</ref>(rects,<sp/>num_rects,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(rects[0]),<sp/>rect_original_order);</highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>was_packed<sp/>flags<sp/>and<sp/>all_rects_packed<sp/>status</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>num_rects;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rects[i].<ref refid="structstbrp__rect_1a74ba347755ce17f2f8a2ea66c612af49" kindref="member">was_packed</ref><sp/>=<sp/>!(rects[i].<ref refid="structstbrp__rect_1a4cc623a3e29f0bc0d3375f6645c84d18" kindref="member">x</ref><sp/>==<sp/><ref refid="imstb__rectpack_8h_1a114ed17dfa71ac93774494ab6d14bfbc" kindref="member">STBRP__MAXVAL</ref><sp/>&amp;&amp;<sp/>rects[i].<ref refid="structstbrp__rect_1ae3034c1fbf86043b568f5a4dddf946fa" kindref="member">y</ref><sp/>==<sp/><ref refid="imstb__rectpack_8h_1a114ed17dfa71ac93774494ab6d14bfbc" kindref="member">STBRP__MAXVAL</ref>);</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!rects[i].was_packed)</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>all_rects_packed<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>the<sp/>all_rects_packed<sp/>status</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>all_rects_packed;</highlight></codeline>
<codeline lineno="584"><highlight class="normal">}</highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="588"><highlight class="comment">------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="589"><highlight class="comment">This<sp/>software<sp/>is<sp/>available<sp/>under<sp/>2<sp/>licenses<sp/>--<sp/>choose<sp/>whichever<sp/>you<sp/>prefer.</highlight></codeline>
<codeline lineno="590"><highlight class="comment">------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="591"><highlight class="comment">ALTERNATIVE<sp/>A<sp/>-<sp/>MIT<sp/>License</highlight></codeline>
<codeline lineno="592"><highlight class="comment">Copyright<sp/>(c)<sp/>2017<sp/>Sean<sp/>Barrett</highlight></codeline>
<codeline lineno="593"><highlight class="comment">Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining<sp/>a<sp/>copy<sp/>of</highlight></codeline>
<codeline lineno="594"><highlight class="comment">this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files<sp/>(the<sp/>&quot;Software&quot;),<sp/>to<sp/>deal<sp/>in</highlight></codeline>
<codeline lineno="595"><highlight class="comment">the<sp/>Software<sp/>without<sp/>restriction,<sp/>including<sp/>without<sp/>limitation<sp/>the<sp/>rights<sp/>to</highlight></codeline>
<codeline lineno="596"><highlight class="comment">use,<sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell<sp/>copies</highlight></codeline>
<codeline lineno="597"><highlight class="comment">of<sp/>the<sp/>Software,<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is<sp/>furnished<sp/>to<sp/>do</highlight></codeline>
<codeline lineno="598"><highlight class="comment">so,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline lineno="599"><highlight class="comment">The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be<sp/>included<sp/>in<sp/>all</highlight></codeline>
<codeline lineno="600"><highlight class="comment">copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight></codeline>
<codeline lineno="601"><highlight class="comment">THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,<sp/>EXPRESS<sp/>OR</highlight></codeline>
<codeline lineno="602"><highlight class="comment">IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY,</highlight></codeline>
<codeline lineno="603"><highlight class="comment">FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/>NONINFRINGEMENT.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE</highlight></codeline>
<codeline lineno="604"><highlight class="comment">AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER</highlight></codeline>
<codeline lineno="605"><highlight class="comment">LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,</highlight></codeline>
<codeline lineno="606"><highlight class="comment">OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE</highlight></codeline>
<codeline lineno="607"><highlight class="comment">SOFTWARE.</highlight></codeline>
<codeline lineno="608"><highlight class="comment">------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="609"><highlight class="comment">ALTERNATIVE<sp/>B<sp/>-<sp/>Public<sp/>Domain<sp/>(www.unlicense.org)</highlight></codeline>
<codeline lineno="610"><highlight class="comment">This<sp/>is<sp/>free<sp/>and<sp/>unencumbered<sp/>software<sp/>released<sp/>into<sp/>the<sp/>public<sp/>domain.</highlight></codeline>
<codeline lineno="611"><highlight class="comment">Anyone<sp/>is<sp/>free<sp/>to<sp/>copy,<sp/>modify,<sp/>publish,<sp/>use,<sp/>compile,<sp/>sell,<sp/>or<sp/>distribute<sp/>this</highlight></codeline>
<codeline lineno="612"><highlight class="comment">software,<sp/>either<sp/>in<sp/>source<sp/>code<sp/>form<sp/>or<sp/>as<sp/>a<sp/>compiled<sp/>binary,<sp/>for<sp/>any<sp/>purpose,</highlight></codeline>
<codeline lineno="613"><highlight class="comment">commercial<sp/>or<sp/>non-commercial,<sp/>and<sp/>by<sp/>any<sp/>means.</highlight></codeline>
<codeline lineno="614"><highlight class="comment">In<sp/>jurisdictions<sp/>that<sp/>recognize<sp/>copyright<sp/>laws,<sp/>the<sp/>author<sp/>or<sp/>authors<sp/>of<sp/>this</highlight></codeline>
<codeline lineno="615"><highlight class="comment">software<sp/>dedicate<sp/>any<sp/>and<sp/>all<sp/>copyright<sp/>interest<sp/>in<sp/>the<sp/>software<sp/>to<sp/>the<sp/>public</highlight></codeline>
<codeline lineno="616"><highlight class="comment">domain.<sp/>We<sp/>make<sp/>this<sp/>dedication<sp/>for<sp/>the<sp/>benefit<sp/>of<sp/>the<sp/>public<sp/>at<sp/>large<sp/>and<sp/>to</highlight></codeline>
<codeline lineno="617"><highlight class="comment">the<sp/>detriment<sp/>of<sp/>our<sp/>heirs<sp/>and<sp/>successors.<sp/>We<sp/>intend<sp/>this<sp/>dedication<sp/>to<sp/>be<sp/>an</highlight></codeline>
<codeline lineno="618"><highlight class="comment">overt<sp/>act<sp/>of<sp/>relinquishment<sp/>in<sp/>perpetuity<sp/>of<sp/>all<sp/>present<sp/>and<sp/>future<sp/>rights<sp/>to</highlight></codeline>
<codeline lineno="619"><highlight class="comment">this<sp/>software<sp/>under<sp/>copyright<sp/>law.</highlight></codeline>
<codeline lineno="620"><highlight class="comment">THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,<sp/>EXPRESS<sp/>OR</highlight></codeline>
<codeline lineno="621"><highlight class="comment">IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY,</highlight></codeline>
<codeline lineno="622"><highlight class="comment">FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/>NONINFRINGEMENT.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE</highlight></codeline>
<codeline lineno="623"><highlight class="comment">AUTHORS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN</highlight></codeline>
<codeline lineno="624"><highlight class="comment">ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,<sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION</highlight></codeline>
<codeline lineno="625"><highlight class="comment">WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="626"><highlight class="comment">------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="627"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="graphics/imgui/imstb_rectpack.h"/>
  </compounddef>
</doxygen>
