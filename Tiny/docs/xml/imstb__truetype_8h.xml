<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="imstb__truetype_8h" kind="file" language="C++">
    <compoundname>imstb_truetype.h</compoundname>
    <includedby refid="imgui__draw_8cpp" local="yes">graphics/imgui/imgui_draw.cpp</includedby>
    <invincdepgraph>
      <node id="2">
        <label>graphics/imgui/imgui_draw.cpp</label>
        <link refid="imgui__draw_8cpp"/>
      </node>
      <node id="1">
        <label>graphics/imgui/imstb_truetype.h</label>
        <link refid="imstb__truetype_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structstbtt____buf" prot="public">stbtt__buf</innerclass>
    <innerclass refid="structstbtt__bakedchar" prot="public">stbtt_bakedchar</innerclass>
    <innerclass refid="structstbtt__aligned__quad" prot="public">stbtt_aligned_quad</innerclass>
    <innerclass refid="structstbtt__packedchar" prot="public">stbtt_packedchar</innerclass>
    <innerclass refid="structstbtt__pack__range" prot="public">stbtt_pack_range</innerclass>
    <innerclass refid="structstbtt__pack__context" prot="public">stbtt_pack_context</innerclass>
    <innerclass refid="structstbtt__fontinfo" prot="public">stbtt_fontinfo</innerclass>
    <innerclass refid="structstbtt__kerningentry" prot="public">stbtt_kerningentry</innerclass>
    <innerclass refid="structstbtt__vertex" prot="public">stbtt_vertex</innerclass>
    <innerclass refid="structstbtt____bitmap" prot="public">stbtt__bitmap</innerclass>
    <sectiondef kind="define">
      <memberdef kind="define" id="imstb__truetype_8h_1a793c93dc8e39787cf5966bec548730d5" prot="public" static="no">
        <name>__STB_INCLUDE_STB_TRUETYPE_H__</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imstb_truetype.h" line="505" column="9" bodyfile="graphics/imgui/imstb_truetype.h" bodystart="505" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" prot="public" static="no">
        <name>STBTT_DEF</name>
        <initializer>extern</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imstb_truetype.h" line="510" column="10" bodyfile="graphics/imgui/imstb_truetype.h" bodystart="510" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imstb__truetype_8h_1a42c4058f71988e703efdf4703d5dfe31" prot="public" static="no">
        <name>STBTT_POINT_SIZE</name>
        <param><defname>x</defname></param>
        <initializer>(-(x))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imstb_truetype.h" line="607" column="9" bodyfile="graphics/imgui/imstb_truetype.h" bodystart="607" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imstb__truetype_8h_1ab8fd8e5e0b82b0f7da54532035e47b22" prot="public" static="no">
        <name>stbtt_vertex_type</name>
        <initializer>short</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imstb_truetype.h" line="839" column="12" bodyfile="graphics/imgui/imstb_truetype.h" bodystart="839" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imstb__truetype_8h_1ac914b70667c9abbe432dcc4c048e6542" prot="public" static="no">
        <name>STBTT_MACSTYLE_DONTCARE</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imstb_truetype.h" line="1031" column="9" bodyfile="graphics/imgui/imstb_truetype.h" bodystart="1031" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imstb__truetype_8h_1a3856cc4fbab4c126c2c438c6f567525d" prot="public" static="no">
        <name>STBTT_MACSTYLE_BOLD</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imstb_truetype.h" line="1032" column="9" bodyfile="graphics/imgui/imstb_truetype.h" bodystart="1032" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imstb__truetype_8h_1a95e8d57e767119c978652397df54afef" prot="public" static="no">
        <name>STBTT_MACSTYLE_ITALIC</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imstb_truetype.h" line="1033" column="9" bodyfile="graphics/imgui/imstb_truetype.h" bodystart="1033" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imstb__truetype_8h_1a9064e582d96dcbaf2f573896cccd5ef7" prot="public" static="no">
        <name>STBTT_MACSTYLE_UNDERSCORE</name>
        <initializer>4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imstb_truetype.h" line="1034" column="9" bodyfile="graphics/imgui/imstb_truetype.h" bodystart="1034" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imstb__truetype_8h_1accb2ecf3e0d840362ebba3fe3da192da" prot="public" static="no">
        <name>STBTT_MACSTYLE_NONE</name>
        <initializer>8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imstb_truetype.h" line="1035" column="9" bodyfile="graphics/imgui/imstb_truetype.h" bodystart="1035" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="enum">
      <memberdef kind="enum" id="imstb__truetype_8h_1a9dff5253600497fb00c1c785dd5a309d" prot="public" static="no" strong="no">
        <type></type>
        <name></name>
        <enumvalue id="imstb__truetype_8h_1a9dff5253600497fb00c1c785dd5a309dab335ba97e1798b621313de85a9a6e69d" prot="public">
          <name>STBTT_vmove</name>
          <initializer>=1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imstb__truetype_8h_1a9dff5253600497fb00c1c785dd5a309dade4bb6465c32e56588f35e5120769e2e" prot="public">
          <name>STBTT_vline</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imstb__truetype_8h_1a9dff5253600497fb00c1c785dd5a309dab9ac3e527ce18873abeab556f6768ce4" prot="public">
          <name>STBTT_vcurve</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imstb__truetype_8h_1a9dff5253600497fb00c1c785dd5a309dab6cd2670234c731eafba404d3a2470fd" prot="public">
          <name>STBTT_vcubic</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imstb_truetype.h" line="829" column="4" bodyfile="graphics/imgui/imstb_truetype.h" bodystart="829" bodyend="834"/>
      </memberdef>
      <memberdef kind="enum" id="imstb__truetype_8h_1a6ffa9624070bebdf0fe0f6321616f58a" prot="public" static="no" strong="no">
        <type></type>
        <name></name>
        <enumvalue id="imstb__truetype_8h_1a6ffa9624070bebdf0fe0f6321616f58aa7df9cd0e95e0b375d03348661b399b69" prot="public">
          <name>STBTT_PLATFORM_ID_UNICODE</name>
          <initializer>=0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imstb__truetype_8h_1a6ffa9624070bebdf0fe0f6321616f58aadc1a3ed4f2abe63dd4e91d789136db3f" prot="public">
          <name>STBTT_PLATFORM_ID_MAC</name>
          <initializer>=1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imstb__truetype_8h_1a6ffa9624070bebdf0fe0f6321616f58aacd63703eafd91118387dfb70b384132d" prot="public">
          <name>STBTT_PLATFORM_ID_ISO</name>
          <initializer>=2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imstb__truetype_8h_1a6ffa9624070bebdf0fe0f6321616f58aa86f00e4c49cfec574b34090faa47f878" prot="public">
          <name>STBTT_PLATFORM_ID_MICROSOFT</name>
          <initializer>=3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imstb_truetype.h" line="1049" column="1" bodyfile="graphics/imgui/imstb_truetype.h" bodystart="1049" bodyend="1054"/>
      </memberdef>
      <memberdef kind="enum" id="imstb__truetype_8h_1a14393b680e47e30e4ba45cead77dfe5f" prot="public" static="no" strong="no">
        <type></type>
        <name></name>
        <enumvalue id="imstb__truetype_8h_1a14393b680e47e30e4ba45cead77dfe5faeec1111b4adcd61a20a461138726fc46" prot="public">
          <name>STBTT_UNICODE_EID_UNICODE_1_0</name>
          <initializer>=0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imstb__truetype_8h_1a14393b680e47e30e4ba45cead77dfe5faa13de23938974ed5ed2039ad0c623901" prot="public">
          <name>STBTT_UNICODE_EID_UNICODE_1_1</name>
          <initializer>=1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imstb__truetype_8h_1a14393b680e47e30e4ba45cead77dfe5fa2803b7d7150216b6e67cdd2ef9e734b0" prot="public">
          <name>STBTT_UNICODE_EID_ISO_10646</name>
          <initializer>=2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imstb__truetype_8h_1a14393b680e47e30e4ba45cead77dfe5fa4ead513507e004e256fb772d7ee91f60" prot="public">
          <name>STBTT_UNICODE_EID_UNICODE_2_0_BMP</name>
          <initializer>=3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imstb__truetype_8h_1a14393b680e47e30e4ba45cead77dfe5fa95f85f02ffe39539e6b4032a3db58eed" prot="public">
          <name>STBTT_UNICODE_EID_UNICODE_2_0_FULL</name>
          <initializer>=4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imstb_truetype.h" line="1056" column="1" bodyfile="graphics/imgui/imstb_truetype.h" bodystart="1056" bodyend="1062"/>
      </memberdef>
      <memberdef kind="enum" id="imstb__truetype_8h_1ac4d0fc67edc6c583674315dd15a5c81c" prot="public" static="no" strong="no">
        <type></type>
        <name></name>
        <enumvalue id="imstb__truetype_8h_1ac4d0fc67edc6c583674315dd15a5c81ca87372d512b2e4be1dce36fe0153b8cc0" prot="public">
          <name>STBTT_MS_EID_SYMBOL</name>
          <initializer>=0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imstb__truetype_8h_1ac4d0fc67edc6c583674315dd15a5c81caf3b7a17fc226e7540f025d241f36f17d" prot="public">
          <name>STBTT_MS_EID_UNICODE_BMP</name>
          <initializer>=1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imstb__truetype_8h_1ac4d0fc67edc6c583674315dd15a5c81caaaab3da7b4e39433ac3db32fd9a83808" prot="public">
          <name>STBTT_MS_EID_SHIFTJIS</name>
          <initializer>=2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imstb__truetype_8h_1ac4d0fc67edc6c583674315dd15a5c81ca08224d2a200bd947c6513926290f4640" prot="public">
          <name>STBTT_MS_EID_UNICODE_FULL</name>
          <initializer>=10</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imstb_truetype.h" line="1064" column="1" bodyfile="graphics/imgui/imstb_truetype.h" bodystart="1064" bodyend="1069"/>
      </memberdef>
      <memberdef kind="enum" id="imstb__truetype_8h_1a0bdade2a3ea56f288fa40d64b7bd0f62" prot="public" static="no" strong="no">
        <type></type>
        <name></name>
        <enumvalue id="imstb__truetype_8h_1a0bdade2a3ea56f288fa40d64b7bd0f62a11789a74295482059768d7ed21ddc1ae" prot="public">
          <name>STBTT_MAC_EID_ROMAN</name>
          <initializer>=0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imstb__truetype_8h_1a0bdade2a3ea56f288fa40d64b7bd0f62aedbd64dd9fc105aabbbae72bae09be1f" prot="public">
          <name>STBTT_MAC_EID_ARABIC</name>
          <initializer>=4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imstb__truetype_8h_1a0bdade2a3ea56f288fa40d64b7bd0f62aa1cd5f4622dd634ffafe0487a2135524" prot="public">
          <name>STBTT_MAC_EID_JAPANESE</name>
          <initializer>=1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imstb__truetype_8h_1a0bdade2a3ea56f288fa40d64b7bd0f62a4f4920b5c91733bd8bb176d5425bd106" prot="public">
          <name>STBTT_MAC_EID_HEBREW</name>
          <initializer>=5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imstb__truetype_8h_1a0bdade2a3ea56f288fa40d64b7bd0f62a808bbaa74269579caa945ffdae31c62a" prot="public">
          <name>STBTT_MAC_EID_CHINESE_TRAD</name>
          <initializer>=2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imstb__truetype_8h_1a0bdade2a3ea56f288fa40d64b7bd0f62ac3c0a50ac37d4b5a68e0ea22824bee75" prot="public">
          <name>STBTT_MAC_EID_GREEK</name>
          <initializer>=6</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imstb__truetype_8h_1a0bdade2a3ea56f288fa40d64b7bd0f62a0b8da1ad3177e0c9b1564c780fc11f0b" prot="public">
          <name>STBTT_MAC_EID_KOREAN</name>
          <initializer>=3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imstb__truetype_8h_1a0bdade2a3ea56f288fa40d64b7bd0f62aba7e217cc8f987ce69ab91180bd15a7f" prot="public">
          <name>STBTT_MAC_EID_RUSSIAN</name>
          <initializer>=7</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imstb_truetype.h" line="1071" column="1" bodyfile="graphics/imgui/imstb_truetype.h" bodystart="1071" bodyend="1076"/>
      </memberdef>
      <memberdef kind="enum" id="imstb__truetype_8h_1aabf39e595f2ea2d3c208d5711f8d0729" prot="public" static="no" strong="no">
        <type></type>
        <name></name>
        <enumvalue id="imstb__truetype_8h_1aabf39e595f2ea2d3c208d5711f8d0729a73e1e353a8727baf20ce85ee329b310b" prot="public">
          <name>STBTT_MS_LANG_ENGLISH</name>
          <initializer>=0x0409</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imstb__truetype_8h_1aabf39e595f2ea2d3c208d5711f8d0729a9d1b0af23f2f76cd1789e0cd638b935d" prot="public">
          <name>STBTT_MS_LANG_ITALIAN</name>
          <initializer>=0x0410</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imstb__truetype_8h_1aabf39e595f2ea2d3c208d5711f8d0729a6092851487f2d9708532ee955d4a75bd" prot="public">
          <name>STBTT_MS_LANG_CHINESE</name>
          <initializer>=0x0804</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imstb__truetype_8h_1aabf39e595f2ea2d3c208d5711f8d0729a0e44b54e59bcc095ff9fe786850cbf74" prot="public">
          <name>STBTT_MS_LANG_JAPANESE</name>
          <initializer>=0x0411</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imstb__truetype_8h_1aabf39e595f2ea2d3c208d5711f8d0729a0b5f77089567369488e03917d99ddbe5" prot="public">
          <name>STBTT_MS_LANG_DUTCH</name>
          <initializer>=0x0413</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imstb__truetype_8h_1aabf39e595f2ea2d3c208d5711f8d0729adc4f5bbc60ef97f1418902574fd9b418" prot="public">
          <name>STBTT_MS_LANG_KOREAN</name>
          <initializer>=0x0412</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imstb__truetype_8h_1aabf39e595f2ea2d3c208d5711f8d0729a3b89fa08e6376c8314c330bd1e9837b5" prot="public">
          <name>STBTT_MS_LANG_FRENCH</name>
          <initializer>=0x040c</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imstb__truetype_8h_1aabf39e595f2ea2d3c208d5711f8d0729a7930264450b0313e58f7590550520786" prot="public">
          <name>STBTT_MS_LANG_RUSSIAN</name>
          <initializer>=0x0419</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imstb__truetype_8h_1aabf39e595f2ea2d3c208d5711f8d0729aebb69f5af1155d26a280778c5ab72580" prot="public">
          <name>STBTT_MS_LANG_GERMAN</name>
          <initializer>=0x0407</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imstb__truetype_8h_1aabf39e595f2ea2d3c208d5711f8d0729a541da99c0255bb044006cc32c2ae50a2" prot="public">
          <name>STBTT_MS_LANG_SPANISH</name>
          <initializer>=0x0409</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imstb__truetype_8h_1aabf39e595f2ea2d3c208d5711f8d0729aed7119e1e991009f49065071f4df39c6" prot="public">
          <name>STBTT_MS_LANG_HEBREW</name>
          <initializer>=0x040d</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imstb__truetype_8h_1aabf39e595f2ea2d3c208d5711f8d0729a126d5bcdbb6e42a9799873b4ffde6c34" prot="public">
          <name>STBTT_MS_LANG_SWEDISH</name>
          <initializer>=0x041D</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imstb_truetype.h" line="1078" column="1" bodyfile="graphics/imgui/imstb_truetype.h" bodystart="1078" bodyend="1086"/>
      </memberdef>
      <memberdef kind="enum" id="imstb__truetype_8h_1afefc261ba5c376d0658a017f1d2dd13f" prot="public" static="no" strong="no">
        <type></type>
        <name></name>
        <enumvalue id="imstb__truetype_8h_1afefc261ba5c376d0658a017f1d2dd13fa845b632475daa7639bb3438785ca3fc9" prot="public">
          <name>STBTT_MAC_LANG_ENGLISH</name>
          <initializer>=0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imstb__truetype_8h_1afefc261ba5c376d0658a017f1d2dd13fa988de1366d401829c919b481c5c3c8e2" prot="public">
          <name>STBTT_MAC_LANG_JAPANESE</name>
          <initializer>=11</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imstb__truetype_8h_1afefc261ba5c376d0658a017f1d2dd13fae6f91a195abd217070ca9cee63849420" prot="public">
          <name>STBTT_MAC_LANG_ARABIC</name>
          <initializer>=12</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imstb__truetype_8h_1afefc261ba5c376d0658a017f1d2dd13fa236502e69e2e07df089168e80dc1330d" prot="public">
          <name>STBTT_MAC_LANG_KOREAN</name>
          <initializer>=23</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imstb__truetype_8h_1afefc261ba5c376d0658a017f1d2dd13faf2757f8c4078dfb9fe9ad9dc32e801ee" prot="public">
          <name>STBTT_MAC_LANG_DUTCH</name>
          <initializer>=4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imstb__truetype_8h_1afefc261ba5c376d0658a017f1d2dd13faf99640bf65945428bcb19f3b9e6e287f" prot="public">
          <name>STBTT_MAC_LANG_RUSSIAN</name>
          <initializer>=32</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imstb__truetype_8h_1afefc261ba5c376d0658a017f1d2dd13fa9a8ae7b8dca3b2902eb69ece32b817a3" prot="public">
          <name>STBTT_MAC_LANG_FRENCH</name>
          <initializer>=1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imstb__truetype_8h_1afefc261ba5c376d0658a017f1d2dd13fa5399db7b554ed772c935f1b5d9d67852" prot="public">
          <name>STBTT_MAC_LANG_SPANISH</name>
          <initializer>=6</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imstb__truetype_8h_1afefc261ba5c376d0658a017f1d2dd13fae3360f5396032fdf22ebb35f3d30e849" prot="public">
          <name>STBTT_MAC_LANG_GERMAN</name>
          <initializer>=2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imstb__truetype_8h_1afefc261ba5c376d0658a017f1d2dd13fa0315abafecf696110de133e4d54ade8c" prot="public">
          <name>STBTT_MAC_LANG_SWEDISH</name>
          <initializer>=5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imstb__truetype_8h_1afefc261ba5c376d0658a017f1d2dd13fad60d41526c1e9ee9ec50e8fd8950b9a4" prot="public">
          <name>STBTT_MAC_LANG_HEBREW</name>
          <initializer>=10</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imstb__truetype_8h_1afefc261ba5c376d0658a017f1d2dd13fa552ed7fe17ee850f3883344b3424e26b" prot="public">
          <name>STBTT_MAC_LANG_CHINESE_SIMPLIFIED</name>
          <initializer>=33</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imstb__truetype_8h_1afefc261ba5c376d0658a017f1d2dd13fa50fb98b75fe8bc23d2bc963e45ea8d96" prot="public">
          <name>STBTT_MAC_LANG_ITALIAN</name>
          <initializer>=3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imstb__truetype_8h_1afefc261ba5c376d0658a017f1d2dd13faf7d2b171e725e29ef4fbfbff7c3b5926" prot="public">
          <name>STBTT_MAC_LANG_CHINESE_TRAD</name>
          <initializer>=19</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imstb_truetype.h" line="1088" column="1" bodyfile="graphics/imgui/imstb_truetype.h" bodystart="1088" bodyend="1096"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="typedef">
      <memberdef kind="typedef" id="imstb__truetype_8h_1a37d613643adacbed24c22718faf6afc7" prot="public" static="no">
        <type>struct stbtt_pack_context</type>
        <definition>typedef struct stbtt_pack_context stbtt_pack_context</definition>
        <argsstring></argsstring>
        <name>stbtt_pack_context</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imstb_truetype.h" line="587" column="33" bodyfile="graphics/imgui/imstb_truetype.h" bodystart="587" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="imstb__truetype_8h_1a82ca6622f6983cc08eca850280126daf" prot="public" static="no">
        <type>struct stbtt_fontinfo</type>
        <definition>typedef struct stbtt_fontinfo stbtt_fontinfo</definition>
        <argsstring></argsstring>
        <name>stbtt_fontinfo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imstb_truetype.h" line="588" column="29" bodyfile="graphics/imgui/imstb_truetype.h" bodystart="588" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="imstb__truetype_8h_1a988d6ec9ddb583b248cc96f17449dd6b" prot="public" static="no">
        <type>struct stbtt_kerningentry</type>
        <definition>typedef struct stbtt_kerningentry stbtt_kerningentry</definition>
        <argsstring></argsstring>
        <name>stbtt_kerningentry</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imstb_truetype.h" line="814" column="20"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="imstb__truetype_8h_1a9f906556cc09c60d136cb9af18305ef3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref> int</type>
        <definition>STBTT_DEF int stbtt_BakeFontBitmap</definition>
        <argsstring>(const unsigned char *data, int offset, float pixel_height, unsigned char *pixels, int pw, int ph, int first_char, int num_chars, stbtt_bakedchar *chardata)</argsstring>
        <name>stbtt_BakeFontBitmap</name>
        <param>
          <type>const unsigned char *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>int</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>float</type>
          <declname>pixel_height</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>pixels</declname>
        </param>
        <param>
          <type>int</type>
          <declname>pw</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ph</declname>
        </param>
        <param>
          <type>int</type>
          <declname>first_char</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_chars</declname>
        </param>
        <param>
          <type><ref refid="structstbtt__bakedchar" kindref="compound">stbtt_bakedchar</ref> *</type>
          <declname>chardata</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imstb_truetype.h" line="538" column="15" declfile="graphics/imgui/imstb_truetype.h" declline="538" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="imstb__truetype_8h_1ab7f7e3a2bc7ae72720057b07a13c400f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref> void</type>
        <definition>STBTT_DEF void stbtt_GetBakedQuad</definition>
        <argsstring>(const stbtt_bakedchar *chardata, int pw, int ph, int char_index, float *xpos, float *ypos, stbtt_aligned_quad *q, int opengl_fillrule)</argsstring>
        <name>stbtt_GetBakedQuad</name>
        <param>
          <type>const <ref refid="structstbtt__bakedchar" kindref="compound">stbtt_bakedchar</ref> *</type>
          <declname>chardata</declname>
        </param>
        <param>
          <type>int</type>
          <declname>pw</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ph</declname>
        </param>
        <param>
          <type>int</type>
          <declname>char_index</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>xpos</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>ypos</declname>
        </param>
        <param>
          <type><ref refid="structstbtt__aligned__quad" kindref="compound">stbtt_aligned_quad</ref> *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>int</type>
          <declname>opengl_fillrule</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imstb_truetype.h" line="554" column="16" declfile="graphics/imgui/imstb_truetype.h" declline="554" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="imstb__truetype_8h_1ae402c69747eee588a5fc18d8ea506b42" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref> void</type>
        <definition>STBTT_DEF void stbtt_GetScaledFontVMetrics</definition>
        <argsstring>(const unsigned char *fontdata, int index, float size, float *ascent, float *descent, float *lineGap)</argsstring>
        <name>stbtt_GetScaledFontVMetrics</name>
        <param>
          <type>const unsigned char *</type>
          <declname>fontdata</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <param>
          <type>float</type>
          <declname>size</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>ascent</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>descent</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>lineGap</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imstb_truetype.h" line="569" column="16" declfile="graphics/imgui/imstb_truetype.h" declline="569" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="imstb__truetype_8h_1adfc8faff4ebfbad1ce0bff9b4ebc691c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref> int</type>
        <definition>STBTT_DEF int stbtt_PackBegin</definition>
        <argsstring>(stbtt_pack_context *spc, unsigned char *pixels, int width, int height, int stride_in_bytes, int padding, void *alloc_context)</argsstring>
        <name>stbtt_PackBegin</name>
        <param>
          <type><ref refid="structstbtt__pack__context" kindref="compound">stbtt_pack_context</ref> *</type>
          <declname>spc</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>pixels</declname>
        </param>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>height</declname>
        </param>
        <param>
          <type>int</type>
          <declname>stride_in_bytes</declname>
        </param>
        <param>
          <type>int</type>
          <declname>padding</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>alloc_context</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imstb_truetype.h" line="593" column="16" declfile="graphics/imgui/imstb_truetype.h" declline="593" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="imstb__truetype_8h_1ab51e492c4b320b8af6ef557ad3388140" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref> void</type>
        <definition>STBTT_DEF void stbtt_PackEnd</definition>
        <argsstring>(stbtt_pack_context *spc)</argsstring>
        <name>stbtt_PackEnd</name>
        <param>
          <type><ref refid="structstbtt__pack__context" kindref="compound">stbtt_pack_context</ref> *</type>
          <declname>spc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imstb_truetype.h" line="604" column="16" declfile="graphics/imgui/imstb_truetype.h" declline="604" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="imstb__truetype_8h_1a344fc3b0ff7829d993ca8db3eadd321f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref> int</type>
        <definition>STBTT_DEF int stbtt_PackFontRange</definition>
        <argsstring>(stbtt_pack_context *spc, const unsigned char *fontdata, int font_index, float font_size, int first_unicode_char_in_range, int num_chars_in_range, stbtt_packedchar *chardata_for_range)</argsstring>
        <name>stbtt_PackFontRange</name>
        <param>
          <type><ref refid="structstbtt__pack__context" kindref="compound">stbtt_pack_context</ref> *</type>
          <declname>spc</declname>
        </param>
        <param>
          <type>const unsigned char *</type>
          <declname>fontdata</declname>
        </param>
        <param>
          <type>int</type>
          <declname>font_index</declname>
        </param>
        <param>
          <type>float</type>
          <declname>font_size</declname>
        </param>
        <param>
          <type>int</type>
          <declname>first_unicode_char_in_range</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_chars_in_range</declname>
        </param>
        <param>
          <type><ref refid="structstbtt__packedchar" kindref="compound">stbtt_packedchar</ref> *</type>
          <declname>chardata_for_range</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imstb_truetype.h" line="609" column="16" declfile="graphics/imgui/imstb_truetype.h" declline="609" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="imstb__truetype_8h_1a051bbf0eddd73f253c1b1050a9e47157" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref> int</type>
        <definition>STBTT_DEF int stbtt_PackFontRanges</definition>
        <argsstring>(stbtt_pack_context *spc, const unsigned char *fontdata, int font_index, stbtt_pack_range *ranges, int num_ranges)</argsstring>
        <name>stbtt_PackFontRanges</name>
        <param>
          <type><ref refid="structstbtt__pack__context" kindref="compound">stbtt_pack_context</ref> *</type>
          <declname>spc</declname>
        </param>
        <param>
          <type>const unsigned char *</type>
          <declname>fontdata</declname>
        </param>
        <param>
          <type>int</type>
          <declname>font_index</declname>
        </param>
        <param>
          <type><ref refid="structstbtt__pack__range" kindref="compound">stbtt_pack_range</ref> *</type>
          <declname>ranges</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_ranges</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imstb_truetype.h" line="634" column="16" declfile="graphics/imgui/imstb_truetype.h" declline="634" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="imstb__truetype_8h_1a4c55e174efbacaf82a8ddb9d1956717e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref> void</type>
        <definition>STBTT_DEF void stbtt_PackSetOversampling</definition>
        <argsstring>(stbtt_pack_context *spc, unsigned int h_oversample, unsigned int v_oversample)</argsstring>
        <name>stbtt_PackSetOversampling</name>
        <param>
          <type><ref refid="structstbtt__pack__context" kindref="compound">stbtt_pack_context</ref> *</type>
          <declname>spc</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>h_oversample</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>v_oversample</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imstb_truetype.h" line="640" column="16" declfile="graphics/imgui/imstb_truetype.h" declline="640" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="imstb__truetype_8h_1a0549774d30f6c64b85b88acc2329e89e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref> void</type>
        <definition>STBTT_DEF void stbtt_PackSetSkipMissingCodepoints</definition>
        <argsstring>(stbtt_pack_context *spc, int skip)</argsstring>
        <name>stbtt_PackSetSkipMissingCodepoints</name>
        <param>
          <type><ref refid="structstbtt__pack__context" kindref="compound">stbtt_pack_context</ref> *</type>
          <declname>spc</declname>
        </param>
        <param>
          <type>int</type>
          <declname>skip</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imstb_truetype.h" line="656" column="16" declfile="graphics/imgui/imstb_truetype.h" declline="656" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="imstb__truetype_8h_1abbca8f4e5de8209200a7be6c1c57661e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref> void</type>
        <definition>STBTT_DEF void stbtt_GetPackedQuad</definition>
        <argsstring>(const stbtt_packedchar *chardata, int pw, int ph, int char_index, float *xpos, float *ypos, stbtt_aligned_quad *q, int align_to_integer)</argsstring>
        <name>stbtt_GetPackedQuad</name>
        <param>
          <type>const <ref refid="structstbtt__packedchar" kindref="compound">stbtt_packedchar</ref> *</type>
          <declname>chardata</declname>
        </param>
        <param>
          <type>int</type>
          <declname>pw</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ph</declname>
        </param>
        <param>
          <type>int</type>
          <declname>char_index</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>xpos</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>ypos</declname>
        </param>
        <param>
          <type><ref refid="structstbtt__aligned__quad" kindref="compound">stbtt_aligned_quad</ref> *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>int</type>
          <declname>align_to_integer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imstb_truetype.h" line="662" column="16" declfile="graphics/imgui/imstb_truetype.h" declline="662" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="imstb__truetype_8h_1a8cf20362ceefc78d4df2e1703de3da50" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref> int</type>
        <definition>STBTT_DEF int stbtt_PackFontRangesGatherRects</definition>
        <argsstring>(stbtt_pack_context *spc, const stbtt_fontinfo *info, stbtt_pack_range *ranges, int num_ranges, stbrp_rect *rects)</argsstring>
        <name>stbtt_PackFontRangesGatherRects</name>
        <param>
          <type><ref refid="structstbtt__pack__context" kindref="compound">stbtt_pack_context</ref> *</type>
          <declname>spc</declname>
        </param>
        <param>
          <type>const <ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref> *</type>
          <declname>info</declname>
        </param>
        <param>
          <type><ref refid="structstbtt__pack__range" kindref="compound">stbtt_pack_range</ref> *</type>
          <declname>ranges</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_ranges</declname>
        </param>
        <param>
          <type><ref refid="structstbrp__rect" kindref="compound">stbrp_rect</ref> *</type>
          <declname>rects</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imstb_truetype.h" line="668" column="16" declfile="graphics/imgui/imstb_truetype.h" declline="668" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="imstb__truetype_8h_1aeec3933fdb14884b7c2919e6ddc44259" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref> void</type>
        <definition>STBTT_DEF void stbtt_PackFontRangesPackRects</definition>
        <argsstring>(stbtt_pack_context *spc, stbrp_rect *rects, int num_rects)</argsstring>
        <name>stbtt_PackFontRangesPackRects</name>
        <param>
          <type><ref refid="structstbtt__pack__context" kindref="compound">stbtt_pack_context</ref> *</type>
          <declname>spc</declname>
        </param>
        <param>
          <type><ref refid="structstbrp__rect" kindref="compound">stbrp_rect</ref> *</type>
          <declname>rects</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_rects</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imstb_truetype.h" line="669" column="16" declfile="graphics/imgui/imstb_truetype.h" declline="669" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="imstb__truetype_8h_1ab6eca9e0104838ca2483dea24dd9e631" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref> int</type>
        <definition>STBTT_DEF int stbtt_PackFontRangesRenderIntoRects</definition>
        <argsstring>(stbtt_pack_context *spc, const stbtt_fontinfo *info, stbtt_pack_range *ranges, int num_ranges, stbrp_rect *rects)</argsstring>
        <name>stbtt_PackFontRangesRenderIntoRects</name>
        <param>
          <type><ref refid="structstbtt__pack__context" kindref="compound">stbtt_pack_context</ref> *</type>
          <declname>spc</declname>
        </param>
        <param>
          <type>const <ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref> *</type>
          <declname>info</declname>
        </param>
        <param>
          <type><ref refid="structstbtt__pack__range" kindref="compound">stbtt_pack_range</ref> *</type>
          <declname>ranges</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_ranges</declname>
        </param>
        <param>
          <type><ref refid="structstbrp__rect" kindref="compound">stbrp_rect</ref> *</type>
          <declname>rects</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imstb_truetype.h" line="670" column="16" declfile="graphics/imgui/imstb_truetype.h" declline="670" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="imstb__truetype_8h_1af7ee37667bd84fee4c1fcf640fe8a672" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref> int</type>
        <definition>STBTT_DEF int stbtt_GetNumberOfFonts</definition>
        <argsstring>(const unsigned char *data)</argsstring>
        <name>stbtt_GetNumberOfFonts</name>
        <param>
          <type>const unsigned char *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imstb_truetype.h" line="702" column="15" declfile="graphics/imgui/imstb_truetype.h" declline="702" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="imstb__truetype_8h_1a5ba17159df62ca39649e6f2231ac6e89" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref> int</type>
        <definition>STBTT_DEF int stbtt_GetFontOffsetForIndex</definition>
        <argsstring>(const unsigned char *data, int index)</argsstring>
        <name>stbtt_GetFontOffsetForIndex</name>
        <param>
          <type>const unsigned char *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imstb_truetype.h" line="709" column="15" declfile="graphics/imgui/imstb_truetype.h" declline="709" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="imstb__truetype_8h_1ac3b6bda1851d0b1a4fd53f5f353668e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref> int</type>
        <definition>STBTT_DEF int stbtt_InitFont</definition>
        <argsstring>(stbtt_fontinfo *info, const unsigned char *data, int offset)</argsstring>
        <name>stbtt_InitFont</name>
        <param>
          <type><ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref> *</type>
          <declname>info</declname>
        </param>
        <param>
          <type>const unsigned char *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>int</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imstb_truetype.h" line="738" column="15" declfile="graphics/imgui/imstb_truetype.h" declline="738" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="imstb__truetype_8h_1a213d5628c6b2e5c107b99378eefc6e3a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref> int</type>
        <definition>STBTT_DEF int stbtt_FindGlyphIndex</definition>
        <argsstring>(const stbtt_fontinfo *info, int unicode_codepoint)</argsstring>
        <name>stbtt_FindGlyphIndex</name>
        <param>
          <type>const <ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref> *</type>
          <declname>info</declname>
        </param>
        <param>
          <type>int</type>
          <declname>unicode_codepoint</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imstb_truetype.h" line="750" column="15" declfile="graphics/imgui/imstb_truetype.h" declline="750" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="imstb__truetype_8h_1aad275d7211530a3d817fcd8647690b7b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref> float</type>
        <definition>STBTT_DEF float stbtt_ScaleForPixelHeight</definition>
        <argsstring>(const stbtt_fontinfo *info, float pixels)</argsstring>
        <name>stbtt_ScaleForPixelHeight</name>
        <param>
          <type>const <ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref> *</type>
          <declname>info</declname>
        </param>
        <param>
          <type>float</type>
          <declname>pixels</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imstb_truetype.h" line="763" column="17" declfile="graphics/imgui/imstb_truetype.h" declline="763" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="imstb__truetype_8h_1a76da72e13355eae763c567ffde0b4607" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref> float</type>
        <definition>STBTT_DEF float stbtt_ScaleForMappingEmToPixels</definition>
        <argsstring>(const stbtt_fontinfo *info, float pixels)</argsstring>
        <name>stbtt_ScaleForMappingEmToPixels</name>
        <param>
          <type>const <ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref> *</type>
          <declname>info</declname>
        </param>
        <param>
          <type>float</type>
          <declname>pixels</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imstb_truetype.h" line="771" column="17" declfile="graphics/imgui/imstb_truetype.h" declline="771" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="imstb__truetype_8h_1a2784e0e55678a5980e950b1c9fbc75f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref> void</type>
        <definition>STBTT_DEF void stbtt_GetFontVMetrics</definition>
        <argsstring>(const stbtt_fontinfo *info, int *ascent, int *descent, int *lineGap)</argsstring>
        <name>stbtt_GetFontVMetrics</name>
        <param>
          <type>const <ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref> *</type>
          <declname>info</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>ascent</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>descent</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>lineGap</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imstb_truetype.h" line="776" column="16" declfile="graphics/imgui/imstb_truetype.h" declline="776" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="imstb__truetype_8h_1a12154e222685026a3cf315a1b5720f24" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref> int</type>
        <definition>STBTT_DEF int stbtt_GetFontVMetricsOS2</definition>
        <argsstring>(const stbtt_fontinfo *info, int *typoAscent, int *typoDescent, int *typoLineGap)</argsstring>
        <name>stbtt_GetFontVMetricsOS2</name>
        <param>
          <type>const <ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref> *</type>
          <declname>info</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>typoAscent</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>typoDescent</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>typoLineGap</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imstb_truetype.h" line="784" column="16" declfile="graphics/imgui/imstb_truetype.h" declline="784" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="imstb__truetype_8h_1a4dd4ca3bff4e304b2c8d952f87fbb639" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref> void</type>
        <definition>STBTT_DEF void stbtt_GetFontBoundingBox</definition>
        <argsstring>(const stbtt_fontinfo *info, int *x0, int *y0, int *x1, int *y1)</argsstring>
        <name>stbtt_GetFontBoundingBox</name>
        <param>
          <type>const <ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref> *</type>
          <declname>info</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>x0</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>y0</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>x1</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>y1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imstb_truetype.h" line="790" column="16" declfile="graphics/imgui/imstb_truetype.h" declline="790" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="imstb__truetype_8h_1a015fbd6e96df8ee58bd41bb4211b64e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref> void</type>
        <definition>STBTT_DEF void stbtt_GetCodepointHMetrics</definition>
        <argsstring>(const stbtt_fontinfo *info, int codepoint, int *advanceWidth, int *leftSideBearing)</argsstring>
        <name>stbtt_GetCodepointHMetrics</name>
        <param>
          <type>const <ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref> *</type>
          <declname>info</declname>
        </param>
        <param>
          <type>int</type>
          <declname>codepoint</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>advanceWidth</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>leftSideBearing</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imstb_truetype.h" line="793" column="16" declfile="graphics/imgui/imstb_truetype.h" declline="793" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="imstb__truetype_8h_1a83703ede616bacefc0312ef2803774a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref> int</type>
        <definition>STBTT_DEF int stbtt_GetCodepointKernAdvance</definition>
        <argsstring>(const stbtt_fontinfo *info, int ch1, int ch2)</argsstring>
        <name>stbtt_GetCodepointKernAdvance</name>
        <param>
          <type>const <ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref> *</type>
          <declname>info</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ch1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ch2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imstb_truetype.h" line="798" column="16" declfile="graphics/imgui/imstb_truetype.h" declline="798" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="imstb__truetype_8h_1abbfa26d9cbfeae7e224f2f62ef6c096d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref> int</type>
        <definition>STBTT_DEF int stbtt_GetCodepointBox</definition>
        <argsstring>(const stbtt_fontinfo *info, int codepoint, int *x0, int *y0, int *x1, int *y1)</argsstring>
        <name>stbtt_GetCodepointBox</name>
        <param>
          <type>const <ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref> *</type>
          <declname>info</declname>
        </param>
        <param>
          <type>int</type>
          <declname>codepoint</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>x0</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>y0</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>x1</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>y1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imstb_truetype.h" line="801" column="15" declfile="graphics/imgui/imstb_truetype.h" declline="801" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="imstb__truetype_8h_1ab593f3066f2a8a7e33e7b7011d1b1f9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref> void</type>
        <definition>STBTT_DEF void stbtt_GetGlyphHMetrics</definition>
        <argsstring>(const stbtt_fontinfo *info, int glyph_index, int *advanceWidth, int *leftSideBearing)</argsstring>
        <name>stbtt_GetGlyphHMetrics</name>
        <param>
          <type>const <ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref> *</type>
          <declname>info</declname>
        </param>
        <param>
          <type>int</type>
          <declname>glyph_index</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>advanceWidth</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>leftSideBearing</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imstb_truetype.h" line="804" column="16" declfile="graphics/imgui/imstb_truetype.h" declline="804" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="imstb__truetype_8h_1acf0b09547b1c2002ad0266802224552d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref> int</type>
        <definition>STBTT_DEF int stbtt_GetGlyphKernAdvance</definition>
        <argsstring>(const stbtt_fontinfo *info, int glyph1, int glyph2)</argsstring>
        <name>stbtt_GetGlyphKernAdvance</name>
        <param>
          <type>const <ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref> *</type>
          <declname>info</declname>
        </param>
        <param>
          <type>int</type>
          <declname>glyph1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>glyph2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imstb_truetype.h" line="805" column="16" declfile="graphics/imgui/imstb_truetype.h" declline="805" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="imstb__truetype_8h_1accf148d2d285fd55178d9a401734ba92" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref> int</type>
        <definition>STBTT_DEF int stbtt_GetGlyphBox</definition>
        <argsstring>(const stbtt_fontinfo *info, int glyph_index, int *x0, int *y0, int *x1, int *y1)</argsstring>
        <name>stbtt_GetGlyphBox</name>
        <param>
          <type>const <ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref> *</type>
          <declname>info</declname>
        </param>
        <param>
          <type>int</type>
          <declname>glyph_index</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>x0</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>y0</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>x1</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>y1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imstb_truetype.h" line="806" column="16" declfile="graphics/imgui/imstb_truetype.h" declline="806" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="imstb__truetype_8h_1ab638ddcf9ae1b15ea18b2de58443136e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref> int</type>
        <definition>STBTT_DEF int stbtt_GetKerningTableLength</definition>
        <argsstring>(const stbtt_fontinfo *info)</argsstring>
        <name>stbtt_GetKerningTableLength</name>
        <param>
          <type>const <ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref> *</type>
          <declname>info</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imstb_truetype.h" line="816" column="16" declfile="graphics/imgui/imstb_truetype.h" declline="816" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="imstb__truetype_8h_1a190bffe156cdb32ac891e835248c90e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref> int</type>
        <definition>STBTT_DEF int stbtt_GetKerningTable</definition>
        <argsstring>(const stbtt_fontinfo *info, stbtt_kerningentry *table, int table_length)</argsstring>
        <name>stbtt_GetKerningTable</name>
        <param>
          <type>const <ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref> *</type>
          <declname>info</declname>
        </param>
        <param>
          <type><ref refid="structstbtt__kerningentry" kindref="compound">stbtt_kerningentry</ref> *</type>
          <declname>table</declname>
        </param>
        <param>
          <type>int</type>
          <declname>table_length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imstb_truetype.h" line="817" column="16" declfile="graphics/imgui/imstb_truetype.h" declline="817" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="imstb__truetype_8h_1a3378c5794e9ab2a16492ab7e3c3c9485" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref> int</type>
        <definition>STBTT_DEF int stbtt_IsGlyphEmpty</definition>
        <argsstring>(const stbtt_fontinfo *info, int glyph_index)</argsstring>
        <name>stbtt_IsGlyphEmpty</name>
        <param>
          <type>const <ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref> *</type>
          <declname>info</declname>
        </param>
        <param>
          <type>int</type>
          <declname>glyph_index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imstb_truetype.h" line="847" column="15" declfile="graphics/imgui/imstb_truetype.h" declline="847" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="imstb__truetype_8h_1a073c07bd3c08775d2528a0a602be1795" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref> int</type>
        <definition>STBTT_DEF int stbtt_GetCodepointShape</definition>
        <argsstring>(const stbtt_fontinfo *info, int unicode_codepoint, stbtt_vertex **vertices)</argsstring>
        <name>stbtt_GetCodepointShape</name>
        <param>
          <type>const <ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref> *</type>
          <declname>info</declname>
        </param>
        <param>
          <type>int</type>
          <declname>unicode_codepoint</declname>
        </param>
        <param>
          <type><ref refid="structstbtt__vertex" kindref="compound">stbtt_vertex</ref> **</type>
          <declname>vertices</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imstb_truetype.h" line="850" column="15" declfile="graphics/imgui/imstb_truetype.h" declline="850" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="imstb__truetype_8h_1a695c82840a7d4eaa1d5be00131c9718b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref> int</type>
        <definition>STBTT_DEF int stbtt_GetGlyphShape</definition>
        <argsstring>(const stbtt_fontinfo *info, int glyph_index, stbtt_vertex **vertices)</argsstring>
        <name>stbtt_GetGlyphShape</name>
        <param>
          <type>const <ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref> *</type>
          <declname>info</declname>
        </param>
        <param>
          <type>int</type>
          <declname>glyph_index</declname>
        </param>
        <param>
          <type><ref refid="structstbtt__vertex" kindref="compound">stbtt_vertex</ref> **</type>
          <declname>vertices</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imstb_truetype.h" line="851" column="15" declfile="graphics/imgui/imstb_truetype.h" declline="851" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="imstb__truetype_8h_1a8aa85852fbc25667bf0438e29e128c93" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref> void</type>
        <definition>STBTT_DEF void stbtt_FreeShape</definition>
        <argsstring>(const stbtt_fontinfo *info, stbtt_vertex *vertices)</argsstring>
        <name>stbtt_FreeShape</name>
        <param>
          <type>const <ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref> *</type>
          <declname>info</declname>
        </param>
        <param>
          <type><ref refid="structstbtt__vertex" kindref="compound">stbtt_vertex</ref> *</type>
          <declname>vertices</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imstb_truetype.h" line="862" column="16" declfile="graphics/imgui/imstb_truetype.h" declline="862" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="imstb__truetype_8h_1ab0896826867ac841bba5b6060b3dab09" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref> unsigned char *</type>
        <definition>STBTT_DEF unsigned char * stbtt_FindSVGDoc</definition>
        <argsstring>(const stbtt_fontinfo *info, int gl)</argsstring>
        <name>stbtt_FindSVGDoc</name>
        <param>
          <type>const <ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref> *</type>
          <declname>info</declname>
        </param>
        <param>
          <type>int</type>
          <declname>gl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imstb_truetype.h" line="865" column="25" declfile="graphics/imgui/imstb_truetype.h" declline="865" declcolumn="25"/>
      </memberdef>
      <memberdef kind="function" id="imstb__truetype_8h_1a5d290c4aa81bf0f7b933ea290d123a3a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref> int</type>
        <definition>STBTT_DEF int stbtt_GetCodepointSVG</definition>
        <argsstring>(const stbtt_fontinfo *info, int unicode_codepoint, const char **svg)</argsstring>
        <name>stbtt_GetCodepointSVG</name>
        <param>
          <type>const <ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref> *</type>
          <declname>info</declname>
        </param>
        <param>
          <type>int</type>
          <declname>unicode_codepoint</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>svg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imstb_truetype.h" line="866" column="15" declfile="graphics/imgui/imstb_truetype.h" declline="866" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="imstb__truetype_8h_1a6233237aecda00cf9ccd2c2d50dd6b17" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref> int</type>
        <definition>STBTT_DEF int stbtt_GetGlyphSVG</definition>
        <argsstring>(const stbtt_fontinfo *info, int gl, const char **svg)</argsstring>
        <name>stbtt_GetGlyphSVG</name>
        <param>
          <type>const <ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref> *</type>
          <declname>info</declname>
        </param>
        <param>
          <type>int</type>
          <declname>gl</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>svg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imstb_truetype.h" line="867" column="15" declfile="graphics/imgui/imstb_truetype.h" declline="867" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="imstb__truetype_8h_1a8254e6763560645597c44e00024b58fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref> void</type>
        <definition>STBTT_DEF void stbtt_FreeBitmap</definition>
        <argsstring>(unsigned char *bitmap, void *userdata)</argsstring>
        <name>stbtt_FreeBitmap</name>
        <param>
          <type>unsigned char *</type>
          <declname>bitmap</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>userdata</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imstb_truetype.h" line="876" column="16" declfile="graphics/imgui/imstb_truetype.h" declline="876" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="imstb__truetype_8h_1a6206e92bc06993ba26b8e7c7671f8aaa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref> unsigned char *</type>
        <definition>STBTT_DEF unsigned char * stbtt_GetCodepointBitmap</definition>
        <argsstring>(const stbtt_fontinfo *info, float scale_x, float scale_y, int codepoint, int *width, int *height, int *xoff, int *yoff)</argsstring>
        <name>stbtt_GetCodepointBitmap</name>
        <param>
          <type>const <ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref> *</type>
          <declname>info</declname>
        </param>
        <param>
          <type>float</type>
          <declname>scale_x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>scale_y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>codepoint</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>height</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>xoff</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>yoff</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imstb_truetype.h" line="879" column="25" declfile="graphics/imgui/imstb_truetype.h" declline="879" declcolumn="25"/>
      </memberdef>
      <memberdef kind="function" id="imstb__truetype_8h_1a99855a21c1021bd51d03ae337a0d49be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref> unsigned char *</type>
        <definition>STBTT_DEF unsigned char * stbtt_GetCodepointBitmapSubpixel</definition>
        <argsstring>(const stbtt_fontinfo *info, float scale_x, float scale_y, float shift_x, float shift_y, int codepoint, int *width, int *height, int *xoff, int *yoff)</argsstring>
        <name>stbtt_GetCodepointBitmapSubpixel</name>
        <param>
          <type>const <ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref> *</type>
          <declname>info</declname>
        </param>
        <param>
          <type>float</type>
          <declname>scale_x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>scale_y</declname>
        </param>
        <param>
          <type>float</type>
          <declname>shift_x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>shift_y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>codepoint</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>height</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>xoff</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>yoff</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imstb_truetype.h" line="888" column="25" declfile="graphics/imgui/imstb_truetype.h" declline="888" declcolumn="25"/>
      </memberdef>
      <memberdef kind="function" id="imstb__truetype_8h_1a4416bb8395a4d2e717f613bb4903c7eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref> void</type>
        <definition>STBTT_DEF void stbtt_MakeCodepointBitmap</definition>
        <argsstring>(const stbtt_fontinfo *info, unsigned char *output, int out_w, int out_h, int out_stride, float scale_x, float scale_y, int codepoint)</argsstring>
        <name>stbtt_MakeCodepointBitmap</name>
        <param>
          <type>const <ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref> *</type>
          <declname>info</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>output</declname>
        </param>
        <param>
          <type>int</type>
          <declname>out_w</declname>
        </param>
        <param>
          <type>int</type>
          <declname>out_h</declname>
        </param>
        <param>
          <type>int</type>
          <declname>out_stride</declname>
        </param>
        <param>
          <type>float</type>
          <declname>scale_x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>scale_y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>codepoint</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imstb_truetype.h" line="892" column="16" declfile="graphics/imgui/imstb_truetype.h" declline="892" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="imstb__truetype_8h_1a51bd3fc45817d8606c749e585241fa71" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref> void</type>
        <definition>STBTT_DEF void stbtt_MakeCodepointBitmapSubpixel</definition>
        <argsstring>(const stbtt_fontinfo *info, unsigned char *output, int out_w, int out_h, int out_stride, float scale_x, float scale_y, float shift_x, float shift_y, int codepoint)</argsstring>
        <name>stbtt_MakeCodepointBitmapSubpixel</name>
        <param>
          <type>const <ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref> *</type>
          <declname>info</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>output</declname>
        </param>
        <param>
          <type>int</type>
          <declname>out_w</declname>
        </param>
        <param>
          <type>int</type>
          <declname>out_h</declname>
        </param>
        <param>
          <type>int</type>
          <declname>out_stride</declname>
        </param>
        <param>
          <type>float</type>
          <declname>scale_x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>scale_y</declname>
        </param>
        <param>
          <type>float</type>
          <declname>shift_x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>shift_y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>codepoint</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imstb_truetype.h" line="898" column="16" declfile="graphics/imgui/imstb_truetype.h" declline="898" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="imstb__truetype_8h_1a4b3487c748701f5b89b7be56625df1be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref> void</type>
        <definition>STBTT_DEF void stbtt_MakeCodepointBitmapSubpixelPrefilter</definition>
        <argsstring>(const stbtt_fontinfo *info, unsigned char *output, int out_w, int out_h, int out_stride, float scale_x, float scale_y, float shift_x, float shift_y, int oversample_x, int oversample_y, float *sub_x, float *sub_y, int codepoint)</argsstring>
        <name>stbtt_MakeCodepointBitmapSubpixelPrefilter</name>
        <param>
          <type>const <ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref> *</type>
          <declname>info</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>output</declname>
        </param>
        <param>
          <type>int</type>
          <declname>out_w</declname>
        </param>
        <param>
          <type>int</type>
          <declname>out_h</declname>
        </param>
        <param>
          <type>int</type>
          <declname>out_stride</declname>
        </param>
        <param>
          <type>float</type>
          <declname>scale_x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>scale_y</declname>
        </param>
        <param>
          <type>float</type>
          <declname>shift_x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>shift_y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>oversample_x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>oversample_y</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>sub_x</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>sub_y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>codepoint</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imstb_truetype.h" line="902" column="16" declfile="graphics/imgui/imstb_truetype.h" declline="902" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="imstb__truetype_8h_1a2e607ba774cee7f2425917105dabd16f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref> void</type>
        <definition>STBTT_DEF void stbtt_GetCodepointBitmapBox</definition>
        <argsstring>(const stbtt_fontinfo *font, int codepoint, float scale_x, float scale_y, int *ix0, int *iy0, int *ix1, int *iy1)</argsstring>
        <name>stbtt_GetCodepointBitmapBox</name>
        <param>
          <type>const <ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref> *</type>
          <declname>font</declname>
        </param>
        <param>
          <type>int</type>
          <declname>codepoint</declname>
        </param>
        <param>
          <type>float</type>
          <declname>scale_x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>scale_y</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>ix0</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>iy0</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>ix1</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>iy1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imstb_truetype.h" line="906" column="16" declfile="graphics/imgui/imstb_truetype.h" declline="906" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="imstb__truetype_8h_1a18fae014dd2261e554248ca737d05578" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref> void</type>
        <definition>STBTT_DEF void stbtt_GetCodepointBitmapBoxSubpixel</definition>
        <argsstring>(const stbtt_fontinfo *font, int codepoint, float scale_x, float scale_y, float shift_x, float shift_y, int *ix0, int *iy0, int *ix1, int *iy1)</argsstring>
        <name>stbtt_GetCodepointBitmapBoxSubpixel</name>
        <param>
          <type>const <ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref> *</type>
          <declname>font</declname>
        </param>
        <param>
          <type>int</type>
          <declname>codepoint</declname>
        </param>
        <param>
          <type>float</type>
          <declname>scale_x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>scale_y</declname>
        </param>
        <param>
          <type>float</type>
          <declname>shift_x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>shift_y</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>ix0</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>iy0</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>ix1</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>iy1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imstb_truetype.h" line="913" column="16" declfile="graphics/imgui/imstb_truetype.h" declline="913" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="imstb__truetype_8h_1adba6ae7b9f05604eb366a828836b62a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref> unsigned char *</type>
        <definition>STBTT_DEF unsigned char * stbtt_GetGlyphBitmap</definition>
        <argsstring>(const stbtt_fontinfo *info, float scale_x, float scale_y, int glyph, int *width, int *height, int *xoff, int *yoff)</argsstring>
        <name>stbtt_GetGlyphBitmap</name>
        <param>
          <type>const <ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref> *</type>
          <declname>info</declname>
        </param>
        <param>
          <type>float</type>
          <declname>scale_x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>scale_y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>glyph</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>height</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>xoff</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>yoff</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imstb_truetype.h" line="919" column="25" declfile="graphics/imgui/imstb_truetype.h" declline="919" declcolumn="25"/>
      </memberdef>
      <memberdef kind="function" id="imstb__truetype_8h_1a7a9824b918bd24da2c0193e61bc9ff24" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref> unsigned char *</type>
        <definition>STBTT_DEF unsigned char * stbtt_GetGlyphBitmapSubpixel</definition>
        <argsstring>(const stbtt_fontinfo *info, float scale_x, float scale_y, float shift_x, float shift_y, int glyph, int *width, int *height, int *xoff, int *yoff)</argsstring>
        <name>stbtt_GetGlyphBitmapSubpixel</name>
        <param>
          <type>const <ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref> *</type>
          <declname>info</declname>
        </param>
        <param>
          <type>float</type>
          <declname>scale_x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>scale_y</declname>
        </param>
        <param>
          <type>float</type>
          <declname>shift_x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>shift_y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>glyph</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>height</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>xoff</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>yoff</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imstb_truetype.h" line="920" column="25" declfile="graphics/imgui/imstb_truetype.h" declline="920" declcolumn="25"/>
      </memberdef>
      <memberdef kind="function" id="imstb__truetype_8h_1a915acab7676b20098f4d480376c5b589" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref> void</type>
        <definition>STBTT_DEF void stbtt_MakeGlyphBitmap</definition>
        <argsstring>(const stbtt_fontinfo *info, unsigned char *output, int out_w, int out_h, int out_stride, float scale_x, float scale_y, int glyph)</argsstring>
        <name>stbtt_MakeGlyphBitmap</name>
        <param>
          <type>const <ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref> *</type>
          <declname>info</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>output</declname>
        </param>
        <param>
          <type>int</type>
          <declname>out_w</declname>
        </param>
        <param>
          <type>int</type>
          <declname>out_h</declname>
        </param>
        <param>
          <type>int</type>
          <declname>out_stride</declname>
        </param>
        <param>
          <type>float</type>
          <declname>scale_x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>scale_y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>glyph</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imstb_truetype.h" line="921" column="16" declfile="graphics/imgui/imstb_truetype.h" declline="921" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="imstb__truetype_8h_1aa82d35f758bc70bd675c48da381e7ea7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref> void</type>
        <definition>STBTT_DEF void stbtt_MakeGlyphBitmapSubpixel</definition>
        <argsstring>(const stbtt_fontinfo *info, unsigned char *output, int out_w, int out_h, int out_stride, float scale_x, float scale_y, float shift_x, float shift_y, int glyph)</argsstring>
        <name>stbtt_MakeGlyphBitmapSubpixel</name>
        <param>
          <type>const <ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref> *</type>
          <declname>info</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>output</declname>
        </param>
        <param>
          <type>int</type>
          <declname>out_w</declname>
        </param>
        <param>
          <type>int</type>
          <declname>out_h</declname>
        </param>
        <param>
          <type>int</type>
          <declname>out_stride</declname>
        </param>
        <param>
          <type>float</type>
          <declname>scale_x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>scale_y</declname>
        </param>
        <param>
          <type>float</type>
          <declname>shift_x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>shift_y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>glyph</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imstb_truetype.h" line="922" column="16" declfile="graphics/imgui/imstb_truetype.h" declline="922" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="imstb__truetype_8h_1a006159e27c5c733ea11c688211e47c25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref> void</type>
        <definition>STBTT_DEF void stbtt_MakeGlyphBitmapSubpixelPrefilter</definition>
        <argsstring>(const stbtt_fontinfo *info, unsigned char *output, int out_w, int out_h, int out_stride, float scale_x, float scale_y, float shift_x, float shift_y, int oversample_x, int oversample_y, float *sub_x, float *sub_y, int glyph)</argsstring>
        <name>stbtt_MakeGlyphBitmapSubpixelPrefilter</name>
        <param>
          <type>const <ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref> *</type>
          <declname>info</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>output</declname>
        </param>
        <param>
          <type>int</type>
          <declname>out_w</declname>
        </param>
        <param>
          <type>int</type>
          <declname>out_h</declname>
        </param>
        <param>
          <type>int</type>
          <declname>out_stride</declname>
        </param>
        <param>
          <type>float</type>
          <declname>scale_x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>scale_y</declname>
        </param>
        <param>
          <type>float</type>
          <declname>shift_x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>shift_y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>oversample_x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>oversample_y</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>sub_x</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>sub_y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>glyph</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imstb_truetype.h" line="923" column="16" declfile="graphics/imgui/imstb_truetype.h" declline="923" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="imstb__truetype_8h_1a7bba8bb63f534246ccd3ed5b9390cc53" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref> void</type>
        <definition>STBTT_DEF void stbtt_GetGlyphBitmapBox</definition>
        <argsstring>(const stbtt_fontinfo *font, int glyph, float scale_x, float scale_y, int *ix0, int *iy0, int *ix1, int *iy1)</argsstring>
        <name>stbtt_GetGlyphBitmapBox</name>
        <param>
          <type>const <ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref> *</type>
          <declname>font</declname>
        </param>
        <param>
          <type>int</type>
          <declname>glyph</declname>
        </param>
        <param>
          <type>float</type>
          <declname>scale_x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>scale_y</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>ix0</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>iy0</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>ix1</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>iy1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imstb_truetype.h" line="924" column="16" declfile="graphics/imgui/imstb_truetype.h" declline="924" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="imstb__truetype_8h_1a597ef6b92ab0b5800c74478548b4782f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref> void</type>
        <definition>STBTT_DEF void stbtt_GetGlyphBitmapBoxSubpixel</definition>
        <argsstring>(const stbtt_fontinfo *font, int glyph, float scale_x, float scale_y, float shift_x, float shift_y, int *ix0, int *iy0, int *ix1, int *iy1)</argsstring>
        <name>stbtt_GetGlyphBitmapBoxSubpixel</name>
        <param>
          <type>const <ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref> *</type>
          <declname>font</declname>
        </param>
        <param>
          <type>int</type>
          <declname>glyph</declname>
        </param>
        <param>
          <type>float</type>
          <declname>scale_x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>scale_y</declname>
        </param>
        <param>
          <type>float</type>
          <declname>shift_x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>shift_y</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>ix0</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>iy0</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>ix1</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>iy1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imstb_truetype.h" line="925" column="16" declfile="graphics/imgui/imstb_truetype.h" declline="925" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="imstb__truetype_8h_1a5b868ef9a9f92e0cc8b6bc0dd52087db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref> void</type>
        <definition>STBTT_DEF void stbtt_Rasterize</definition>
        <argsstring>(stbtt__bitmap *result, float flatness_in_pixels, stbtt_vertex *vertices, int num_verts, float scale_x, float scale_y, float shift_x, float shift_y, int x_off, int y_off, int invert, void *userdata)</argsstring>
        <name>stbtt_Rasterize</name>
        <param>
          <type><ref refid="structstbtt____bitmap" kindref="compound">stbtt__bitmap</ref> *</type>
          <declname>result</declname>
        </param>
        <param>
          <type>float</type>
          <declname>flatness_in_pixels</declname>
        </param>
        <param>
          <type><ref refid="structstbtt__vertex" kindref="compound">stbtt_vertex</ref> *</type>
          <declname>vertices</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_verts</declname>
        </param>
        <param>
          <type>float</type>
          <declname>scale_x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>scale_y</declname>
        </param>
        <param>
          <type>float</type>
          <declname>shift_x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>shift_y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x_off</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y_off</declname>
        </param>
        <param>
          <type>int</type>
          <declname>invert</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>userdata</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imstb_truetype.h" line="936" column="16" declfile="graphics/imgui/imstb_truetype.h" declline="936" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="imstb__truetype_8h_1a1254dc807df81931ab070c6e80370489" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref> void</type>
        <definition>STBTT_DEF void stbtt_FreeSDF</definition>
        <argsstring>(unsigned char *bitmap, void *userdata)</argsstring>
        <name>stbtt_FreeSDF</name>
        <param>
          <type>unsigned char *</type>
          <declname>bitmap</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>userdata</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imstb_truetype.h" line="950" column="16" declfile="graphics/imgui/imstb_truetype.h" declline="950" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="imstb__truetype_8h_1a86f324094c416b920f5a4df75b3abe97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref> unsigned char *</type>
        <definition>STBTT_DEF unsigned char * stbtt_GetGlyphSDF</definition>
        <argsstring>(const stbtt_fontinfo *info, float scale, int glyph, int padding, unsigned char onedge_value, float pixel_dist_scale, int *width, int *height, int *xoff, int *yoff)</argsstring>
        <name>stbtt_GetGlyphSDF</name>
        <param>
          <type>const <ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref> *</type>
          <declname>info</declname>
        </param>
        <param>
          <type>float</type>
          <declname>scale</declname>
        </param>
        <param>
          <type>int</type>
          <declname>glyph</declname>
        </param>
        <param>
          <type>int</type>
          <declname>padding</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>onedge_value</declname>
        </param>
        <param>
          <type>float</type>
          <declname>pixel_dist_scale</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>height</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>xoff</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>yoff</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imstb_truetype.h" line="953" column="26" declfile="graphics/imgui/imstb_truetype.h" declline="953" declcolumn="26"/>
      </memberdef>
      <memberdef kind="function" id="imstb__truetype_8h_1ae70e9e09a74359133d5f282e032d5aa7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref> unsigned char *</type>
        <definition>STBTT_DEF unsigned char * stbtt_GetCodepointSDF</definition>
        <argsstring>(const stbtt_fontinfo *info, float scale, int codepoint, int padding, unsigned char onedge_value, float pixel_dist_scale, int *width, int *height, int *xoff, int *yoff)</argsstring>
        <name>stbtt_GetCodepointSDF</name>
        <param>
          <type>const <ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref> *</type>
          <declname>info</declname>
        </param>
        <param>
          <type>float</type>
          <declname>scale</declname>
        </param>
        <param>
          <type>int</type>
          <declname>codepoint</declname>
        </param>
        <param>
          <type>int</type>
          <declname>padding</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>onedge_value</declname>
        </param>
        <param>
          <type>float</type>
          <declname>pixel_dist_scale</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>height</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>xoff</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>yoff</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imstb_truetype.h" line="954" column="26" declfile="graphics/imgui/imstb_truetype.h" declline="954" declcolumn="26"/>
      </memberdef>
      <memberdef kind="function" id="imstb__truetype_8h_1a76ec14e5c7e57981dc5a409d89b5e92f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref> int</type>
        <definition>STBTT_DEF int stbtt_FindMatchingFont</definition>
        <argsstring>(const unsigned char *fontdata, const char *name, int flags)</argsstring>
        <name>stbtt_FindMatchingFont</name>
        <param>
          <type>const unsigned char *</type>
          <declname>fontdata</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imstb_truetype.h" line="1026" column="15" declfile="graphics/imgui/imstb_truetype.h" declline="1026" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="imstb__truetype_8h_1aafc4974ee424f18246f47b0926a1cd31" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref> int</type>
        <definition>STBTT_DEF int stbtt_CompareUTF8toUTF16_bigendian</definition>
        <argsstring>(const char *s1, int len1, const char *s2, int len2)</argsstring>
        <name>stbtt_CompareUTF8toUTF16_bigendian</name>
        <param>
          <type>const char *</type>
          <declname>s1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len1</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imstb_truetype.h" line="1037" column="15" declfile="graphics/imgui/imstb_truetype.h" declline="1037" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="imstb__truetype_8h_1a404d8b8c23a01c8cdf71f02d6d47d185" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref> const char *</type>
        <definition>STBTT_DEF const char * stbtt_GetFontNameString</definition>
        <argsstring>(const stbtt_fontinfo *font, int *length, int platformID, int encodingID, int languageID, int nameID)</argsstring>
        <name>stbtt_GetFontNameString</name>
        <param>
          <type>const <ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref> *</type>
          <declname>font</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>length</declname>
        </param>
        <param>
          <type>int</type>
          <declname>platformID</declname>
        </param>
        <param>
          <type>int</type>
          <declname>encodingID</declname>
        </param>
        <param>
          <type>int</type>
          <declname>languageID</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nameID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imstb_truetype.h" line="1041" column="22" declfile="graphics/imgui/imstb_truetype.h" declline="1041" declcolumn="22"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>[DEAR<sp/>IMGUI]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>a<sp/>slightly<sp/>modified<sp/>version<sp/>of<sp/>stb_truetype.h<sp/>1.26.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Mostly<sp/>fixing<sp/>for<sp/>compiler<sp/>and<sp/>static<sp/>analyzer<sp/>warnings.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Grep<sp/>for<sp/>[DEAR<sp/>IMGUI]<sp/>to<sp/>find<sp/>the<sp/>changes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>stb_truetype.h<sp/>-<sp/>v1.26<sp/>-<sp/>public<sp/>domain</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>authored<sp/>from<sp/>2009-2021<sp/>by<sp/>Sean<sp/>Barrett<sp/>/<sp/>RAD<sp/>Game<sp/>Tools</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>=======================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>NO<sp/>SECURITY<sp/>GUARANTEE<sp/>--<sp/>DO<sp/>NOT<sp/>USE<sp/>THIS<sp/>ON<sp/>UNTRUSTED<sp/>FONT<sp/>FILES</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>library<sp/>does<sp/>no<sp/>range<sp/>checking<sp/>of<sp/>the<sp/>offsets<sp/>found<sp/>in<sp/>the<sp/>file,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>meaning<sp/>an<sp/>attacker<sp/>can<sp/>use<sp/>it<sp/>to<sp/>read<sp/>arbitrary<sp/>memory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>=======================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>This<sp/>library<sp/>processes<sp/>TrueType<sp/>files:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parse<sp/>files</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>extract<sp/>glyph<sp/>metrics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>extract<sp/>glyph<sp/>shapes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>render<sp/>glyphs<sp/>to<sp/>one-channel<sp/>bitmaps<sp/>with<sp/>antialiasing<sp/>(box<sp/>filter)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>render<sp/>glyphs<sp/>to<sp/>one-channel<sp/>SDF<sp/>bitmaps<sp/>(signed-distance<sp/>field/function)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Todo:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>non-MS<sp/>cmaps</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>crashproof<sp/>on<sp/>bad<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hinting?<sp/>(no<sp/>longer<sp/>patented)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cleartype-style<sp/>AA?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>optimize:<sp/>use<sp/>simple<sp/>memory<sp/>allocator<sp/>for<sp/>intermediates</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>optimize:<sp/>build<sp/>edge-list<sp/>directly<sp/>from<sp/>curves</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>optimize:<sp/>rasterize<sp/>directly<sp/>from<sp/>curves?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ADDITIONAL<sp/>CONTRIBUTORS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Mikko<sp/>Mononen:<sp/>compound<sp/>shape<sp/>support,<sp/>more<sp/>cmap<sp/>formats</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Tor<sp/>Andersson:<sp/>kerning,<sp/>subpixel<sp/>rendering</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Dougall<sp/>Johnson:<sp/>OpenType<sp/>/<sp/>Type<sp/>2<sp/>font<sp/>handling</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Daniel<sp/>Ribeiro<sp/>Maciel:<sp/>basic<sp/>GPOS-based<sp/>kerning</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Misc<sp/>other:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Ryan<sp/>Gordon</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Simon<sp/>Glass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>github:IntellectualKitty</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Imanol<sp/>Celaya</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Daniel<sp/>Ribeiro<sp/>Maciel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Bug/warning<sp/>reports/fixes:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;Zer&quot;<sp/>on<sp/>mollyrocket<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Fabian<sp/>&quot;ryg&quot;<sp/>Giesen<sp/><sp/><sp/>github:NiLuJe</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Cass<sp/>Everitt<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Martins<sp/>Mozeiko<sp/><sp/><sp/><sp/><sp/><sp/><sp/>github:aloucks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>stoiko<sp/>(Haemimont<sp/>Games)<sp/><sp/><sp/>Cap<sp/>Petschulat<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>github:oyvindjam</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Brian<sp/>Hook<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Omar<sp/>Cornut<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>github:vassvik</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Walter<sp/>van<sp/>Niftrik<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Ryan<sp/>Griege</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>David<sp/>Gow<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Peter<sp/>LaValle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>David<sp/>Given<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Sergey<sp/>Popov</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Ivan-Assen<sp/>Ivanov<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Giumo<sp/>X.<sp/>Clanjor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Anthony<sp/>Pesch<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Higor<sp/>Euripedes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Johan<sp/>Duparc<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Thomas<sp/>Fields</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Hou<sp/>Qiming<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Derek<sp/>Vinyard</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Rob<sp/>Loach<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Cort<sp/>Stratton</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Kenney<sp/>Phillis<sp/>Jr.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Brian<sp/>Costabile</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Ken<sp/>Voskuil<sp/>(kaesve)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="comment">//<sp/>VERSION<sp/>HISTORY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>1.26<sp/>(2021-08-28)<sp/>fix<sp/>broken<sp/>rasterizer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>1.25<sp/>(2021-07-11)<sp/>many<sp/>fixes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>1.24<sp/>(2020-02-05)<sp/>fix<sp/>warning</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>1.23<sp/>(2020-02-02)<sp/>query<sp/>SVG<sp/>data<sp/>for<sp/>glyphs;<sp/>query<sp/>whole<sp/>kerning<sp/>table<sp/>(but<sp/>only<sp/>kern<sp/>not<sp/>GPOS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>1.22<sp/>(2019-08-11)<sp/>minimize<sp/>missing-glyph<sp/>duplication;<sp/>fix<sp/>kerning<sp/>if<sp/>both<sp/>&apos;GPOS&apos;<sp/>and<sp/>&apos;kern&apos;<sp/>are<sp/>defined</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>1.21<sp/>(2019-02-25)<sp/>fix<sp/>warning</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>1.20<sp/>(2019-02-07)<sp/>PackFontRange<sp/>skips<sp/>missing<sp/>codepoints;<sp/>GetScaleFontVMetrics()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>1.19<sp/>(2018-02-11)<sp/>GPOS<sp/>kerning,<sp/>STBTT_fmod</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>1.18<sp/>(2018-01-29)<sp/>add<sp/>missing<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>1.17<sp/>(2017-07-23)<sp/>make<sp/>more<sp/>arguments<sp/>const;<sp/>doc<sp/>fix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>1.16<sp/>(2017-07-12)<sp/>SDF<sp/>support</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>1.15<sp/>(2017-03-03)<sp/>make<sp/>more<sp/>arguments<sp/>const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>1.14<sp/>(2017-01-16)<sp/>num-fonts-in-TTC<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>1.13<sp/>(2017-01-02)<sp/>support<sp/>OpenType<sp/>fonts,<sp/>certain<sp/>Apple<sp/>fonts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>1.12<sp/>(2016-10-25)<sp/>suppress<sp/>warnings<sp/>about<sp/>casting<sp/>away<sp/>const<sp/>with<sp/>-Wcast-qual</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>1.11<sp/>(2016-04-02)<sp/>fix<sp/>unused-variable<sp/>warning</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>1.10<sp/>(2016-04-02)<sp/>user-defined<sp/>fabs();<sp/>rare<sp/>memory<sp/>leak;<sp/>remove<sp/>duplicate<sp/>typedef</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>1.09<sp/>(2016-01-16)<sp/>warning<sp/>fix;<sp/>avoid<sp/>crash<sp/>on<sp/>outofmem;<sp/>use<sp/>allocation<sp/>userdata<sp/>properly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>1.08<sp/>(2015-09-13)<sp/>document<sp/>stbtt_Rasterize();<sp/>fixes<sp/>for<sp/>vertical<sp/>&amp;<sp/>horizontal<sp/>edges</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>1.07<sp/>(2015-08-01)<sp/>allow<sp/>PackFontRanges<sp/>to<sp/>accept<sp/>arrays<sp/>of<sp/>sparse<sp/>codepoints;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>variant<sp/>PackFontRanges<sp/>to<sp/>pack<sp/>and<sp/>render<sp/>in<sp/>separate<sp/>phases;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fix<sp/>stbtt_GetFontOFfsetForIndex<sp/>(never<sp/>worked<sp/>for<sp/>non-0<sp/>input?);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fixed<sp/>an<sp/>assert()<sp/>bug<sp/>in<sp/>the<sp/>new<sp/>rasterizer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>replace<sp/>assert()<sp/>with<sp/>STBTT_assert()<sp/>in<sp/>new<sp/>rasterizer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Full<sp/>history<sp/>can<sp/>be<sp/>found<sp/>at<sp/>the<sp/>end<sp/>of<sp/>this<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LICENSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>See<sp/>end<sp/>of<sp/>file<sp/>for<sp/>license<sp/>information.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="comment">//<sp/>USAGE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Include<sp/>this<sp/>file<sp/>in<sp/>whatever<sp/>places<sp/>need<sp/>to<sp/>refer<sp/>to<sp/>it.<sp/>In<sp/>ONE<sp/>C/C++</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>file,<sp/>write:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>STB_TRUETYPE_IMPLEMENTATION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>before<sp/>the<sp/>#include<sp/>of<sp/>this<sp/>file.<sp/>This<sp/>expands<sp/>out<sp/>the<sp/>actual</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>implementation<sp/>into<sp/>that<sp/>C/C++<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>To<sp/>make<sp/>the<sp/>implementation<sp/>private<sp/>to<sp/>the<sp/>file<sp/>that<sp/>generates<sp/>the<sp/>implementation,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>STBTT_STATIC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Simple<sp/>3D<sp/>API<sp/>(don&apos;t<sp/>ship<sp/>this,<sp/>but<sp/>it&apos;s<sp/>fine<sp/>for<sp/>tools<sp/>and<sp/>quick<sp/>start)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt_BakeFontBitmap()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--<sp/>bake<sp/>a<sp/>font<sp/>to<sp/>a<sp/>bitmap<sp/>for<sp/>use<sp/>as<sp/>texture</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt_GetBakedQuad()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--<sp/>compute<sp/>quad<sp/>to<sp/>draw<sp/>for<sp/>a<sp/>given<sp/>char</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Improved<sp/>3D<sp/>API<sp/>(more<sp/>shippable):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#include<sp/>&quot;stb_rect_pack.h&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--<sp/>optional,<sp/>but<sp/>you<sp/>really<sp/>want<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt_PackBegin()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt_PackSetOversampling()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--<sp/>for<sp/>improved<sp/>quality<sp/>on<sp/>small<sp/>fonts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt_PackFontRanges()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--<sp/>pack<sp/>and<sp/>renders</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt_PackEnd()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt_GetPackedQuad()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>&quot;Load&quot;<sp/>a<sp/>font<sp/>file<sp/>from<sp/>a<sp/>memory<sp/>buffer<sp/>(you<sp/>have<sp/>to<sp/>keep<sp/>the<sp/>buffer<sp/>loaded)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt_InitFont()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt_GetFontOffsetForIndex()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--<sp/>indexing<sp/>for<sp/>TTC<sp/>font<sp/>collections</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt_GetNumberOfFonts()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--<sp/>number<sp/>of<sp/>fonts<sp/>for<sp/>TTC<sp/>font<sp/>collections</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Render<sp/>a<sp/>unicode<sp/>codepoint<sp/>to<sp/>a<sp/>bitmap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt_GetCodepointBitmap()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--<sp/>allocates<sp/>and<sp/>returns<sp/>a<sp/>bitmap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt_MakeCodepointBitmap()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--<sp/>renders<sp/>into<sp/>bitmap<sp/>you<sp/>provide</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt_GetCodepointBitmapBox()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--<sp/>how<sp/>big<sp/>the<sp/>bitmap<sp/>must<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Character<sp/>advance/positioning</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt_GetCodepointHMetrics()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt_GetFontVMetrics()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt_GetFontVMetricsOS2()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt_GetCodepointKernAdvance()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Starting<sp/>with<sp/>version<sp/>1.06,<sp/>the<sp/>rasterizer<sp/>was<sp/>replaced<sp/>with<sp/>a<sp/>new,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>faster<sp/>and<sp/>generally-more-precise<sp/>rasterizer.<sp/>The<sp/>new<sp/>rasterizer<sp/>more</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>accurately<sp/>measures<sp/>pixel<sp/>coverage<sp/>for<sp/>anti-aliasing,<sp/>except<sp/>in<sp/>the<sp/>case</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>where<sp/>multiple<sp/>shapes<sp/>overlap,<sp/>in<sp/>which<sp/>case<sp/>it<sp/>overestimates<sp/>the<sp/>AA<sp/>pixel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>coverage.<sp/>Thus,<sp/>anti-aliasing<sp/>of<sp/>intersecting<sp/>shapes<sp/>may<sp/>look<sp/>wrong.<sp/>If</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>this<sp/>turns<sp/>out<sp/>to<sp/>be<sp/>a<sp/>problem,<sp/>you<sp/>can<sp/>re-enable<sp/>the<sp/>old<sp/>rasterizer<sp/>with</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>STBTT_RASTERIZER_VERSION<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>which<sp/>will<sp/>incur<sp/>about<sp/>a<sp/>15%<sp/>speed<sp/>hit.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ADDITIONAL<sp/>DOCUMENTATION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Immediately<sp/>after<sp/>this<sp/>block<sp/>comment<sp/>are<sp/>a<sp/>series<sp/>of<sp/>sample<sp/>programs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>After<sp/>the<sp/>sample<sp/>programs<sp/>is<sp/>the<sp/>&quot;header<sp/>file&quot;<sp/>section.<sp/>This<sp/>section</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>includes<sp/>documentation<sp/>for<sp/>each<sp/>API<sp/>function.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Some<sp/>important<sp/>concepts<sp/>to<sp/>understand<sp/>to<sp/>use<sp/>this<sp/>library:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>Codepoint</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Characters<sp/>are<sp/>defined<sp/>by<sp/>unicode<sp/>codepoints,<sp/>e.g.<sp/>65<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uppercase<sp/>A,<sp/>231<sp/>is<sp/>lowercase<sp/>c<sp/>with<sp/>a<sp/>cedilla,<sp/>0x7e30<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>hiragana<sp/>for<sp/>&quot;ma&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>Glyph</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A<sp/>visual<sp/>character<sp/>shape<sp/>(every<sp/>codepoint<sp/>is<sp/>rendered<sp/>as</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>some<sp/>glyph)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>Glyph<sp/>index</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A<sp/>font-specific<sp/>integer<sp/>ID<sp/>representing<sp/>a<sp/>glyph</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>Baseline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Glyph<sp/>shapes<sp/>are<sp/>defined<sp/>relative<sp/>to<sp/>a<sp/>baseline,<sp/>which<sp/>is<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bottom<sp/>of<sp/>uppercase<sp/>characters.<sp/>Characters<sp/>extend<sp/>both<sp/>above</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>and<sp/>below<sp/>the<sp/>baseline.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>Current<sp/>Point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>As<sp/>you<sp/>draw<sp/>text<sp/>to<sp/>the<sp/>screen,<sp/>you<sp/>keep<sp/>track<sp/>of<sp/>a<sp/>&quot;current<sp/>point&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>which<sp/>is<sp/>the<sp/>origin<sp/>of<sp/>each<sp/>character.<sp/>The<sp/>current<sp/>point&apos;s<sp/>vertical</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>position<sp/>is<sp/>the<sp/>baseline.<sp/>Even<sp/>&quot;baked<sp/>fonts&quot;<sp/>use<sp/>this<sp/>model.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>Vertical<sp/>Font<sp/>Metrics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>vertical<sp/>qualities<sp/>of<sp/>the<sp/>font,<sp/>used<sp/>to<sp/>vertically<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>and<sp/>space<sp/>the<sp/>characters.<sp/>See<sp/>docs<sp/>for<sp/>stbtt_GetFontVMetrics.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>Font<sp/>Size<sp/>in<sp/>Pixels<sp/>or<sp/>Points</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>preferred<sp/>interface<sp/>for<sp/>specifying<sp/>font<sp/>sizes<sp/>in<sp/>stb_truetype</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is<sp/>to<sp/>specify<sp/>how<sp/>tall<sp/>the<sp/>font&apos;s<sp/>vertical<sp/>extent<sp/>should<sp/>be<sp/>in<sp/>pixels.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>If<sp/>that<sp/>sounds<sp/>good<sp/>enough,<sp/>skip<sp/>the<sp/>next<sp/>paragraph.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Most<sp/>font<sp/>APIs<sp/>instead<sp/>use<sp/>&quot;points&quot;,<sp/>which<sp/>are<sp/>a<sp/>common<sp/>typographic</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>measurement<sp/>for<sp/>describing<sp/>font<sp/>size,<sp/>defined<sp/>as<sp/>72<sp/>points<sp/>per<sp/>inch.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stb_truetype<sp/>provides<sp/>a<sp/>point<sp/>API<sp/>for<sp/>compatibility.<sp/>However,<sp/>true</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;per<sp/>inch&quot;<sp/>conventions<sp/>don&apos;t<sp/>make<sp/>much<sp/>sense<sp/>on<sp/>computer<sp/>displays</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>since<sp/>different<sp/>monitors<sp/>have<sp/>different<sp/>number<sp/>of<sp/>pixels<sp/>per</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inch.<sp/>For<sp/>example,<sp/>Windows<sp/>traditionally<sp/>uses<sp/>a<sp/>convention<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>there<sp/>are<sp/>96<sp/>pixels<sp/>per<sp/>inch,<sp/>thus<sp/>making<sp/>&apos;inch&apos;<sp/>measurements<sp/>have</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nothing<sp/>to<sp/>do<sp/>with<sp/>inches,<sp/>and<sp/>thus<sp/>effectively<sp/>defining<sp/>a<sp/>point<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>be<sp/>1.333<sp/>pixels.<sp/>Additionally,<sp/>the<sp/>TrueType<sp/>font<sp/>data<sp/>provides</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>an<sp/>explicit<sp/>scale<sp/>factor<sp/>to<sp/>scale<sp/>a<sp/>given<sp/>font&apos;s<sp/>glyphs<sp/>to<sp/>points,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>but<sp/>the<sp/>author<sp/>has<sp/>observed<sp/>that<sp/>this<sp/>scale<sp/>factor<sp/>is<sp/>often<sp/>wrong</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>non-commercial<sp/>fonts,<sp/>thus<sp/>making<sp/>fonts<sp/>scaled<sp/>in<sp/>points</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>according<sp/>to<sp/>the<sp/>TrueType<sp/>spec<sp/>incoherently<sp/>sized<sp/>in<sp/>practice.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="comment">//<sp/>DETAILED<sp/>USAGE:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Scale:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>Select<sp/>how<sp/>high<sp/>you<sp/>want<sp/>the<sp/>font<sp/>to<sp/>be,<sp/>in<sp/>points<sp/>or<sp/>pixels.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>Call<sp/>ScaleForPixelHeight<sp/>or<sp/>ScaleForMappingEmToPixels<sp/>to<sp/>compute</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>a<sp/>scale<sp/>factor<sp/>SF<sp/>that<sp/>will<sp/>be<sp/>used<sp/>by<sp/>all<sp/>other<sp/>functions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Baseline:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>You<sp/>need<sp/>to<sp/>select<sp/>a<sp/>y-coordinate<sp/>that<sp/>is<sp/>the<sp/>baseline<sp/>of<sp/>where</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>your<sp/>text<sp/>will<sp/>appear.<sp/>Call<sp/>GetFontBoundingBox<sp/>to<sp/>get<sp/>the<sp/>baseline-relative</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>bounding<sp/>box<sp/>for<sp/>all<sp/>characters.<sp/>SF*-y0<sp/>will<sp/>be<sp/>the<sp/>distance<sp/>in<sp/>pixels</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>that<sp/>the<sp/>worst-case<sp/>character<sp/>could<sp/>extend<sp/>above<sp/>the<sp/>baseline,<sp/>so<sp/>if</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>you<sp/>want<sp/>the<sp/>top<sp/>edge<sp/>of<sp/>characters<sp/>to<sp/>appear<sp/>at<sp/>the<sp/>top<sp/>of<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>screen<sp/>where<sp/>y=0,<sp/>then<sp/>you<sp/>would<sp/>set<sp/>the<sp/>baseline<sp/>to<sp/>SF*-y0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Current<sp/>point:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>Set<sp/>the<sp/>current<sp/>point<sp/>where<sp/>the<sp/>first<sp/>character<sp/>will<sp/>appear.<sp/>The</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>first<sp/>character<sp/>could<sp/>extend<sp/>left<sp/>of<sp/>the<sp/>current<sp/>point;<sp/>this<sp/>is<sp/>font</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>dependent.<sp/>You<sp/>can<sp/>either<sp/>choose<sp/>a<sp/>current<sp/>point<sp/>that<sp/>is<sp/>the<sp/>leftmost</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>point<sp/>and<sp/>hope,<sp/>or<sp/>add<sp/>some<sp/>padding,<sp/>or<sp/>check<sp/>the<sp/>bounding<sp/>box<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>left-side-bearing<sp/>of<sp/>the<sp/>first<sp/>character<sp/>to<sp/>be<sp/>displayed<sp/>and<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>the<sp/>current<sp/>point<sp/>based<sp/>on<sp/>that.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Displaying<sp/>a<sp/>character:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>Compute<sp/>the<sp/>bounding<sp/>box<sp/>of<sp/>the<sp/>character.<sp/>It<sp/>will<sp/>contain<sp/>signed<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>relative<sp/>to<sp/>&lt;current_point,<sp/>baseline&gt;.<sp/>I.e.<sp/>if<sp/>it<sp/>returns<sp/>x0,y0,x1,y1,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>then<sp/>the<sp/>character<sp/>should<sp/>be<sp/>displayed<sp/>in<sp/>the<sp/>rectangle<sp/>from</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>&lt;current_point+SF*x0,<sp/>baseline+SF*y0&gt;<sp/>to<sp/>&lt;current_point+SF*x1,baseline+SF*y1).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Advancing<sp/>for<sp/>the<sp/>next<sp/>character:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>Call<sp/>GlyphHMetrics,<sp/>and<sp/>compute<sp/>&apos;current_point<sp/>+=<sp/>SF<sp/>*<sp/>advance&apos;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ADVANCED<sp/>USAGE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Quality:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>-<sp/>Use<sp/>the<sp/>functions<sp/>with<sp/>Subpixel<sp/>at<sp/>the<sp/>end<sp/>to<sp/>allow<sp/>your<sp/>characters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>to<sp/>have<sp/>subpixel<sp/>positioning.<sp/>Since<sp/>the<sp/>font<sp/>is<sp/>anti-aliased,<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>hinted,<sp/>this<sp/>is<sp/>very<sp/>import<sp/>for<sp/>quality.<sp/>(This<sp/>is<sp/>not<sp/>possible<sp/>with</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>baked<sp/>fonts.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>-<sp/>Kerning<sp/>is<sp/>now<sp/>supported,<sp/>and<sp/>if<sp/>you&apos;re<sp/>supporting<sp/>subpixel<sp/>rendering</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>then<sp/>kerning<sp/>is<sp/>worth<sp/>using<sp/>to<sp/>give<sp/>your<sp/>text<sp/>a<sp/>polished<sp/>look.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Performance:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>-<sp/>Convert<sp/>Unicode<sp/>codepoints<sp/>to<sp/>glyph<sp/>indexes<sp/>and<sp/>operate<sp/>on<sp/>the<sp/>glyphs;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>you<sp/>don&apos;t<sp/>do<sp/>this,<sp/>stb_truetype<sp/>is<sp/>forced<sp/>to<sp/>do<sp/>the<sp/>conversion<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>every<sp/>call.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>-<sp/>There<sp/>are<sp/>a<sp/>lot<sp/>of<sp/>memory<sp/>allocations.<sp/>We<sp/>should<sp/>modify<sp/>it<sp/>to<sp/>take</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>temp<sp/>buffer<sp/>and<sp/>allocate<sp/>from<sp/>the<sp/>temp<sp/>buffer<sp/>(without<sp/>freeing),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>should<sp/>help<sp/>performance<sp/>a<sp/>lot.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="comment">//<sp/>NOTES</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>The<sp/>system<sp/>uses<sp/>the<sp/>raw<sp/>data<sp/>found<sp/>in<sp/>the<sp/>.ttf<sp/>file<sp/>without<sp/>changing<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>and<sp/>without<sp/>building<sp/>auxiliary<sp/>data<sp/>structures.<sp/>This<sp/>is<sp/>a<sp/>bit<sp/>inefficient</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>on<sp/>little-endian<sp/>systems<sp/>(the<sp/>data<sp/>is<sp/>big-endian),<sp/>but<sp/>assuming<sp/>you&apos;re</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>caching<sp/>the<sp/>bitmaps<sp/>or<sp/>glyph<sp/>shapes<sp/>this<sp/>shouldn&apos;t<sp/>be<sp/>a<sp/>big<sp/>deal.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>It<sp/>appears<sp/>to<sp/>be<sp/>very<sp/>hard<sp/>to<sp/>programmatically<sp/>determine<sp/>what<sp/>font<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>given<sp/>file<sp/>is<sp/>in<sp/>a<sp/>general<sp/>way.<sp/>I<sp/>provide<sp/>an<sp/>API<sp/>for<sp/>this,<sp/>but<sp/>I<sp/>don&apos;t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>recommend<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight><highlight class="comment">//<sp/>PERFORMANCE<sp/>MEASUREMENTS<sp/>FOR<sp/>1.06:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>32-bit<sp/><sp/><sp/><sp/><sp/>64-bit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Previous<sp/>release:<sp/><sp/>8.83<sp/>s<sp/><sp/><sp/><sp/><sp/>7.68<sp/>s</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Pool<sp/>allocations:<sp/><sp/>7.72<sp/>s<sp/><sp/><sp/><sp/><sp/>6.34<sp/>s</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Inline<sp/>sort<sp/><sp/><sp/><sp/><sp/>:<sp/><sp/>6.54<sp/>s<sp/><sp/><sp/><sp/><sp/>5.65<sp/>s</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>New<sp/>rasterizer<sp/><sp/>:<sp/><sp/>5.63<sp/>s<sp/><sp/><sp/><sp/><sp/>5.00<sp/>s</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Incomplete<sp/>text-in-3d-api<sp/>example,<sp/>which<sp/>draws<sp/>quads<sp/>properly<sp/>aligned<sp/>to<sp/>be<sp/>lossless.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>See<sp/>&quot;tests/truetype_demo_win32.c&quot;<sp/>for<sp/>a<sp/>complete<sp/>version.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STB_TRUETYPE_IMPLEMENTATION<sp/><sp/></highlight><highlight class="comment">//<sp/>force<sp/>following<sp/>include<sp/>to<sp/>generate<sp/>implementation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;stb_truetype.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ttf_buffer[1&lt;&lt;20];</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>temp_bitmap[512*512];</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><ref refid="structstbtt__bakedchar" kindref="compound">stbtt_bakedchar</ref><sp/>cdata[96];<sp/></highlight><highlight class="comment">//<sp/>ASCII<sp/>32..126<sp/>is<sp/>95<sp/>glyphs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal">GLuint<sp/>ftex;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>my_stbtt_initfont(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="293"><highlight class="normal">{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/>fread(ttf_buffer,<sp/>1,<sp/>1&lt;&lt;20,<sp/>fopen(</highlight><highlight class="stringliteral">&quot;c:/windows/fonts/times.ttf&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;rb&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><ref refid="imstb__truetype_8h_1a9f906556cc09c60d136cb9af18305ef3" kindref="member">stbtt_BakeFontBitmap</ref>(ttf_buffer,0,<sp/>32.0,<sp/>temp_bitmap,512,512,<sp/>32,96,<sp/>cdata);<sp/></highlight><highlight class="comment">//<sp/>no<sp/>guarantee<sp/>this<sp/>fits!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>can<sp/>free<sp/>ttf_buffer<sp/>at<sp/>this<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/>glGenTextures(1,<sp/>&amp;ftex);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/>glBindTexture(GL_TEXTURE_2D,<sp/>ftex);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/>glTexImage2D(GL_TEXTURE_2D,<sp/>0,<sp/>GL_ALPHA,<sp/>512,512,<sp/>0,<sp/>GL_ALPHA,<sp/>GL_UNSIGNED_BYTE,<sp/>temp_bitmap);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>can<sp/>free<sp/>temp_bitmap<sp/>at<sp/>this<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/>glTexParameteri(GL_TEXTURE_2D,<sp/>GL_TEXTURE_MIN_FILTER,<sp/>GL_LINEAR);</highlight></codeline>
<codeline lineno="302"><highlight class="normal">}</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>my_stbtt_print(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*text)</highlight></codeline>
<codeline lineno="305"><highlight class="normal">{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>assume<sp/>orthographic<sp/>projection<sp/>with<sp/>units<sp/>=<sp/>screen<sp/>pixels,<sp/>origin<sp/>at<sp/>top<sp/>left</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/>glEnable(GL_BLEND);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/>glBlendFunc(GL_SRC_ALPHA,<sp/>GL_ONE_MINUS_SRC_ALPHA);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/>glEnable(GL_TEXTURE_2D);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/>glBindTexture(GL_TEXTURE_2D,<sp/>ftex);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/>glBegin(GL_QUADS);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*text)<sp/>{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*text<sp/>&gt;=<sp/>32<sp/>&amp;&amp;<sp/>*text<sp/>&lt;<sp/>128)<sp/>{</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structstbtt__aligned__quad" kindref="compound">stbtt_aligned_quad</ref><sp/>q;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imstb__truetype_8h_1ab7f7e3a2bc7ae72720057b07a13c400f" kindref="member">stbtt_GetBakedQuad</ref>(cdata,<sp/>512,512,<sp/>*text-32,<sp/>&amp;x,&amp;y,&amp;q,1);</highlight><highlight class="comment">//1=opengl<sp/>&amp;<sp/>d3d10+,0=d3d9</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glTexCoord2f(q.<ref refid="structstbtt__aligned__quad_1ac23b153ff4042deb5499e5a8cacf4a59" kindref="member">s0</ref>,q.<ref refid="structstbtt__aligned__quad_1a921cd13638a8b3a1e0729021d371da49" kindref="member">t0</ref>);<sp/>glVertex2f(q.<ref refid="structstbtt__aligned__quad_1ad74fd8fd69f8a8e1bd20cb0ab7df6e2e" kindref="member">x0</ref>,q.<ref refid="structstbtt__aligned__quad_1a6178a6b380cf6889893afaeb5019ecd6" kindref="member">y0</ref>);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glTexCoord2f(q.<ref refid="structstbtt__aligned__quad_1a26360efee3cdfb5aa2bdc593157b436b" kindref="member">s1</ref>,q.<ref refid="structstbtt__aligned__quad_1a921cd13638a8b3a1e0729021d371da49" kindref="member">t0</ref>);<sp/>glVertex2f(q.<ref refid="structstbtt__aligned__quad_1a43a7eeac24238e289f825e644331dee6" kindref="member">x1</ref>,q.<ref refid="structstbtt__aligned__quad_1a6178a6b380cf6889893afaeb5019ecd6" kindref="member">y0</ref>);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glTexCoord2f(q.<ref refid="structstbtt__aligned__quad_1a26360efee3cdfb5aa2bdc593157b436b" kindref="member">s1</ref>,q.<ref refid="structstbtt__aligned__quad_1ae1f5ed7333ca5bba46c6a098a05ac75b" kindref="member">t1</ref>);<sp/>glVertex2f(q.<ref refid="structstbtt__aligned__quad_1a43a7eeac24238e289f825e644331dee6" kindref="member">x1</ref>,q.<ref refid="structstbtt__aligned__quad_1a66ee8061da982804073a3d2a9114e53c" kindref="member">y1</ref>);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glTexCoord2f(q.<ref refid="structstbtt__aligned__quad_1ac23b153ff4042deb5499e5a8cacf4a59" kindref="member">s0</ref>,q.<ref refid="structstbtt__aligned__quad_1ae1f5ed7333ca5bba46c6a098a05ac75b" kindref="member">t1</ref>);<sp/>glVertex2f(q.<ref refid="structstbtt__aligned__quad_1ad74fd8fd69f8a8e1bd20cb0ab7df6e2e" kindref="member">x0</ref>,q.<ref refid="structstbtt__aligned__quad_1a66ee8061da982804073a3d2a9114e53c" kindref="member">y1</ref>);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++text;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/>glEnd();</highlight></codeline>
<codeline lineno="324"><highlight class="normal">}</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Complete<sp/>program<sp/>(this<sp/>compiles):<sp/>get<sp/>a<sp/>single<sp/>bitmap,<sp/>print<sp/>as<sp/>ASCII<sp/>art</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STB_TRUETYPE_IMPLEMENTATION<sp/><sp/></highlight><highlight class="comment">//<sp/>force<sp/>following<sp/>include<sp/>to<sp/>generate<sp/>implementation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;stb_truetype.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ttf_buffer[1&lt;&lt;25];</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**argv)</highlight></codeline>
<codeline lineno="340"><highlight class="normal">{</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref><sp/>font;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*bitmap;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w,h,i,j,c<sp/>=<sp/>(argc<sp/>&gt;<sp/>1<sp/>?<sp/>atoi(argv[1])<sp/>:<sp/></highlight><highlight class="stringliteral">&apos;a&apos;</highlight><highlight class="normal">),<sp/>s<sp/>=<sp/>(argc<sp/>&gt;<sp/>2<sp/>?<sp/>atoi(argv[2])<sp/>:<sp/>20);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/>fread(ttf_buffer,<sp/>1,<sp/>1&lt;&lt;25,<sp/>fopen(argc<sp/>&gt;<sp/>3<sp/>?<sp/>argv[3]<sp/>:<sp/></highlight><highlight class="stringliteral">&quot;c:/windows/fonts/arialbd.ttf&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;rb&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><ref refid="imstb__truetype_8h_1ac3b6bda1851d0b1a4fd53f5f353668e5" kindref="member">stbtt_InitFont</ref>(&amp;font,<sp/>ttf_buffer,<sp/><ref refid="imstb__truetype_8h_1a5ba17159df62ca39649e6f2231ac6e89" kindref="member">stbtt_GetFontOffsetForIndex</ref>(ttf_buffer,0));</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/>bitmap<sp/>=<sp/><ref refid="imstb__truetype_8h_1a6206e92bc06993ba26b8e7c7671f8aaa" kindref="member">stbtt_GetCodepointBitmap</ref>(&amp;font,<sp/>0,<ref refid="imstb__truetype_8h_1aad275d7211530a3d817fcd8647690b7b" kindref="member">stbtt_ScaleForPixelHeight</ref>(&amp;font,<sp/>s),<sp/>c,<sp/>&amp;w,<sp/>&amp;h,<sp/>0,0);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j=0;<sp/>j<sp/>&lt;<sp/>h;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>w;<sp/>++i)</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>putchar(</highlight><highlight class="stringliteral">&quot;<sp/>.:ioVM@&quot;</highlight><highlight class="normal">[bitmap[j*w+i]&gt;&gt;5]);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>putchar(</highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="356"><highlight class="normal">}</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Output:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>.ii.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>@@@@@@.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>V@Mio@@o</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>:i.<sp/><sp/>V@V</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>:oM@@M</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>:@@@MM@M</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>@@o<sp/><sp/>o@M</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>:@@.<sp/><sp/>M@M</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>@@@o@@@@</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>:M@@V:@@.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Complete<sp/>program:<sp/>print<sp/>&quot;Hello<sp/>World!&quot;<sp/>banner,<sp/>with<sp/>bugs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buffer[24&lt;&lt;20];</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>screen[20][79];</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>arg,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**argv)</highlight></codeline>
<codeline lineno="381"><highlight class="normal">{</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref><sp/>font;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,j,ascent,baseline,ch=0;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale,<sp/>xpos=2;<sp/></highlight><highlight class="comment">//<sp/>leave<sp/>a<sp/>little<sp/>padding<sp/>in<sp/>case<sp/>the<sp/>character<sp/>extends<sp/>left</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*text<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Heljo<sp/>World!&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>intentionally<sp/>misspelled<sp/>to<sp/>show<sp/>&apos;lj&apos;<sp/>brokenness</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/>fread(buffer,<sp/>1,<sp/>1000000,<sp/>fopen(</highlight><highlight class="stringliteral">&quot;c:/windows/fonts/arialbd.ttf&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;rb&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><ref refid="imstb__truetype_8h_1ac3b6bda1851d0b1a4fd53f5f353668e5" kindref="member">stbtt_InitFont</ref>(&amp;font,<sp/>buffer,<sp/>0);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/>scale<sp/>=<sp/><ref refid="imstb__truetype_8h_1aad275d7211530a3d817fcd8647690b7b" kindref="member">stbtt_ScaleForPixelHeight</ref>(&amp;font,<sp/>15);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><ref refid="imstb__truetype_8h_1a2784e0e55678a5980e950b1c9fbc75f0" kindref="member">stbtt_GetFontVMetrics</ref>(&amp;font,<sp/>&amp;ascent,0,0);</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/>baseline<sp/>=<sp/>(int)<sp/>(ascent*scale);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(text[ch])<sp/>{</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>advance,lsb,x0,y0,x1,y1;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x_shift<sp/>=<sp/>xpos<sp/>-<sp/>(float)<sp/>floor(xpos);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imstb__truetype_8h_1a015fbd6e96df8ee58bd41bb4211b64e7" kindref="member">stbtt_GetCodepointHMetrics</ref>(&amp;font,<sp/>text[ch],<sp/>&amp;advance,<sp/>&amp;lsb);</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imstb__truetype_8h_1a18fae014dd2261e554248ca737d05578" kindref="member">stbtt_GetCodepointBitmapBoxSubpixel</ref>(&amp;font,<sp/>text[ch],<sp/>scale,scale,x_shift,0,<sp/>&amp;x0,&amp;y0,&amp;x1,&amp;y1);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imstb__truetype_8h_1a51bd3fc45817d8606c749e585241fa71" kindref="member">stbtt_MakeCodepointBitmapSubpixel</ref>(&amp;font,<sp/>&amp;screen[baseline<sp/>+<sp/>y0][(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>xpos<sp/>+<sp/>x0],<sp/>x1-x0,y1-y0,<sp/>79,<sp/>scale,scale,x_shift,0,<sp/>text[ch]);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>note<sp/>that<sp/>this<sp/>stomps<sp/>the<sp/>old<sp/>data,<sp/>so<sp/>where<sp/>character<sp/>boxes<sp/>overlap<sp/>(e.g.<sp/>&apos;lj&apos;)<sp/>it&apos;s<sp/>wrong</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>because<sp/>this<sp/>API<sp/>is<sp/>really<sp/>for<sp/>baking<sp/>character<sp/>bitmaps<sp/>into<sp/>textures.<sp/>if<sp/>you<sp/>want<sp/>to<sp/>render</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>sequence<sp/>of<sp/>characters,<sp/>you<sp/>really<sp/>need<sp/>to<sp/>render<sp/>each<sp/>bitmap<sp/>to<sp/>a<sp/>temp<sp/>buffer,<sp/>then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&quot;alpha<sp/>blend&quot;<sp/>that<sp/>into<sp/>the<sp/>working<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xpos<sp/>+=<sp/>(advance<sp/>*<sp/>scale);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(text[ch+1])</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xpos<sp/>+=<sp/>scale*<ref refid="imstb__truetype_8h_1a83703ede616bacefc0312ef2803774a1" kindref="member">stbtt_GetCodepointKernAdvance</ref>(&amp;font,<sp/>text[ch],text[ch+1]);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++ch;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j=0;<sp/>j<sp/>&lt;<sp/>20;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>78;<sp/>++i)</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>putchar(</highlight><highlight class="stringliteral">&quot;<sp/>.:ioVM@&quot;</highlight><highlight class="normal">[screen[j][i]&gt;&gt;5]);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>putchar(</highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="417"><highlight class="normal">}</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>STB_TRUETYPE_IMPLEMENTATION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>#define<sp/>your<sp/>own<sp/>(u)stbtt_int8/16/32<sp/>before<sp/>including<sp/>to<sp/>override<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifndef<sp/>stbtt_uint8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/>stbtt_uint8;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/>stbtt_int8;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/><sp/>stbtt_uint16;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/><sp/>stbtt_int16;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>stbtt_uint32;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>stbtt_int32;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>stbtt__check_size32[</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(stbtt_int32)==4<sp/>?<sp/>1<sp/>:<sp/>-1];</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>stbtt__check_size16[</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(stbtt_int16)==2<sp/>?<sp/>1<sp/>:<sp/>-1];</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>e.g.<sp/>#define<sp/>your<sp/>own<sp/>STBTT_ifloor/STBTT_iceil()<sp/>to<sp/>avoid<sp/>math.h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifndef<sp/>STBTT_ifloor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#define<sp/>STBTT_ifloor(x)<sp/><sp/><sp/>((int)<sp/>floor(x))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#define<sp/>STBTT_iceil(x)<sp/><sp/><sp/><sp/>((int)<sp/>ceil(x))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifndef<sp/>STBTT_sqrt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#define<sp/>STBTT_sqrt(x)<sp/><sp/><sp/><sp/><sp/><sp/>sqrt(x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#define<sp/>STBTT_pow(x,y)<sp/><sp/><sp/><sp/><sp/>pow(x,y)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifndef<sp/>STBTT_fmod</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#define<sp/>STBTT_fmod(x,y)<sp/><sp/><sp/><sp/>fmod(x,y)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifndef<sp/>STBTT_cos</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#define<sp/>STBTT_cos(x)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>cos(x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#define<sp/>STBTT_acos(x)<sp/><sp/><sp/><sp/><sp/><sp/>acos(x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifndef<sp/>STBTT_fabs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#define<sp/>STBTT_fabs(x)<sp/><sp/><sp/><sp/><sp/><sp/>fabs(x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>#define<sp/>your<sp/>own<sp/>functions<sp/>&quot;STBTT_malloc&quot;<sp/>/<sp/>&quot;STBTT_free&quot;<sp/>to<sp/>avoid<sp/>malloc.h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifndef<sp/>STBTT_malloc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#define<sp/>STBTT_malloc(x,u)<sp/><sp/>((void)(u),malloc(x))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#define<sp/>STBTT_free(x,u)<sp/><sp/><sp/><sp/>((void)(u),free(x))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifndef<sp/>STBTT_assert</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#include<sp/>&lt;assert.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#define<sp/>STBTT_assert(x)<sp/><sp/><sp/><sp/>assert(x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifndef<sp/>STBTT_strlen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#define<sp/>STBTT_strlen(x)<sp/><sp/><sp/><sp/>strlen(x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifndef<sp/>STBTT_memcpy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#define<sp/>STBTT_memcpy<sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#define<sp/>STBTT_memset<sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__STB_INCLUDE_STB_TRUETYPE_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="505" refid="imstb__truetype_8h_1a793c93dc8e39787cf5966bec548730d5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__STB_INCLUDE_STB_TRUETYPE_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>STBTT_STATIC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBTT_DEF<sp/>static</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="510" refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBTT_DEF<sp/>extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight><highlight class="comment">//<sp/>private<sp/>structure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="518" refid="structstbtt____buf" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal">{</highlight></codeline>
<codeline lineno="520" refid="structstbtt____buf_1a376d8cdacbc8295a7e88567ad52a0ac4" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structstbtt____buf_1a376d8cdacbc8295a7e88567ad52a0ac4" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="521" refid="structstbtt____buf_1ac047fda650726920531272c28aa354fb" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structstbtt____buf_1ac047fda650726920531272c28aa354fb" kindref="member">cursor</ref>;</highlight></codeline>
<codeline lineno="522" refid="structstbtt____buf_1a0f6f2d06981ab4a5697233bbd0cafb5b" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structstbtt____buf_1a0f6f2d06981ab4a5697233bbd0cafb5b" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="523"><highlight class="normal">}<sp/><ref refid="structstbtt____buf" kindref="compound">stbtt__buf</ref>;</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TEXTURE<sp/>BAKING<sp/>API</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>you<sp/>use<sp/>this<sp/>API,<sp/>you<sp/>only<sp/>have<sp/>to<sp/>call<sp/>two<sp/>functions<sp/>ever.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
<codeline lineno="532" refid="structstbtt__bakedchar" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal">{</highlight></codeline>
<codeline lineno="534" refid="structstbtt__bakedchar_1a8011a0ed0410de9fa405c9cb1ab43da2" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/><ref refid="structstbtt__bakedchar_1a8011a0ed0410de9fa405c9cb1ab43da2" kindref="member">x0</ref>,<ref refid="structstbtt__bakedchar_1aec4def12c086e0038ba32ff33ee78644" kindref="member">y0</ref>,<ref refid="structstbtt__bakedchar_1a72c22c32abde95a5ba02925b8bd892bf" kindref="member">x1</ref>,<ref refid="structstbtt__bakedchar_1ac831dc667f6c39b5d22740c6cbd5bc3f" kindref="member">y1</ref>;<sp/></highlight><highlight class="comment">//<sp/>coordinates<sp/>of<sp/>bbox<sp/>in<sp/>bitmap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="535" refid="structstbtt__bakedchar_1ad77b35d1a849d9eb7edb91df05b10536" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structstbtt__bakedchar_1a0708a6588a2768b68a3ae59002944b7c" kindref="member">xoff</ref>,<ref refid="structstbtt__bakedchar_1aba01393e52d1c6f4ce86a8b51e498bb4" kindref="member">yoff</ref>,<ref refid="structstbtt__bakedchar_1ad77b35d1a849d9eb7edb91df05b10536" kindref="member">xadvance</ref>;</highlight></codeline>
<codeline lineno="536"><highlight class="normal">}<sp/><ref refid="structstbtt__bakedchar" kindref="compound">stbtt_bakedchar</ref>;</highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight></codeline>
<codeline lineno="538" refid="imstb__truetype_8h_1a9f906556cc09c60d136cb9af18305ef3" refkind="member"><highlight class="normal"><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="imstb__truetype_8h_1a9f906556cc09c60d136cb9af18305ef3" kindref="member">stbtt_BakeFontBitmap</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offset,<sp/><sp/></highlight><highlight class="comment">//<sp/>font<sp/>location<sp/>(use<sp/>offset=0<sp/>for<sp/>plain<sp/>.ttf)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>pixel_height,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>height<sp/>of<sp/>font<sp/>in<sp/>pixels</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pixels,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pw,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ph,<sp/><sp/></highlight><highlight class="comment">//<sp/>bitmap<sp/>to<sp/>be<sp/>filled<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>first_char,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_chars,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>characters<sp/>to<sp/>bake</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structstbtt__bakedchar" kindref="compound">stbtt_bakedchar</ref><sp/>*chardata);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>you<sp/>allocate<sp/>this,<sp/>it&apos;s<sp/>num_chars<sp/>long</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight><highlight class="comment">//<sp/>if<sp/>return<sp/>is<sp/>positive,<sp/>the<sp/>first<sp/>unused<sp/>row<sp/>of<sp/>the<sp/>bitmap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight><highlight class="comment">//<sp/>if<sp/>return<sp/>is<sp/>negative,<sp/>returns<sp/>the<sp/>negative<sp/>of<sp/>the<sp/>number<sp/>of<sp/>characters<sp/>that<sp/>fit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight><highlight class="comment">//<sp/>if<sp/>return<sp/>is<sp/>0,<sp/>no<sp/>characters<sp/>fit<sp/>and<sp/>no<sp/>rows<sp/>were<sp/>used</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>uses<sp/>a<sp/>very<sp/>crappy<sp/>packing.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight></codeline>
<codeline lineno="548" refid="structstbtt__aligned__quad" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal">{</highlight></codeline>
<codeline lineno="550" refid="structstbtt__aligned__quad_1ac23b153ff4042deb5499e5a8cacf4a59" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structstbtt__aligned__quad_1ad74fd8fd69f8a8e1bd20cb0ab7df6e2e" kindref="member">x0</ref>,<ref refid="structstbtt__aligned__quad_1a6178a6b380cf6889893afaeb5019ecd6" kindref="member">y0</ref>,<ref refid="structstbtt__aligned__quad_1ac23b153ff4042deb5499e5a8cacf4a59" kindref="member">s0</ref>,<ref refid="structstbtt__aligned__quad_1a921cd13638a8b3a1e0729021d371da49" kindref="member">t0</ref>;<sp/></highlight><highlight class="comment">//<sp/>top-left</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="551" refid="structstbtt__aligned__quad_1a26360efee3cdfb5aa2bdc593157b436b" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structstbtt__aligned__quad_1a43a7eeac24238e289f825e644331dee6" kindref="member">x1</ref>,<ref refid="structstbtt__aligned__quad_1a66ee8061da982804073a3d2a9114e53c" kindref="member">y1</ref>,<ref refid="structstbtt__aligned__quad_1a26360efee3cdfb5aa2bdc593157b436b" kindref="member">s1</ref>,<ref refid="structstbtt__aligned__quad_1ae1f5ed7333ca5bba46c6a098a05ac75b" kindref="member">t1</ref>;<sp/></highlight><highlight class="comment">//<sp/>bottom-right</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal">}<sp/><ref refid="structstbtt__aligned__quad" kindref="compound">stbtt_aligned_quad</ref>;</highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight></codeline>
<codeline lineno="554" refid="imstb__truetype_8h_1ab7f7e3a2bc7ae72720057b07a13c400f" refkind="member"><highlight class="normal"><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="imstb__truetype_8h_1ab7f7e3a2bc7ae72720057b07a13c400f" kindref="member">stbtt_GetBakedQuad</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structstbtt__bakedchar" kindref="compound">stbtt_bakedchar</ref><sp/>*chardata,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pw,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ph,<sp/><sp/></highlight><highlight class="comment">//<sp/>same<sp/>data<sp/>as<sp/>above</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>char_index,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>character<sp/>to<sp/>display</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*xpos,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*ypos,<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pointers<sp/>to<sp/>current<sp/>position<sp/>in<sp/>screen<sp/>pixel<sp/>space</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structstbtt__aligned__quad" kindref="compound">stbtt_aligned_quad</ref><sp/>*q,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>output:<sp/>quad<sp/>to<sp/>draw</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>opengl_fillrule);<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>true<sp/>if<sp/>opengl<sp/>fill<sp/>rule;<sp/>false<sp/>if<sp/>DX9<sp/>or<sp/>earlier</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Call<sp/>GetBakedQuad<sp/>with<sp/>char_index<sp/>=<sp/>&apos;character<sp/>-<sp/>first_char&apos;,<sp/>and<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight><highlight class="comment">//<sp/>creates<sp/>the<sp/>quad<sp/>you<sp/>need<sp/>to<sp/>draw<sp/>and<sp/>advances<sp/>the<sp/>current<sp/>position.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>coordinate<sp/>system<sp/>used<sp/>assumes<sp/>y<sp/>increases<sp/>downwards.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Characters<sp/>will<sp/>extend<sp/>both<sp/>above<sp/>and<sp/>below<sp/>the<sp/>current<sp/>position;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight><highlight class="comment">//<sp/>see<sp/>discussion<sp/>of<sp/>&quot;BASELINE&quot;<sp/>above.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight><highlight class="comment">//<sp/>It&apos;s<sp/>inefficient;<sp/>you<sp/>might<sp/>want<sp/>to<sp/>c&amp;p<sp/>it<sp/>and<sp/>optimize<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight></codeline>
<codeline lineno="569" refid="imstb__truetype_8h_1ae402c69747eee588a5fc18d8ea506b42" refkind="member"><highlight class="normal"><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="imstb__truetype_8h_1ae402c69747eee588a5fc18d8ea506b42" kindref="member">stbtt_GetScaledFontVMetrics</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fontdata,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>size,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*ascent,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*descent,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*lineGap);</highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Query<sp/>the<sp/>font<sp/>vertical<sp/>metrics<sp/>without<sp/>having<sp/>to<sp/>create<sp/>a<sp/>font<sp/>first.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight><highlight class="comment">//<sp/>NEW<sp/>TEXTURE<sp/>BAKING<sp/>API</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>provides<sp/>options<sp/>for<sp/>packing<sp/>multiple<sp/>fonts<sp/>into<sp/>one<sp/>atlas,<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight><highlight class="comment">//<sp/>perfectly<sp/>but<sp/>better<sp/>than<sp/>nothing.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight></codeline>
<codeline lineno="580" refid="structstbtt__packedchar" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal">{</highlight></codeline>
<codeline lineno="582" refid="structstbtt__packedchar_1a02cb73a5af37ed60dafd5e4b731af09e" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/><ref refid="structstbtt__packedchar_1a02cb73a5af37ed60dafd5e4b731af09e" kindref="member">x0</ref>,<ref refid="structstbtt__packedchar_1a43429c9545ca8ccf14012cedcf83c1a7" kindref="member">y0</ref>,<ref refid="structstbtt__packedchar_1a99d371f0261cd13dfd1a179f143175d1" kindref="member">x1</ref>,<ref refid="structstbtt__packedchar_1a9569073ba79fad355210b6ffc35905a7" kindref="member">y1</ref>;<sp/></highlight><highlight class="comment">//<sp/>coordinates<sp/>of<sp/>bbox<sp/>in<sp/>bitmap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="583" refid="structstbtt__packedchar_1a28707ae98d1fa946b3390840aeff76ab" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structstbtt__packedchar_1adb30c50674c79d32116ae6f94bd5893f" kindref="member">xoff</ref>,<ref refid="structstbtt__packedchar_1a6f342ae10df5319f4999ffd256567142" kindref="member">yoff</ref>,<ref refid="structstbtt__packedchar_1a28707ae98d1fa946b3390840aeff76ab" kindref="member">xadvance</ref>;</highlight></codeline>
<codeline lineno="584" refid="structstbtt__packedchar_1a3a33880f925ca826c908cbf9f0673c9f" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structstbtt__packedchar_1a3a33880f925ca826c908cbf9f0673c9f" kindref="member">xoff2</ref>,<ref refid="structstbtt__packedchar_1a2ec5bbd1010c9a9b7cbdeb7503dcaffa" kindref="member">yoff2</ref>;</highlight></codeline>
<codeline lineno="585"><highlight class="normal">}<sp/><ref refid="structstbtt__packedchar" kindref="compound">stbtt_packedchar</ref>;</highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight></codeline>
<codeline lineno="587" refid="imstb__truetype_8h_1a37d613643adacbed24c22718faf6afc7" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structstbtt__pack__context" kindref="compound">stbtt_pack_context</ref><sp/><ref refid="structstbtt__pack__context" kindref="compound">stbtt_pack_context</ref>;</highlight></codeline>
<codeline lineno="588" refid="imstb__truetype_8h_1a82ca6622f6983cc08eca850280126daf" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref><sp/><ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref>;</highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>STB_RECT_PACK_VERSION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structstbrp__rect" kindref="compound">stbrp_rect</ref><sp/><ref refid="structstbrp__rect" kindref="compound">stbrp_rect</ref>;</highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight></codeline>
<codeline lineno="593" refid="imstb__truetype_8h_1adfc8faff4ebfbad1ce0bff9b4ebc691c" refkind="member"><highlight class="normal"><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><ref refid="imstb__truetype_8h_1adfc8faff4ebfbad1ce0bff9b4ebc691c" kindref="member">stbtt_PackBegin</ref>(<ref refid="structstbtt__pack__context" kindref="compound">stbtt_pack_context</ref><sp/>*spc,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pixels,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stride_in_bytes,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>padding,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*alloc_context);</highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Initializes<sp/>a<sp/>packing<sp/>context<sp/>stored<sp/>in<sp/>the<sp/>passed-in<sp/>stbtt_pack_context.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Future<sp/>calls<sp/>using<sp/>this<sp/>context<sp/>will<sp/>pack<sp/>characters<sp/>into<sp/>the<sp/>bitmap<sp/>passed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight><highlight class="comment">//<sp/>in<sp/>here:<sp/>a<sp/>1-channel<sp/>bitmap<sp/>that<sp/>is<sp/>width<sp/>*<sp/>height.<sp/>stride_in_bytes<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>distance<sp/>from<sp/>one<sp/>row<sp/>to<sp/>the<sp/>next<sp/>(or<sp/>0<sp/>to<sp/>mean<sp/>they<sp/>are<sp/>packed<sp/>tightly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight><highlight class="comment">//<sp/>together).<sp/>&quot;padding&quot;<sp/>is<sp/>the<sp/>amount<sp/>of<sp/>padding<sp/>to<sp/>leave<sp/>between<sp/>each</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight><highlight class="comment">//<sp/>character<sp/>(normally<sp/>you<sp/>want<sp/>&apos;1&apos;<sp/>for<sp/>bitmaps<sp/>you&apos;ll<sp/>use<sp/>as<sp/>textures<sp/>with</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"></highlight><highlight class="comment">//<sp/>bilinear<sp/>filtering).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>0<sp/>on<sp/>failure,<sp/>1<sp/>on<sp/>success.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight></codeline>
<codeline lineno="604" refid="imstb__truetype_8h_1ab51e492c4b320b8af6ef557ad3388140" refkind="member"><highlight class="normal"><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="imstb__truetype_8h_1ab51e492c4b320b8af6ef557ad3388140" kindref="member">stbtt_PackEnd</ref><sp/><sp/>(<ref refid="structstbtt__pack__context" kindref="compound">stbtt_pack_context</ref><sp/>*spc);</highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Cleans<sp/>up<sp/>the<sp/>packing<sp/>context<sp/>and<sp/>frees<sp/>all<sp/>memory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight></codeline>
<codeline lineno="607" refid="imstb__truetype_8h_1a42c4058f71988e703efdf4703d5dfe31" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBTT_POINT_SIZE(x)<sp/><sp/><sp/>(-(x))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight></codeline>
<codeline lineno="609" refid="imstb__truetype_8h_1a344fc3b0ff7829d993ca8db3eadd321f" refkind="member"><highlight class="normal"><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><ref refid="imstb__truetype_8h_1a344fc3b0ff7829d993ca8db3eadd321f" kindref="member">stbtt_PackFontRange</ref>(<ref refid="structstbtt__pack__context" kindref="compound">stbtt_pack_context</ref><sp/>*spc,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fontdata,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>font_index,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>font_size,</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>first_unicode_char_in_range,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_chars_in_range,<sp/><ref refid="structstbtt__packedchar" kindref="compound">stbtt_packedchar</ref><sp/>*chardata_for_range);</highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Creates<sp/>character<sp/>bitmaps<sp/>from<sp/>the<sp/>font_index&apos;th<sp/>font<sp/>found<sp/>in<sp/>fontdata<sp/>(use</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight><highlight class="comment">//<sp/>font_index=0<sp/>if<sp/>you<sp/>don&apos;t<sp/>know<sp/>what<sp/>that<sp/>is).<sp/>It<sp/>creates<sp/>num_chars_in_range</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight><highlight class="comment">//<sp/>bitmaps<sp/>for<sp/>characters<sp/>with<sp/>unicode<sp/>values<sp/>starting<sp/>at<sp/>first_unicode_char_in_range</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>increasing.<sp/>Data<sp/>for<sp/>how<sp/>to<sp/>render<sp/>them<sp/>is<sp/>stored<sp/>in<sp/>chardata_for_range;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight><highlight class="comment">//<sp/>pass<sp/>these<sp/>to<sp/>stbtt_GetPackedQuad<sp/>to<sp/>get<sp/>back<sp/>renderable<sp/>quads.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight><highlight class="comment">//<sp/>font_size<sp/>is<sp/>the<sp/>full<sp/>height<sp/>of<sp/>the<sp/>character<sp/>from<sp/>ascender<sp/>to<sp/>descender,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight><highlight class="comment">//<sp/>as<sp/>computed<sp/>by<sp/>stbtt_ScaleForPixelHeight.<sp/>To<sp/>use<sp/>a<sp/>point<sp/>size<sp/>as<sp/>computed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight><highlight class="comment">//<sp/>by<sp/>stbtt_ScaleForMappingEmToPixels,<sp/>wrap<sp/>the<sp/>point<sp/>size<sp/>in<sp/>STBTT_POINT_SIZE()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>pass<sp/>that<sp/>result<sp/>as<sp/>&apos;font_size&apos;:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>...,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>20<sp/>,<sp/>...<sp/>//<sp/>font<sp/>max<sp/>minus<sp/>min<sp/>y<sp/>is<sp/>20<sp/>pixels<sp/>tall</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>...,<sp/>STBTT_POINT_SIZE(20),<sp/>...<sp/>//<sp/>&apos;M&apos;<sp/>is<sp/>20<sp/>pixels<sp/>tall</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight></codeline>
<codeline lineno="624" refid="structstbtt__pack__range" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal">{</highlight></codeline>
<codeline lineno="626" refid="structstbtt__pack__range_1a296916dc971e5e7627822fe98dc42828" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structstbtt__pack__range_1a296916dc971e5e7627822fe98dc42828" kindref="member">font_size</ref>;</highlight></codeline>
<codeline lineno="627" refid="structstbtt__pack__range_1a3b414cbee1e164c29dd138e0ae3d5759" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structstbtt__pack__range_1a3b414cbee1e164c29dd138e0ae3d5759" kindref="member">first_unicode_codepoint_in_range</ref>;<sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>non-zero,<sp/>then<sp/>the<sp/>chars<sp/>are<sp/>continuous,<sp/>and<sp/>this<sp/>is<sp/>the<sp/>first<sp/>codepoint</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="628" refid="structstbtt__pack__range_1a1567aa5455e1251529a91b46261368cf" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<ref refid="structstbtt__pack__range_1a1567aa5455e1251529a91b46261368cf" kindref="member">array_of_unicode_codepoints</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>non-zero,<sp/>then<sp/>this<sp/>is<sp/>an<sp/>array<sp/>of<sp/>unicode<sp/>codepoints</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="629" refid="structstbtt__pack__range_1a046d65b6ffb65fb998d471ba098e2e23" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structstbtt__pack__range_1a046d65b6ffb65fb998d471ba098e2e23" kindref="member">num_chars</ref>;</highlight></codeline>
<codeline lineno="630" refid="structstbtt__pack__range_1aa8f7ddd637ed341ea39b08466fab9284" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="structstbtt__packedchar" kindref="compound">stbtt_packedchar</ref><sp/>*<ref refid="structstbtt__pack__range_1aa8f7ddd637ed341ea39b08466fab9284" kindref="member">chardata_for_range</ref>;<sp/></highlight><highlight class="comment">//<sp/>output</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="631" refid="structstbtt__pack__range_1a7a642139ce446c58fde5c48553bcf008" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="structstbtt__pack__range_1a7a642139ce446c58fde5c48553bcf008" kindref="member">h_oversample</ref>,<sp/><ref refid="structstbtt__pack__range_1a6288f14006e257544db3d015c32b4113" kindref="member">v_oversample</ref>;<sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>set<sp/>these,<sp/>they&apos;re<sp/>used<sp/>internally</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal">}<sp/><ref refid="structstbtt__pack__range" kindref="compound">stbtt_pack_range</ref>;</highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight></codeline>
<codeline lineno="634" refid="imstb__truetype_8h_1a051bbf0eddd73f253c1b1050a9e47157" refkind="member"><highlight class="normal"><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><ref refid="imstb__truetype_8h_1a051bbf0eddd73f253c1b1050a9e47157" kindref="member">stbtt_PackFontRanges</ref>(<ref refid="structstbtt__pack__context" kindref="compound">stbtt_pack_context</ref><sp/>*spc,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fontdata,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>font_index,<sp/><ref refid="structstbtt__pack__range" kindref="compound">stbtt_pack_range</ref><sp/>*ranges,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_ranges);</highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Creates<sp/>character<sp/>bitmaps<sp/>from<sp/>multiple<sp/>ranges<sp/>of<sp/>characters<sp/>stored<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ranges.<sp/>This<sp/>will<sp/>usually<sp/>create<sp/>a<sp/>better-packed<sp/>bitmap<sp/>than<sp/>multiple</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight><highlight class="comment">//<sp/>calls<sp/>to<sp/>stbtt_PackFontRange.<sp/>Note<sp/>that<sp/>you<sp/>can<sp/>call<sp/>this<sp/>multiple</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"></highlight><highlight class="comment">//<sp/>times<sp/>within<sp/>a<sp/>single<sp/>PackBegin/PackEnd.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight></codeline>
<codeline lineno="640" refid="imstb__truetype_8h_1a4c55e174efbacaf82a8ddb9d1956717e" refkind="member"><highlight class="normal"><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="imstb__truetype_8h_1a4c55e174efbacaf82a8ddb9d1956717e" kindref="member">stbtt_PackSetOversampling</ref>(<ref refid="structstbtt__pack__context" kindref="compound">stbtt_pack_context</ref><sp/>*spc,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h_oversample,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>v_oversample);</highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Oversampling<sp/>a<sp/>font<sp/>increases<sp/>the<sp/>quality<sp/>by<sp/>allowing<sp/>higher-quality<sp/>subpixel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight><highlight class="comment">//<sp/>positioning,<sp/>and<sp/>is<sp/>especially<sp/>valuable<sp/>at<sp/>smaller<sp/>text<sp/>sizes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>function<sp/>sets<sp/>the<sp/>amount<sp/>of<sp/>oversampling<sp/>for<sp/>all<sp/>following<sp/>calls<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight><highlight class="comment">//<sp/>stbtt_PackFontRange(s)<sp/>or<sp/>stbtt_PackFontRangesGatherRects<sp/>for<sp/>a<sp/>given</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight><highlight class="comment">//<sp/>pack<sp/>context.<sp/>The<sp/>default<sp/>(no<sp/>oversampling)<sp/>is<sp/>achieved<sp/>by<sp/>h_oversample=1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>v_oversample=1.<sp/>The<sp/>total<sp/>number<sp/>of<sp/>pixels<sp/>required<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight><highlight class="comment">//<sp/>h_oversample*v_oversample<sp/>larger<sp/>than<sp/>the<sp/>default;<sp/>for<sp/>example,<sp/>2x2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight><highlight class="comment">//<sp/>oversampling<sp/>requires<sp/>4x<sp/>the<sp/>storage<sp/>of<sp/>1x1.<sp/>For<sp/>best<sp/>results,<sp/>render</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight><highlight class="comment">//<sp/>oversampled<sp/>textures<sp/>with<sp/>bilinear<sp/>filtering.<sp/>Look<sp/>at<sp/>the<sp/>readme<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"></highlight><highlight class="comment">//<sp/>stb/tests/oversample<sp/>for<sp/>information<sp/>about<sp/>oversampled<sp/>fonts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight><highlight class="comment">//<sp/>To<sp/>use<sp/>with<sp/>PackFontRangesGather<sp/>etc.,<sp/>you<sp/>must<sp/>set<sp/>it<sp/>before<sp/>calls</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight><highlight class="comment">//<sp/>call<sp/>to<sp/>PackFontRangesGatherRects.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight></codeline>
<codeline lineno="656" refid="imstb__truetype_8h_1a0549774d30f6c64b85b88acc2329e89e" refkind="member"><highlight class="normal"><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="imstb__truetype_8h_1a0549774d30f6c64b85b88acc2329e89e" kindref="member">stbtt_PackSetSkipMissingCodepoints</ref>(<ref refid="structstbtt__pack__context" kindref="compound">stbtt_pack_context</ref><sp/>*spc,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>skip);</highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>skip<sp/>!=<sp/>0,<sp/>this<sp/>tells<sp/>stb_truetype<sp/>to<sp/>skip<sp/>any<sp/>codepoints<sp/>for<sp/>which</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight><highlight class="comment">//<sp/>there<sp/>is<sp/>no<sp/>corresponding<sp/>glyph.<sp/>If<sp/>skip=0,<sp/>which<sp/>is<sp/>the<sp/>default,<sp/>then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight><highlight class="comment">//<sp/>codepoints<sp/>without<sp/>a<sp/>glyph<sp/>recived<sp/>the<sp/>font&apos;s<sp/>&quot;missing<sp/>character&quot;<sp/>glyph,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"></highlight><highlight class="comment">//<sp/>typically<sp/>an<sp/>empty<sp/>box<sp/>by<sp/>convention.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight></codeline>
<codeline lineno="662" refid="imstb__truetype_8h_1abbca8f4e5de8209200a7be6c1c57661e" refkind="member"><highlight class="normal"><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="imstb__truetype_8h_1abbca8f4e5de8209200a7be6c1c57661e" kindref="member">stbtt_GetPackedQuad</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structstbtt__packedchar" kindref="compound">stbtt_packedchar</ref><sp/>*chardata,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pw,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ph,<sp/><sp/></highlight><highlight class="comment">//<sp/>same<sp/>data<sp/>as<sp/>above</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>char_index,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>character<sp/>to<sp/>display</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*xpos,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*ypos,<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pointers<sp/>to<sp/>current<sp/>position<sp/>in<sp/>screen<sp/>pixel<sp/>space</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structstbtt__aligned__quad" kindref="compound">stbtt_aligned_quad</ref><sp/>*q,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>output:<sp/>quad<sp/>to<sp/>draw</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>align_to_integer);</highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight></codeline>
<codeline lineno="668" refid="imstb__truetype_8h_1a8cf20362ceefc78d4df2e1703de3da50" refkind="member"><highlight class="normal"><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><ref refid="imstb__truetype_8h_1a8cf20362ceefc78d4df2e1703de3da50" kindref="member">stbtt_PackFontRangesGatherRects</ref>(<ref refid="structstbtt__pack__context" kindref="compound">stbtt_pack_context</ref><sp/>*spc,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref><sp/>*info,<sp/><ref refid="structstbtt__pack__range" kindref="compound">stbtt_pack_range</ref><sp/>*ranges,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_ranges,<sp/><ref refid="structstbrp__rect" kindref="compound">stbrp_rect</ref><sp/>*rects);</highlight></codeline>
<codeline lineno="669" refid="imstb__truetype_8h_1aeec3933fdb14884b7c2919e6ddc44259" refkind="member"><highlight class="normal"><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="imstb__truetype_8h_1aeec3933fdb14884b7c2919e6ddc44259" kindref="member">stbtt_PackFontRangesPackRects</ref>(<ref refid="structstbtt__pack__context" kindref="compound">stbtt_pack_context</ref><sp/>*spc,<sp/><ref refid="structstbrp__rect" kindref="compound">stbrp_rect</ref><sp/>*rects,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_rects);</highlight></codeline>
<codeline lineno="670" refid="imstb__truetype_8h_1ab6eca9e0104838ca2483dea24dd9e631" refkind="member"><highlight class="normal"><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><ref refid="imstb__truetype_8h_1ab6eca9e0104838ca2483dea24dd9e631" kindref="member">stbtt_PackFontRangesRenderIntoRects</ref>(<ref refid="structstbtt__pack__context" kindref="compound">stbtt_pack_context</ref><sp/>*spc,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref><sp/>*info,<sp/><ref refid="structstbtt__pack__range" kindref="compound">stbtt_pack_range</ref><sp/>*ranges,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_ranges,<sp/><ref refid="structstbrp__rect" kindref="compound">stbrp_rect</ref><sp/>*rects);</highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Calling<sp/>these<sp/>functions<sp/>in<sp/>sequence<sp/>is<sp/>roughly<sp/>equivalent<sp/>to<sp/>calling</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight><highlight class="comment">//<sp/>stbtt_PackFontRanges().<sp/>If<sp/>you<sp/>more<sp/>control<sp/>over<sp/>the<sp/>packing<sp/>of<sp/>multiple</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight><highlight class="comment">//<sp/>fonts,<sp/>or<sp/>if<sp/>you<sp/>want<sp/>to<sp/>pack<sp/>custom<sp/>data<sp/>into<sp/>a<sp/>font<sp/>texture,<sp/>take<sp/>a<sp/>look</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight><highlight class="comment">//<sp/>at<sp/>the<sp/>source<sp/>to<sp/>of<sp/>stbtt_PackFontRanges()<sp/>and<sp/>create<sp/>a<sp/>custom<sp/>version</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight><highlight class="comment">//<sp/>using<sp/>these<sp/>functions,<sp/>e.g.<sp/>call<sp/>GatherRects<sp/>multiple<sp/>times,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight><highlight class="comment">//<sp/>building<sp/>up<sp/>a<sp/>single<sp/>array<sp/>of<sp/>rects,<sp/>then<sp/>call<sp/>PackRects<sp/>once,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight><highlight class="comment">//<sp/>then<sp/>call<sp/>RenderIntoRects<sp/>repeatedly.<sp/>This<sp/>may<sp/>result<sp/>in<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight><highlight class="comment">//<sp/>better<sp/>packing<sp/>than<sp/>calling<sp/>PackFontRanges<sp/>multiple<sp/>times</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(or<sp/>it<sp/>may<sp/>not).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>an<sp/>opaque<sp/>structure<sp/>that<sp/>you<sp/>shouldn&apos;t<sp/>mess<sp/>with<sp/>which<sp/>holds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight><highlight class="comment">//<sp/>all<sp/>the<sp/>context<sp/>needed<sp/>from<sp/>PackBegin<sp/>to<sp/>PackEnd.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="683" refid="structstbtt__pack__context" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structstbtt__pack__context" kindref="compound">stbtt_pack_context</ref><sp/>{</highlight></codeline>
<codeline lineno="684" refid="structstbtt__pack__context_1a45fddc4d4adfcef58aa08ad2874cedc0" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structstbtt__pack__context_1a45fddc4d4adfcef58aa08ad2874cedc0" kindref="member">user_allocator_context</ref>;</highlight></codeline>
<codeline lineno="685" refid="structstbtt__pack__context_1a303a72f0a39479b439fa531925be7031" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structstbtt__pack__context_1a303a72f0a39479b439fa531925be7031" kindref="member">pack_info</ref>;</highlight></codeline>
<codeline lineno="686" refid="structstbtt__pack__context_1a5da0b7b5d3b82d5fc75ea1c8945183fa" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><ref refid="structstbtt__pack__context_1a5da0b7b5d3b82d5fc75ea1c8945183fa" kindref="member">width</ref>;</highlight></codeline>
<codeline lineno="687" refid="structstbtt__pack__context_1a817ec010d7f09ba9776517c5a87f13a7" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><ref refid="structstbtt__pack__context_1a817ec010d7f09ba9776517c5a87f13a7" kindref="member">height</ref>;</highlight></codeline>
<codeline lineno="688" refid="structstbtt__pack__context_1abbe9a25aae0e26b81a5f7339fac23801" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><ref refid="structstbtt__pack__context_1abbe9a25aae0e26b81a5f7339fac23801" kindref="member">stride_in_bytes</ref>;</highlight></codeline>
<codeline lineno="689" refid="structstbtt__pack__context_1a1191f34fa995910044191584f0d7a803" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><ref refid="structstbtt__pack__context_1a1191f34fa995910044191584f0d7a803" kindref="member">padding</ref>;</highlight></codeline>
<codeline lineno="690" refid="structstbtt__pack__context_1a435bae89225862e65211e0b456f632d3" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><ref refid="structstbtt__pack__context_1a435bae89225862e65211e0b456f632d3" kindref="member">skip_missing</ref>;</highlight></codeline>
<codeline lineno="691" refid="structstbtt__pack__context_1aee1019f9634cad49fa07e8e1f897d6b7" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><ref refid="structstbtt__pack__context_1aee1019f9634cad49fa07e8e1f897d6b7" kindref="member">h_oversample</ref>,<sp/><ref refid="structstbtt__pack__context_1a4b55efa27ef36e7f258afe92921784c0" kindref="member">v_oversample</ref>;</highlight></codeline>
<codeline lineno="692" refid="structstbtt__pack__context_1a6549105fd1922df983fbe036b9db4a1a" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structstbtt__pack__context_1a6549105fd1922df983fbe036b9db4a1a" kindref="member">pixels</ref>;</highlight></codeline>
<codeline lineno="693" refid="structstbtt__pack__context_1a11a73fa6860e6be1ac039fcca9db2c7c" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/>*<ref refid="structstbtt__pack__context_1a11a73fa6860e6be1ac039fcca9db2c7c" kindref="member">nodes</ref>;</highlight></codeline>
<codeline lineno="694"><highlight class="normal">};</highlight></codeline>
<codeline lineno="695"><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight><highlight class="comment">//<sp/>FONT<sp/>LOADING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"></highlight></codeline>
<codeline lineno="702" refid="imstb__truetype_8h_1af7ee37667bd84fee4c1fcf640fe8a672" refkind="member"><highlight class="normal"><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="imstb__truetype_8h_1af7ee37667bd84fee4c1fcf640fe8a672" kindref="member">stbtt_GetNumberOfFonts</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*data);</highlight></codeline>
<codeline lineno="703"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>function<sp/>will<sp/>determine<sp/>the<sp/>number<sp/>of<sp/>fonts<sp/>in<sp/>a<sp/>font<sp/>file.<sp/><sp/>TrueType</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="704"><highlight class="normal"></highlight><highlight class="comment">//<sp/>collection<sp/>(.ttc)<sp/>files<sp/>may<sp/>contain<sp/>multiple<sp/>fonts,<sp/>while<sp/>TrueType<sp/>font</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(.ttf)<sp/>files<sp/>only<sp/>contain<sp/>one<sp/>font.<sp/>The<sp/>number<sp/>of<sp/>fonts<sp/>can<sp/>be<sp/>used<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight><highlight class="comment">//<sp/>indexing<sp/>with<sp/>the<sp/>previous<sp/>function<sp/>where<sp/>the<sp/>index<sp/>is<sp/>between<sp/>zero<sp/>and<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight><highlight class="comment">//<sp/>less<sp/>than<sp/>the<sp/>total<sp/>fonts.<sp/>If<sp/>an<sp/>error<sp/>occurs,<sp/>-1<sp/>is<sp/>returned.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal"></highlight></codeline>
<codeline lineno="709" refid="imstb__truetype_8h_1a5ba17159df62ca39649e6f2231ac6e89" refkind="member"><highlight class="normal"><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="imstb__truetype_8h_1a5ba17159df62ca39649e6f2231ac6e89" kindref="member">stbtt_GetFontOffsetForIndex</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index);</highlight></codeline>
<codeline lineno="710"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Each<sp/>.ttf/.ttc<sp/>file<sp/>may<sp/>have<sp/>more<sp/>than<sp/>one<sp/>font.<sp/>Each<sp/>font<sp/>has<sp/>a<sp/>sequential</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight><highlight class="comment">//<sp/>index<sp/>number<sp/>starting<sp/>from<sp/>0.<sp/>Call<sp/>this<sp/>function<sp/>to<sp/>get<sp/>the<sp/>font<sp/>offset<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal"></highlight><highlight class="comment">//<sp/>a<sp/>given<sp/>index;<sp/>it<sp/>returns<sp/>-1<sp/>if<sp/>the<sp/>index<sp/>is<sp/>out<sp/>of<sp/>range.<sp/>A<sp/>regular<sp/>.ttf</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"></highlight><highlight class="comment">//<sp/>file<sp/>will<sp/>only<sp/>define<sp/>one<sp/>font<sp/>and<sp/>it<sp/>always<sp/>be<sp/>at<sp/>offset<sp/>0,<sp/>so<sp/>it<sp/>will</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight><highlight class="comment">//<sp/>return<sp/>&apos;0&apos;<sp/>for<sp/>index<sp/>0,<sp/>and<sp/>-1<sp/>for<sp/>all<sp/>other<sp/>indices.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>following<sp/>structure<sp/>is<sp/>defined<sp/>publicly<sp/>so<sp/>you<sp/>can<sp/>declare<sp/>one<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>stack<sp/>or<sp/>as<sp/>a<sp/>global<sp/>or<sp/>etc,<sp/>but<sp/>you<sp/>should<sp/>treat<sp/>it<sp/>as<sp/>opaque.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="718" refid="structstbtt__fontinfo" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref></highlight></codeline>
<codeline lineno="719"><highlight class="normal">{</highlight></codeline>
<codeline lineno="720" refid="structstbtt__fontinfo_1a9c81078df96a7a3f730137151efab285" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><ref refid="structstbtt__fontinfo_1a9c81078df96a7a3f730137151efab285" kindref="member">userdata</ref>;</highlight></codeline>
<codeline lineno="721" refid="structstbtt__fontinfo_1af348db379cf0e0e71a68603d00501d41" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/>*<sp/><ref refid="structstbtt__fontinfo_1af348db379cf0e0e71a68603d00501d41" kindref="member">data</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pointer<sp/>to<sp/>.ttf<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="722" refid="structstbtt__fontinfo_1a139234d825b585afa27748a1f3d10c7d" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structstbtt__fontinfo_1a139234d825b585afa27748a1f3d10c7d" kindref="member">fontstart</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>offset<sp/>of<sp/>start<sp/>of<sp/>font</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"></highlight></codeline>
<codeline lineno="724" refid="structstbtt__fontinfo_1a60ad8301a98eb7cd91472ce846d9080d" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structstbtt__fontinfo_1a60ad8301a98eb7cd91472ce846d9080d" kindref="member">numGlyphs</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>glyphs,<sp/>needed<sp/>for<sp/>range<sp/>checking</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"></highlight></codeline>
<codeline lineno="726" refid="structstbtt__fontinfo_1a5de2129e0a415748920f6aa10ceee6e5" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structstbtt__fontinfo_1a15344195b181b50bde4f59ae7ca248c0" kindref="member">loca</ref>,<ref refid="structstbtt__fontinfo_1ab76ed2f4cbd8fcbd8465ca5f88e7e2b9" kindref="member">head</ref>,<ref refid="structstbtt__fontinfo_1a5de2129e0a415748920f6aa10ceee6e5" kindref="member">glyf</ref>,<ref refid="structstbtt__fontinfo_1a91b82ae03d68892eb7f3fbd3a8b990e5" kindref="member">hhea</ref>,<ref refid="structstbtt__fontinfo_1aebf42701e99b88d07a59bf99cb84b9a1" kindref="member">hmtx</ref>,<ref refid="structstbtt__fontinfo_1a57cc83512daea60e97ed49354d634d37" kindref="member">kern</ref>,<ref refid="structstbtt__fontinfo_1aeb6732549a55fa30235d0c0ecd743022" kindref="member">gpos</ref>,<ref refid="structstbtt__fontinfo_1a2aae62e8e1269ab65be642a7ec82d7b3" kindref="member">svg</ref>;<sp/></highlight><highlight class="comment">//<sp/>table<sp/>locations<sp/>as<sp/>offset<sp/>from<sp/>start<sp/>of<sp/>.ttf</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="727" refid="structstbtt__fontinfo_1a0b95e3ac0c397b72b7696ce6696eb189" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structstbtt__fontinfo_1a0b95e3ac0c397b72b7696ce6696eb189" kindref="member">index_map</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>cmap<sp/>mapping<sp/>for<sp/>our<sp/>chosen<sp/>character<sp/>encoding</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="728" refid="structstbtt__fontinfo_1a5fa117a7ef058111a70a5b0b87d220f4" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structstbtt__fontinfo_1a5fa117a7ef058111a70a5b0b87d220f4" kindref="member">indexToLocFormat</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>format<sp/>needed<sp/>to<sp/>map<sp/>from<sp/>glyph<sp/>index<sp/>to<sp/>glyph</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal"></highlight></codeline>
<codeline lineno="730" refid="structstbtt__fontinfo_1a6031b4bda94aa2b5ff07ef5d626a15a4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="structstbtt____buf" kindref="compound">stbtt__buf</ref><sp/><ref refid="structstbtt__fontinfo_1a6031b4bda94aa2b5ff07ef5d626a15a4" kindref="member">cff</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cff<sp/>font<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="731" refid="structstbtt__fontinfo_1aaf04a69f8dd4b6a8bed4191b57145082" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="structstbtt____buf" kindref="compound">stbtt__buf</ref><sp/><ref refid="structstbtt__fontinfo_1aaf04a69f8dd4b6a8bed4191b57145082" kindref="member">charstrings</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>charstring<sp/>index</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="732" refid="structstbtt__fontinfo_1afc5bfc4a52ad0e3879f0f81a372da7fb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="structstbtt____buf" kindref="compound">stbtt__buf</ref><sp/><ref refid="structstbtt__fontinfo_1afc5bfc4a52ad0e3879f0f81a372da7fb" kindref="member">gsubrs</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>global<sp/>charstring<sp/>subroutines<sp/>index</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="733" refid="structstbtt__fontinfo_1aebc496bb1c001a8a90e0e66da16107d2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="structstbtt____buf" kindref="compound">stbtt__buf</ref><sp/><ref refid="structstbtt__fontinfo_1aebc496bb1c001a8a90e0e66da16107d2" kindref="member">subrs</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>private<sp/>charstring<sp/>subroutines<sp/>index</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="734" refid="structstbtt__fontinfo_1a966c70ac9548a02fff558846fbce3677" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="structstbtt____buf" kindref="compound">stbtt__buf</ref><sp/><ref refid="structstbtt__fontinfo_1a966c70ac9548a02fff558846fbce3677" kindref="member">fontdicts</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>array<sp/>of<sp/>font<sp/>dicts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="735" refid="structstbtt__fontinfo_1a4e06b1c29295a9aba529105e88fe1d71" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="structstbtt____buf" kindref="compound">stbtt__buf</ref><sp/><ref refid="structstbtt__fontinfo_1a4e06b1c29295a9aba529105e88fe1d71" kindref="member">fdselect</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>map<sp/>from<sp/>glyph<sp/>to<sp/>fontdict</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="normal">};</highlight></codeline>
<codeline lineno="737"><highlight class="normal"></highlight></codeline>
<codeline lineno="738" refid="imstb__truetype_8h_1ac3b6bda1851d0b1a4fd53f5f353668e5" refkind="member"><highlight class="normal"><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="imstb__truetype_8h_1ac3b6bda1851d0b1a4fd53f5f353668e5" kindref="member">stbtt_InitFont</ref>(<ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref><sp/>*info,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offset);</highlight></codeline>
<codeline lineno="739"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Given<sp/>an<sp/>offset<sp/>into<sp/>the<sp/>file<sp/>that<sp/>defines<sp/>a<sp/>font,<sp/>this<sp/>function<sp/>builds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="740"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>necessary<sp/>cached<sp/>info<sp/>for<sp/>the<sp/>rest<sp/>of<sp/>the<sp/>system.<sp/>You<sp/>must<sp/>allocate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="741"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>stbtt_fontinfo<sp/>yourself,<sp/>and<sp/>stbtt_InitFont<sp/>will<sp/>fill<sp/>it<sp/>out.<sp/>You<sp/>don&apos;t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="742"><highlight class="normal"></highlight><highlight class="comment">//<sp/>need<sp/>to<sp/>do<sp/>anything<sp/>special<sp/>to<sp/>free<sp/>it,<sp/>because<sp/>the<sp/>contents<sp/>are<sp/>pure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="743"><highlight class="normal"></highlight><highlight class="comment">//<sp/>value<sp/>data<sp/>with<sp/>no<sp/>additional<sp/>data<sp/>structures.<sp/>Returns<sp/>0<sp/>on<sp/>failure.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"></highlight><highlight class="comment">//<sp/>CHARACTER<sp/>TO<sp/>GLYPH-INDEX<sp/>CONVERSIOn</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"></highlight></codeline>
<codeline lineno="750" refid="imstb__truetype_8h_1a213d5628c6b2e5c107b99378eefc6e3a" refkind="member"><highlight class="normal"><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="imstb__truetype_8h_1a213d5628c6b2e5c107b99378eefc6e3a" kindref="member">stbtt_FindGlyphIndex</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref><sp/>*info,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>unicode_codepoint);</highlight></codeline>
<codeline lineno="751"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>you&apos;re<sp/>going<sp/>to<sp/>perform<sp/>multiple<sp/>operations<sp/>on<sp/>the<sp/>same<sp/>character</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>you<sp/>want<sp/>a<sp/>speed-up,<sp/>call<sp/>this<sp/>function<sp/>with<sp/>the<sp/>character<sp/>you&apos;re</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="753"><highlight class="normal"></highlight><highlight class="comment">//<sp/>going<sp/>to<sp/>process,<sp/>then<sp/>use<sp/>glyph-based<sp/>functions<sp/>instead<sp/>of<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal"></highlight><highlight class="comment">//<sp/>codepoint-based<sp/>functions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>0<sp/>if<sp/>the<sp/>character<sp/>codepoint<sp/>is<sp/>not<sp/>defined<sp/>in<sp/>the<sp/>font.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal"></highlight><highlight class="comment">//<sp/>CHARACTER<sp/>PROPERTIES</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="761"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="762"><highlight class="normal"></highlight></codeline>
<codeline lineno="763" refid="imstb__truetype_8h_1aad275d7211530a3d817fcd8647690b7b" refkind="member"><highlight class="normal"><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="imstb__truetype_8h_1aad275d7211530a3d817fcd8647690b7b" kindref="member">stbtt_ScaleForPixelHeight</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref><sp/>*info,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>pixels);</highlight></codeline>
<codeline lineno="764"><highlight class="normal"></highlight><highlight class="comment">//<sp/>computes<sp/>a<sp/>scale<sp/>factor<sp/>to<sp/>produce<sp/>a<sp/>font<sp/>whose<sp/>&quot;height&quot;<sp/>is<sp/>&apos;pixels&apos;<sp/>tall.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Height<sp/>is<sp/>measured<sp/>as<sp/>the<sp/>distance<sp/>from<sp/>the<sp/>highest<sp/>ascender<sp/>to<sp/>the<sp/>lowest</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="766"><highlight class="normal"></highlight><highlight class="comment">//<sp/>descender;<sp/>in<sp/>other<sp/>words,<sp/>it&apos;s<sp/>equivalent<sp/>to<sp/>calling<sp/>stbtt_GetFontVMetrics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="767"><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>computing:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="768"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>scale<sp/>=<sp/>pixels<sp/>/<sp/>(ascent<sp/>-<sp/>descent)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal"></highlight><highlight class="comment">//<sp/>so<sp/>if<sp/>you<sp/>prefer<sp/>to<sp/>measure<sp/>height<sp/>by<sp/>the<sp/>ascent<sp/>only,<sp/>use<sp/>a<sp/>similar<sp/>calculation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal"></highlight></codeline>
<codeline lineno="771" refid="imstb__truetype_8h_1a76da72e13355eae763c567ffde0b4607" refkind="member"><highlight class="normal"><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="imstb__truetype_8h_1a76da72e13355eae763c567ffde0b4607" kindref="member">stbtt_ScaleForMappingEmToPixels</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref><sp/>*info,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>pixels);</highlight></codeline>
<codeline lineno="772"><highlight class="normal"></highlight><highlight class="comment">//<sp/>computes<sp/>a<sp/>scale<sp/>factor<sp/>to<sp/>produce<sp/>a<sp/>font<sp/>whose<sp/>EM<sp/>size<sp/>is<sp/>mapped<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&apos;pixels&apos;<sp/>tall.<sp/>This<sp/>is<sp/>probably<sp/>what<sp/>traditional<sp/>APIs<sp/>compute,<sp/>but</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal"></highlight><highlight class="comment">//<sp/>I&apos;m<sp/>not<sp/>positive.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"></highlight></codeline>
<codeline lineno="776" refid="imstb__truetype_8h_1a2784e0e55678a5980e950b1c9fbc75f0" refkind="member"><highlight class="normal"><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="imstb__truetype_8h_1a2784e0e55678a5980e950b1c9fbc75f0" kindref="member">stbtt_GetFontVMetrics</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref><sp/>*info,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*ascent,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*descent,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*lineGap);</highlight></codeline>
<codeline lineno="777"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ascent<sp/>is<sp/>the<sp/>coordinate<sp/>above<sp/>the<sp/>baseline<sp/>the<sp/>font<sp/>extends;<sp/>descent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="normal"></highlight><highlight class="comment">//<sp/>is<sp/>the<sp/>coordinate<sp/>below<sp/>the<sp/>baseline<sp/>the<sp/>font<sp/>extends<sp/>(i.e.<sp/>it<sp/>is<sp/>typically<sp/>negative)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="779"><highlight class="normal"></highlight><highlight class="comment">//<sp/>lineGap<sp/>is<sp/>the<sp/>spacing<sp/>between<sp/>one<sp/>row&apos;s<sp/>descent<sp/>and<sp/>the<sp/>next<sp/>row&apos;s<sp/>ascent...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="780"><highlight class="normal"></highlight><highlight class="comment">//<sp/>so<sp/>you<sp/>should<sp/>advance<sp/>the<sp/>vertical<sp/>position<sp/>by<sp/>&quot;*ascent<sp/>-<sp/>*descent<sp/>+<sp/>*lineGap&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="781"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>these<sp/>are<sp/>expressed<sp/>in<sp/>unscaled<sp/>coordinates,<sp/>so<sp/>you<sp/>must<sp/>multiply<sp/>by</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="782"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>the<sp/>scale<sp/>factor<sp/>for<sp/>a<sp/>given<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal"></highlight></codeline>
<codeline lineno="784" refid="imstb__truetype_8h_1a12154e222685026a3cf315a1b5720f24" refkind="member"><highlight class="normal"><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><ref refid="imstb__truetype_8h_1a12154e222685026a3cf315a1b5720f24" kindref="member">stbtt_GetFontVMetricsOS2</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref><sp/>*info,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*typoAscent,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*typoDescent,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*typoLineGap);</highlight></codeline>
<codeline lineno="785"><highlight class="normal"></highlight><highlight class="comment">//<sp/>analogous<sp/>to<sp/>GetFontVMetrics,<sp/>but<sp/>returns<sp/>the<sp/>&quot;typographic&quot;<sp/>values<sp/>from<sp/>the<sp/>OS/2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="786"><highlight class="normal"></highlight><highlight class="comment">//<sp/>table<sp/>(specific<sp/>to<sp/>MS/Windows<sp/>TTF<sp/>files).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="787"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="788"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>1<sp/>on<sp/>success<sp/>(table<sp/>present),<sp/>0<sp/>on<sp/>failure.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="789"><highlight class="normal"></highlight></codeline>
<codeline lineno="790" refid="imstb__truetype_8h_1a4dd4ca3bff4e304b2c8d952f87fbb639" refkind="member"><highlight class="normal"><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="imstb__truetype_8h_1a4dd4ca3bff4e304b2c8d952f87fbb639" kindref="member">stbtt_GetFontBoundingBox</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref><sp/>*info,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*x0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*y0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*x1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*y1);</highlight></codeline>
<codeline lineno="791"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>bounding<sp/>box<sp/>around<sp/>all<sp/>possible<sp/>characters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="792"><highlight class="normal"></highlight></codeline>
<codeline lineno="793" refid="imstb__truetype_8h_1a015fbd6e96df8ee58bd41bb4211b64e7" refkind="member"><highlight class="normal"><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="imstb__truetype_8h_1a015fbd6e96df8ee58bd41bb4211b64e7" kindref="member">stbtt_GetCodepointHMetrics</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref><sp/>*info,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>codepoint,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*advanceWidth,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*leftSideBearing);</highlight></codeline>
<codeline lineno="794"><highlight class="normal"></highlight><highlight class="comment">//<sp/>leftSideBearing<sp/>is<sp/>the<sp/>offset<sp/>from<sp/>the<sp/>current<sp/>horizontal<sp/>position<sp/>to<sp/>the<sp/>left<sp/>edge<sp/>of<sp/>the<sp/>character</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="795"><highlight class="normal"></highlight><highlight class="comment">//<sp/>advanceWidth<sp/>is<sp/>the<sp/>offset<sp/>from<sp/>the<sp/>current<sp/>horizontal<sp/>position<sp/>to<sp/>the<sp/>next<sp/>horizontal<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>these<sp/>are<sp/>expressed<sp/>in<sp/>unscaled<sp/>coordinates</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"></highlight></codeline>
<codeline lineno="798" refid="imstb__truetype_8h_1a83703ede616bacefc0312ef2803774a1" refkind="member"><highlight class="normal"><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><ref refid="imstb__truetype_8h_1a83703ede616bacefc0312ef2803774a1" kindref="member">stbtt_GetCodepointKernAdvance</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref><sp/>*info,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ch1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ch2);</highlight></codeline>
<codeline lineno="799"><highlight class="normal"></highlight><highlight class="comment">//<sp/>an<sp/>additional<sp/>amount<sp/>to<sp/>add<sp/>to<sp/>the<sp/>&apos;advance&apos;<sp/>value<sp/>between<sp/>ch1<sp/>and<sp/>ch2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="800"><highlight class="normal"></highlight></codeline>
<codeline lineno="801" refid="imstb__truetype_8h_1abbfa26d9cbfeae7e224f2f62ef6c096d" refkind="member"><highlight class="normal"><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="imstb__truetype_8h_1abbfa26d9cbfeae7e224f2f62ef6c096d" kindref="member">stbtt_GetCodepointBox</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref><sp/>*info,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>codepoint,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*x0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*y0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*x1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*y1);</highlight></codeline>
<codeline lineno="802"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Gets<sp/>the<sp/>bounding<sp/>box<sp/>of<sp/>the<sp/>visible<sp/>part<sp/>of<sp/>the<sp/>glyph,<sp/>in<sp/>unscaled<sp/>coordinates</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="803"><highlight class="normal"></highlight></codeline>
<codeline lineno="804" refid="imstb__truetype_8h_1ab593f3066f2a8a7e33e7b7011d1b1f9a" refkind="member"><highlight class="normal"><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="imstb__truetype_8h_1ab593f3066f2a8a7e33e7b7011d1b1f9a" kindref="member">stbtt_GetGlyphHMetrics</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref><sp/>*info,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>glyph_index,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*advanceWidth,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*leftSideBearing);</highlight></codeline>
<codeline lineno="805" refid="imstb__truetype_8h_1acf0b09547b1c2002ad0266802224552d" refkind="member"><highlight class="normal"><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><ref refid="imstb__truetype_8h_1acf0b09547b1c2002ad0266802224552d" kindref="member">stbtt_GetGlyphKernAdvance</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref><sp/>*info,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>glyph1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>glyph2);</highlight></codeline>
<codeline lineno="806" refid="imstb__truetype_8h_1accf148d2d285fd55178d9a401734ba92" refkind="member"><highlight class="normal"><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><ref refid="imstb__truetype_8h_1accf148d2d285fd55178d9a401734ba92" kindref="member">stbtt_GetGlyphBox</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref><sp/>*info,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>glyph_index,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*x0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*y0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*x1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*y1);</highlight></codeline>
<codeline lineno="807"><highlight class="normal"></highlight><highlight class="comment">//<sp/>as<sp/>above,<sp/>but<sp/>takes<sp/>one<sp/>or<sp/>more<sp/>glyph<sp/>indices<sp/>for<sp/>greater<sp/>efficiency</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="808"><highlight class="normal"></highlight></codeline>
<codeline lineno="809" refid="structstbtt__kerningentry" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structstbtt__kerningentry" kindref="compound">stbtt_kerningentry</ref></highlight></codeline>
<codeline lineno="810"><highlight class="normal">{</highlight></codeline>
<codeline lineno="811" refid="structstbtt__kerningentry_1a395848ac004ad9193c532ebc08b07f91" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structstbtt__kerningentry_1a395848ac004ad9193c532ebc08b07f91" kindref="member">glyph1</ref>;<sp/></highlight><highlight class="comment">//<sp/>use<sp/>stbtt_FindGlyphIndex</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="812" refid="structstbtt__kerningentry_1a9d5a83a93bb6a40bed5c166c5f295c61" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structstbtt__kerningentry_1a9d5a83a93bb6a40bed5c166c5f295c61" kindref="member">glyph2</ref>;</highlight></codeline>
<codeline lineno="813" refid="structstbtt__kerningentry_1a1924543c84b2abbdbac1a951f441d8aa" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structstbtt__kerningentry_1a1924543c84b2abbdbac1a951f441d8aa" kindref="member">advance</ref>;</highlight></codeline>
<codeline lineno="814" refid="imstb__truetype_8h_1a988d6ec9ddb583b248cc96f17449dd6b" refkind="member"><highlight class="normal">}<sp/><ref refid="structstbtt__kerningentry" kindref="compound">stbtt_kerningentry</ref>;</highlight></codeline>
<codeline lineno="815"><highlight class="normal"></highlight></codeline>
<codeline lineno="816" refid="imstb__truetype_8h_1ab638ddcf9ae1b15ea18b2de58443136e" refkind="member"><highlight class="normal"><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><ref refid="imstb__truetype_8h_1ab638ddcf9ae1b15ea18b2de58443136e" kindref="member">stbtt_GetKerningTableLength</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref><sp/>*info);</highlight></codeline>
<codeline lineno="817" refid="imstb__truetype_8h_1a190bffe156cdb32ac891e835248c90e3" refkind="member"><highlight class="normal"><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><ref refid="imstb__truetype_8h_1a190bffe156cdb32ac891e835248c90e3" kindref="member">stbtt_GetKerningTable</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref><sp/>*info,<sp/><ref refid="structstbtt__kerningentry" kindref="compound">stbtt_kerningentry</ref>*<sp/>table,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>table_length);</highlight></codeline>
<codeline lineno="818"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Retrieves<sp/>a<sp/>complete<sp/>list<sp/>of<sp/>all<sp/>of<sp/>the<sp/>kerning<sp/>pairs<sp/>provided<sp/>by<sp/>the<sp/>font</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="819"><highlight class="normal"></highlight><highlight class="comment">//<sp/>stbtt_GetKerningTable<sp/>never<sp/>writes<sp/>more<sp/>than<sp/>table_length<sp/>entries<sp/>and<sp/>returns<sp/>how<sp/>many<sp/>entries<sp/>it<sp/>did<sp/>write.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="820"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>table<sp/>will<sp/>be<sp/>sorted<sp/>by<sp/>(a.glyph1<sp/>==<sp/>b.glyph1)?(a.glyph2<sp/>&lt;<sp/>b.glyph2):(a.glyph1<sp/>&lt;<sp/>b.glyph1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="821"><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="824"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GLYPH<sp/>SHAPES<sp/>(you<sp/>probably<sp/>don&apos;t<sp/>need<sp/>these,<sp/>but<sp/>they<sp/>have<sp/>to<sp/>go<sp/>before</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="825"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>bitmaps<sp/>for<sp/>C<sp/>declaration-order<sp/>reasons)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="827"><highlight class="normal"></highlight></codeline>
<codeline lineno="828"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>STBTT_vmove<sp/></highlight><highlight class="comment">//<sp/>you<sp/>can<sp/>predefine<sp/>these<sp/>to<sp/>use<sp/>different<sp/>values<sp/>(but<sp/>why?)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="830" refid="imstb__truetype_8h_1a9dff5253600497fb00c1c785dd5a309dab335ba97e1798b621313de85a9a6e69d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imstb__truetype_8h_1a9dff5253600497fb00c1c785dd5a309dab335ba97e1798b621313de85a9a6e69d" kindref="member">STBTT_vmove</ref>=1,</highlight></codeline>
<codeline lineno="831" refid="imstb__truetype_8h_1a9dff5253600497fb00c1c785dd5a309dade4bb6465c32e56588f35e5120769e2e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imstb__truetype_8h_1a9dff5253600497fb00c1c785dd5a309dade4bb6465c32e56588f35e5120769e2e" kindref="member">STBTT_vline</ref>,</highlight></codeline>
<codeline lineno="832" refid="imstb__truetype_8h_1a9dff5253600497fb00c1c785dd5a309dab9ac3e527ce18873abeab556f6768ce4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imstb__truetype_8h_1a9dff5253600497fb00c1c785dd5a309dab9ac3e527ce18873abeab556f6768ce4" kindref="member">STBTT_vcurve</ref>,</highlight></codeline>
<codeline lineno="833" refid="imstb__truetype_8h_1a9dff5253600497fb00c1c785dd5a309dab6cd2670234c731eafba404d3a2470fd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imstb__truetype_8h_1a9dff5253600497fb00c1c785dd5a309dab6cd2670234c731eafba404d3a2470fd" kindref="member">STBTT_vcubic</ref></highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="835"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="836"><highlight class="normal"></highlight></codeline>
<codeline lineno="837"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>stbtt_vertex<sp/></highlight><highlight class="comment">//<sp/>you<sp/>can<sp/>predefine<sp/>this<sp/>to<sp/>use<sp/>different<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(we<sp/>share<sp/>this<sp/>with<sp/>other<sp/>code<sp/>at<sp/>RAD)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="839" refid="imstb__truetype_8h_1ab8fd8e5e0b82b0f7da54532035e47b22" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#define<sp/>stbtt_vertex_type<sp/>short<sp/></highlight><highlight class="comment">//<sp/>can&apos;t<sp/>use<sp/>stbtt_int16<sp/>because<sp/>that&apos;s<sp/>not<sp/>visible<sp/>in<sp/>the<sp/>header<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="840" refid="structstbtt__vertex" refkind="compound"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="842" refid="structstbtt__vertex_1a43835489e2a151b31cb100d20f8adeae" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imstb__truetype_8h_1ab8fd8e5e0b82b0f7da54532035e47b22" kindref="member">stbtt_vertex_type</ref><sp/><ref refid="structstbtt__vertex_1a81773edbe760d0e090561a3c1e86c919" kindref="member">x</ref>,<ref refid="structstbtt__vertex_1a9052065ca544b63d537325b246928cfc" kindref="member">y</ref>,<ref refid="structstbtt__vertex_1a43835489e2a151b31cb100d20f8adeae" kindref="member">cx</ref>,<ref refid="structstbtt__vertex_1a5610d6335aa6962d970fc7fd2225545e" kindref="member">cy</ref>,<ref refid="structstbtt__vertex_1a1c45a8d41727b24b84f97a944f2b800a" kindref="member">cx1</ref>,<ref refid="structstbtt__vertex_1a68227d28643f5667064fa3c385f4ea7d" kindref="member">cy1</ref>;</highlight></codeline>
<codeline lineno="843" refid="structstbtt__vertex_1a8bd328747e8ea018612960a52e3e3ede" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="structstbtt__vertex_1aa325b3707b88e7e104c0de46bb2bf395" kindref="member">type</ref>,<ref refid="structstbtt__vertex_1a8bd328747e8ea018612960a52e3e3ede" kindref="member">padding</ref>;</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/>}<sp/><ref refid="structstbtt__vertex" kindref="compound">stbtt_vertex</ref>;</highlight></codeline>
<codeline lineno="845"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="846"><highlight class="normal"></highlight></codeline>
<codeline lineno="847" refid="imstb__truetype_8h_1a3378c5794e9ab2a16492ab7e3c3c9485" refkind="member"><highlight class="normal"><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="imstb__truetype_8h_1a3378c5794e9ab2a16492ab7e3c3c9485" kindref="member">stbtt_IsGlyphEmpty</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref><sp/>*info,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>glyph_index);</highlight></codeline>
<codeline lineno="848"><highlight class="normal"></highlight><highlight class="comment">//<sp/>returns<sp/>non-zero<sp/>if<sp/>nothing<sp/>is<sp/>drawn<sp/>for<sp/>this<sp/>glyph</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="normal"></highlight></codeline>
<codeline lineno="850" refid="imstb__truetype_8h_1a073c07bd3c08775d2528a0a602be1795" refkind="member"><highlight class="normal"><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="imstb__truetype_8h_1a073c07bd3c08775d2528a0a602be1795" kindref="member">stbtt_GetCodepointShape</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref><sp/>*info,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>unicode_codepoint,<sp/><ref refid="structstbtt__vertex" kindref="compound">stbtt_vertex</ref><sp/>**vertices);</highlight></codeline>
<codeline lineno="851" refid="imstb__truetype_8h_1a695c82840a7d4eaa1d5be00131c9718b" refkind="member"><highlight class="normal"><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="imstb__truetype_8h_1a695c82840a7d4eaa1d5be00131c9718b" kindref="member">stbtt_GetGlyphShape</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref><sp/>*info,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>glyph_index,<sp/><ref refid="structstbtt__vertex" kindref="compound">stbtt_vertex</ref><sp/>**vertices);</highlight></codeline>
<codeline lineno="852"><highlight class="normal"></highlight><highlight class="comment">//<sp/>returns<sp/>#<sp/>of<sp/>vertices<sp/>and<sp/>fills<sp/>*vertices<sp/>with<sp/>the<sp/>pointer<sp/>to<sp/>them</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="853"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>these<sp/>are<sp/>expressed<sp/>in<sp/>&quot;unscaled&quot;<sp/>coordinates</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="854"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="855"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>shape<sp/>is<sp/>a<sp/>series<sp/>of<sp/>contours.<sp/>Each<sp/>one<sp/>starts<sp/>with</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="856"><highlight class="normal"></highlight><highlight class="comment">//<sp/>a<sp/>STBTT_moveto,<sp/>then<sp/>consists<sp/>of<sp/>a<sp/>series<sp/>of<sp/>mixed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="857"><highlight class="normal"></highlight><highlight class="comment">//<sp/>STBTT_lineto<sp/>and<sp/>STBTT_curveto<sp/>segments.<sp/>A<sp/>lineto</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="858"><highlight class="normal"></highlight><highlight class="comment">//<sp/>draws<sp/>a<sp/>line<sp/>from<sp/>previous<sp/>endpoint<sp/>to<sp/>its<sp/>x,y;<sp/>a<sp/>curveto</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="859"><highlight class="normal"></highlight><highlight class="comment">//<sp/>draws<sp/>a<sp/>quadratic<sp/>bezier<sp/>from<sp/>previous<sp/>endpoint<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="860"><highlight class="normal"></highlight><highlight class="comment">//<sp/>its<sp/>x,y,<sp/>using<sp/>cx,cy<sp/>as<sp/>the<sp/>bezier<sp/>control<sp/>point.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="861"><highlight class="normal"></highlight></codeline>
<codeline lineno="862" refid="imstb__truetype_8h_1a8aa85852fbc25667bf0438e29e128c93" refkind="member"><highlight class="normal"><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="imstb__truetype_8h_1a8aa85852fbc25667bf0438e29e128c93" kindref="member">stbtt_FreeShape</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref><sp/>*info,<sp/><ref refid="structstbtt__vertex" kindref="compound">stbtt_vertex</ref><sp/>*vertices);</highlight></codeline>
<codeline lineno="863"><highlight class="normal"></highlight><highlight class="comment">//<sp/>frees<sp/>the<sp/>data<sp/>allocated<sp/>above</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="864"><highlight class="normal"></highlight></codeline>
<codeline lineno="865" refid="imstb__truetype_8h_1ab0896826867ac841bba5b6060b3dab09" refkind="member"><highlight class="normal"><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="imstb__truetype_8h_1ab0896826867ac841bba5b6060b3dab09" kindref="member">stbtt_FindSVGDoc</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref><sp/>*info,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gl);</highlight></codeline>
<codeline lineno="866" refid="imstb__truetype_8h_1a5d290c4aa81bf0f7b933ea290d123a3a" refkind="member"><highlight class="normal"><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="imstb__truetype_8h_1a5d290c4aa81bf0f7b933ea290d123a3a" kindref="member">stbtt_GetCodepointSVG</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref><sp/>*info,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>unicode_codepoint,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**svg);</highlight></codeline>
<codeline lineno="867" refid="imstb__truetype_8h_1a6233237aecda00cf9ccd2c2d50dd6b17" refkind="member"><highlight class="normal"><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="imstb__truetype_8h_1a6233237aecda00cf9ccd2c2d50dd6b17" kindref="member">stbtt_GetGlyphSVG</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref><sp/>*info,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gl,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**svg);</highlight></codeline>
<codeline lineno="868"><highlight class="normal"></highlight><highlight class="comment">//<sp/>fills<sp/>svg<sp/>with<sp/>the<sp/>character&apos;s<sp/>SVG<sp/>data.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="869"><highlight class="normal"></highlight><highlight class="comment">//<sp/>returns<sp/>data<sp/>size<sp/>or<sp/>0<sp/>if<sp/>SVG<sp/>not<sp/>found.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="870"><highlight class="normal"></highlight></codeline>
<codeline lineno="872"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="873"><highlight class="normal"></highlight><highlight class="comment">//<sp/>BITMAP<sp/>RENDERING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="874"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="875"><highlight class="normal"></highlight></codeline>
<codeline lineno="876" refid="imstb__truetype_8h_1a8254e6763560645597c44e00024b58fa" refkind="member"><highlight class="normal"><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="imstb__truetype_8h_1a8254e6763560645597c44e00024b58fa" kindref="member">stbtt_FreeBitmap</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*bitmap,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*userdata);</highlight></codeline>
<codeline lineno="877"><highlight class="normal"></highlight><highlight class="comment">//<sp/>frees<sp/>the<sp/>bitmap<sp/>allocated<sp/>below</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="878"><highlight class="normal"></highlight></codeline>
<codeline lineno="879" refid="imstb__truetype_8h_1a6206e92bc06993ba26b8e7c7671f8aaa" refkind="member"><highlight class="normal"><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="imstb__truetype_8h_1a6206e92bc06993ba26b8e7c7671f8aaa" kindref="member">stbtt_GetCodepointBitmap</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref><sp/>*info,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale_x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale_y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>codepoint,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*height,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*xoff,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*yoff);</highlight></codeline>
<codeline lineno="880"><highlight class="normal"></highlight><highlight class="comment">//<sp/>allocates<sp/>a<sp/>large-enough<sp/>single-channel<sp/>8bpp<sp/>bitmap<sp/>and<sp/>renders<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="881"><highlight class="normal"></highlight><highlight class="comment">//<sp/>specified<sp/>character/glyph<sp/>at<sp/>the<sp/>specified<sp/>scale<sp/>into<sp/>it,<sp/>with</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="882"><highlight class="normal"></highlight><highlight class="comment">//<sp/>antialiasing.<sp/>0<sp/>is<sp/>no<sp/>coverage<sp/>(transparent),<sp/>255<sp/>is<sp/>fully<sp/>covered<sp/>(opaque).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="883"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*width<sp/>&amp;<sp/>*height<sp/>are<sp/>filled<sp/>out<sp/>with<sp/>the<sp/>width<sp/>&amp;<sp/>height<sp/>of<sp/>the<sp/>bitmap,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="884"><highlight class="normal"></highlight><highlight class="comment">//<sp/>which<sp/>is<sp/>stored<sp/>left-to-right,<sp/>top-to-bottom.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="885"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="886"><highlight class="normal"></highlight><highlight class="comment">//<sp/>xoff/yoff<sp/>are<sp/>the<sp/>offset<sp/>it<sp/>pixel<sp/>space<sp/>from<sp/>the<sp/>glyph<sp/>origin<sp/>to<sp/>the<sp/>top-left<sp/>of<sp/>the<sp/>bitmap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="887"><highlight class="normal"></highlight></codeline>
<codeline lineno="888" refid="imstb__truetype_8h_1a99855a21c1021bd51d03ae337a0d49be" refkind="member"><highlight class="normal"><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="imstb__truetype_8h_1a99855a21c1021bd51d03ae337a0d49be" kindref="member">stbtt_GetCodepointBitmapSubpixel</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref><sp/>*info,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale_x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale_y,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>shift_x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>shift_y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>codepoint,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*height,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*xoff,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*yoff);</highlight></codeline>
<codeline lineno="889"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>same<sp/>as<sp/>stbtt_GetCodepoitnBitmap,<sp/>but<sp/>you<sp/>can<sp/>specify<sp/>a<sp/>subpixel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="890"><highlight class="normal"></highlight><highlight class="comment">//<sp/>shift<sp/>for<sp/>the<sp/>character</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="891"><highlight class="normal"></highlight></codeline>
<codeline lineno="892" refid="imstb__truetype_8h_1a4416bb8395a4d2e717f613bb4903c7eb" refkind="member"><highlight class="normal"><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="imstb__truetype_8h_1a4416bb8395a4d2e717f613bb4903c7eb" kindref="member">stbtt_MakeCodepointBitmap</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref><sp/>*info,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*output,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>out_w,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>out_h,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>out_stride,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale_x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale_y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>codepoint);</highlight></codeline>
<codeline lineno="893"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>same<sp/>as<sp/>stbtt_GetCodepointBitmap,<sp/>but<sp/>you<sp/>pass<sp/>in<sp/>storage<sp/>for<sp/>the<sp/>bitmap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="894"><highlight class="normal"></highlight><highlight class="comment">//<sp/>in<sp/>the<sp/>form<sp/>of<sp/>&apos;output&apos;,<sp/>with<sp/>row<sp/>spacing<sp/>of<sp/>&apos;out_stride&apos;<sp/>bytes.<sp/>the<sp/>bitmap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="895"><highlight class="normal"></highlight><highlight class="comment">//<sp/>is<sp/>clipped<sp/>to<sp/>out_w/out_h<sp/>bytes.<sp/>Call<sp/>stbtt_GetCodepointBitmapBox<sp/>to<sp/>get<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="896"><highlight class="normal"></highlight><highlight class="comment">//<sp/>width<sp/>and<sp/>height<sp/>and<sp/>positioning<sp/>info<sp/>for<sp/>it<sp/>first.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="897"><highlight class="normal"></highlight></codeline>
<codeline lineno="898" refid="imstb__truetype_8h_1a51bd3fc45817d8606c749e585241fa71" refkind="member"><highlight class="normal"><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="imstb__truetype_8h_1a51bd3fc45817d8606c749e585241fa71" kindref="member">stbtt_MakeCodepointBitmapSubpixel</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref><sp/>*info,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*output,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>out_w,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>out_h,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>out_stride,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale_x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale_y,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>shift_x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>shift_y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>codepoint);</highlight></codeline>
<codeline lineno="899"><highlight class="normal"></highlight><highlight class="comment">//<sp/>same<sp/>as<sp/>stbtt_MakeCodepointBitmap,<sp/>but<sp/>you<sp/>can<sp/>specify<sp/>a<sp/>subpixel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="900"><highlight class="normal"></highlight><highlight class="comment">//<sp/>shift<sp/>for<sp/>the<sp/>character</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="901"><highlight class="normal"></highlight></codeline>
<codeline lineno="902" refid="imstb__truetype_8h_1a4b3487c748701f5b89b7be56625df1be" refkind="member"><highlight class="normal"><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="imstb__truetype_8h_1a4b3487c748701f5b89b7be56625df1be" kindref="member">stbtt_MakeCodepointBitmapSubpixelPrefilter</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref><sp/>*info,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*output,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>out_w,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>out_h,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>out_stride,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale_x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale_y,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>shift_x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>shift_y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>oversample_x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>oversample_y,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*sub_x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*sub_y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>codepoint);</highlight></codeline>
<codeline lineno="903"><highlight class="normal"></highlight><highlight class="comment">//<sp/>same<sp/>as<sp/>stbtt_MakeCodepointBitmapSubpixel,<sp/>but<sp/>prefiltering</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="904"><highlight class="normal"></highlight><highlight class="comment">//<sp/>is<sp/>performed<sp/>(see<sp/>stbtt_PackSetOversampling)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="905"><highlight class="normal"></highlight></codeline>
<codeline lineno="906" refid="imstb__truetype_8h_1a2e607ba774cee7f2425917105dabd16f" refkind="member"><highlight class="normal"><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="imstb__truetype_8h_1a2e607ba774cee7f2425917105dabd16f" kindref="member">stbtt_GetCodepointBitmapBox</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref><sp/>*font,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>codepoint,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale_x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale_y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*ix0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*iy0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*ix1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*iy1);</highlight></codeline>
<codeline lineno="907"><highlight class="normal"></highlight><highlight class="comment">//<sp/>get<sp/>the<sp/>bbox<sp/>of<sp/>the<sp/>bitmap<sp/>centered<sp/>around<sp/>the<sp/>glyph<sp/>origin;<sp/>so<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="908"><highlight class="normal"></highlight><highlight class="comment">//<sp/>bitmap<sp/>width<sp/>is<sp/>ix1-ix0,<sp/>height<sp/>is<sp/>iy1-iy0,<sp/>and<sp/>location<sp/>to<sp/>place</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="909"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>bitmap<sp/>top<sp/>left<sp/>is<sp/>(leftSideBearing*scale,iy0).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="910"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(Note<sp/>that<sp/>the<sp/>bitmap<sp/>uses<sp/>y-increases-down,<sp/>but<sp/>the<sp/>shape<sp/>uses</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="911"><highlight class="normal"></highlight><highlight class="comment">//<sp/>y-increases-up,<sp/>so<sp/>CodepointBitmapBox<sp/>and<sp/>CodepointBox<sp/>are<sp/>inverted.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="912"><highlight class="normal"></highlight></codeline>
<codeline lineno="913" refid="imstb__truetype_8h_1a18fae014dd2261e554248ca737d05578" refkind="member"><highlight class="normal"><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="imstb__truetype_8h_1a18fae014dd2261e554248ca737d05578" kindref="member">stbtt_GetCodepointBitmapBoxSubpixel</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref><sp/>*font,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>codepoint,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale_x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale_y,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>shift_x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>shift_y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*ix0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*iy0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*ix1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*iy1);</highlight></codeline>
<codeline lineno="914"><highlight class="normal"></highlight><highlight class="comment">//<sp/>same<sp/>as<sp/>stbtt_GetCodepointBitmapBox,<sp/>but<sp/>you<sp/>can<sp/>specify<sp/>a<sp/>subpixel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="915"><highlight class="normal"></highlight><highlight class="comment">//<sp/>shift<sp/>for<sp/>the<sp/>character</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="916"><highlight class="normal"></highlight></codeline>
<codeline lineno="917"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>following<sp/>functions<sp/>are<sp/>equivalent<sp/>to<sp/>the<sp/>above<sp/>functions,<sp/>but<sp/>operate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="918"><highlight class="normal"></highlight><highlight class="comment">//<sp/>on<sp/>glyph<sp/>indices<sp/>instead<sp/>of<sp/>Unicode<sp/>codepoints<sp/>(for<sp/>efficiency)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="919" refid="imstb__truetype_8h_1adba6ae7b9f05604eb366a828836b62a9" refkind="member"><highlight class="normal"><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="imstb__truetype_8h_1adba6ae7b9f05604eb366a828836b62a9" kindref="member">stbtt_GetGlyphBitmap</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref><sp/>*info,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale_x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale_y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>glyph,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*height,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*xoff,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*yoff);</highlight></codeline>
<codeline lineno="920" refid="imstb__truetype_8h_1a7a9824b918bd24da2c0193e61bc9ff24" refkind="member"><highlight class="normal"><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="imstb__truetype_8h_1a7a9824b918bd24da2c0193e61bc9ff24" kindref="member">stbtt_GetGlyphBitmapSubpixel</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref><sp/>*info,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale_x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale_y,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>shift_x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>shift_y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>glyph,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*height,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*xoff,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*yoff);</highlight></codeline>
<codeline lineno="921" refid="imstb__truetype_8h_1a915acab7676b20098f4d480376c5b589" refkind="member"><highlight class="normal"><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="imstb__truetype_8h_1a915acab7676b20098f4d480376c5b589" kindref="member">stbtt_MakeGlyphBitmap</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref><sp/>*info,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*output,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>out_w,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>out_h,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>out_stride,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale_x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale_y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>glyph);</highlight></codeline>
<codeline lineno="922" refid="imstb__truetype_8h_1aa82d35f758bc70bd675c48da381e7ea7" refkind="member"><highlight class="normal"><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="imstb__truetype_8h_1aa82d35f758bc70bd675c48da381e7ea7" kindref="member">stbtt_MakeGlyphBitmapSubpixel</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref><sp/>*info,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*output,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>out_w,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>out_h,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>out_stride,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale_x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale_y,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>shift_x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>shift_y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>glyph);</highlight></codeline>
<codeline lineno="923" refid="imstb__truetype_8h_1a006159e27c5c733ea11c688211e47c25" refkind="member"><highlight class="normal"><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="imstb__truetype_8h_1a006159e27c5c733ea11c688211e47c25" kindref="member">stbtt_MakeGlyphBitmapSubpixelPrefilter</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref><sp/>*info,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*output,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>out_w,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>out_h,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>out_stride,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale_x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale_y,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>shift_x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>shift_y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>oversample_x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>oversample_y,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*sub_x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*sub_y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>glyph);</highlight></codeline>
<codeline lineno="924" refid="imstb__truetype_8h_1a7bba8bb63f534246ccd3ed5b9390cc53" refkind="member"><highlight class="normal"><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="imstb__truetype_8h_1a7bba8bb63f534246ccd3ed5b9390cc53" kindref="member">stbtt_GetGlyphBitmapBox</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref><sp/>*font,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>glyph,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale_x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale_y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*ix0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*iy0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*ix1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*iy1);</highlight></codeline>
<codeline lineno="925" refid="imstb__truetype_8h_1a597ef6b92ab0b5800c74478548b4782f" refkind="member"><highlight class="normal"><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="imstb__truetype_8h_1a597ef6b92ab0b5800c74478548b4782f" kindref="member">stbtt_GetGlyphBitmapBoxSubpixel</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref><sp/>*font,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>glyph,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale_x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale_y,</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>shift_x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>shift_y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*ix0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*iy0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*ix1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*iy1);</highlight></codeline>
<codeline lineno="926"><highlight class="normal"></highlight></codeline>
<codeline lineno="927"><highlight class="normal"></highlight></codeline>
<codeline lineno="928"><highlight class="normal"></highlight><highlight class="comment">//<sp/>@TODO:<sp/>don&apos;t<sp/>expose<sp/>this<sp/>structure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="929" refid="structstbtt____bitmap" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="930"><highlight class="normal">{</highlight></codeline>
<codeline lineno="931" refid="structstbtt____bitmap_1a2afc802e26e9f1dda897ac16ecfff10e" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structstbtt____bitmap_1afbd607426f0a457b1a871ed902eeb926" kindref="member">w</ref>,<ref refid="structstbtt____bitmap_1a2afc802e26e9f1dda897ac16ecfff10e" kindref="member">h</ref>,<ref refid="structstbtt____bitmap_1a48ee6b550ee4f1d85bfc32c62c0e9a98" kindref="member">stride</ref>;</highlight></codeline>
<codeline lineno="932" refid="structstbtt____bitmap_1ae6be77625faf55b110eaaffde5c7733c" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structstbtt____bitmap_1ae6be77625faf55b110eaaffde5c7733c" kindref="member">pixels</ref>;</highlight></codeline>
<codeline lineno="933"><highlight class="normal">}<sp/><ref refid="structstbtt____bitmap" kindref="compound">stbtt__bitmap</ref>;</highlight></codeline>
<codeline lineno="934"><highlight class="normal"></highlight></codeline>
<codeline lineno="935"><highlight class="normal"></highlight><highlight class="comment">//<sp/>rasterize<sp/>a<sp/>shape<sp/>with<sp/>quadratic<sp/>beziers<sp/>into<sp/>a<sp/>bitmap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="936" refid="imstb__truetype_8h_1a5b868ef9a9f92e0cc8b6bc0dd52087db" refkind="member"><highlight class="normal"><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="imstb__truetype_8h_1a5b868ef9a9f92e0cc8b6bc0dd52087db" kindref="member">stbtt_Rasterize</ref>(<ref refid="structstbtt____bitmap" kindref="compound">stbtt__bitmap</ref><sp/>*result,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1-channel<sp/>bitmap<sp/>to<sp/>draw<sp/>into</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>flatness_in_pixels,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>allowable<sp/>error<sp/>of<sp/>curve<sp/>in<sp/>pixels</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structstbtt__vertex" kindref="compound">stbtt_vertex</ref><sp/>*vertices,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>array<sp/>of<sp/>vertices<sp/>defining<sp/>shape</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_verts,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>vertices<sp/>in<sp/>above<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale_x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale_y,<sp/></highlight><highlight class="comment">//<sp/>scale<sp/>applied<sp/>to<sp/>input<sp/>vertices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>shift_x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>shift_y,<sp/></highlight><highlight class="comment">//<sp/>translation<sp/>applied<sp/>to<sp/>input<sp/>vertices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x_off,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y_off,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>another<sp/>translation<sp/>applied<sp/>to<sp/>input</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>invert,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>non-zero,<sp/>vertically<sp/>flip<sp/>shape</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*userdata);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>context<sp/>for<sp/>to<sp/>STBTT_MALLOC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="945"><highlight class="normal"></highlight></codeline>
<codeline lineno="947"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="948"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Signed<sp/>Distance<sp/>Function<sp/>(or<sp/>Field)<sp/>rendering</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="949"><highlight class="normal"></highlight></codeline>
<codeline lineno="950" refid="imstb__truetype_8h_1a1254dc807df81931ab070c6e80370489" refkind="member"><highlight class="normal"><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="imstb__truetype_8h_1a1254dc807df81931ab070c6e80370489" kindref="member">stbtt_FreeSDF</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*bitmap,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*userdata);</highlight></codeline>
<codeline lineno="951"><highlight class="normal"></highlight><highlight class="comment">//<sp/>frees<sp/>the<sp/>SDF<sp/>bitmap<sp/>allocated<sp/>below</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="952"><highlight class="normal"></highlight></codeline>
<codeline lineno="953" refid="imstb__truetype_8h_1a86f324094c416b920f5a4df75b3abe97" refkind="member"><highlight class="normal"><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/><ref refid="imstb__truetype_8h_1a86f324094c416b920f5a4df75b3abe97" kindref="member">stbtt_GetGlyphSDF</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref><sp/>*info,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>glyph,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>padding,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>onedge_value,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>pixel_dist_scale,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*height,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*xoff,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*yoff);</highlight></codeline>
<codeline lineno="954" refid="imstb__truetype_8h_1ae70e9e09a74359133d5f282e032d5aa7" refkind="member"><highlight class="normal"><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/><ref refid="imstb__truetype_8h_1ae70e9e09a74359133d5f282e032d5aa7" kindref="member">stbtt_GetCodepointSDF</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref><sp/>*info,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>codepoint,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>padding,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>onedge_value,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>pixel_dist_scale,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*height,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*xoff,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*yoff);</highlight></codeline>
<codeline lineno="955"><highlight class="normal"></highlight><highlight class="comment">//<sp/>These<sp/>functions<sp/>compute<sp/>a<sp/>discretized<sp/>SDF<sp/>field<sp/>for<sp/>a<sp/>single<sp/>character,<sp/>suitable<sp/>for<sp/>storing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="956"><highlight class="normal"></highlight><highlight class="comment">//<sp/>in<sp/>a<sp/>single-channel<sp/>texture,<sp/>sampling<sp/>with<sp/>bilinear<sp/>filtering,<sp/>and<sp/>testing<sp/>against</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="957"><highlight class="normal"></highlight><highlight class="comment">//<sp/>larger<sp/>than<sp/>some<sp/>threshold<sp/>to<sp/>produce<sp/>scalable<sp/>fonts.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="958"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--<sp/><sp/>the<sp/>font</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="959"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scale<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--<sp/><sp/>controls<sp/>the<sp/>size<sp/>of<sp/>the<sp/>resulting<sp/>SDF<sp/>bitmap,<sp/>same<sp/>as<sp/>it<sp/>would<sp/>be<sp/>creating<sp/>a<sp/>regular<sp/>bitmap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="960"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glyph/codepoint<sp/><sp/><sp/>--<sp/><sp/>the<sp/>character<sp/>to<sp/>generate<sp/>the<sp/>SDF<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="961"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>padding<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--<sp/><sp/>extra<sp/>&quot;pixels&quot;<sp/>around<sp/>the<sp/>character<sp/>which<sp/>are<sp/>filled<sp/>with<sp/>the<sp/>distance<sp/>to<sp/>the<sp/>character<sp/>(not<sp/>0),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="962"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>which<sp/>allows<sp/>effects<sp/>like<sp/>bit<sp/>outlines</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="963"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>onedge_value<sp/><sp/><sp/><sp/><sp/><sp/>--<sp/><sp/>value<sp/>0-255<sp/>to<sp/>test<sp/>the<sp/>SDF<sp/>against<sp/>to<sp/>reconstruct<sp/>the<sp/>character<sp/>(i.e.<sp/>the<sp/>isocontour<sp/>of<sp/>the<sp/>character)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="964"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixel_dist_scale<sp/><sp/>--<sp/><sp/>what<sp/>value<sp/>the<sp/>SDF<sp/>should<sp/>increase<sp/>by<sp/>when<sp/>moving<sp/>one<sp/>SDF<sp/>&quot;pixel&quot;<sp/>away<sp/>from<sp/>the<sp/>edge<sp/>(on<sp/>the<sp/>0..255<sp/>scale)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="965"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>positive,<sp/>&gt;<sp/>onedge_value<sp/>is<sp/>inside;<sp/>if<sp/>negative,<sp/>&lt;<sp/>onedge_value<sp/>is<sp/>inside</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="966"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>width,height<sp/><sp/><sp/><sp/><sp/><sp/>--<sp/><sp/>output<sp/>height<sp/>&amp;<sp/>width<sp/>of<sp/>the<sp/>SDF<sp/>bitmap<sp/>(including<sp/>padding)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="967"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xoff,yoff<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--<sp/><sp/>output<sp/>origin<sp/>of<sp/>the<sp/>character</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="968"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>value<sp/><sp/><sp/><sp/><sp/><sp/>--<sp/><sp/>a<sp/>2D<sp/>array<sp/>of<sp/>bytes<sp/>0..255,<sp/>width*height<sp/>in<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="969"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="970"><highlight class="normal"></highlight><highlight class="comment">//<sp/>pixel_dist_scale<sp/>&amp;<sp/>onedge_value<sp/>are<sp/>a<sp/>scale<sp/>&amp;<sp/>bias<sp/>that<sp/>allows<sp/>you<sp/>to<sp/>make</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="971"><highlight class="normal"></highlight><highlight class="comment">//<sp/>optimal<sp/>use<sp/>of<sp/>the<sp/>limited<sp/>0..255<sp/>for<sp/>your<sp/>application,<sp/>trading<sp/>off<sp/>precision</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="972"><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>special<sp/>effects.<sp/>SDF<sp/>values<sp/>outside<sp/>the<sp/>range<sp/>0..255<sp/>are<sp/>clamped<sp/>to<sp/>0..255.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="973"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="974"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Example:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="975"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>scale<sp/>=<sp/>stbtt_ScaleForPixelHeight(22)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="976"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>padding<sp/>=<sp/>5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="977"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>onedge_value<sp/>=<sp/>180</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="978"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>pixel_dist_scale<sp/>=<sp/>180/5.0<sp/>=<sp/>36.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="979"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="980"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>will<sp/>create<sp/>an<sp/>SDF<sp/>bitmap<sp/>in<sp/>which<sp/>the<sp/>character<sp/>is<sp/>about<sp/>22<sp/>pixels</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="981"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>high<sp/>but<sp/>the<sp/>whole<sp/>bitmap<sp/>is<sp/>about<sp/>22+5+5=32<sp/>pixels<sp/>high.<sp/>To<sp/>produce<sp/>a<sp/>filled</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="982"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>shape,<sp/>sample<sp/>the<sp/>SDF<sp/>at<sp/>each<sp/>pixel<sp/>and<sp/>fill<sp/>the<sp/>pixel<sp/>if<sp/>the<sp/>SDF<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="983"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>is<sp/>greater<sp/>than<sp/>or<sp/>equal<sp/>to<sp/>180/255.<sp/>(You&apos;ll<sp/>actually<sp/>want<sp/>to<sp/>antialias,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="984"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>which<sp/>is<sp/>beyond<sp/>the<sp/>scope<sp/>of<sp/>this<sp/>example.)<sp/>Additionally,<sp/>you<sp/>can<sp/>compute</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="985"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>offset<sp/>outlines<sp/>(e.g.<sp/>to<sp/>stroke<sp/>the<sp/>character<sp/>border<sp/>inside<sp/>&amp;<sp/>outside,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="986"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>or<sp/>only<sp/>outside).<sp/>For<sp/>example,<sp/>to<sp/>fill<sp/>outside<sp/>the<sp/>character<sp/>up<sp/>to<sp/>3<sp/>SDF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="987"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>pixels,<sp/>you<sp/>would<sp/>compare<sp/>against<sp/>(180-36.0*3)/255<sp/>=<sp/>72/255.<sp/>The<sp/>above</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="988"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>choice<sp/>of<sp/>variables<sp/>maps<sp/>a<sp/>range<sp/>from<sp/>5<sp/>pixels<sp/>outside<sp/>the<sp/>shape<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="989"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>2<sp/>pixels<sp/>inside<sp/>the<sp/>shape<sp/>to<sp/>0..255;<sp/>this<sp/>is<sp/>intended<sp/>primarily<sp/>for<sp/>apply</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="990"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>outside<sp/>effects<sp/>only<sp/>(the<sp/>interior<sp/>range<sp/>is<sp/>needed<sp/>to<sp/>allow<sp/>proper</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="991"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>antialiasing<sp/>of<sp/>the<sp/>font<sp/>at<sp/>*smaller*<sp/>sizes)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="992"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="993"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>function<sp/>computes<sp/>the<sp/>SDF<sp/>analytically<sp/>at<sp/>each<sp/>SDF<sp/>pixel,<sp/>not<sp/>by<sp/>e.g.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="994"><highlight class="normal"></highlight><highlight class="comment">//<sp/>building<sp/>a<sp/>higher-res<sp/>bitmap<sp/>and<sp/>approximating<sp/>it.<sp/>In<sp/>theory<sp/>the<sp/>quality</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="995"><highlight class="normal"></highlight><highlight class="comment">//<sp/>should<sp/>be<sp/>as<sp/>high<sp/>as<sp/>possible<sp/>for<sp/>an<sp/>SDF<sp/>of<sp/>this<sp/>size<sp/>&amp;<sp/>representation,<sp/>but</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="996"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unclear<sp/>if<sp/>this<sp/>is<sp/>true<sp/>in<sp/>practice<sp/>(perhaps<sp/>building<sp/>a<sp/>higher-res<sp/>bitmap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="997"><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>computing<sp/>from<sp/>that<sp/>can<sp/>allow<sp/>drop-out<sp/>prevention).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="998"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="999"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>algorithm<sp/>has<sp/>not<sp/>been<sp/>optimized<sp/>at<sp/>all,<sp/>so<sp/>expect<sp/>it<sp/>to<sp/>be<sp/>slow</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1000"><highlight class="normal"></highlight><highlight class="comment">//<sp/>if<sp/>computing<sp/>lots<sp/>of<sp/>characters<sp/>or<sp/>very<sp/>large<sp/>sizes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1001"><highlight class="normal"></highlight></codeline>
<codeline lineno="1002"><highlight class="normal"></highlight></codeline>
<codeline lineno="1003"><highlight class="normal"></highlight></codeline>
<codeline lineno="1005"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1006"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Finding<sp/>the<sp/>right<sp/>font...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1007"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1008"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>should<sp/>really<sp/>just<sp/>solve<sp/>this<sp/>offline,<sp/>keep<sp/>your<sp/>own<sp/>tables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1009"><highlight class="normal"></highlight><highlight class="comment">//<sp/>of<sp/>what<sp/>font<sp/>is<sp/>what,<sp/>and<sp/>don&apos;t<sp/>try<sp/>to<sp/>get<sp/>it<sp/>out<sp/>of<sp/>the<sp/>.ttf<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1010"><highlight class="normal"></highlight><highlight class="comment">//<sp/>That&apos;s<sp/>because<sp/>getting<sp/>it<sp/>out<sp/>of<sp/>the<sp/>.ttf<sp/>file<sp/>is<sp/>really<sp/>hard,<sp/>because</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1011"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>names<sp/>in<sp/>the<sp/>file<sp/>can<sp/>appear<sp/>in<sp/>many<sp/>possible<sp/>encodings,<sp/>in<sp/>many</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1012"><highlight class="normal"></highlight><highlight class="comment">//<sp/>possible<sp/>languages,<sp/>and<sp/>e.g.<sp/>if<sp/>you<sp/>need<sp/>a<sp/>case-insensitive<sp/>comparison,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1013"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>details<sp/>of<sp/>that<sp/>depend<sp/>on<sp/>the<sp/>encoding<sp/>&amp;<sp/>language<sp/>in<sp/>a<sp/>complex<sp/>way</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1014"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(actually<sp/>underspecified<sp/>in<sp/>truetype,<sp/>but<sp/>also<sp/>gigantic).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1015"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1016"><highlight class="normal"></highlight><highlight class="comment">//<sp/>But<sp/>you<sp/>can<sp/>use<sp/>the<sp/>provided<sp/>functions<sp/>in<sp/>two<sp/>possible<sp/>ways:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1017"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>stbtt_FindMatchingFont()<sp/>will<sp/>use<sp/>*case-sensitive*<sp/>comparisons<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1018"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unicode-encoded<sp/>names<sp/>to<sp/>try<sp/>to<sp/>find<sp/>the<sp/>font<sp/>you<sp/>want;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1019"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>you<sp/>can<sp/>run<sp/>this<sp/>before<sp/>calling<sp/>stbtt_InitFont()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1020"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1021"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>stbtt_GetFontNameString()<sp/>lets<sp/>you<sp/>get<sp/>any<sp/>of<sp/>the<sp/>various<sp/>strings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1022"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>from<sp/>the<sp/>file<sp/>yourself<sp/>and<sp/>do<sp/>your<sp/>own<sp/>comparisons<sp/>on<sp/>them.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1023"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>You<sp/>have<sp/>to<sp/>have<sp/>called<sp/>stbtt_InitFont()<sp/>first.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1024"><highlight class="normal"></highlight></codeline>
<codeline lineno="1025"><highlight class="normal"></highlight></codeline>
<codeline lineno="1026" refid="imstb__truetype_8h_1a76ec14e5c7e57981dc5a409d89b5e92f" refkind="member"><highlight class="normal"><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="imstb__truetype_8h_1a76ec14e5c7e57981dc5a409d89b5e92f" kindref="member">stbtt_FindMatchingFont</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fontdata,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flags);</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"></highlight><highlight class="comment">//<sp/>returns<sp/>the<sp/>offset<sp/>(not<sp/>index)<sp/>of<sp/>the<sp/>font<sp/>that<sp/>matches,<sp/>or<sp/>-1<sp/>if<sp/>none</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1028"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>if<sp/>you<sp/>use<sp/>STBTT_MACSTYLE_DONTCARE,<sp/>use<sp/>a<sp/>font<sp/>name<sp/>like<sp/>&quot;Arial<sp/>Bold&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1029"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>if<sp/>you<sp/>use<sp/>any<sp/>other<sp/>flag,<sp/>use<sp/>a<sp/>font<sp/>name<sp/>like<sp/>&quot;Arial&quot;;<sp/>this<sp/>checks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1030"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>the<sp/>&apos;macStyle&apos;<sp/>header<sp/>field;<sp/>i<sp/>don&apos;t<sp/>know<sp/>if<sp/>fonts<sp/>set<sp/>this<sp/>consistently</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1031" refid="imstb__truetype_8h_1ac914b70667c9abbe432dcc4c048e6542" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBTT_MACSTYLE_DONTCARE<sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1032" refid="imstb__truetype_8h_1a3856cc4fbab4c126c2c438c6f567525d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBTT_MACSTYLE_BOLD<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1033" refid="imstb__truetype_8h_1a95e8d57e767119c978652397df54afef" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBTT_MACSTYLE_ITALIC<sp/><sp/><sp/><sp/><sp/><sp/><sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1034" refid="imstb__truetype_8h_1a9064e582d96dcbaf2f573896cccd5ef7" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBTT_MACSTYLE_UNDERSCORE<sp/><sp/><sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1035" refid="imstb__truetype_8h_1accb2ecf3e0d840362ebba3fe3da192da" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBTT_MACSTYLE_NONE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>8<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&lt;=<sp/>not<sp/>same<sp/>as<sp/>0,<sp/>this<sp/>makes<sp/>us<sp/>check<sp/>the<sp/>bitfield<sp/>is<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1036"><highlight class="normal"></highlight></codeline>
<codeline lineno="1037" refid="imstb__truetype_8h_1aafc4974ee424f18246f47b0926a1cd31" refkind="member"><highlight class="normal"><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="imstb__truetype_8h_1aafc4974ee424f18246f47b0926a1cd31" kindref="member">stbtt_CompareUTF8toUTF16_bigendian</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len2);</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"></highlight><highlight class="comment">//<sp/>returns<sp/>1/0<sp/>whether<sp/>the<sp/>first<sp/>string<sp/>interpreted<sp/>as<sp/>utf8<sp/>is<sp/>identical<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1039"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>second<sp/>string<sp/>interpreted<sp/>as<sp/>big-endian<sp/>utf16...<sp/>useful<sp/>for<sp/>strings<sp/>from<sp/>next<sp/>func</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1040"><highlight class="normal"></highlight></codeline>
<codeline lineno="1041" refid="imstb__truetype_8h_1a404d8b8c23a01c8cdf71f02d6d47d185" refkind="member"><highlight class="normal"><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="imstb__truetype_8h_1a404d8b8c23a01c8cdf71f02d6d47d185" kindref="member">stbtt_GetFontNameString</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref><sp/>*font,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*length,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>platformID,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>encodingID,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>languageID,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nameID);</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"></highlight><highlight class="comment">//<sp/>returns<sp/>the<sp/>string<sp/>(which<sp/>may<sp/>be<sp/>big-endian<sp/>double<sp/>byte,<sp/>e.g.<sp/>for<sp/>unicode)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1043"><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>puts<sp/>the<sp/>length<sp/>in<sp/>bytes<sp/>in<sp/>*length.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1044"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1045"><highlight class="normal"></highlight><highlight class="comment">//<sp/>some<sp/>of<sp/>the<sp/>values<sp/>for<sp/>the<sp/>IDs<sp/>are<sp/>below;<sp/>for<sp/>more<sp/>see<sp/>the<sp/>truetype<sp/>spec:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1046"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>http://developer.apple.com/textfonts/TTRefMan/RM06/Chap6name.html</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1047"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>http://www.microsoft.com/typography/otspec/name.htm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1048"><highlight class="normal"></highlight></codeline>
<codeline lineno="1049"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">//<sp/>platformID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1050" refid="imstb__truetype_8h_1a6ffa9624070bebdf0fe0f6321616f58aa7df9cd0e95e0b375d03348661b399b69" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="imstb__truetype_8h_1a6ffa9624070bebdf0fe0f6321616f58aa7df9cd0e95e0b375d03348661b399b69" kindref="member">STBTT_PLATFORM_ID_UNICODE</ref><sp/><sp/><sp/>=0,</highlight></codeline>
<codeline lineno="1051" refid="imstb__truetype_8h_1a6ffa9624070bebdf0fe0f6321616f58aadc1a3ed4f2abe63dd4e91d789136db3f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="imstb__truetype_8h_1a6ffa9624070bebdf0fe0f6321616f58aadc1a3ed4f2abe63dd4e91d789136db3f" kindref="member">STBTT_PLATFORM_ID_MAC</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=1,</highlight></codeline>
<codeline lineno="1052" refid="imstb__truetype_8h_1a6ffa9624070bebdf0fe0f6321616f58aacd63703eafd91118387dfb70b384132d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="imstb__truetype_8h_1a6ffa9624070bebdf0fe0f6321616f58aacd63703eafd91118387dfb70b384132d" kindref="member">STBTT_PLATFORM_ID_ISO</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=2,</highlight></codeline>
<codeline lineno="1053" refid="imstb__truetype_8h_1a6ffa9624070bebdf0fe0f6321616f58aa86f00e4c49cfec574b34090faa47f878" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="imstb__truetype_8h_1a6ffa9624070bebdf0fe0f6321616f58aa86f00e4c49cfec574b34090faa47f878" kindref="member">STBTT_PLATFORM_ID_MICROSOFT</ref><sp/>=3</highlight></codeline>
<codeline lineno="1054"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"></highlight></codeline>
<codeline lineno="1056"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">//<sp/>encodingID<sp/>for<sp/>STBTT_PLATFORM_ID_UNICODE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1057" refid="imstb__truetype_8h_1a14393b680e47e30e4ba45cead77dfe5faeec1111b4adcd61a20a461138726fc46" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="imstb__truetype_8h_1a14393b680e47e30e4ba45cead77dfe5faeec1111b4adcd61a20a461138726fc46" kindref="member">STBTT_UNICODE_EID_UNICODE_1_0</ref><sp/><sp/><sp/><sp/>=0,</highlight></codeline>
<codeline lineno="1058" refid="imstb__truetype_8h_1a14393b680e47e30e4ba45cead77dfe5faa13de23938974ed5ed2039ad0c623901" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="imstb__truetype_8h_1a14393b680e47e30e4ba45cead77dfe5faa13de23938974ed5ed2039ad0c623901" kindref="member">STBTT_UNICODE_EID_UNICODE_1_1</ref><sp/><sp/><sp/><sp/>=1,</highlight></codeline>
<codeline lineno="1059" refid="imstb__truetype_8h_1a14393b680e47e30e4ba45cead77dfe5fa2803b7d7150216b6e67cdd2ef9e734b0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="imstb__truetype_8h_1a14393b680e47e30e4ba45cead77dfe5fa2803b7d7150216b6e67cdd2ef9e734b0" kindref="member">STBTT_UNICODE_EID_ISO_10646</ref><sp/><sp/><sp/><sp/><sp/><sp/>=2,</highlight></codeline>
<codeline lineno="1060" refid="imstb__truetype_8h_1a14393b680e47e30e4ba45cead77dfe5fa4ead513507e004e256fb772d7ee91f60" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="imstb__truetype_8h_1a14393b680e47e30e4ba45cead77dfe5fa4ead513507e004e256fb772d7ee91f60" kindref="member">STBTT_UNICODE_EID_UNICODE_2_0_BMP</ref>=3,</highlight></codeline>
<codeline lineno="1061" refid="imstb__truetype_8h_1a14393b680e47e30e4ba45cead77dfe5fa95f85f02ffe39539e6b4032a3db58eed" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="imstb__truetype_8h_1a14393b680e47e30e4ba45cead77dfe5fa95f85f02ffe39539e6b4032a3db58eed" kindref="member">STBTT_UNICODE_EID_UNICODE_2_0_FULL</ref>=4</highlight></codeline>
<codeline lineno="1062"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"></highlight></codeline>
<codeline lineno="1064"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">//<sp/>encodingID<sp/>for<sp/>STBTT_PLATFORM_ID_MICROSOFT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1065" refid="imstb__truetype_8h_1ac4d0fc67edc6c583674315dd15a5c81ca87372d512b2e4be1dce36fe0153b8cc0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="imstb__truetype_8h_1ac4d0fc67edc6c583674315dd15a5c81ca87372d512b2e4be1dce36fe0153b8cc0" kindref="member">STBTT_MS_EID_SYMBOL</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=0,</highlight></codeline>
<codeline lineno="1066" refid="imstb__truetype_8h_1ac4d0fc67edc6c583674315dd15a5c81caf3b7a17fc226e7540f025d241f36f17d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="imstb__truetype_8h_1ac4d0fc67edc6c583674315dd15a5c81caf3b7a17fc226e7540f025d241f36f17d" kindref="member">STBTT_MS_EID_UNICODE_BMP</ref><sp/><sp/><sp/>=1,</highlight></codeline>
<codeline lineno="1067" refid="imstb__truetype_8h_1ac4d0fc67edc6c583674315dd15a5c81caaaab3da7b4e39433ac3db32fd9a83808" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="imstb__truetype_8h_1ac4d0fc67edc6c583674315dd15a5c81caaaab3da7b4e39433ac3db32fd9a83808" kindref="member">STBTT_MS_EID_SHIFTJIS</ref><sp/><sp/><sp/><sp/><sp/><sp/>=2,</highlight></codeline>
<codeline lineno="1068" refid="imstb__truetype_8h_1ac4d0fc67edc6c583674315dd15a5c81ca08224d2a200bd947c6513926290f4640" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="imstb__truetype_8h_1ac4d0fc67edc6c583674315dd15a5c81ca08224d2a200bd947c6513926290f4640" kindref="member">STBTT_MS_EID_UNICODE_FULL</ref><sp/><sp/>=10</highlight></codeline>
<codeline lineno="1069"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"></highlight></codeline>
<codeline lineno="1071"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">//<sp/>encodingID<sp/>for<sp/>STBTT_PLATFORM_ID_MAC;<sp/>same<sp/>as<sp/>Script<sp/>Manager<sp/>codes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1072" refid="imstb__truetype_8h_1a0bdade2a3ea56f288fa40d64b7bd0f62aedbd64dd9fc105aabbbae72bae09be1f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="imstb__truetype_8h_1a0bdade2a3ea56f288fa40d64b7bd0f62a11789a74295482059768d7ed21ddc1ae" kindref="member">STBTT_MAC_EID_ROMAN</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=0,<sp/><sp/><sp/><ref refid="imstb__truetype_8h_1a0bdade2a3ea56f288fa40d64b7bd0f62aedbd64dd9fc105aabbbae72bae09be1f" kindref="member">STBTT_MAC_EID_ARABIC</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=4,</highlight></codeline>
<codeline lineno="1073" refid="imstb__truetype_8h_1a0bdade2a3ea56f288fa40d64b7bd0f62a4f4920b5c91733bd8bb176d5425bd106" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="imstb__truetype_8h_1a0bdade2a3ea56f288fa40d64b7bd0f62aa1cd5f4622dd634ffafe0487a2135524" kindref="member">STBTT_MAC_EID_JAPANESE</ref><sp/><sp/><sp/><sp/><sp/>=1,<sp/><sp/><sp/><ref refid="imstb__truetype_8h_1a0bdade2a3ea56f288fa40d64b7bd0f62a4f4920b5c91733bd8bb176d5425bd106" kindref="member">STBTT_MAC_EID_HEBREW</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=5,</highlight></codeline>
<codeline lineno="1074" refid="imstb__truetype_8h_1a0bdade2a3ea56f288fa40d64b7bd0f62a808bbaa74269579caa945ffdae31c62a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="imstb__truetype_8h_1a0bdade2a3ea56f288fa40d64b7bd0f62a808bbaa74269579caa945ffdae31c62a" kindref="member">STBTT_MAC_EID_CHINESE_TRAD</ref><sp/>=2,<sp/><sp/><sp/><ref refid="imstb__truetype_8h_1a0bdade2a3ea56f288fa40d64b7bd0f62ac3c0a50ac37d4b5a68e0ea22824bee75" kindref="member">STBTT_MAC_EID_GREEK</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=6,</highlight></codeline>
<codeline lineno="1075" refid="imstb__truetype_8h_1a0bdade2a3ea56f288fa40d64b7bd0f62a0b8da1ad3177e0c9b1564c780fc11f0b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="imstb__truetype_8h_1a0bdade2a3ea56f288fa40d64b7bd0f62a0b8da1ad3177e0c9b1564c780fc11f0b" kindref="member">STBTT_MAC_EID_KOREAN</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=3,<sp/><sp/><sp/><ref refid="imstb__truetype_8h_1a0bdade2a3ea56f288fa40d64b7bd0f62aba7e217cc8f987ce69ab91180bd15a7f" kindref="member">STBTT_MAC_EID_RUSSIAN</ref><sp/><sp/><sp/><sp/><sp/><sp/>=7</highlight></codeline>
<codeline lineno="1076"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"></highlight></codeline>
<codeline lineno="1078"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">//<sp/>languageID<sp/>for<sp/>STBTT_PLATFORM_ID_MICROSOFT;<sp/>same<sp/>as<sp/>LCID...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>problematic<sp/>because<sp/>there<sp/>are<sp/>e.g.<sp/>16<sp/>english<sp/>LCIDs<sp/>and<sp/>16<sp/>arabic<sp/>LCIDs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1080" refid="imstb__truetype_8h_1aabf39e595f2ea2d3c208d5711f8d0729a73e1e353a8727baf20ce85ee329b310b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="imstb__truetype_8h_1aabf39e595f2ea2d3c208d5711f8d0729a73e1e353a8727baf20ce85ee329b310b" kindref="member">STBTT_MS_LANG_ENGLISH</ref><sp/><sp/><sp/><sp/><sp/>=0x0409,<sp/><sp/><sp/><ref refid="imstb__truetype_8h_1aabf39e595f2ea2d3c208d5711f8d0729a9d1b0af23f2f76cd1789e0cd638b935d" kindref="member">STBTT_MS_LANG_ITALIAN</ref><sp/><sp/><sp/><sp/><sp/>=0x0410,</highlight></codeline>
<codeline lineno="1081" refid="imstb__truetype_8h_1aabf39e595f2ea2d3c208d5711f8d0729a6092851487f2d9708532ee955d4a75bd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="imstb__truetype_8h_1aabf39e595f2ea2d3c208d5711f8d0729a6092851487f2d9708532ee955d4a75bd" kindref="member">STBTT_MS_LANG_CHINESE</ref><sp/><sp/><sp/><sp/><sp/>=0x0804,<sp/><sp/><sp/><ref refid="imstb__truetype_8h_1aabf39e595f2ea2d3c208d5711f8d0729a0e44b54e59bcc095ff9fe786850cbf74" kindref="member">STBTT_MS_LANG_JAPANESE</ref><sp/><sp/><sp/><sp/>=0x0411,</highlight></codeline>
<codeline lineno="1082" refid="imstb__truetype_8h_1aabf39e595f2ea2d3c208d5711f8d0729a0b5f77089567369488e03917d99ddbe5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="imstb__truetype_8h_1aabf39e595f2ea2d3c208d5711f8d0729a0b5f77089567369488e03917d99ddbe5" kindref="member">STBTT_MS_LANG_DUTCH</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=0x0413,<sp/><sp/><sp/><ref refid="imstb__truetype_8h_1aabf39e595f2ea2d3c208d5711f8d0729adc4f5bbc60ef97f1418902574fd9b418" kindref="member">STBTT_MS_LANG_KOREAN</ref><sp/><sp/><sp/><sp/><sp/><sp/>=0x0412,</highlight></codeline>
<codeline lineno="1083" refid="imstb__truetype_8h_1aabf39e595f2ea2d3c208d5711f8d0729a3b89fa08e6376c8314c330bd1e9837b5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="imstb__truetype_8h_1aabf39e595f2ea2d3c208d5711f8d0729a3b89fa08e6376c8314c330bd1e9837b5" kindref="member">STBTT_MS_LANG_FRENCH</ref><sp/><sp/><sp/><sp/><sp/><sp/>=0x040c,<sp/><sp/><sp/><ref refid="imstb__truetype_8h_1aabf39e595f2ea2d3c208d5711f8d0729a7930264450b0313e58f7590550520786" kindref="member">STBTT_MS_LANG_RUSSIAN</ref><sp/><sp/><sp/><sp/><sp/>=0x0419,</highlight></codeline>
<codeline lineno="1084" refid="imstb__truetype_8h_1aabf39e595f2ea2d3c208d5711f8d0729aebb69f5af1155d26a280778c5ab72580" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="imstb__truetype_8h_1aabf39e595f2ea2d3c208d5711f8d0729aebb69f5af1155d26a280778c5ab72580" kindref="member">STBTT_MS_LANG_GERMAN</ref><sp/><sp/><sp/><sp/><sp/><sp/>=0x0407,<sp/><sp/><sp/><ref refid="imstb__truetype_8h_1aabf39e595f2ea2d3c208d5711f8d0729a541da99c0255bb044006cc32c2ae50a2" kindref="member">STBTT_MS_LANG_SPANISH</ref><sp/><sp/><sp/><sp/><sp/>=0x0409,</highlight></codeline>
<codeline lineno="1085" refid="imstb__truetype_8h_1aabf39e595f2ea2d3c208d5711f8d0729aed7119e1e991009f49065071f4df39c6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="imstb__truetype_8h_1aabf39e595f2ea2d3c208d5711f8d0729aed7119e1e991009f49065071f4df39c6" kindref="member">STBTT_MS_LANG_HEBREW</ref><sp/><sp/><sp/><sp/><sp/><sp/>=0x040d,<sp/><sp/><sp/><ref refid="imstb__truetype_8h_1aabf39e595f2ea2d3c208d5711f8d0729a126d5bcdbb6e42a9799873b4ffde6c34" kindref="member">STBTT_MS_LANG_SWEDISH</ref><sp/><sp/><sp/><sp/><sp/>=0x041D</highlight></codeline>
<codeline lineno="1086"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"></highlight></codeline>
<codeline lineno="1088"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">//<sp/>languageID<sp/>for<sp/>STBTT_PLATFORM_ID_MAC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1089" refid="imstb__truetype_8h_1afefc261ba5c376d0658a017f1d2dd13fa845b632475daa7639bb3438785ca3fc9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="imstb__truetype_8h_1afefc261ba5c376d0658a017f1d2dd13fa845b632475daa7639bb3438785ca3fc9" kindref="member">STBTT_MAC_LANG_ENGLISH</ref><sp/><sp/><sp/><sp/><sp/><sp/>=0<sp/>,<sp/><sp/><sp/><ref refid="imstb__truetype_8h_1afefc261ba5c376d0658a017f1d2dd13fa988de1366d401829c919b481c5c3c8e2" kindref="member">STBTT_MAC_LANG_JAPANESE</ref><sp/><sp/><sp/><sp/><sp/>=11,</highlight></codeline>
<codeline lineno="1090" refid="imstb__truetype_8h_1afefc261ba5c376d0658a017f1d2dd13fae6f91a195abd217070ca9cee63849420" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="imstb__truetype_8h_1afefc261ba5c376d0658a017f1d2dd13fae6f91a195abd217070ca9cee63849420" kindref="member">STBTT_MAC_LANG_ARABIC</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=12,<sp/><sp/><sp/><ref refid="imstb__truetype_8h_1afefc261ba5c376d0658a017f1d2dd13fa236502e69e2e07df089168e80dc1330d" kindref="member">STBTT_MAC_LANG_KOREAN</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=23,</highlight></codeline>
<codeline lineno="1091" refid="imstb__truetype_8h_1afefc261ba5c376d0658a017f1d2dd13faf2757f8c4078dfb9fe9ad9dc32e801ee" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="imstb__truetype_8h_1afefc261ba5c376d0658a017f1d2dd13faf2757f8c4078dfb9fe9ad9dc32e801ee" kindref="member">STBTT_MAC_LANG_DUTCH</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=4<sp/>,<sp/><sp/><sp/><ref refid="imstb__truetype_8h_1afefc261ba5c376d0658a017f1d2dd13faf99640bf65945428bcb19f3b9e6e287f" kindref="member">STBTT_MAC_LANG_RUSSIAN</ref><sp/><sp/><sp/><sp/><sp/><sp/>=32,</highlight></codeline>
<codeline lineno="1092" refid="imstb__truetype_8h_1afefc261ba5c376d0658a017f1d2dd13fa9a8ae7b8dca3b2902eb69ece32b817a3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="imstb__truetype_8h_1afefc261ba5c376d0658a017f1d2dd13fa9a8ae7b8dca3b2902eb69ece32b817a3" kindref="member">STBTT_MAC_LANG_FRENCH</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=1<sp/>,<sp/><sp/><sp/><ref refid="imstb__truetype_8h_1afefc261ba5c376d0658a017f1d2dd13fa5399db7b554ed772c935f1b5d9d67852" kindref="member">STBTT_MAC_LANG_SPANISH</ref><sp/><sp/><sp/><sp/><sp/><sp/>=6<sp/>,</highlight></codeline>
<codeline lineno="1093" refid="imstb__truetype_8h_1afefc261ba5c376d0658a017f1d2dd13fae3360f5396032fdf22ebb35f3d30e849" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="imstb__truetype_8h_1afefc261ba5c376d0658a017f1d2dd13fae3360f5396032fdf22ebb35f3d30e849" kindref="member">STBTT_MAC_LANG_GERMAN</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=2<sp/>,<sp/><sp/><sp/><ref refid="imstb__truetype_8h_1afefc261ba5c376d0658a017f1d2dd13fa0315abafecf696110de133e4d54ade8c" kindref="member">STBTT_MAC_LANG_SWEDISH</ref><sp/><sp/><sp/><sp/><sp/><sp/>=5<sp/>,</highlight></codeline>
<codeline lineno="1094" refid="imstb__truetype_8h_1afefc261ba5c376d0658a017f1d2dd13fa552ed7fe17ee850f3883344b3424e26b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="imstb__truetype_8h_1afefc261ba5c376d0658a017f1d2dd13fad60d41526c1e9ee9ec50e8fd8950b9a4" kindref="member">STBTT_MAC_LANG_HEBREW</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=10,<sp/><sp/><sp/><ref refid="imstb__truetype_8h_1afefc261ba5c376d0658a017f1d2dd13fa552ed7fe17ee850f3883344b3424e26b" kindref="member">STBTT_MAC_LANG_CHINESE_SIMPLIFIED</ref><sp/>=33,</highlight></codeline>
<codeline lineno="1095" refid="imstb__truetype_8h_1afefc261ba5c376d0658a017f1d2dd13faf7d2b171e725e29ef4fbfbff7c3b5926" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="imstb__truetype_8h_1afefc261ba5c376d0658a017f1d2dd13fa50fb98b75fe8bc23d2bc963e45ea8d96" kindref="member">STBTT_MAC_LANG_ITALIAN</ref><sp/><sp/><sp/><sp/><sp/><sp/>=3<sp/>,<sp/><sp/><sp/><ref refid="imstb__truetype_8h_1afefc261ba5c376d0658a017f1d2dd13faf7d2b171e725e29ef4fbfbff7c3b5926" kindref="member">STBTT_MAC_LANG_CHINESE_TRAD</ref><sp/>=19</highlight></codeline>
<codeline lineno="1096"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"></highlight></codeline>
<codeline lineno="1098"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1099"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1101"><highlight class="normal"></highlight></codeline>
<codeline lineno="1102"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>__STB_INCLUDE_STB_TRUETYPE_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1103"><highlight class="normal"></highlight></codeline>
<codeline lineno="1110"><highlight class="normal"></highlight></codeline>
<codeline lineno="1111"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>STB_TRUETYPE_IMPLEMENTATION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1112"><highlight class="normal"></highlight></codeline>
<codeline lineno="1113"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>STBTT_MAX_OVERSAMPLE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1114"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBTT_MAX_OVERSAMPLE<sp/><sp/><sp/>8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1115"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1116"><highlight class="normal"></highlight></codeline>
<codeline lineno="1117"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>STBTT_MAX_OVERSAMPLE<sp/>&gt;<sp/>255</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1118"><highlight class="normal"></highlight><highlight class="preprocessor">#error<sp/>&quot;STBTT_MAX_OVERSAMPLE<sp/>cannot<sp/>be<sp/>&gt;<sp/>255&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1119"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1120"><highlight class="normal"></highlight></codeline>
<codeline lineno="1121"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbtt__test_oversample_pow2[(STBTT_MAX_OVERSAMPLE<sp/>&amp;<sp/>(STBTT_MAX_OVERSAMPLE-1))<sp/>==<sp/>0<sp/>?<sp/>1<sp/>:<sp/>-1];</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"></highlight></codeline>
<codeline lineno="1123"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>STBTT_RASTERIZER_VERSION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1124"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBTT_RASTERIZER_VERSION<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1125"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1126"><highlight class="normal"></highlight></codeline>
<codeline lineno="1127"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_MSC_VER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1128"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBTT__NOTUSED(v)<sp/><sp/>(void)(v)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1129"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1130"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBTT__NOTUSED(v)<sp/><sp/>(void)sizeof(v)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1131"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1132"><highlight class="normal"></highlight></codeline>
<codeline lineno="1134"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1135"><highlight class="normal"></highlight><highlight class="comment">//<sp/>stbtt__buf<sp/>helpers<sp/>to<sp/>parse<sp/>data<sp/>from<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1136"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1137"><highlight class="normal"></highlight></codeline>
<codeline lineno="1138"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>stbtt_uint8<sp/>stbtt__buf_get8(<ref refid="structstbtt____buf" kindref="compound">stbtt__buf</ref><sp/>*b)</highlight></codeline>
<codeline lineno="1139"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(b-&gt;<ref refid="structstbtt____buf_1ac047fda650726920531272c28aa354fb" kindref="member">cursor</ref><sp/>&gt;=<sp/>b-&gt;<ref refid="structstbtt____buf_1a0f6f2d06981ab4a5697233bbd0cafb5b" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>b-&gt;<ref refid="structstbtt____buf_1a376d8cdacbc8295a7e88567ad52a0ac4" kindref="member">data</ref>[b-&gt;<ref refid="structstbtt____buf_1ac047fda650726920531272c28aa354fb" kindref="member">cursor</ref>++];</highlight></codeline>
<codeline lineno="1143"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"></highlight></codeline>
<codeline lineno="1145"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>stbtt_uint8<sp/>stbtt__buf_peek8(<ref refid="structstbtt____buf" kindref="compound">stbtt__buf</ref><sp/>*b)</highlight></codeline>
<codeline lineno="1146"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(b-&gt;<ref refid="structstbtt____buf_1ac047fda650726920531272c28aa354fb" kindref="member">cursor</ref><sp/>&gt;=<sp/>b-&gt;<ref refid="structstbtt____buf_1a0f6f2d06981ab4a5697233bbd0cafb5b" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>b-&gt;<ref refid="structstbtt____buf_1a376d8cdacbc8295a7e88567ad52a0ac4" kindref="member">data</ref>[b-&gt;<ref refid="structstbtt____buf_1ac047fda650726920531272c28aa354fb" kindref="member">cursor</ref>];</highlight></codeline>
<codeline lineno="1150"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"></highlight></codeline>
<codeline lineno="1152"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stbtt__buf_seek(<ref refid="structstbtt____buf" kindref="compound">stbtt__buf</ref><sp/>*b,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>o)</highlight></codeline>
<codeline lineno="1153"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><ref refid="imgui__draw_8cpp_1a1123d905f512c19c8d796a6d294a3a84" kindref="member">STBTT_assert</ref>(!(o<sp/>&gt;<sp/>b-&gt;<ref refid="structstbtt____buf_1a0f6f2d06981ab4a5697233bbd0cafb5b" kindref="member">size</ref><sp/>||<sp/>o<sp/>&lt;<sp/>0));</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/>b-&gt;<ref refid="structstbtt____buf_1ac047fda650726920531272c28aa354fb" kindref="member">cursor</ref><sp/>=<sp/>(o<sp/>&gt;<sp/>b-&gt;<ref refid="structstbtt____buf_1a0f6f2d06981ab4a5697233bbd0cafb5b" kindref="member">size</ref><sp/>||<sp/>o<sp/>&lt;<sp/>0)<sp/>?<sp/>b-&gt;<ref refid="structstbtt____buf_1a0f6f2d06981ab4a5697233bbd0cafb5b" kindref="member">size</ref><sp/>:<sp/>o;</highlight></codeline>
<codeline lineno="1156"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"></highlight></codeline>
<codeline lineno="1158"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stbtt__buf_skip(<ref refid="structstbtt____buf" kindref="compound">stbtt__buf</ref><sp/>*b,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>o)</highlight></codeline>
<codeline lineno="1159"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/>stbtt__buf_seek(b,<sp/>b-&gt;<ref refid="structstbtt____buf_1ac047fda650726920531272c28aa354fb" kindref="member">cursor</ref><sp/>+<sp/>o);</highlight></codeline>
<codeline lineno="1161"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"></highlight></codeline>
<codeline lineno="1163"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>stbtt_uint32<sp/>stbtt__buf_get(<ref refid="structstbtt____buf" kindref="compound">stbtt__buf</ref><sp/>*b,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n)</highlight></codeline>
<codeline lineno="1164"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/>stbtt_uint32<sp/>v<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><ref refid="imgui__draw_8cpp_1a1123d905f512c19c8d796a6d294a3a84" kindref="member">STBTT_assert</ref>(n<sp/>&gt;=<sp/>1<sp/>&amp;&amp;<sp/>n<sp/>&lt;=<sp/>4);</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n;<sp/>i++)</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>=<sp/>(v<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>stbtt__buf_get8(b);</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v;</highlight></codeline>
<codeline lineno="1171"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"></highlight></codeline>
<codeline lineno="1173"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structstbtt____buf" kindref="compound">stbtt__buf</ref><sp/>stbtt__new_buf(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size)</highlight></codeline>
<codeline lineno="1174"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><ref refid="structstbtt____buf" kindref="compound">stbtt__buf</ref><sp/>r;</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><ref refid="imgui__draw_8cpp_1a1123d905f512c19c8d796a6d294a3a84" kindref="member">STBTT_assert</ref>(size<sp/>&lt;<sp/>0x40000000);</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/>r.<ref refid="structstbtt____buf_1a376d8cdacbc8295a7e88567ad52a0ac4" kindref="member">data</ref><sp/>=<sp/>(stbtt_uint8*)<sp/>p;</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/>r.<ref refid="structstbtt____buf_1a0f6f2d06981ab4a5697233bbd0cafb5b" kindref="member">size</ref><sp/>=<sp/>(int)<sp/>size;</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/>r.<ref refid="structstbtt____buf_1ac047fda650726920531272c28aa354fb" kindref="member">cursor</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="1181"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"></highlight></codeline>
<codeline lineno="1183"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>stbtt__buf_get16(b)<sp/><sp/>stbtt__buf_get((b),<sp/>2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1184"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>stbtt__buf_get32(b)<sp/><sp/>stbtt__buf_get((b),<sp/>4)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1185"><highlight class="normal"></highlight></codeline>
<codeline lineno="1186"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structstbtt____buf" kindref="compound">stbtt__buf</ref><sp/>stbtt__buf_range(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structstbtt____buf" kindref="compound">stbtt__buf</ref><sp/>*b,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>o,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s)</highlight></codeline>
<codeline lineno="1187"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><ref refid="structstbtt____buf" kindref="compound">stbtt__buf</ref><sp/>r<sp/>=<sp/>stbtt__new_buf(NULL,<sp/>0);</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(o<sp/>&lt;<sp/>0<sp/>||<sp/>s<sp/>&lt;<sp/>0<sp/>||<sp/>o<sp/>&gt;<sp/>b-&gt;<ref refid="structstbtt____buf_1a0f6f2d06981ab4a5697233bbd0cafb5b" kindref="member">size</ref><sp/>||<sp/>s<sp/>&gt;<sp/>b-&gt;<ref refid="structstbtt____buf_1a0f6f2d06981ab4a5697233bbd0cafb5b" kindref="member">size</ref><sp/>-<sp/>o)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/>r.<ref refid="structstbtt____buf_1a376d8cdacbc8295a7e88567ad52a0ac4" kindref="member">data</ref><sp/>=<sp/>b-&gt;<ref refid="structstbtt____buf_1a376d8cdacbc8295a7e88567ad52a0ac4" kindref="member">data</ref><sp/>+<sp/>o;</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/>r.<ref refid="structstbtt____buf_1a0f6f2d06981ab4a5697233bbd0cafb5b" kindref="member">size</ref><sp/>=<sp/>s;</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="1193"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"></highlight></codeline>
<codeline lineno="1195"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structstbtt____buf" kindref="compound">stbtt__buf</ref><sp/>stbtt__cff_get_index(<ref refid="structstbtt____buf" kindref="compound">stbtt__buf</ref><sp/>*b)</highlight></codeline>
<codeline lineno="1196"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count,<sp/>start,<sp/>offsize;</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/>start<sp/>=<sp/>b-&gt;<ref refid="structstbtt____buf_1ac047fda650726920531272c28aa354fb" kindref="member">cursor</ref>;</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/>count<sp/>=<sp/>stbtt__buf_get16(b);</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(count)<sp/>{</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>offsize<sp/>=<sp/>stbtt__buf_get8(b);</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imgui__draw_8cpp_1a1123d905f512c19c8d796a6d294a3a84" kindref="member">STBTT_assert</ref>(offsize<sp/>&gt;=<sp/>1<sp/>&amp;&amp;<sp/>offsize<sp/>&lt;=<sp/>4);</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbtt__buf_skip(b,<sp/>offsize<sp/>*<sp/>count);</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbtt__buf_skip(b,<sp/>stbtt__buf_get(b,<sp/>offsize)<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbtt__buf_range(b,<sp/>start,<sp/>b-&gt;<ref refid="structstbtt____buf_1ac047fda650726920531272c28aa354fb" kindref="member">cursor</ref><sp/>-<sp/>start);</highlight></codeline>
<codeline lineno="1207"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"></highlight></codeline>
<codeline lineno="1209"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>stbtt_uint32<sp/>stbtt__cff_int(<ref refid="structstbtt____buf" kindref="compound">stbtt__buf</ref><sp/>*b)</highlight></codeline>
<codeline lineno="1210"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>b0<sp/>=<sp/>stbtt__buf_get8(b);</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(b0<sp/>&gt;=<sp/>32<sp/>&amp;&amp;<sp/>b0<sp/>&lt;=<sp/>246)<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>b0<sp/>-<sp/>139;</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(b0<sp/>&gt;=<sp/>247<sp/>&amp;&amp;<sp/>b0<sp/>&lt;=<sp/>250)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(b0<sp/>-<sp/>247)*256<sp/>+<sp/>stbtt__buf_get8(b)<sp/>+<sp/>108;</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(b0<sp/>&gt;=<sp/>251<sp/>&amp;&amp;<sp/>b0<sp/>&lt;=<sp/>254)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-(b0<sp/>-<sp/>251)*256<sp/>-<sp/>stbtt__buf_get8(b)<sp/>-<sp/>108;</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(b0<sp/>==<sp/>28)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbtt__buf_get16(b);</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(b0<sp/>==<sp/>29)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbtt__buf_get32(b);</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><ref refid="imgui__draw_8cpp_1a1123d905f512c19c8d796a6d294a3a84" kindref="member">STBTT_assert</ref>(0);</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1219"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"></highlight></codeline>
<codeline lineno="1221"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stbtt__cff_skip_operand(<ref refid="structstbtt____buf" kindref="compound">stbtt__buf</ref><sp/>*b)<sp/>{</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>v,<sp/>b0<sp/>=<sp/>stbtt__buf_peek8(b);</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><ref refid="imgui__draw_8cpp_1a1123d905f512c19c8d796a6d294a3a84" kindref="member">STBTT_assert</ref>(b0<sp/>&gt;=<sp/>28);</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(b0<sp/>==<sp/>30)<sp/>{</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbtt__buf_skip(b,<sp/>1);</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(b-&gt;<ref refid="structstbtt____buf_1ac047fda650726920531272c28aa354fb" kindref="member">cursor</ref><sp/>&lt;<sp/>b-&gt;<ref refid="structstbtt____buf_1a0f6f2d06981ab4a5697233bbd0cafb5b" kindref="member">size</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>=<sp/>stbtt__buf_get8(b);</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((v<sp/>&amp;<sp/>0xF)<sp/>==<sp/>0xF<sp/>||<sp/>(v<sp/>&gt;&gt;<sp/>4)<sp/>==<sp/>0xF)</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbtt__cff_int(b);</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1234"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"></highlight></codeline>
<codeline lineno="1236"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structstbtt____buf" kindref="compound">stbtt__buf</ref><sp/>stbtt__dict_get(<ref refid="structstbtt____buf" kindref="compound">stbtt__buf</ref><sp/>*b,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>key)</highlight></codeline>
<codeline lineno="1237"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/>stbtt__buf_seek(b,<sp/>0);</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(b-&gt;<ref refid="structstbtt____buf_1ac047fda650726920531272c28aa354fb" kindref="member">cursor</ref><sp/>&lt;<sp/>b-&gt;<ref refid="structstbtt____buf_1a0f6f2d06981ab4a5697233bbd0cafb5b" kindref="member">size</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>start<sp/>=<sp/>b-&gt;<ref refid="structstbtt____buf_1ac047fda650726920531272c28aa354fb" kindref="member">cursor</ref>,<sp/>end,<sp/>op;</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(stbtt__buf_peek8(b)<sp/>&gt;=<sp/>28)</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt__cff_skip_operand(b);</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>end<sp/>=<sp/>b-&gt;<ref refid="structstbtt____buf_1ac047fda650726920531272c28aa354fb" kindref="member">cursor</ref>;</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>op<sp/>=<sp/>stbtt__buf_get8(b);</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(op<sp/>==<sp/>12)<sp/><sp/>op<sp/>=<sp/>stbtt__buf_get8(b)<sp/>|<sp/>0x100;</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(op<sp/>==<sp/>key)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbtt__buf_range(b,<sp/>start,<sp/>end-start);</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbtt__buf_range(b,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="1249"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"></highlight></codeline>
<codeline lineno="1251"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stbtt__dict_get_ints(<ref refid="structstbtt____buf" kindref="compound">stbtt__buf</ref><sp/>*b,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>key,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>outcount,<sp/>stbtt_uint32<sp/>*out)</highlight></codeline>
<codeline lineno="1252"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><ref refid="structstbtt____buf" kindref="compound">stbtt__buf</ref><sp/>operands<sp/>=<sp/>stbtt__dict_get(b,<sp/>key);</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>outcount<sp/>&amp;&amp;<sp/>operands.<ref refid="structstbtt____buf_1ac047fda650726920531272c28aa354fb" kindref="member">cursor</ref><sp/>&lt;<sp/>operands.<ref refid="structstbtt____buf_1a0f6f2d06981ab4a5697233bbd0cafb5b" kindref="member">size</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out[i]<sp/>=<sp/>stbtt__cff_int(&amp;operands);</highlight></codeline>
<codeline lineno="1257"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"></highlight></codeline>
<codeline lineno="1259"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbtt__cff_index_count(<ref refid="structstbtt____buf" kindref="compound">stbtt__buf</ref><sp/>*b)</highlight></codeline>
<codeline lineno="1260"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/>stbtt__buf_seek(b,<sp/>0);</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbtt__buf_get16(b);</highlight></codeline>
<codeline lineno="1263"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"></highlight></codeline>
<codeline lineno="1265"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structstbtt____buf" kindref="compound">stbtt__buf</ref><sp/>stbtt__cff_index_get(<ref refid="structstbtt____buf" kindref="compound">stbtt__buf</ref><sp/>b,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)</highlight></codeline>
<codeline lineno="1266"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count,<sp/>offsize,<sp/>start,<sp/>end;</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/>stbtt__buf_seek(&amp;b,<sp/>0);</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/>count<sp/>=<sp/>stbtt__buf_get16(&amp;b);</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/>offsize<sp/>=<sp/>stbtt__buf_get8(&amp;b);</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><ref refid="imgui__draw_8cpp_1a1123d905f512c19c8d796a6d294a3a84" kindref="member">STBTT_assert</ref>(i<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>i<sp/>&lt;<sp/>count);</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><ref refid="imgui__draw_8cpp_1a1123d905f512c19c8d796a6d294a3a84" kindref="member">STBTT_assert</ref>(offsize<sp/>&gt;=<sp/>1<sp/>&amp;&amp;<sp/>offsize<sp/>&lt;=<sp/>4);</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/>stbtt__buf_skip(&amp;b,<sp/>i*offsize);</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/>start<sp/>=<sp/>stbtt__buf_get(&amp;b,<sp/>offsize);</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/>end<sp/>=<sp/>stbtt__buf_get(&amp;b,<sp/>offsize);</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbtt__buf_range(&amp;b,<sp/>2+(count+1)*offsize+start,<sp/>end<sp/>-<sp/>start);</highlight></codeline>
<codeline lineno="1277"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"></highlight></codeline>
<codeline lineno="1280"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1281"><highlight class="normal"></highlight><highlight class="comment">//<sp/>accessors<sp/>to<sp/>parse<sp/>data<sp/>from<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1282"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1283"><highlight class="normal"></highlight></codeline>
<codeline lineno="1284"><highlight class="normal"></highlight><highlight class="comment">//<sp/>on<sp/>platforms<sp/>that<sp/>don&apos;t<sp/>allow<sp/>misaligned<sp/>reads,<sp/>if<sp/>we<sp/>want<sp/>to<sp/>allow</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1285"><highlight class="normal"></highlight><highlight class="comment">//<sp/>truetype<sp/>fonts<sp/>that<sp/>aren&apos;t<sp/>padded<sp/>to<sp/>alignment,<sp/>define<sp/>ALLOW_UNALIGNED_TRUETYPE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1286"><highlight class="normal"></highlight></codeline>
<codeline lineno="1287"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ttBYTE(p)<sp/><sp/><sp/><sp/><sp/>(*<sp/>(stbtt_uint8<sp/>*)<sp/>(p))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1288"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ttCHAR(p)<sp/><sp/><sp/><sp/><sp/>(*<sp/>(stbtt_int8<sp/>*)<sp/>(p))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1289"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ttFixed(p)<sp/><sp/><sp/><sp/>ttLONG(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1290"><highlight class="normal"></highlight></codeline>
<codeline lineno="1291"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>stbtt_uint16<sp/>ttUSHORT(stbtt_uint8<sp/>*p)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p[0]*256<sp/>+<sp/>p[1];<sp/>}</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>stbtt_int16<sp/>ttSHORT(stbtt_uint8<sp/>*p)<sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p[0]*256<sp/>+<sp/>p[1];<sp/>}</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>stbtt_uint32<sp/>ttULONG(stbtt_uint8<sp/>*p)<sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(p[0]&lt;&lt;24)<sp/>+<sp/>(p[1]&lt;&lt;16)<sp/>+<sp/>(p[2]&lt;&lt;8)<sp/>+<sp/>p[3];<sp/>}</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>stbtt_int32<sp/>ttLONG(stbtt_uint8<sp/>*p)<sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(p[0]&lt;&lt;24)<sp/>+<sp/>(p[1]&lt;&lt;16)<sp/>+<sp/>(p[2]&lt;&lt;8)<sp/>+<sp/>p[3];<sp/>}</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"></highlight></codeline>
<codeline lineno="1296"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>stbtt_tag4(p,c0,c1,c2,c3)<sp/>((p)[0]<sp/>==<sp/>(c0)<sp/>&amp;&amp;<sp/>(p)[1]<sp/>==<sp/>(c1)<sp/>&amp;&amp;<sp/>(p)[2]<sp/>==<sp/>(c2)<sp/>&amp;&amp;<sp/>(p)[3]<sp/>==<sp/>(c3))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1297"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>stbtt_tag(p,str)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt_tag4(p,str[0],str[1],str[2],str[3])</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1298"><highlight class="normal"></highlight></codeline>
<codeline lineno="1299"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbtt__isfont(stbtt_uint8<sp/>*font)</highlight></codeline>
<codeline lineno="1300"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>the<sp/>version<sp/>number</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stbtt_tag4(font,<sp/></highlight><highlight class="charliteral">&apos;1&apos;</highlight><highlight class="normal">,0,0,0))<sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;<sp/></highlight><highlight class="comment">//<sp/>TrueType<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stbtt_tag(font,<sp/></highlight><highlight class="stringliteral">&quot;typ1&quot;</highlight><highlight class="normal">))<sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;<sp/></highlight><highlight class="comment">//<sp/>TrueType<sp/>with<sp/>type<sp/>1<sp/>font<sp/>--<sp/>we<sp/>don&apos;t<sp/>support<sp/>this!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stbtt_tag(font,<sp/></highlight><highlight class="stringliteral">&quot;OTTO&quot;</highlight><highlight class="normal">))<sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;<sp/></highlight><highlight class="comment">//<sp/>OpenType<sp/>with<sp/>CFF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stbtt_tag4(font,<sp/>0,1,0,0))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;<sp/></highlight><highlight class="comment">//<sp/>OpenType<sp/>1.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stbtt_tag(font,<sp/></highlight><highlight class="stringliteral">&quot;true&quot;</highlight><highlight class="normal">))<sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;<sp/></highlight><highlight class="comment">//<sp/>Apple<sp/>specification<sp/>for<sp/>TrueType<sp/>fonts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1308"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"></highlight></codeline>
<codeline lineno="1310"><highlight class="normal"></highlight><highlight class="comment">//<sp/>@OPTIMIZE:<sp/>binary<sp/>search</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1311"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>stbtt_uint32<sp/>stbtt__find_table(stbtt_uint8<sp/>*data,<sp/>stbtt_uint32<sp/>fontstart,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*tag)</highlight></codeline>
<codeline lineno="1312"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/><sp/>stbtt_int32<sp/>num_tables<sp/>=<sp/>ttUSHORT(data+fontstart+4);</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/><sp/>stbtt_uint32<sp/>tabledir<sp/>=<sp/>fontstart<sp/>+<sp/>12;</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/>stbtt_int32<sp/>i;</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>num_tables;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbtt_uint32<sp/>loc<sp/>=<sp/>tabledir<sp/>+<sp/>16*i;</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stbtt_tag(data+loc+0,<sp/>tag))</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ttULONG(data+loc+8);</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1322"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"></highlight></codeline>
<codeline lineno="1324"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbtt_GetFontOffsetForIndex_internal(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*font_collection,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)</highlight></codeline>
<codeline lineno="1325"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>it&apos;s<sp/>just<sp/>a<sp/>font,<sp/>there&apos;s<sp/>only<sp/>one<sp/>valid<sp/>index</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stbtt__isfont(font_collection))</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>index<sp/>==<sp/>0<sp/>?<sp/>0<sp/>:<sp/>-1;</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"></highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>if<sp/>it&apos;s<sp/>a<sp/>TTC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stbtt_tag(font_collection,<sp/></highlight><highlight class="stringliteral">&quot;ttcf&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>version<sp/>1?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ttULONG(font_collection+4)<sp/>==<sp/>0x00010000<sp/>||<sp/>ttULONG(font_collection+4)<sp/>==<sp/>0x00020000)<sp/>{</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt_int32<sp/>n<sp/>=<sp/>ttLONG(font_collection+8);</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index<sp/>&gt;=<sp/>n)</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ttULONG(font_collection+12+index*4);</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1341"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"></highlight></codeline>
<codeline lineno="1343"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbtt_GetNumberOfFonts_internal(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*font_collection)</highlight></codeline>
<codeline lineno="1344"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>it&apos;s<sp/>just<sp/>a<sp/>font,<sp/>there&apos;s<sp/>only<sp/>one<sp/>valid<sp/>font</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stbtt__isfont(font_collection))</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"></highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>if<sp/>it&apos;s<sp/>a<sp/>TTC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stbtt_tag(font_collection,<sp/></highlight><highlight class="stringliteral">&quot;ttcf&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>version<sp/>1?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ttULONG(font_collection+4)<sp/>==<sp/>0x00010000<sp/>||<sp/>ttULONG(font_collection+4)<sp/>==<sp/>0x00020000)<sp/>{</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ttLONG(font_collection+8);</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1357"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"></highlight></codeline>
<codeline lineno="1359"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structstbtt____buf" kindref="compound">stbtt__buf</ref><sp/>stbtt__get_subrs(<ref refid="structstbtt____buf" kindref="compound">stbtt__buf</ref><sp/>cff,<sp/><ref refid="structstbtt____buf" kindref="compound">stbtt__buf</ref><sp/>fontdict)</highlight></codeline>
<codeline lineno="1360"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/><sp/>stbtt_uint32<sp/>subrsoff<sp/>=<sp/>0,<sp/>private_loc[2]<sp/>=<sp/>{<sp/>0,<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><sp/><ref refid="structstbtt____buf" kindref="compound">stbtt__buf</ref><sp/>pdict;</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/><sp/>stbtt__dict_get_ints(&amp;fontdict,<sp/>18,<sp/>2,<sp/>private_loc);</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!private_loc[1]<sp/>||<sp/>!private_loc[0])<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbtt__new_buf(NULL,<sp/>0);</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/>pdict<sp/>=<sp/>stbtt__buf_range(&amp;cff,<sp/>private_loc[1],<sp/>private_loc[0]);</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/><sp/>stbtt__dict_get_ints(&amp;pdict,<sp/>19,<sp/>1,<sp/>&amp;subrsoff);</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!subrsoff)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbtt__new_buf(NULL,<sp/>0);</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/><sp/>stbtt__buf_seek(&amp;cff,<sp/>private_loc[1]+subrsoff);</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbtt__cff_get_index(&amp;cff);</highlight></codeline>
<codeline lineno="1370"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"></highlight></codeline>
<codeline lineno="1372"><highlight class="normal"></highlight><highlight class="comment">//<sp/>since<sp/>most<sp/>people<sp/>won&apos;t<sp/>use<sp/>this,<sp/>find<sp/>this<sp/>table<sp/>the<sp/>first<sp/>time<sp/>it&apos;s<sp/>needed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1373"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbtt__get_svg(<ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref><sp/>*info)</highlight></codeline>
<codeline lineno="1374"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/><sp/>stbtt_uint32<sp/>t;</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(info-&gt;<ref refid="structstbtt__fontinfo_1a2aae62e8e1269ab65be642a7ec82d7b3" kindref="member">svg</ref><sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>=<sp/>stbtt__find_table(info-&gt;<ref refid="structstbtt__fontinfo_1af348db379cf0e0e71a68603d00501d41" kindref="member">data</ref>,<sp/>info-&gt;<ref refid="structstbtt__fontinfo_1a139234d825b585afa27748a1f3d10c7d" kindref="member">fontstart</ref>,<sp/></highlight><highlight class="stringliteral">&quot;SVG<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t)<sp/>{</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt_uint32<sp/>offset<sp/>=<sp/>ttULONG(info-&gt;<ref refid="structstbtt__fontinfo_1af348db379cf0e0e71a68603d00501d41" kindref="member">data</ref><sp/>+<sp/>t<sp/>+<sp/>2);</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info-&gt;<ref refid="structstbtt__fontinfo_1a2aae62e8e1269ab65be642a7ec82d7b3" kindref="member">svg</ref><sp/>=<sp/>t<sp/>+<sp/>offset;</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info-&gt;<ref refid="structstbtt__fontinfo_1a2aae62e8e1269ab65be642a7ec82d7b3" kindref="member">svg</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>info-&gt;<ref refid="structstbtt__fontinfo_1a2aae62e8e1269ab65be642a7ec82d7b3" kindref="member">svg</ref>;</highlight></codeline>
<codeline lineno="1386"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"></highlight></codeline>
<codeline lineno="1388"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbtt_InitFont_internal(<ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref><sp/>*info,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fontstart)</highlight></codeline>
<codeline lineno="1389"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/><sp/>stbtt_uint32<sp/>cmap,<sp/>t;</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><sp/>stbtt_int32<sp/>i,numTables;</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"></highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><sp/>info-&gt;<ref refid="structstbtt__fontinfo_1af348db379cf0e0e71a68603d00501d41" kindref="member">data</ref><sp/>=<sp/>data;</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/><sp/>info-&gt;<ref refid="structstbtt__fontinfo_1a139234d825b585afa27748a1f3d10c7d" kindref="member">fontstart</ref><sp/>=<sp/>fontstart;</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/><sp/>info-&gt;<ref refid="structstbtt__fontinfo_1a6031b4bda94aa2b5ff07ef5d626a15a4" kindref="member">cff</ref><sp/>=<sp/>stbtt__new_buf(NULL,<sp/>0);</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"></highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/><sp/>cmap<sp/>=<sp/>stbtt__find_table(data,<sp/>fontstart,<sp/></highlight><highlight class="stringliteral">&quot;cmap&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>required</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/><sp/>info-&gt;<ref refid="structstbtt__fontinfo_1a15344195b181b50bde4f59ae7ca248c0" kindref="member">loca</ref><sp/>=<sp/>stbtt__find_table(data,<sp/>fontstart,<sp/></highlight><highlight class="stringliteral">&quot;loca&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>required</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/><sp/>info-&gt;<ref refid="structstbtt__fontinfo_1ab76ed2f4cbd8fcbd8465ca5f88e7e2b9" kindref="member">head</ref><sp/>=<sp/>stbtt__find_table(data,<sp/>fontstart,<sp/></highlight><highlight class="stringliteral">&quot;head&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>required</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/><sp/>info-&gt;<ref refid="structstbtt__fontinfo_1a5de2129e0a415748920f6aa10ceee6e5" kindref="member">glyf</ref><sp/>=<sp/>stbtt__find_table(data,<sp/>fontstart,<sp/></highlight><highlight class="stringliteral">&quot;glyf&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>required</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/><sp/>info-&gt;<ref refid="structstbtt__fontinfo_1a91b82ae03d68892eb7f3fbd3a8b990e5" kindref="member">hhea</ref><sp/>=<sp/>stbtt__find_table(data,<sp/>fontstart,<sp/></highlight><highlight class="stringliteral">&quot;hhea&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>required</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/>info-&gt;<ref refid="structstbtt__fontinfo_1aebf42701e99b88d07a59bf99cb84b9a1" kindref="member">hmtx</ref><sp/>=<sp/>stbtt__find_table(data,<sp/>fontstart,<sp/></highlight><highlight class="stringliteral">&quot;hmtx&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>required</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/><sp/>info-&gt;<ref refid="structstbtt__fontinfo_1a57cc83512daea60e97ed49354d634d37" kindref="member">kern</ref><sp/>=<sp/>stbtt__find_table(data,<sp/>fontstart,<sp/></highlight><highlight class="stringliteral">&quot;kern&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>not<sp/>required</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/><sp/>info-&gt;<ref refid="structstbtt__fontinfo_1aeb6732549a55fa30235d0c0ecd743022" kindref="member">gpos</ref><sp/>=<sp/>stbtt__find_table(data,<sp/>fontstart,<sp/></highlight><highlight class="stringliteral">&quot;GPOS&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>not<sp/>required</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1405"><highlight class="normal"></highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!cmap<sp/>||<sp/>!info-&gt;<ref refid="structstbtt__fontinfo_1ab76ed2f4cbd8fcbd8465ca5f88e7e2b9" kindref="member">head</ref><sp/>||<sp/>!info-&gt;<ref refid="structstbtt__fontinfo_1a91b82ae03d68892eb7f3fbd3a8b990e5" kindref="member">hhea</ref><sp/>||<sp/>!info-&gt;<ref refid="structstbtt__fontinfo_1aebf42701e99b88d07a59bf99cb84b9a1" kindref="member">hmtx</ref>)</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(info-&gt;<ref refid="structstbtt__fontinfo_1a5de2129e0a415748920f6aa10ceee6e5" kindref="member">glyf</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>required<sp/>for<sp/>truetype</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!info-&gt;<ref refid="structstbtt__fontinfo_1a15344195b181b50bde4f59ae7ca248c0" kindref="member">loca</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>initialization<sp/>for<sp/>CFF<sp/>/<sp/>Type2<sp/>fonts<sp/>(OTF)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structstbtt____buf" kindref="compound">stbtt__buf</ref><sp/>b,<sp/>topdict,<sp/>topdictidx;</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbtt_uint32<sp/>cstype<sp/>=<sp/>2,<sp/>charstrings<sp/>=<sp/>0,<sp/>fdarrayoff<sp/>=<sp/>0,<sp/>fdselectoff<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbtt_uint32<sp/>cff;</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"></highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cff<sp/>=<sp/>stbtt__find_table(data,<sp/>fontstart,<sp/></highlight><highlight class="stringliteral">&quot;CFF<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!cff)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"></highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>info-&gt;<ref refid="structstbtt__fontinfo_1a966c70ac9548a02fff558846fbce3677" kindref="member">fontdicts</ref><sp/>=<sp/>stbtt__new_buf(NULL,<sp/>0);</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>info-&gt;<ref refid="structstbtt__fontinfo_1a4e06b1c29295a9aba529105e88fe1d71" kindref="member">fdselect</ref><sp/>=<sp/>stbtt__new_buf(NULL,<sp/>0);</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"></highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>@TODO<sp/>this<sp/>should<sp/>use<sp/>size<sp/>from<sp/>table<sp/>(not<sp/>512MB)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>info-&gt;<ref refid="structstbtt__fontinfo_1a6031b4bda94aa2b5ff07ef5d626a15a4" kindref="member">cff</ref><sp/>=<sp/>stbtt__new_buf(data+cff,<sp/>512*1024*1024);</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>=<sp/>info-&gt;<ref refid="structstbtt__fontinfo_1a6031b4bda94aa2b5ff07ef5d626a15a4" kindref="member">cff</ref>;</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"></highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>read<sp/>the<sp/>header</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbtt__buf_skip(&amp;b,<sp/>2);</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbtt__buf_seek(&amp;b,<sp/>stbtt__buf_get8(&amp;b));<sp/></highlight><highlight class="comment">//<sp/>hdrsize</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1430"><highlight class="normal"></highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>@TODO<sp/>the<sp/>name<sp/>INDEX<sp/>could<sp/>list<sp/>multiple<sp/>fonts,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>we<sp/>just<sp/>use<sp/>the<sp/>first<sp/>one.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbtt__cff_get_index(&amp;b);<sp/><sp/></highlight><highlight class="comment">//<sp/>name<sp/>INDEX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>topdictidx<sp/>=<sp/>stbtt__cff_get_index(&amp;b);</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>topdict<sp/>=<sp/>stbtt__cff_index_get(topdictidx,<sp/>0);</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbtt__cff_get_index(&amp;b);<sp/><sp/></highlight><highlight class="comment">//<sp/>string<sp/>INDEX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>info-&gt;<ref refid="structstbtt__fontinfo_1afc5bfc4a52ad0e3879f0f81a372da7fb" kindref="member">gsubrs</ref><sp/>=<sp/>stbtt__cff_get_index(&amp;b);</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"></highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbtt__dict_get_ints(&amp;topdict,<sp/>17,<sp/>1,<sp/>&amp;charstrings);</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbtt__dict_get_ints(&amp;topdict,<sp/>0x100<sp/>|<sp/>6,<sp/>1,<sp/>&amp;cstype);</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbtt__dict_get_ints(&amp;topdict,<sp/>0x100<sp/>|<sp/>36,<sp/>1,<sp/>&amp;fdarrayoff);</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbtt__dict_get_ints(&amp;topdict,<sp/>0x100<sp/>|<sp/>37,<sp/>1,<sp/>&amp;fdselectoff);</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>info-&gt;<ref refid="structstbtt__fontinfo_1aebc496bb1c001a8a90e0e66da16107d2" kindref="member">subrs</ref><sp/>=<sp/>stbtt__get_subrs(b,<sp/>topdict);</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"></highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>only<sp/>support<sp/>Type<sp/>2<sp/>charstrings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cstype<sp/>!=<sp/>2)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(charstrings<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"></highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fdarrayoff)<sp/>{</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>looks<sp/>like<sp/>a<sp/>CID<sp/>font</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!fdselectoff)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt__buf_seek(&amp;b,<sp/>fdarrayoff);</highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info-&gt;<ref refid="structstbtt__fontinfo_1a966c70ac9548a02fff558846fbce3677" kindref="member">fontdicts</ref><sp/>=<sp/>stbtt__cff_get_index(&amp;b);</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info-&gt;<ref refid="structstbtt__fontinfo_1a4e06b1c29295a9aba529105e88fe1d71" kindref="member">fdselect</ref><sp/>=<sp/>stbtt__buf_range(&amp;b,<sp/>fdselectoff,<sp/>b.<ref refid="structstbtt____buf_1a0f6f2d06981ab4a5697233bbd0cafb5b" kindref="member">size</ref>-fdselectoff);</highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"></highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbtt__buf_seek(&amp;b,<sp/>charstrings);</highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>info-&gt;<ref refid="structstbtt__fontinfo_1aaf04a69f8dd4b6a8bed4191b57145082" kindref="member">charstrings</ref><sp/>=<sp/>stbtt__cff_get_index(&amp;b);</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"></highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/><sp/>t<sp/>=<sp/>stbtt__find_table(data,<sp/>fontstart,<sp/></highlight><highlight class="stringliteral">&quot;maxp&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t)</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>info-&gt;<ref refid="structstbtt__fontinfo_1a60ad8301a98eb7cd91472ce846d9080d" kindref="member">numGlyphs</ref><sp/>=<sp/>ttUSHORT(data+t+4);</highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>info-&gt;<ref refid="structstbtt__fontinfo_1a60ad8301a98eb7cd91472ce846d9080d" kindref="member">numGlyphs</ref><sp/>=<sp/>0xffff;</highlight></codeline>
<codeline lineno="1466"><highlight class="normal"></highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/><sp/>info-&gt;<ref refid="structstbtt__fontinfo_1a2aae62e8e1269ab65be642a7ec82d7b3" kindref="member">svg</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1468"><highlight class="normal"></highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>find<sp/>a<sp/>cmap<sp/>encoding<sp/>table<sp/>we<sp/>understand<sp/>*now*<sp/>to<sp/>avoid<sp/>searching</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>later.<sp/>(todo:<sp/>could<sp/>make<sp/>this<sp/>installable)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>same<sp/>regardless<sp/>of<sp/>glyph.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/><sp/>numTables<sp/>=<sp/>ttUSHORT(data<sp/>+<sp/>cmap<sp/>+<sp/>2);</highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/><sp/>info-&gt;<ref refid="structstbtt__fontinfo_1a0b95e3ac0c397b72b7696ce6696eb189" kindref="member">index_map</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>numTables;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbtt_uint32<sp/>encoding_record<sp/>=<sp/>cmap<sp/>+<sp/>4<sp/>+<sp/>8<sp/>*<sp/>i;</highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>find<sp/>an<sp/>encoding<sp/>we<sp/>understand:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(ttUSHORT(data+encoding_record))<sp/>{</highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="imstb__truetype_8h_1a6ffa9624070bebdf0fe0f6321616f58aa86f00e4c49cfec574b34090faa47f878" kindref="member">STBTT_PLATFORM_ID_MICROSOFT</ref>:</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(ttUSHORT(data+encoding_record+2))<sp/>{</highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="imstb__truetype_8h_1ac4d0fc67edc6c583674315dd15a5c81caf3b7a17fc226e7540f025d241f36f17d" kindref="member">STBTT_MS_EID_UNICODE_BMP</ref>:</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="imstb__truetype_8h_1ac4d0fc67edc6c583674315dd15a5c81ca08224d2a200bd947c6513926290f4640" kindref="member">STBTT_MS_EID_UNICODE_FULL</ref>:</highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MS/Unicode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info-&gt;<ref refid="structstbtt__fontinfo_1a0b95e3ac0c397b72b7696ce6696eb189" kindref="member">index_map</ref><sp/>=<sp/>cmap<sp/>+<sp/>ttULONG(data+encoding_record+4);</highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="imstb__truetype_8h_1a6ffa9624070bebdf0fe0f6321616f58aa7df9cd0e95e0b375d03348661b399b69" kindref="member">STBTT_PLATFORM_ID_UNICODE</ref>:</highlight></codeline>
<codeline lineno="1488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Mac/iOS<sp/>has<sp/>these</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>all<sp/>the<sp/>encodingIDs<sp/>are<sp/>unicode,<sp/>so<sp/>we<sp/>don&apos;t<sp/>bother<sp/>to<sp/>check<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info-&gt;<ref refid="structstbtt__fontinfo_1a0b95e3ac0c397b72b7696ce6696eb189" kindref="member">index_map</ref><sp/>=<sp/>cmap<sp/>+<sp/>ttULONG(data+encoding_record+4);</highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(info-&gt;<ref refid="structstbtt__fontinfo_1a0b95e3ac0c397b72b7696ce6696eb189" kindref="member">index_map</ref><sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"></highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/>info-&gt;<ref refid="structstbtt__fontinfo_1a5fa117a7ef058111a70a5b0b87d220f4" kindref="member">indexToLocFormat</ref><sp/>=<sp/>ttUSHORT(data+info-&gt;<ref refid="structstbtt__fontinfo_1ab76ed2f4cbd8fcbd8465ca5f88e7e2b9" kindref="member">head</ref><sp/>+<sp/>50);</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="1499"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"></highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="imstb__truetype_8h_1a213d5628c6b2e5c107b99378eefc6e3a" kindref="member">stbtt_FindGlyphIndex</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref><sp/>*info,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>unicode_codepoint)</highlight></codeline>
<codeline lineno="1502"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/><sp/>stbtt_uint8<sp/>*data<sp/>=<sp/>info-&gt;<ref refid="structstbtt__fontinfo_1af348db379cf0e0e71a68603d00501d41" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/><sp/>stbtt_uint32<sp/>index_map<sp/>=<sp/>info-&gt;<ref refid="structstbtt__fontinfo_1a0b95e3ac0c397b72b7696ce6696eb189" kindref="member">index_map</ref>;</highlight></codeline>
<codeline lineno="1505"><highlight class="normal"></highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/><sp/>stbtt_uint16<sp/>format<sp/>=<sp/>ttUSHORT(data<sp/>+<sp/>index_map<sp/>+<sp/>0);</highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(format<sp/>==<sp/>0)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>apple<sp/>byte<sp/>encoding</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbtt_int32<sp/>bytes<sp/>=<sp/>ttUSHORT(data<sp/>+<sp/>index_map<sp/>+<sp/>2);</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unicode_codepoint<sp/>&lt;<sp/>bytes-6)</highlight></codeline>
<codeline lineno="1510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ttBYTE(data<sp/>+<sp/>index_map<sp/>+<sp/>6<sp/>+<sp/>unicode_codepoint);</highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1512"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(format<sp/>==<sp/>6)<sp/>{</highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbtt_uint32<sp/>first<sp/>=<sp/>ttUSHORT(data<sp/>+<sp/>index_map<sp/>+<sp/>6);</highlight></codeline>
<codeline lineno="1514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbtt_uint32<sp/>count<sp/>=<sp/>ttUSHORT(data<sp/>+<sp/>index_map<sp/>+<sp/>8);</highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((stbtt_uint32)<sp/>unicode_codepoint<sp/>&gt;=<sp/>first<sp/>&amp;&amp;<sp/>(stbtt_uint32)<sp/>unicode_codepoint<sp/>&lt;<sp/>first+count)</highlight></codeline>
<codeline lineno="1516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ttUSHORT(data<sp/>+<sp/>index_map<sp/>+<sp/>10<sp/>+<sp/>(unicode_codepoint<sp/>-<sp/>first)*2);</highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(format<sp/>==<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imgui__draw_8cpp_1a1123d905f512c19c8d796a6d294a3a84" kindref="member">STBTT_assert</ref>(0);<sp/></highlight><highlight class="comment">//<sp/>@TODO:<sp/>high-byte<sp/>mapping<sp/>for<sp/>japanese/chinese/korean</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(format<sp/>==<sp/>4)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>standard<sp/>mapping<sp/>for<sp/>windows<sp/>fonts:<sp/>binary<sp/>search<sp/>collection<sp/>of<sp/>ranges</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbtt_uint16<sp/>segcount<sp/>=<sp/>ttUSHORT(data+index_map+6)<sp/>&gt;&gt;<sp/>1;</highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbtt_uint16<sp/>searchRange<sp/>=<sp/>ttUSHORT(data+index_map+8)<sp/>&gt;&gt;<sp/>1;</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbtt_uint16<sp/>entrySelector<sp/>=<sp/>ttUSHORT(data+index_map+10);</highlight></codeline>
<codeline lineno="1525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbtt_uint16<sp/>rangeShift<sp/>=<sp/>ttUSHORT(data+index_map+12)<sp/>&gt;&gt;<sp/>1;</highlight></codeline>
<codeline lineno="1526"><highlight class="normal"></highlight></codeline>
<codeline lineno="1527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>do<sp/>a<sp/>binary<sp/>search<sp/>of<sp/>the<sp/>segments</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbtt_uint32<sp/>endCount<sp/>=<sp/>index_map<sp/>+<sp/>14;</highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbtt_uint32<sp/>search<sp/>=<sp/>endCount;</highlight></codeline>
<codeline lineno="1530"><highlight class="normal"></highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unicode_codepoint<sp/>&gt;<sp/>0xffff)</highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"></highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>they<sp/>lie<sp/>from<sp/>endCount<sp/>..<sp/>endCount<sp/>+<sp/>segCount</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>searchRange<sp/>is<sp/>the<sp/>nearest<sp/>power<sp/>of<sp/>two,<sp/>so...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unicode_codepoint<sp/>&gt;=<sp/>ttUSHORT(data<sp/>+<sp/>search<sp/>+<sp/>rangeShift*2))</highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>search<sp/>+=<sp/>rangeShift*2;</highlight></codeline>
<codeline lineno="1538"><highlight class="normal"></highlight></codeline>
<codeline lineno="1539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>decrement<sp/>to<sp/>bias<sp/>correctly<sp/>to<sp/>find<sp/>smallest</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>search<sp/>-=<sp/>2;</highlight></codeline>
<codeline lineno="1541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(entrySelector)<sp/>{</highlight></codeline>
<codeline lineno="1542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt_uint16<sp/>end;</highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>searchRange<sp/>&gt;&gt;=<sp/>1;</highlight></codeline>
<codeline lineno="1544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end<sp/>=<sp/>ttUSHORT(data<sp/>+<sp/>search<sp/>+<sp/>searchRange*2);</highlight></codeline>
<codeline lineno="1545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unicode_codepoint<sp/>&gt;<sp/>end)</highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>search<sp/>+=<sp/>searchRange*2;</highlight></codeline>
<codeline lineno="1547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--entrySelector;</highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>search<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="1550"><highlight class="normal"></highlight></codeline>
<codeline lineno="1551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt_uint16<sp/>offset,<sp/>start,<sp/>last;</highlight></codeline>
<codeline lineno="1553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt_uint16<sp/>item<sp/>=<sp/>(stbtt_uint16)<sp/>((search<sp/>-<sp/>endCount)<sp/>&gt;&gt;<sp/>1);</highlight></codeline>
<codeline lineno="1554"><highlight class="normal"></highlight></codeline>
<codeline lineno="1555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start<sp/>=<sp/>ttUSHORT(data<sp/>+<sp/>index_map<sp/>+<sp/>14<sp/>+<sp/>segcount*2<sp/>+<sp/>2<sp/>+<sp/>2*item);</highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last<sp/>=<sp/>ttUSHORT(data<sp/>+<sp/>endCount<sp/>+<sp/>2*item);</highlight></codeline>
<codeline lineno="1557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unicode_codepoint<sp/>&lt;<sp/>start<sp/>||<sp/>unicode_codepoint<sp/>&gt;<sp/>last)</highlight></codeline>
<codeline lineno="1558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1559"><highlight class="normal"></highlight></codeline>
<codeline lineno="1560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offset<sp/>=<sp/>ttUSHORT(data<sp/>+<sp/>index_map<sp/>+<sp/>14<sp/>+<sp/>segcount*6<sp/>+<sp/>2<sp/>+<sp/>2*item);</highlight></codeline>
<codeline lineno="1561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(offset<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(stbtt_uint16)<sp/>(unicode_codepoint<sp/>+<sp/>ttSHORT(data<sp/>+<sp/>index_map<sp/>+<sp/>14<sp/>+<sp/>segcount*4<sp/>+<sp/>2<sp/>+<sp/>2*item));</highlight></codeline>
<codeline lineno="1563"><highlight class="normal"></highlight></codeline>
<codeline lineno="1564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ttUSHORT(data<sp/>+<sp/>offset<sp/>+<sp/>(unicode_codepoint-start)*2<sp/>+<sp/>index_map<sp/>+<sp/>14<sp/>+<sp/>segcount*6<sp/>+<sp/>2<sp/>+<sp/>2*item);</highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1566"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(format<sp/>==<sp/>12<sp/>||<sp/>format<sp/>==<sp/>13)<sp/>{</highlight></codeline>
<codeline lineno="1567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbtt_uint32<sp/>ngroups<sp/>=<sp/>ttULONG(data+index_map+12);</highlight></codeline>
<codeline lineno="1568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbtt_int32<sp/>low,high;</highlight></codeline>
<codeline lineno="1569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>low<sp/>=<sp/>0;<sp/>high<sp/>=<sp/>(stbtt_int32)ngroups;</highlight></codeline>
<codeline lineno="1570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Binary<sp/>search<sp/>the<sp/>right<sp/>group.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(low<sp/>&lt;<sp/>high)<sp/>{</highlight></codeline>
<codeline lineno="1572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt_int32<sp/>mid<sp/>=<sp/>low<sp/>+<sp/>((high-low)<sp/>&gt;&gt;<sp/>1);<sp/></highlight><highlight class="comment">//<sp/>rounds<sp/>down,<sp/>so<sp/>low<sp/>&lt;=<sp/>mid<sp/>&lt;<sp/>high</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt_uint32<sp/>start_char<sp/>=<sp/>ttULONG(data+index_map+16+mid*12);</highlight></codeline>
<codeline lineno="1574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt_uint32<sp/>end_char<sp/>=<sp/>ttULONG(data+index_map+16+mid*12+4);</highlight></codeline>
<codeline lineno="1575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((stbtt_uint32)<sp/>unicode_codepoint<sp/>&lt;<sp/>start_char)</highlight></codeline>
<codeline lineno="1576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>high<sp/>=<sp/>mid;</highlight></codeline>
<codeline lineno="1577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((stbtt_uint32)<sp/>unicode_codepoint<sp/>&gt;<sp/>end_char)</highlight></codeline>
<codeline lineno="1578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>low<sp/>=<sp/>mid+1;</highlight></codeline>
<codeline lineno="1579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt_uint32<sp/>start_glyph<sp/>=<sp/>ttULONG(data+index_map+16+mid*12+8);</highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(format<sp/>==<sp/>12)</highlight></codeline>
<codeline lineno="1582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>start_glyph<sp/>+<sp/>unicode_codepoint-start_char;</highlight></codeline>
<codeline lineno="1583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>format<sp/>==<sp/>13</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>start_glyph;</highlight></codeline>
<codeline lineno="1585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/></highlight><highlight class="comment">//<sp/>not<sp/>found</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1588"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1589"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>@TODO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1590"><highlight class="normal"><sp/><sp/><sp/><ref refid="imgui__draw_8cpp_1a1123d905f512c19c8d796a6d294a3a84" kindref="member">STBTT_assert</ref>(0);</highlight></codeline>
<codeline lineno="1591"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1592"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1593"><highlight class="normal"></highlight></codeline>
<codeline lineno="1594"><highlight class="normal"><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="imstb__truetype_8h_1a073c07bd3c08775d2528a0a602be1795" kindref="member">stbtt_GetCodepointShape</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref><sp/>*info,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>unicode_codepoint,<sp/><ref refid="structstbtt__vertex" kindref="compound">stbtt_vertex</ref><sp/>**vertices)</highlight></codeline>
<codeline lineno="1595"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1596"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imstb__truetype_8h_1a695c82840a7d4eaa1d5be00131c9718b" kindref="member">stbtt_GetGlyphShape</ref>(info,<sp/><ref refid="imstb__truetype_8h_1a213d5628c6b2e5c107b99378eefc6e3a" kindref="member">stbtt_FindGlyphIndex</ref>(info,<sp/>unicode_codepoint),<sp/>vertices);</highlight></codeline>
<codeline lineno="1597"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1598"><highlight class="normal"></highlight></codeline>
<codeline lineno="1599"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stbtt_setvertex(<ref refid="structstbtt__vertex" kindref="compound">stbtt_vertex</ref><sp/>*v,<sp/>stbtt_uint8<sp/>type,<sp/>stbtt_int32<sp/>x,<sp/>stbtt_int32<sp/>y,<sp/>stbtt_int32<sp/>cx,<sp/>stbtt_int32<sp/>cy)</highlight></codeline>
<codeline lineno="1600"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1601"><highlight class="normal"><sp/><sp/><sp/>v-&gt;<ref refid="structstbtt__vertex_1aa325b3707b88e7e104c0de46bb2bf395" kindref="member">type</ref><sp/>=<sp/>type;</highlight></codeline>
<codeline lineno="1602"><highlight class="normal"><sp/><sp/><sp/>v-&gt;<ref refid="structstbtt__vertex_1a81773edbe760d0e090561a3c1e86c919" kindref="member">x</ref><sp/>=<sp/>(stbtt_int16)<sp/>x;</highlight></codeline>
<codeline lineno="1603"><highlight class="normal"><sp/><sp/><sp/>v-&gt;<ref refid="structstbtt__vertex_1a9052065ca544b63d537325b246928cfc" kindref="member">y</ref><sp/>=<sp/>(stbtt_int16)<sp/>y;</highlight></codeline>
<codeline lineno="1604"><highlight class="normal"><sp/><sp/><sp/>v-&gt;<ref refid="structstbtt__vertex_1a43835489e2a151b31cb100d20f8adeae" kindref="member">cx</ref><sp/>=<sp/>(stbtt_int16)<sp/>cx;</highlight></codeline>
<codeline lineno="1605"><highlight class="normal"><sp/><sp/><sp/>v-&gt;<ref refid="structstbtt__vertex_1a5610d6335aa6962d970fc7fd2225545e" kindref="member">cy</ref><sp/>=<sp/>(stbtt_int16)<sp/>cy;</highlight></codeline>
<codeline lineno="1606"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1607"><highlight class="normal"></highlight></codeline>
<codeline lineno="1608"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbtt__GetGlyfOffset(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref><sp/>*info,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>glyph_index)</highlight></codeline>
<codeline lineno="1609"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1610"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>g1,g2;</highlight></codeline>
<codeline lineno="1611"><highlight class="normal"></highlight></codeline>
<codeline lineno="1612"><highlight class="normal"><sp/><sp/><sp/><ref refid="imgui__draw_8cpp_1a1123d905f512c19c8d796a6d294a3a84" kindref="member">STBTT_assert</ref>(!info-&gt;<ref refid="structstbtt__fontinfo_1a6031b4bda94aa2b5ff07ef5d626a15a4" kindref="member">cff</ref>.<ref refid="structstbtt____buf_1a0f6f2d06981ab4a5697233bbd0cafb5b" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="1613"><highlight class="normal"></highlight></codeline>
<codeline lineno="1614"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(glyph_index<sp/>&gt;=<sp/>info-&gt;<ref refid="structstbtt__fontinfo_1a60ad8301a98eb7cd91472ce846d9080d" kindref="member">numGlyphs</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;<sp/></highlight><highlight class="comment">//<sp/>glyph<sp/>index<sp/>out<sp/>of<sp/>range</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1615"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(info-&gt;<ref refid="structstbtt__fontinfo_1a5fa117a7ef058111a70a5b0b87d220f4" kindref="member">indexToLocFormat</ref><sp/>&gt;=<sp/>2)<sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;<sp/></highlight><highlight class="comment">//<sp/>unknown<sp/>index-&gt;glyph<sp/>map<sp/>format</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1616"><highlight class="normal"></highlight></codeline>
<codeline lineno="1617"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(info-&gt;<ref refid="structstbtt__fontinfo_1a5fa117a7ef058111a70a5b0b87d220f4" kindref="member">indexToLocFormat</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>g1<sp/>=<sp/>info-&gt;<ref refid="structstbtt__fontinfo_1a5de2129e0a415748920f6aa10ceee6e5" kindref="member">glyf</ref><sp/>+<sp/>ttUSHORT(info-&gt;<ref refid="structstbtt__fontinfo_1af348db379cf0e0e71a68603d00501d41" kindref="member">data</ref><sp/>+<sp/>info-&gt;<ref refid="structstbtt__fontinfo_1a15344195b181b50bde4f59ae7ca248c0" kindref="member">loca</ref><sp/>+<sp/>glyph_index<sp/>*<sp/>2)<sp/>*<sp/>2;</highlight></codeline>
<codeline lineno="1619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>g2<sp/>=<sp/>info-&gt;<ref refid="structstbtt__fontinfo_1a5de2129e0a415748920f6aa10ceee6e5" kindref="member">glyf</ref><sp/>+<sp/>ttUSHORT(info-&gt;<ref refid="structstbtt__fontinfo_1af348db379cf0e0e71a68603d00501d41" kindref="member">data</ref><sp/>+<sp/>info-&gt;<ref refid="structstbtt__fontinfo_1a15344195b181b50bde4f59ae7ca248c0" kindref="member">loca</ref><sp/>+<sp/>glyph_index<sp/>*<sp/>2<sp/>+<sp/>2)<sp/>*<sp/>2;</highlight></codeline>
<codeline lineno="1620"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>g1<sp/>=<sp/>info-&gt;<ref refid="structstbtt__fontinfo_1a5de2129e0a415748920f6aa10ceee6e5" kindref="member">glyf</ref><sp/>+<sp/>ttULONG<sp/>(info-&gt;<ref refid="structstbtt__fontinfo_1af348db379cf0e0e71a68603d00501d41" kindref="member">data</ref><sp/>+<sp/>info-&gt;<ref refid="structstbtt__fontinfo_1a15344195b181b50bde4f59ae7ca248c0" kindref="member">loca</ref><sp/>+<sp/>glyph_index<sp/>*<sp/>4);</highlight></codeline>
<codeline lineno="1622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>g2<sp/>=<sp/>info-&gt;<ref refid="structstbtt__fontinfo_1a5de2129e0a415748920f6aa10ceee6e5" kindref="member">glyf</ref><sp/>+<sp/>ttULONG<sp/>(info-&gt;<ref refid="structstbtt__fontinfo_1af348db379cf0e0e71a68603d00501d41" kindref="member">data</ref><sp/>+<sp/>info-&gt;<ref refid="structstbtt__fontinfo_1a15344195b181b50bde4f59ae7ca248c0" kindref="member">loca</ref><sp/>+<sp/>glyph_index<sp/>*<sp/>4<sp/>+<sp/>4);</highlight></codeline>
<codeline lineno="1623"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1624"><highlight class="normal"></highlight></codeline>
<codeline lineno="1625"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>g1==g2<sp/>?<sp/>-1<sp/>:<sp/>g1;<sp/></highlight><highlight class="comment">//<sp/>if<sp/>length<sp/>is<sp/>0,<sp/>return<sp/>-1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1626"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1627"><highlight class="normal"></highlight></codeline>
<codeline lineno="1628"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbtt__GetGlyphInfoT2(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref><sp/>*info,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>glyph_index,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*x0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*y0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*x1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*y1);</highlight></codeline>
<codeline lineno="1629"><highlight class="normal"></highlight></codeline>
<codeline lineno="1630"><highlight class="normal"><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="imstb__truetype_8h_1accf148d2d285fd55178d9a401734ba92" kindref="member">stbtt_GetGlyphBox</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref><sp/>*info,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>glyph_index,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*x0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*y0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*x1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*y1)</highlight></codeline>
<codeline lineno="1631"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1632"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(info-&gt;<ref refid="structstbtt__fontinfo_1a6031b4bda94aa2b5ff07ef5d626a15a4" kindref="member">cff</ref>.<ref refid="structstbtt____buf_1a0f6f2d06981ab4a5697233bbd0cafb5b" kindref="member">size</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbtt__GetGlyphInfoT2(info,<sp/>glyph_index,<sp/>x0,<sp/>y0,<sp/>x1,<sp/>y1);</highlight></codeline>
<codeline lineno="1634"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>g<sp/>=<sp/>stbtt__GetGlyfOffset(info,<sp/>glyph_index);</highlight></codeline>
<codeline lineno="1636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g<sp/>&lt;<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1637"><highlight class="normal"></highlight></codeline>
<codeline lineno="1638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x0)<sp/>*x0<sp/>=<sp/>ttSHORT(info-&gt;<ref refid="structstbtt__fontinfo_1af348db379cf0e0e71a68603d00501d41" kindref="member">data</ref><sp/>+<sp/>g<sp/>+<sp/>2);</highlight></codeline>
<codeline lineno="1639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y0)<sp/>*y0<sp/>=<sp/>ttSHORT(info-&gt;<ref refid="structstbtt__fontinfo_1af348db379cf0e0e71a68603d00501d41" kindref="member">data</ref><sp/>+<sp/>g<sp/>+<sp/>4);</highlight></codeline>
<codeline lineno="1640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x1)<sp/>*x1<sp/>=<sp/>ttSHORT(info-&gt;<ref refid="structstbtt__fontinfo_1af348db379cf0e0e71a68603d00501d41" kindref="member">data</ref><sp/>+<sp/>g<sp/>+<sp/>6);</highlight></codeline>
<codeline lineno="1641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y1)<sp/>*y1<sp/>=<sp/>ttSHORT(info-&gt;<ref refid="structstbtt__fontinfo_1af348db379cf0e0e71a68603d00501d41" kindref="member">data</ref><sp/>+<sp/>g<sp/>+<sp/>8);</highlight></codeline>
<codeline lineno="1642"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1643"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="1644"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1645"><highlight class="normal"></highlight></codeline>
<codeline lineno="1646"><highlight class="normal"><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="imstb__truetype_8h_1abbfa26d9cbfeae7e224f2f62ef6c096d" kindref="member">stbtt_GetCodepointBox</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref><sp/>*info,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>codepoint,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*x0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*y0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*x1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*y1)</highlight></codeline>
<codeline lineno="1647"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1648"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imstb__truetype_8h_1accf148d2d285fd55178d9a401734ba92" kindref="member">stbtt_GetGlyphBox</ref>(info,<sp/><ref refid="imstb__truetype_8h_1a213d5628c6b2e5c107b99378eefc6e3a" kindref="member">stbtt_FindGlyphIndex</ref>(info,codepoint),<sp/>x0,y0,x1,y1);</highlight></codeline>
<codeline lineno="1649"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1650"><highlight class="normal"></highlight></codeline>
<codeline lineno="1651"><highlight class="normal"><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="imstb__truetype_8h_1a3378c5794e9ab2a16492ab7e3c3c9485" kindref="member">stbtt_IsGlyphEmpty</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref><sp/>*info,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>glyph_index)</highlight></codeline>
<codeline lineno="1652"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1653"><highlight class="normal"><sp/><sp/><sp/>stbtt_int16<sp/>numberOfContours;</highlight></codeline>
<codeline lineno="1654"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>g;</highlight></codeline>
<codeline lineno="1655"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(info-&gt;<ref refid="structstbtt__fontinfo_1a6031b4bda94aa2b5ff07ef5d626a15a4" kindref="member">cff</ref>.<ref refid="structstbtt____buf_1a0f6f2d06981ab4a5697233bbd0cafb5b" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="1656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbtt__GetGlyphInfoT2(info,<sp/>glyph_index,<sp/>NULL,<sp/>NULL,<sp/>NULL,<sp/>NULL)<sp/>==<sp/>0;</highlight></codeline>
<codeline lineno="1657"><highlight class="normal"><sp/><sp/><sp/>g<sp/>=<sp/>stbtt__GetGlyfOffset(info,<sp/>glyph_index);</highlight></codeline>
<codeline lineno="1658"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g<sp/>&lt;<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="1659"><highlight class="normal"><sp/><sp/><sp/>numberOfContours<sp/>=<sp/>ttSHORT(info-&gt;<ref refid="structstbtt__fontinfo_1af348db379cf0e0e71a68603d00501d41" kindref="member">data</ref><sp/>+<sp/>g);</highlight></codeline>
<codeline lineno="1660"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>numberOfContours<sp/>==<sp/>0;</highlight></codeline>
<codeline lineno="1661"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1662"><highlight class="normal"></highlight></codeline>
<codeline lineno="1663"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbtt__close_shape(<ref refid="structstbtt__vertex" kindref="compound">stbtt_vertex</ref><sp/>*vertices,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_vertices,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>was_off,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>start_off,</highlight></codeline>
<codeline lineno="1664"><highlight class="normal"><sp/><sp/><sp/><sp/>stbtt_int32<sp/>sx,<sp/>stbtt_int32<sp/>sy,<sp/>stbtt_int32<sp/>scx,<sp/>stbtt_int32<sp/>scy,<sp/>stbtt_int32<sp/>cx,<sp/>stbtt_int32<sp/>cy)</highlight></codeline>
<codeline lineno="1665"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1666"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(start_off)<sp/>{</highlight></codeline>
<codeline lineno="1667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(was_off)</highlight></codeline>
<codeline lineno="1668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt_setvertex(&amp;vertices[num_vertices++],<sp/><ref refid="imstb__truetype_8h_1a9dff5253600497fb00c1c785dd5a309dab9ac3e527ce18873abeab556f6768ce4" kindref="member">STBTT_vcurve</ref>,<sp/>(cx+scx)&gt;&gt;1,<sp/>(cy+scy)&gt;&gt;1,<sp/>cx,cy);</highlight></codeline>
<codeline lineno="1669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbtt_setvertex(&amp;vertices[num_vertices++],<sp/><ref refid="imstb__truetype_8h_1a9dff5253600497fb00c1c785dd5a309dab9ac3e527ce18873abeab556f6768ce4" kindref="member">STBTT_vcurve</ref>,<sp/>sx,sy,scx,scy);</highlight></codeline>
<codeline lineno="1670"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(was_off)</highlight></codeline>
<codeline lineno="1672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt_setvertex(&amp;vertices[num_vertices++],<sp/><ref refid="imstb__truetype_8h_1a9dff5253600497fb00c1c785dd5a309dab9ac3e527ce18873abeab556f6768ce4" kindref="member">STBTT_vcurve</ref>,sx,sy,cx,cy);</highlight></codeline>
<codeline lineno="1673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt_setvertex(&amp;vertices[num_vertices++],<sp/><ref refid="imstb__truetype_8h_1a9dff5253600497fb00c1c785dd5a309dade4bb6465c32e56588f35e5120769e2e" kindref="member">STBTT_vline</ref>,sx,sy,0,0);</highlight></codeline>
<codeline lineno="1675"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1676"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>num_vertices;</highlight></codeline>
<codeline lineno="1677"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1678"><highlight class="normal"></highlight></codeline>
<codeline lineno="1679"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbtt__GetGlyphShapeTT(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref><sp/>*info,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>glyph_index,<sp/><ref refid="structstbtt__vertex" kindref="compound">stbtt_vertex</ref><sp/>**pvertices)</highlight></codeline>
<codeline lineno="1680"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1681"><highlight class="normal"><sp/><sp/><sp/>stbtt_int16<sp/>numberOfContours;</highlight></codeline>
<codeline lineno="1682"><highlight class="normal"><sp/><sp/><sp/>stbtt_uint8<sp/>*endPtsOfContours;</highlight></codeline>
<codeline lineno="1683"><highlight class="normal"><sp/><sp/><sp/>stbtt_uint8<sp/>*data<sp/>=<sp/>info-&gt;<ref refid="structstbtt__fontinfo_1af348db379cf0e0e71a68603d00501d41" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="1684"><highlight class="normal"><sp/><sp/><sp/><ref refid="structstbtt__vertex" kindref="compound">stbtt_vertex</ref><sp/>*vertices=0;</highlight></codeline>
<codeline lineno="1685"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_vertices=0;</highlight></codeline>
<codeline lineno="1686"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>g<sp/>=<sp/>stbtt__GetGlyfOffset(info,<sp/>glyph_index);</highlight></codeline>
<codeline lineno="1687"><highlight class="normal"></highlight></codeline>
<codeline lineno="1688"><highlight class="normal"><sp/><sp/><sp/>*pvertices<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1689"><highlight class="normal"></highlight></codeline>
<codeline lineno="1690"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g<sp/>&lt;<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1691"><highlight class="normal"></highlight></codeline>
<codeline lineno="1692"><highlight class="normal"><sp/><sp/><sp/>numberOfContours<sp/>=<sp/>ttSHORT(data<sp/>+<sp/>g);</highlight></codeline>
<codeline lineno="1693"><highlight class="normal"></highlight></codeline>
<codeline lineno="1694"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(numberOfContours<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbtt_uint8<sp/>flags=0,flagcount;</highlight></codeline>
<codeline lineno="1696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbtt_int32<sp/>ins,<sp/>i,j=0,m,n,<sp/>next_move,<sp/>was_off=0,<sp/>off,<sp/>start_off=0;</highlight></codeline>
<codeline lineno="1697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbtt_int32<sp/>x,y,cx,cy,sx,sy,<sp/>scx,scy;</highlight></codeline>
<codeline lineno="1698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbtt_uint8<sp/>*points;</highlight></codeline>
<codeline lineno="1699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>endPtsOfContours<sp/>=<sp/>(data<sp/>+<sp/>g<sp/>+<sp/>10);</highlight></codeline>
<codeline lineno="1700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ins<sp/>=<sp/>ttUSHORT(data<sp/>+<sp/>g<sp/>+<sp/>10<sp/>+<sp/>numberOfContours<sp/>*<sp/>2);</highlight></codeline>
<codeline lineno="1701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>points<sp/>=<sp/>data<sp/>+<sp/>g<sp/>+<sp/>10<sp/>+<sp/>numberOfContours<sp/>*<sp/>2<sp/>+<sp/>2<sp/>+<sp/>ins;</highlight></codeline>
<codeline lineno="1702"><highlight class="normal"></highlight></codeline>
<codeline lineno="1703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>1+ttUSHORT(endPtsOfContours<sp/>+<sp/>numberOfContours*2-2);</highlight></codeline>
<codeline lineno="1704"><highlight class="normal"></highlight></codeline>
<codeline lineno="1705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m<sp/>=<sp/>n<sp/>+<sp/>2*numberOfContours;<sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>loose<sp/>bound<sp/>on<sp/>how<sp/>many<sp/>vertices<sp/>we<sp/>might<sp/>need</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vertices<sp/>=<sp/>(<ref refid="structstbtt__vertex" kindref="compound">stbtt_vertex</ref><sp/>*)<sp/><ref refid="imgui__draw_8cpp_1a8f6734fe0cb6d6aa09e494602afa96be" kindref="member">STBTT_malloc</ref>(m<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(vertices[0]),<sp/>info-&gt;<ref refid="structstbtt__fontinfo_1a9c81078df96a7a3f730137151efab285" kindref="member">userdata</ref>);</highlight></codeline>
<codeline lineno="1707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vertices<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1709"><highlight class="normal"></highlight></codeline>
<codeline lineno="1710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>next_move<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>flagcount=0;</highlight></codeline>
<codeline lineno="1712"><highlight class="normal"></highlight></codeline>
<codeline lineno="1713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>first<sp/>pass,<sp/>we<sp/>load<sp/>uninterpreted<sp/>data<sp/>into<sp/>the<sp/>allocated<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>above,<sp/>shifted<sp/>to<sp/>the<sp/>end<sp/>of<sp/>the<sp/>array<sp/>so<sp/>we<sp/>won&apos;t<sp/>overwrite<sp/>it<sp/>when</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>create<sp/>our<sp/>final<sp/>data<sp/>starting<sp/>from<sp/>the<sp/>front</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1716"><highlight class="normal"></highlight></codeline>
<codeline lineno="1717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>off<sp/>=<sp/>m<sp/>-<sp/>n;<sp/></highlight><highlight class="comment">//<sp/>starting<sp/>offset<sp/>for<sp/>uninterpreted<sp/>data,<sp/>regardless<sp/>of<sp/>how<sp/>m<sp/>ends<sp/>up<sp/>being<sp/>calculated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1718"><highlight class="normal"></highlight></codeline>
<codeline lineno="1719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>first<sp/>load<sp/>flags</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1720"><highlight class="normal"></highlight></codeline>
<codeline lineno="1721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>n;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flagcount<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flags<sp/>=<sp/>*points++;</highlight></codeline>
<codeline lineno="1724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>&amp;<sp/>8)</highlight></codeline>
<codeline lineno="1725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flagcount<sp/>=<sp/>*points++;</highlight></codeline>
<codeline lineno="1726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--flagcount;</highlight></codeline>
<codeline lineno="1728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vertices[off+i].<ref refid="structstbtt__vertex_1aa325b3707b88e7e104c0de46bb2bf395" kindref="member">type</ref><sp/>=<sp/>flags;</highlight></codeline>
<codeline lineno="1729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1730"><highlight class="normal"></highlight></codeline>
<codeline lineno="1731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>load<sp/>x<sp/>coordinates</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>x=0;</highlight></codeline>
<codeline lineno="1733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>n;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flags<sp/>=<sp/>vertices[off+i].<ref refid="structstbtt__vertex_1aa325b3707b88e7e104c0de46bb2bf395" kindref="member">type</ref>;</highlight></codeline>
<codeline lineno="1735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>&amp;<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="1736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt_int16<sp/>dx<sp/>=<sp/>*points++;</highlight></codeline>
<codeline lineno="1737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>+=<sp/>(flags<sp/>&amp;<sp/>16)<sp/>?<sp/>dx<sp/>:<sp/>-dx;<sp/></highlight><highlight class="comment">//<sp/>???</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(flags<sp/>&amp;<sp/>16))<sp/>{</highlight></codeline>
<codeline lineno="1740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>x<sp/>+<sp/>(stbtt_int16)<sp/>(points[0]*256<sp/>+<sp/>points[1]);</highlight></codeline>
<codeline lineno="1741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>points<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="1742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vertices[off+i].<ref refid="structstbtt__vertex_1a81773edbe760d0e090561a3c1e86c919" kindref="member">x</ref><sp/>=<sp/>(stbtt_int16)<sp/>x;</highlight></codeline>
<codeline lineno="1745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1746"><highlight class="normal"></highlight></codeline>
<codeline lineno="1747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>load<sp/>y<sp/>coordinates</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>y=0;</highlight></codeline>
<codeline lineno="1749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>n;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flags<sp/>=<sp/>vertices[off+i].<ref refid="structstbtt__vertex_1aa325b3707b88e7e104c0de46bb2bf395" kindref="member">type</ref>;</highlight></codeline>
<codeline lineno="1751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>&amp;<sp/>4)<sp/>{</highlight></codeline>
<codeline lineno="1752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt_int16<sp/>dy<sp/>=<sp/>*points++;</highlight></codeline>
<codeline lineno="1753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>+=<sp/>(flags<sp/>&amp;<sp/>32)<sp/>?<sp/>dy<sp/>:<sp/>-dy;<sp/></highlight><highlight class="comment">//<sp/>???</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(flags<sp/>&amp;<sp/>32))<sp/>{</highlight></codeline>
<codeline lineno="1756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>y<sp/>+<sp/>(stbtt_int16)<sp/>(points[0]*256<sp/>+<sp/>points[1]);</highlight></codeline>
<codeline lineno="1757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>points<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="1758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vertices[off+i].<ref refid="structstbtt__vertex_1a9052065ca544b63d537325b246928cfc" kindref="member">y</ref><sp/>=<sp/>(stbtt_int16)<sp/>y;</highlight></codeline>
<codeline lineno="1761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1762"><highlight class="normal"></highlight></codeline>
<codeline lineno="1763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>convert<sp/>them<sp/>to<sp/>our<sp/>format</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>num_vertices=0;</highlight></codeline>
<codeline lineno="1765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sx<sp/>=<sp/>sy<sp/>=<sp/>cx<sp/>=<sp/>cy<sp/>=<sp/>scx<sp/>=<sp/>scy<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>n;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flags<sp/>=<sp/>vertices[off+i].<ref refid="structstbtt__vertex_1aa325b3707b88e7e104c0de46bb2bf395" kindref="member">type</ref>;</highlight></codeline>
<codeline lineno="1768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/><sp/><sp/><sp/><sp/>=<sp/>(stbtt_int16)<sp/>vertices[off+i].x;</highlight></codeline>
<codeline lineno="1769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/><sp/><sp/><sp/><sp/>=<sp/>(stbtt_int16)<sp/>vertices[off+i].y;</highlight></codeline>
<codeline lineno="1770"><highlight class="normal"></highlight></codeline>
<codeline lineno="1771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(next_move<sp/>==<sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="1772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="1773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_vertices<sp/>=<sp/>stbtt__close_shape(vertices,<sp/>num_vertices,<sp/>was_off,<sp/>start_off,<sp/>sx,sy,scx,scy,cx,cy);</highlight></codeline>
<codeline lineno="1774"><highlight class="normal"></highlight></codeline>
<codeline lineno="1775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>start<sp/>the<sp/>new<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_off<sp/>=<sp/>!(flags<sp/>&amp;<sp/>1);</highlight></codeline>
<codeline lineno="1777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(start_off)<sp/>{</highlight></codeline>
<codeline lineno="1778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>we<sp/>start<sp/>off<sp/>with<sp/>an<sp/>off-curve<sp/>point,<sp/>then<sp/>when<sp/>we<sp/>need<sp/>to<sp/>find<sp/>a<sp/>point<sp/>on<sp/>the<sp/>curve</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>where<sp/>we<sp/>can<sp/>start,<sp/>and<sp/>we<sp/>need<sp/>to<sp/>save<sp/>some<sp/>state<sp/>for<sp/>when<sp/>we<sp/>wraparound.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scx<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="1781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scy<sp/>=<sp/>y;</highlight></codeline>
<codeline lineno="1782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(vertices[off+i+1].type<sp/>&amp;<sp/>1))<sp/>{</highlight></codeline>
<codeline lineno="1783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>next<sp/>point<sp/>is<sp/>also<sp/>a<sp/>curve<sp/>point,<sp/>so<sp/>interpolate<sp/>an<sp/>on-point<sp/>curve</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sx<sp/>=<sp/>(x<sp/>+<sp/>(stbtt_int32)<sp/>vertices[off+i+1].<ref refid="structstbtt__vertex_1a81773edbe760d0e090561a3c1e86c919" kindref="member">x</ref>)<sp/>&gt;&gt;<sp/>1;</highlight></codeline>
<codeline lineno="1785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sy<sp/>=<sp/>(y<sp/>+<sp/>(stbtt_int32)<sp/>vertices[off+i+1].<ref refid="structstbtt__vertex_1a9052065ca544b63d537325b246928cfc" kindref="member">y</ref>)<sp/>&gt;&gt;<sp/>1;</highlight></codeline>
<codeline lineno="1786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>otherwise<sp/>just<sp/>use<sp/>the<sp/>next<sp/>point<sp/>as<sp/>our<sp/>start<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sx<sp/>=<sp/>(stbtt_int32)<sp/>vertices[off+i+1].x;</highlight></codeline>
<codeline lineno="1789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sy<sp/>=<sp/>(stbtt_int32)<sp/>vertices[off+i+1].y;</highlight></codeline>
<codeline lineno="1790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++i;<sp/></highlight><highlight class="comment">//<sp/>we&apos;re<sp/>using<sp/>point<sp/>i+1<sp/>as<sp/>the<sp/>starting<sp/>point,<sp/>so<sp/>skip<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sx<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="1794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sy<sp/>=<sp/>y;</highlight></codeline>
<codeline lineno="1795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt_setvertex(&amp;vertices[num_vertices++],<sp/><ref refid="imstb__truetype_8h_1a9dff5253600497fb00c1c785dd5a309dab335ba97e1798b621313de85a9a6e69d" kindref="member">STBTT_vmove</ref>,sx,sy,0,0);</highlight></codeline>
<codeline lineno="1797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>was_off<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next_move<sp/>=<sp/>1<sp/>+<sp/>ttUSHORT(endPtsOfContours+j*2);</highlight></codeline>
<codeline lineno="1799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++j;</highlight></codeline>
<codeline lineno="1800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(flags<sp/>&amp;<sp/>1))<sp/>{<sp/></highlight><highlight class="comment">//<sp/>if<sp/>it&apos;s<sp/>a<sp/>curve</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(was_off)<sp/></highlight><highlight class="comment">//<sp/>two<sp/>off-curve<sp/>control<sp/>points<sp/>in<sp/>a<sp/>row<sp/>means<sp/>interpolate<sp/>an<sp/>on-curve<sp/>midpoint</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt_setvertex(&amp;vertices[num_vertices++],<sp/><ref refid="imstb__truetype_8h_1a9dff5253600497fb00c1c785dd5a309dab9ac3e527ce18873abeab556f6768ce4" kindref="member">STBTT_vcurve</ref>,<sp/>(cx+x)&gt;&gt;1,<sp/>(cy+y)&gt;&gt;1,<sp/>cx,<sp/>cy);</highlight></codeline>
<codeline lineno="1804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cx<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="1805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cy<sp/>=<sp/>y;</highlight></codeline>
<codeline lineno="1806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>was_off<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(was_off)</highlight></codeline>
<codeline lineno="1809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt_setvertex(&amp;vertices[num_vertices++],<sp/><ref refid="imstb__truetype_8h_1a9dff5253600497fb00c1c785dd5a309dab9ac3e527ce18873abeab556f6768ce4" kindref="member">STBTT_vcurve</ref>,<sp/>x,y,<sp/>cx,<sp/>cy);</highlight></codeline>
<codeline lineno="1810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt_setvertex(&amp;vertices[num_vertices++],<sp/><ref refid="imstb__truetype_8h_1a9dff5253600497fb00c1c785dd5a309dade4bb6465c32e56588f35e5120769e2e" kindref="member">STBTT_vline</ref>,<sp/>x,y,0,0);</highlight></codeline>
<codeline lineno="1812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>was_off<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>num_vertices<sp/>=<sp/>stbtt__close_shape(vertices,<sp/>num_vertices,<sp/>was_off,<sp/>start_off,<sp/>sx,sy,scx,scy,cx,cy);</highlight></codeline>
<codeline lineno="1817"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(numberOfContours<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compound<sp/>shapes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>more<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbtt_uint8<sp/>*comp<sp/>=<sp/>data<sp/>+<sp/>g<sp/>+<sp/>10;</highlight></codeline>
<codeline lineno="1821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>num_vertices<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vertices<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(more)<sp/>{</highlight></codeline>
<codeline lineno="1824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt_uint16<sp/>flags,<sp/>gidx;</highlight></codeline>
<codeline lineno="1825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>comp_num_verts<sp/>=<sp/>0,<sp/>i;</highlight></codeline>
<codeline lineno="1826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structstbtt__vertex" kindref="compound">stbtt_vertex</ref><sp/>*comp_verts<sp/>=<sp/>0,<sp/>*tmp<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>mtx[6]<sp/>=<sp/>{1,0,0,1,0,0},<sp/>m,<sp/>n;</highlight></codeline>
<codeline lineno="1828"><highlight class="normal"></highlight></codeline>
<codeline lineno="1829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flags<sp/>=<sp/>ttSHORT(comp);<sp/>comp+=2;</highlight></codeline>
<codeline lineno="1830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gidx<sp/>=<sp/>ttSHORT(comp);<sp/>comp+=2;</highlight></codeline>
<codeline lineno="1831"><highlight class="normal"></highlight></codeline>
<codeline lineno="1832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>&amp;<sp/>2)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>XY<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>&amp;<sp/>1)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>shorts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mtx[4]<sp/>=<sp/>ttSHORT(comp);<sp/>comp+=2;</highlight></codeline>
<codeline lineno="1835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mtx[5]<sp/>=<sp/>ttSHORT(comp);<sp/>comp+=2;</highlight></codeline>
<codeline lineno="1836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mtx[4]<sp/>=<sp/>ttCHAR(comp);<sp/>comp+=1;</highlight></codeline>
<codeline lineno="1838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mtx[5]<sp/>=<sp/>ttCHAR(comp);<sp/>comp+=1;</highlight></codeline>
<codeline lineno="1839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>@TODO<sp/>handle<sp/>matching<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imgui__draw_8cpp_1a1123d905f512c19c8d796a6d294a3a84" kindref="member">STBTT_assert</ref>(0);</highlight></codeline>
<codeline lineno="1844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>&amp;<sp/>(1&lt;&lt;3))<sp/>{<sp/></highlight><highlight class="comment">//<sp/>WE_HAVE_A_SCALE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mtx[0]<sp/>=<sp/>mtx[3]<sp/>=<sp/>ttSHORT(comp)/16384.0f;<sp/>comp+=2;</highlight></codeline>
<codeline lineno="1847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mtx[1]<sp/>=<sp/>mtx[2]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>&amp;<sp/>(1&lt;&lt;6))<sp/>{<sp/></highlight><highlight class="comment">//<sp/>WE_HAVE_AN_X_AND_YSCALE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mtx[0]<sp/>=<sp/>ttSHORT(comp)/16384.0f;<sp/>comp+=2;</highlight></codeline>
<codeline lineno="1850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mtx[1]<sp/>=<sp/>mtx[2]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mtx[3]<sp/>=<sp/>ttSHORT(comp)/16384.0f;<sp/>comp+=2;</highlight></codeline>
<codeline lineno="1852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>&amp;<sp/>(1&lt;&lt;7))<sp/>{<sp/></highlight><highlight class="comment">//<sp/>WE_HAVE_A_TWO_BY_TWO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mtx[0]<sp/>=<sp/>ttSHORT(comp)/16384.0f;<sp/>comp+=2;</highlight></codeline>
<codeline lineno="1854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mtx[1]<sp/>=<sp/>ttSHORT(comp)/16384.0f;<sp/>comp+=2;</highlight></codeline>
<codeline lineno="1855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mtx[2]<sp/>=<sp/>ttSHORT(comp)/16384.0f;<sp/>comp+=2;</highlight></codeline>
<codeline lineno="1856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mtx[3]<sp/>=<sp/>ttSHORT(comp)/16384.0f;<sp/>comp+=2;</highlight></codeline>
<codeline lineno="1857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1858"><highlight class="normal"></highlight></codeline>
<codeline lineno="1859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>transformation<sp/>scales.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m<sp/>=<sp/>(float)<sp/><ref refid="imgui__draw_8cpp_1ace1fcbebd394a5bed76bc9b97dbe8d5a" kindref="member">STBTT_sqrt</ref>(mtx[0]*mtx[0]<sp/>+<sp/>mtx[1]*mtx[1]);</highlight></codeline>
<codeline lineno="1861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>(float)<sp/><ref refid="imgui__draw_8cpp_1ace1fcbebd394a5bed76bc9b97dbe8d5a" kindref="member">STBTT_sqrt</ref>(mtx[2]*mtx[2]<sp/>+<sp/>mtx[3]*mtx[3]);</highlight></codeline>
<codeline lineno="1862"><highlight class="normal"></highlight></codeline>
<codeline lineno="1863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>indexed<sp/>glyph.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comp_num_verts<sp/>=<sp/><ref refid="imstb__truetype_8h_1a695c82840a7d4eaa1d5be00131c9718b" kindref="member">stbtt_GetGlyphShape</ref>(info,<sp/>gidx,<sp/>&amp;comp_verts);</highlight></codeline>
<codeline lineno="1865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(comp_num_verts<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Transform<sp/>vertices.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>comp_num_verts;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structstbtt__vertex" kindref="compound">stbtt_vertex</ref>*<sp/>v<sp/>=<sp/>&amp;comp_verts[i];</highlight></codeline>
<codeline lineno="1869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imstb__truetype_8h_1ab8fd8e5e0b82b0f7da54532035e47b22" kindref="member">stbtt_vertex_type</ref><sp/>x,y;</highlight></codeline>
<codeline lineno="1870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x=v-&gt;<ref refid="structstbtt__vertex_1a81773edbe760d0e090561a3c1e86c919" kindref="member">x</ref>;<sp/>y=v-&gt;<ref refid="structstbtt__vertex_1a9052065ca544b63d537325b246928cfc" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="1871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v-&gt;<ref refid="structstbtt__vertex_1a81773edbe760d0e090561a3c1e86c919" kindref="member">x</ref><sp/>=<sp/>(<ref refid="imstb__truetype_8h_1ab8fd8e5e0b82b0f7da54532035e47b22" kindref="member">stbtt_vertex_type</ref>)(m<sp/>*<sp/>(mtx[0]*x<sp/>+<sp/>mtx[2]*y<sp/>+<sp/>mtx[4]));</highlight></codeline>
<codeline lineno="1872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v-&gt;<ref refid="structstbtt__vertex_1a9052065ca544b63d537325b246928cfc" kindref="member">y</ref><sp/>=<sp/>(<ref refid="imstb__truetype_8h_1ab8fd8e5e0b82b0f7da54532035e47b22" kindref="member">stbtt_vertex_type</ref>)(n<sp/>*<sp/>(mtx[1]*x<sp/>+<sp/>mtx[3]*y<sp/>+<sp/>mtx[5]));</highlight></codeline>
<codeline lineno="1873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x=v-&gt;<ref refid="structstbtt__vertex_1a43835489e2a151b31cb100d20f8adeae" kindref="member">cx</ref>;<sp/>y=v-&gt;<ref refid="structstbtt__vertex_1a5610d6335aa6962d970fc7fd2225545e" kindref="member">cy</ref>;</highlight></codeline>
<codeline lineno="1874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v-&gt;<ref refid="structstbtt__vertex_1a43835489e2a151b31cb100d20f8adeae" kindref="member">cx</ref><sp/>=<sp/>(<ref refid="imstb__truetype_8h_1ab8fd8e5e0b82b0f7da54532035e47b22" kindref="member">stbtt_vertex_type</ref>)(m<sp/>*<sp/>(mtx[0]*x<sp/>+<sp/>mtx[2]*y<sp/>+<sp/>mtx[4]));</highlight></codeline>
<codeline lineno="1875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v-&gt;<ref refid="structstbtt__vertex_1a5610d6335aa6962d970fc7fd2225545e" kindref="member">cy</ref><sp/>=<sp/>(<ref refid="imstb__truetype_8h_1ab8fd8e5e0b82b0f7da54532035e47b22" kindref="member">stbtt_vertex_type</ref>)(n<sp/>*<sp/>(mtx[1]*x<sp/>+<sp/>mtx[3]*y<sp/>+<sp/>mtx[5]));</highlight></codeline>
<codeline lineno="1876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Append<sp/>vertices.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>(<ref refid="structstbtt__vertex" kindref="compound">stbtt_vertex</ref>*)<ref refid="imgui__draw_8cpp_1a8f6734fe0cb6d6aa09e494602afa96be" kindref="member">STBTT_malloc</ref>((num_vertices+comp_num_verts)*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structstbtt__vertex" kindref="compound">stbtt_vertex</ref>),<sp/>info-&gt;<ref refid="structstbtt__fontinfo_1a9c81078df96a7a3f730137151efab285" kindref="member">userdata</ref>);</highlight></codeline>
<codeline lineno="1879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!tmp)<sp/>{</highlight></codeline>
<codeline lineno="1880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vertices)<sp/><ref refid="imgui__draw_8cpp_1a357d3564409e68f1b694e06f7beeca7e" kindref="member">STBTT_free</ref>(vertices,<sp/>info-&gt;<ref refid="structstbtt__fontinfo_1a9c81078df96a7a3f730137151efab285" kindref="member">userdata</ref>);</highlight></codeline>
<codeline lineno="1881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(comp_verts)<sp/><ref refid="imgui__draw_8cpp_1a357d3564409e68f1b694e06f7beeca7e" kindref="member">STBTT_free</ref>(comp_verts,<sp/>info-&gt;<ref refid="structstbtt__fontinfo_1a9c81078df96a7a3f730137151efab285" kindref="member">userdata</ref>);</highlight></codeline>
<codeline lineno="1882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num_vertices<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>vertices)<sp/>STBTT_memcpy(tmp,<sp/>vertices,<sp/>num_vertices*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structstbtt__vertex" kindref="compound">stbtt_vertex</ref>));</highlight></codeline>
<codeline lineno="1885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STBTT_memcpy(tmp+num_vertices,<sp/>comp_verts,<sp/>comp_num_verts*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structstbtt__vertex" kindref="compound">stbtt_vertex</ref>));</highlight></codeline>
<codeline lineno="1886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vertices)<sp/><ref refid="imgui__draw_8cpp_1a357d3564409e68f1b694e06f7beeca7e" kindref="member">STBTT_free</ref>(vertices,<sp/>info-&gt;<ref refid="structstbtt__fontinfo_1a9c81078df96a7a3f730137151efab285" kindref="member">userdata</ref>);</highlight></codeline>
<codeline lineno="1887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vertices<sp/>=<sp/>tmp;</highlight></codeline>
<codeline lineno="1888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imgui__draw_8cpp_1a357d3564409e68f1b694e06f7beeca7e" kindref="member">STBTT_free</ref>(comp_verts,<sp/>info-&gt;<ref refid="structstbtt__fontinfo_1a9c81078df96a7a3f730137151efab285" kindref="member">userdata</ref>);</highlight></codeline>
<codeline lineno="1889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_vertices<sp/>+=<sp/>comp_num_verts;</highlight></codeline>
<codeline lineno="1890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>More<sp/>components<sp/>?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>more<sp/>=<sp/>flags<sp/>&amp;<sp/>(1&lt;&lt;5);</highlight></codeline>
<codeline lineno="1893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1894"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>numberOfCounters<sp/>==<sp/>0,<sp/>do<sp/>nothing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1896"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1897"><highlight class="normal"></highlight></codeline>
<codeline lineno="1898"><highlight class="normal"><sp/><sp/><sp/>*pvertices<sp/>=<sp/>vertices;</highlight></codeline>
<codeline lineno="1899"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>num_vertices;</highlight></codeline>
<codeline lineno="1900"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1901"><highlight class="normal"></highlight></codeline>
<codeline lineno="1902"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1903"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1904"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bounds;</highlight></codeline>
<codeline lineno="1905"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>started;</highlight></codeline>
<codeline lineno="1906"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>first_x,<sp/>first_y;</highlight></codeline>
<codeline lineno="1907"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/>y;</highlight></codeline>
<codeline lineno="1908"><highlight class="normal"><sp/><sp/><sp/>stbtt_int32<sp/>min_x,<sp/>max_x,<sp/>min_y,<sp/>max_y;</highlight></codeline>
<codeline lineno="1909"><highlight class="normal"></highlight></codeline>
<codeline lineno="1910"><highlight class="normal"><sp/><sp/><sp/><ref refid="structstbtt__vertex" kindref="compound">stbtt_vertex</ref><sp/>*pvertices;</highlight></codeline>
<codeline lineno="1911"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_vertices;</highlight></codeline>
<codeline lineno="1912"><highlight class="normal">}<sp/>stbtt__csctx;</highlight></codeline>
<codeline lineno="1913"><highlight class="normal"></highlight></codeline>
<codeline lineno="1914"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBTT__CSCTX_INIT(bounds)<sp/>{bounds,0,<sp/>0,0,<sp/>0,0,<sp/>0,0,0,0,<sp/>NULL,<sp/>0}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1915"><highlight class="normal"></highlight></codeline>
<codeline lineno="1916"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stbtt__track_vertex(stbtt__csctx<sp/>*c,<sp/>stbtt_int32<sp/>x,<sp/>stbtt_int32<sp/>y)</highlight></codeline>
<codeline lineno="1917"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1918"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x<sp/>&gt;<sp/>c-&gt;max_x<sp/>||<sp/>!c-&gt;started)<sp/>c-&gt;max_x<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="1919"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y<sp/>&gt;<sp/>c-&gt;max_y<sp/>||<sp/>!c-&gt;started)<sp/>c-&gt;max_y<sp/>=<sp/>y;</highlight></codeline>
<codeline lineno="1920"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x<sp/>&lt;<sp/>c-&gt;min_x<sp/>||<sp/>!c-&gt;started)<sp/>c-&gt;min_x<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="1921"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y<sp/>&lt;<sp/>c-&gt;min_y<sp/>||<sp/>!c-&gt;started)<sp/>c-&gt;min_y<sp/>=<sp/>y;</highlight></codeline>
<codeline lineno="1922"><highlight class="normal"><sp/><sp/><sp/>c-&gt;started<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1923"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1924"><highlight class="normal"></highlight></codeline>
<codeline lineno="1925"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stbtt__csctx_v(stbtt__csctx<sp/>*c,<sp/>stbtt_uint8<sp/>type,<sp/>stbtt_int32<sp/>x,<sp/>stbtt_int32<sp/>y,<sp/>stbtt_int32<sp/>cx,<sp/>stbtt_int32<sp/>cy,<sp/>stbtt_int32<sp/>cx1,<sp/>stbtt_int32<sp/>cy1)</highlight></codeline>
<codeline lineno="1926"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1927"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c-&gt;bounds)<sp/>{</highlight></codeline>
<codeline lineno="1928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbtt__track_vertex(c,<sp/>x,<sp/>y);</highlight></codeline>
<codeline lineno="1929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/><ref refid="imstb__truetype_8h_1a9dff5253600497fb00c1c785dd5a309dab6cd2670234c731eafba404d3a2470fd" kindref="member">STBTT_vcubic</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt__track_vertex(c,<sp/>cx,<sp/>cy);</highlight></codeline>
<codeline lineno="1931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt__track_vertex(c,<sp/>cx1,<sp/>cy1);</highlight></codeline>
<codeline lineno="1932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1933"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbtt_setvertex(&amp;c-&gt;pvertices[c-&gt;num_vertices],<sp/>type,<sp/>x,<sp/>y,<sp/>cx,<sp/>cy);</highlight></codeline>
<codeline lineno="1935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c-&gt;pvertices[c-&gt;num_vertices].cx1<sp/>=<sp/>(stbtt_int16)<sp/>cx1;</highlight></codeline>
<codeline lineno="1936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c-&gt;pvertices[c-&gt;num_vertices].cy1<sp/>=<sp/>(stbtt_int16)<sp/>cy1;</highlight></codeline>
<codeline lineno="1937"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1938"><highlight class="normal"><sp/><sp/><sp/>c-&gt;num_vertices++;</highlight></codeline>
<codeline lineno="1939"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1940"><highlight class="normal"></highlight></codeline>
<codeline lineno="1941"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stbtt__csctx_close_shape(stbtt__csctx<sp/>*ctx)</highlight></codeline>
<codeline lineno="1942"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1943"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ctx-&gt;first_x<sp/>!=<sp/>ctx-&gt;x<sp/>||<sp/>ctx-&gt;first_y<sp/>!=<sp/>ctx-&gt;y)</highlight></codeline>
<codeline lineno="1944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbtt__csctx_v(ctx,<sp/><ref refid="imstb__truetype_8h_1a9dff5253600497fb00c1c785dd5a309dade4bb6465c32e56588f35e5120769e2e" kindref="member">STBTT_vline</ref>,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)ctx-&gt;first_x,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)ctx-&gt;first_y,<sp/>0,<sp/>0,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="1945"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1946"><highlight class="normal"></highlight></codeline>
<codeline lineno="1947"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stbtt__csctx_rmove_to(stbtt__csctx<sp/>*ctx,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dx,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dy)</highlight></codeline>
<codeline lineno="1948"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1949"><highlight class="normal"><sp/><sp/><sp/>stbtt__csctx_close_shape(ctx);</highlight></codeline>
<codeline lineno="1950"><highlight class="normal"><sp/><sp/><sp/>ctx-&gt;first_x<sp/>=<sp/>ctx-&gt;x<sp/>=<sp/>ctx-&gt;x<sp/>+<sp/>dx;</highlight></codeline>
<codeline lineno="1951"><highlight class="normal"><sp/><sp/><sp/>ctx-&gt;first_y<sp/>=<sp/>ctx-&gt;y<sp/>=<sp/>ctx-&gt;y<sp/>+<sp/>dy;</highlight></codeline>
<codeline lineno="1952"><highlight class="normal"><sp/><sp/><sp/>stbtt__csctx_v(ctx,<sp/><ref refid="imstb__truetype_8h_1a9dff5253600497fb00c1c785dd5a309dab335ba97e1798b621313de85a9a6e69d" kindref="member">STBTT_vmove</ref>,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)ctx-&gt;x,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)ctx-&gt;y,<sp/>0,<sp/>0,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="1953"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1954"><highlight class="normal"></highlight></codeline>
<codeline lineno="1955"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stbtt__csctx_rline_to(stbtt__csctx<sp/>*ctx,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dx,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dy)</highlight></codeline>
<codeline lineno="1956"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1957"><highlight class="normal"><sp/><sp/><sp/>ctx-&gt;x<sp/>+=<sp/>dx;</highlight></codeline>
<codeline lineno="1958"><highlight class="normal"><sp/><sp/><sp/>ctx-&gt;y<sp/>+=<sp/>dy;</highlight></codeline>
<codeline lineno="1959"><highlight class="normal"><sp/><sp/><sp/>stbtt__csctx_v(ctx,<sp/><ref refid="imstb__truetype_8h_1a9dff5253600497fb00c1c785dd5a309dade4bb6465c32e56588f35e5120769e2e" kindref="member">STBTT_vline</ref>,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)ctx-&gt;x,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)ctx-&gt;y,<sp/>0,<sp/>0,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="1960"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1961"><highlight class="normal"></highlight></codeline>
<codeline lineno="1962"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stbtt__csctx_rccurve_to(stbtt__csctx<sp/>*ctx,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dx1,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dy1,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dx2,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dy2,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dx3,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dy3)</highlight></codeline>
<codeline lineno="1963"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1964"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>cx1<sp/>=<sp/>ctx-&gt;x<sp/>+<sp/>dx1;</highlight></codeline>
<codeline lineno="1965"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>cy1<sp/>=<sp/>ctx-&gt;y<sp/>+<sp/>dy1;</highlight></codeline>
<codeline lineno="1966"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>cx2<sp/>=<sp/>cx1<sp/>+<sp/>dx2;</highlight></codeline>
<codeline lineno="1967"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>cy2<sp/>=<sp/>cy1<sp/>+<sp/>dy2;</highlight></codeline>
<codeline lineno="1968"><highlight class="normal"><sp/><sp/><sp/>ctx-&gt;x<sp/>=<sp/>cx2<sp/>+<sp/>dx3;</highlight></codeline>
<codeline lineno="1969"><highlight class="normal"><sp/><sp/><sp/>ctx-&gt;y<sp/>=<sp/>cy2<sp/>+<sp/>dy3;</highlight></codeline>
<codeline lineno="1970"><highlight class="normal"><sp/><sp/><sp/>stbtt__csctx_v(ctx,<sp/><ref refid="imstb__truetype_8h_1a9dff5253600497fb00c1c785dd5a309dab6cd2670234c731eafba404d3a2470fd" kindref="member">STBTT_vcubic</ref>,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)ctx-&gt;x,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)ctx-&gt;y,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)cx1,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)cy1,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)cx2,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)cy2);</highlight></codeline>
<codeline lineno="1971"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1972"><highlight class="normal"></highlight></codeline>
<codeline lineno="1973"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structstbtt____buf" kindref="compound">stbtt__buf</ref><sp/>stbtt__get_subr(<ref refid="structstbtt____buf" kindref="compound">stbtt__buf</ref><sp/>idx,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n)</highlight></codeline>
<codeline lineno="1974"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1975"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count<sp/>=<sp/>stbtt__cff_index_count(&amp;idx);</highlight></codeline>
<codeline lineno="1976"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bias<sp/>=<sp/>107;</highlight></codeline>
<codeline lineno="1977"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(count<sp/>&gt;=<sp/>33900)</highlight></codeline>
<codeline lineno="1978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bias<sp/>=<sp/>32768;</highlight></codeline>
<codeline lineno="1979"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(count<sp/>&gt;=<sp/>1240)</highlight></codeline>
<codeline lineno="1980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bias<sp/>=<sp/>1131;</highlight></codeline>
<codeline lineno="1981"><highlight class="normal"><sp/><sp/><sp/>n<sp/>+=<sp/>bias;</highlight></codeline>
<codeline lineno="1982"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&lt;<sp/>0<sp/>||<sp/>n<sp/>&gt;=<sp/>count)</highlight></codeline>
<codeline lineno="1983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbtt__new_buf(NULL,<sp/>0);</highlight></codeline>
<codeline lineno="1984"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbtt__cff_index_get(idx,<sp/>n);</highlight></codeline>
<codeline lineno="1985"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1986"><highlight class="normal"></highlight></codeline>
<codeline lineno="1987"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structstbtt____buf" kindref="compound">stbtt__buf</ref><sp/>stbtt__cid_get_glyph_subrs(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref><sp/>*info,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>glyph_index)</highlight></codeline>
<codeline lineno="1988"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1989"><highlight class="normal"><sp/><sp/><sp/><ref refid="structstbtt____buf" kindref="compound">stbtt__buf</ref><sp/>fdselect<sp/>=<sp/>info-&gt;<ref refid="structstbtt__fontinfo_1a4e06b1c29295a9aba529105e88fe1d71" kindref="member">fdselect</ref>;</highlight></codeline>
<codeline lineno="1990"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nranges,<sp/>start,<sp/>end,<sp/>v,<sp/>fmt,<sp/>fdselector<sp/>=<sp/>-1,<sp/>i;</highlight></codeline>
<codeline lineno="1991"><highlight class="normal"></highlight></codeline>
<codeline lineno="1992"><highlight class="normal"><sp/><sp/><sp/>stbtt__buf_seek(&amp;fdselect,<sp/>0);</highlight></codeline>
<codeline lineno="1993"><highlight class="normal"><sp/><sp/><sp/>fmt<sp/>=<sp/>stbtt__buf_get8(&amp;fdselect);</highlight></codeline>
<codeline lineno="1994"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fmt<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>untested</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbtt__buf_skip(&amp;fdselect,<sp/>glyph_index);</highlight></codeline>
<codeline lineno="1997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fdselector<sp/>=<sp/>stbtt__buf_get8(&amp;fdselect);</highlight></codeline>
<codeline lineno="1998"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fmt<sp/>==<sp/>3)<sp/>{</highlight></codeline>
<codeline lineno="1999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nranges<sp/>=<sp/>stbtt__buf_get16(&amp;fdselect);</highlight></codeline>
<codeline lineno="2000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>start<sp/>=<sp/>stbtt__buf_get16(&amp;fdselect);</highlight></codeline>
<codeline lineno="2001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nranges;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="2002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>=<sp/>stbtt__buf_get8(&amp;fdselect);</highlight></codeline>
<codeline lineno="2003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end<sp/>=<sp/>stbtt__buf_get16(&amp;fdselect);</highlight></codeline>
<codeline lineno="2004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(glyph_index<sp/>&gt;=<sp/>start<sp/>&amp;&amp;<sp/>glyph_index<sp/>&lt;<sp/>end)<sp/>{</highlight></codeline>
<codeline lineno="2005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fdselector<sp/>=<sp/>v;</highlight></codeline>
<codeline lineno="2006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start<sp/>=<sp/>end;</highlight></codeline>
<codeline lineno="2009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2010"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2011"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fdselector<sp/>==<sp/>-1)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbtt__new_buf(NULL,<sp/>0);<sp/></highlight><highlight class="comment">//<sp/>[DEAR<sp/>IMGUI]<sp/>fixed,<sp/>see<sp/>#6007<sp/>and<sp/>nothings/stb#1422</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2012"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbtt__get_subrs(info-&gt;<ref refid="structstbtt__fontinfo_1a6031b4bda94aa2b5ff07ef5d626a15a4" kindref="member">cff</ref>,<sp/>stbtt__cff_index_get(info-&gt;<ref refid="structstbtt__fontinfo_1a966c70ac9548a02fff558846fbce3677" kindref="member">fontdicts</ref>,<sp/>fdselector));</highlight></codeline>
<codeline lineno="2013"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2014"><highlight class="normal"></highlight></codeline>
<codeline lineno="2015"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbtt__run_charstring(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref><sp/>*info,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>glyph_index,<sp/>stbtt__csctx<sp/>*c)</highlight></codeline>
<codeline lineno="2016"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2017"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>in_header<sp/>=<sp/>1,<sp/>maskbits<sp/>=<sp/>0,<sp/>subr_stack_height<sp/>=<sp/>0,<sp/>sp<sp/>=<sp/>0,<sp/>v,<sp/>i,<sp/>b0;</highlight></codeline>
<codeline lineno="2018"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>has_subrs<sp/>=<sp/>0,<sp/>clear_stack;</highlight></codeline>
<codeline lineno="2019"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>s[48];</highlight></codeline>
<codeline lineno="2020"><highlight class="normal"><sp/><sp/><sp/><ref refid="structstbtt____buf" kindref="compound">stbtt__buf</ref><sp/>subr_stack[10],<sp/>subrs<sp/>=<sp/>info-&gt;<ref refid="structstbtt__fontinfo_1aebc496bb1c001a8a90e0e66da16107d2" kindref="member">subrs</ref>,<sp/>b;</highlight></codeline>
<codeline lineno="2021"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>f;</highlight></codeline>
<codeline lineno="2022"><highlight class="normal"></highlight></codeline>
<codeline lineno="2023"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBTT__CSERR(s)<sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2024"><highlight class="normal"></highlight></codeline>
<codeline lineno="2025"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>currently<sp/>ignores<sp/>the<sp/>initial<sp/>width<sp/>value,<sp/>which<sp/>isn&apos;t<sp/>needed<sp/>if<sp/>we<sp/>have<sp/>hmtx</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2026"><highlight class="normal"><sp/><sp/><sp/>b<sp/>=<sp/>stbtt__cff_index_get(info-&gt;<ref refid="structstbtt__fontinfo_1aaf04a69f8dd4b6a8bed4191b57145082" kindref="member">charstrings</ref>,<sp/>glyph_index);</highlight></codeline>
<codeline lineno="2027"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(b.<ref refid="structstbtt____buf_1ac047fda650726920531272c28aa354fb" kindref="member">cursor</ref><sp/>&lt;<sp/>b.<ref refid="structstbtt____buf_1a0f6f2d06981ab4a5697233bbd0cafb5b" kindref="member">size</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>clear_stack<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="2030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>b0<sp/>=<sp/>stbtt__buf_get8(&amp;b);</highlight></codeline>
<codeline lineno="2031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(b0)<sp/>{</highlight></codeline>
<codeline lineno="2032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>@TODO<sp/>implement<sp/>hinting</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x13:<sp/></highlight><highlight class="comment">//<sp/>hintmask</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x14:<sp/></highlight><highlight class="comment">//<sp/>cntrmask</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(in_header)</highlight></codeline>
<codeline lineno="2036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maskbits<sp/>+=<sp/>(sp<sp/>/<sp/>2);<sp/></highlight><highlight class="comment">//<sp/>implicit<sp/>&quot;vstem&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in_header<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt__buf_skip(&amp;b,<sp/>(maskbits<sp/>+<sp/>7)<sp/>/<sp/>8);</highlight></codeline>
<codeline lineno="2039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2040"><highlight class="normal"></highlight></codeline>
<codeline lineno="2041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x01:<sp/></highlight><highlight class="comment">//<sp/>hstem</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x03:<sp/></highlight><highlight class="comment">//<sp/>vstem</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x12:<sp/></highlight><highlight class="comment">//<sp/>hstemhm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x17:<sp/></highlight><highlight class="comment">//<sp/>vstemhm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maskbits<sp/>+=<sp/>(sp<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="2046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2047"><highlight class="normal"></highlight></codeline>
<codeline lineno="2048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x15:<sp/></highlight><highlight class="comment">//<sp/>rmoveto</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in_header<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sp<sp/>&lt;<sp/>2)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>STBTT__CSERR(</highlight><highlight class="stringliteral">&quot;rmoveto<sp/>stack&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt__csctx_rmove_to(c,<sp/>s[sp-2],<sp/>s[sp-1]);</highlight></codeline>
<codeline lineno="2052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x04:<sp/></highlight><highlight class="comment">//<sp/>vmoveto</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in_header<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sp<sp/>&lt;<sp/>1)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>STBTT__CSERR(</highlight><highlight class="stringliteral">&quot;vmoveto<sp/>stack&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt__csctx_rmove_to(c,<sp/>0,<sp/>s[sp-1]);</highlight></codeline>
<codeline lineno="2057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x16:<sp/></highlight><highlight class="comment">//<sp/>hmoveto</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in_header<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sp<sp/>&lt;<sp/>1)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>STBTT__CSERR(</highlight><highlight class="stringliteral">&quot;hmoveto<sp/>stack&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt__csctx_rmove_to(c,<sp/>s[sp-1],<sp/>0);</highlight></codeline>
<codeline lineno="2062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2063"><highlight class="normal"></highlight></codeline>
<codeline lineno="2064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x05:<sp/></highlight><highlight class="comment">//<sp/>rlineto</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sp<sp/>&lt;<sp/>2)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>STBTT__CSERR(</highlight><highlight class="stringliteral">&quot;rlineto<sp/>stack&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>i<sp/>+<sp/>1<sp/>&lt;<sp/>sp;<sp/>i<sp/>+=<sp/>2)</highlight></codeline>
<codeline lineno="2067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt__csctx_rline_to(c,<sp/>s[i],<sp/>s[i+1]);</highlight></codeline>
<codeline lineno="2068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2069"><highlight class="normal"></highlight></codeline>
<codeline lineno="2070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>hlineto/vlineto<sp/>and<sp/>vhcurveto/hvcurveto<sp/>alternate<sp/>horizontal<sp/>and<sp/>vertical</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>starting<sp/>from<sp/>a<sp/>different<sp/>place.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2072"><highlight class="normal"></highlight></codeline>
<codeline lineno="2073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x07:<sp/></highlight><highlight class="comment">//<sp/>vlineto</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sp<sp/>&lt;<sp/>1)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>STBTT__CSERR(</highlight><highlight class="stringliteral">&quot;vlineto<sp/>stack&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>vlineto;</highlight></codeline>
<codeline lineno="2076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x06:<sp/></highlight><highlight class="comment">//<sp/>hlineto</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sp<sp/>&lt;<sp/>1)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>STBTT__CSERR(</highlight><highlight class="stringliteral">&quot;hlineto<sp/>stack&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;;)<sp/>{</highlight></codeline>
<codeline lineno="2079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&gt;=<sp/>sp)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt__csctx_rline_to(c,<sp/>s[i],<sp/>0);</highlight></codeline>
<codeline lineno="2081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="2082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vlineto:</highlight></codeline>
<codeline lineno="2083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&gt;=<sp/>sp)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt__csctx_rline_to(c,<sp/>0,<sp/>s[i]);</highlight></codeline>
<codeline lineno="2085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="2086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2088"><highlight class="normal"></highlight></codeline>
<codeline lineno="2089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x1F:<sp/></highlight><highlight class="comment">//<sp/>hvcurveto</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sp<sp/>&lt;<sp/>4)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>STBTT__CSERR(</highlight><highlight class="stringliteral">&quot;hvcurveto<sp/>stack&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>hvcurveto;</highlight></codeline>
<codeline lineno="2092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x1E:<sp/></highlight><highlight class="comment">//<sp/>vhcurveto</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sp<sp/>&lt;<sp/>4)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>STBTT__CSERR(</highlight><highlight class="stringliteral">&quot;vhcurveto<sp/>stack&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;;)<sp/>{</highlight></codeline>
<codeline lineno="2095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>+<sp/>3<sp/>&gt;=<sp/>sp)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt__csctx_rccurve_to(c,<sp/>0,<sp/>s[i],<sp/>s[i+1],<sp/>s[i+2],<sp/>s[i+3],<sp/>(sp<sp/>-<sp/>i<sp/>==<sp/>5)<sp/>?<sp/>s[i<sp/>+<sp/>4]<sp/>:<sp/>0.0f);</highlight></codeline>
<codeline lineno="2097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>+=<sp/>4;</highlight></codeline>
<codeline lineno="2098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hvcurveto:</highlight></codeline>
<codeline lineno="2099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>+<sp/>3<sp/>&gt;=<sp/>sp)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt__csctx_rccurve_to(c,<sp/>s[i],<sp/>0,<sp/>s[i+1],<sp/>s[i+2],<sp/>(sp<sp/>-<sp/>i<sp/>==<sp/>5)<sp/>?<sp/>s[i+4]<sp/>:<sp/>0.0f,<sp/>s[i+3]);</highlight></codeline>
<codeline lineno="2101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>+=<sp/>4;</highlight></codeline>
<codeline lineno="2102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2104"><highlight class="normal"></highlight></codeline>
<codeline lineno="2105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x08:<sp/></highlight><highlight class="comment">//<sp/>rrcurveto</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sp<sp/>&lt;<sp/>6)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>STBTT__CSERR(</highlight><highlight class="stringliteral">&quot;rcurveline<sp/>stack&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>i<sp/>+<sp/>5<sp/>&lt;<sp/>sp;<sp/>i<sp/>+=<sp/>6)</highlight></codeline>
<codeline lineno="2108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt__csctx_rccurve_to(c,<sp/>s[i],<sp/>s[i+1],<sp/>s[i+2],<sp/>s[i+3],<sp/>s[i+4],<sp/>s[i+5]);</highlight></codeline>
<codeline lineno="2109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2110"><highlight class="normal"></highlight></codeline>
<codeline lineno="2111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x18:<sp/></highlight><highlight class="comment">//<sp/>rcurveline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sp<sp/>&lt;<sp/>8)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>STBTT__CSERR(</highlight><highlight class="stringliteral">&quot;rcurveline<sp/>stack&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>i<sp/>+<sp/>5<sp/>&lt;<sp/>sp<sp/>-<sp/>2;<sp/>i<sp/>+=<sp/>6)</highlight></codeline>
<codeline lineno="2114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt__csctx_rccurve_to(c,<sp/>s[i],<sp/>s[i+1],<sp/>s[i+2],<sp/>s[i+3],<sp/>s[i+4],<sp/>s[i+5]);</highlight></codeline>
<codeline lineno="2115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>+<sp/>1<sp/>&gt;=<sp/>sp)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>STBTT__CSERR(</highlight><highlight class="stringliteral">&quot;rcurveline<sp/>stack&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt__csctx_rline_to(c,<sp/>s[i],<sp/>s[i+1]);</highlight></codeline>
<codeline lineno="2117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2118"><highlight class="normal"></highlight></codeline>
<codeline lineno="2119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x19:<sp/></highlight><highlight class="comment">//<sp/>rlinecurve</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sp<sp/>&lt;<sp/>8)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>STBTT__CSERR(</highlight><highlight class="stringliteral">&quot;rlinecurve<sp/>stack&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>i<sp/>+<sp/>1<sp/>&lt;<sp/>sp<sp/>-<sp/>6;<sp/>i<sp/>+=<sp/>2)</highlight></codeline>
<codeline lineno="2122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt__csctx_rline_to(c,<sp/>s[i],<sp/>s[i+1]);</highlight></codeline>
<codeline lineno="2123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>+<sp/>5<sp/>&gt;=<sp/>sp)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>STBTT__CSERR(</highlight><highlight class="stringliteral">&quot;rlinecurve<sp/>stack&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt__csctx_rccurve_to(c,<sp/>s[i],<sp/>s[i+1],<sp/>s[i+2],<sp/>s[i+3],<sp/>s[i+4],<sp/>s[i+5]);</highlight></codeline>
<codeline lineno="2125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2126"><highlight class="normal"></highlight></codeline>
<codeline lineno="2127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x1A:<sp/></highlight><highlight class="comment">//<sp/>vvcurveto</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x1B:<sp/></highlight><highlight class="comment">//<sp/>hhcurveto</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sp<sp/>&lt;<sp/>4)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>STBTT__CSERR(</highlight><highlight class="stringliteral">&quot;(vv|hh)curveto<sp/>stack&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="2131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sp<sp/>&amp;<sp/>1)<sp/>{<sp/>f<sp/>=<sp/>s[i];<sp/>i++;<sp/>}</highlight></codeline>
<codeline lineno="2132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>i<sp/>+<sp/>3<sp/>&lt;<sp/>sp;<sp/>i<sp/>+=<sp/>4)<sp/>{</highlight></codeline>
<codeline lineno="2133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(b0<sp/>==<sp/>0x1B)</highlight></codeline>
<codeline lineno="2134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt__csctx_rccurve_to(c,<sp/>s[i],<sp/>f,<sp/>s[i+1],<sp/>s[i+2],<sp/>s[i+3],<sp/>0.0);</highlight></codeline>
<codeline lineno="2135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt__csctx_rccurve_to(c,<sp/>f,<sp/>s[i],<sp/>s[i+1],<sp/>s[i+2],<sp/>0.0,<sp/>s[i+3]);</highlight></codeline>
<codeline lineno="2137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="2138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2140"><highlight class="normal"></highlight></codeline>
<codeline lineno="2141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x0A:<sp/></highlight><highlight class="comment">//<sp/>callsubr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!has_subrs)<sp/>{</highlight></codeline>
<codeline lineno="2143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(info-&gt;<ref refid="structstbtt__fontinfo_1a4e06b1c29295a9aba529105e88fe1d71" kindref="member">fdselect</ref>.<ref refid="structstbtt____buf_1a0f6f2d06981ab4a5697233bbd0cafb5b" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="2144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subrs<sp/>=<sp/>stbtt__cid_get_glyph_subrs(info,<sp/>glyph_index);</highlight></codeline>
<codeline lineno="2145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>has_subrs<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="2146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FALLTHROUGH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x1D:<sp/></highlight><highlight class="comment">//<sp/>callgsubr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sp<sp/>&lt;<sp/>1)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>STBTT__CSERR(</highlight><highlight class="stringliteral">&quot;call(g|)subr<sp/>stack&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>=<sp/>(int)<sp/>s[--sp];</highlight></codeline>
<codeline lineno="2151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(subr_stack_height<sp/>&gt;=<sp/>10)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>STBTT__CSERR(</highlight><highlight class="stringliteral">&quot;recursion<sp/>limit&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subr_stack[subr_stack_height++]<sp/>=<sp/>b;</highlight></codeline>
<codeline lineno="2153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>=<sp/>stbtt__get_subr(b0<sp/>==<sp/>0x0A<sp/>?<sp/>subrs<sp/>:<sp/>info-&gt;<ref refid="structstbtt__fontinfo_1afc5bfc4a52ad0e3879f0f81a372da7fb" kindref="member">gsubrs</ref>,<sp/>v);</highlight></codeline>
<codeline lineno="2154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(b.<ref refid="structstbtt____buf_1a0f6f2d06981ab4a5697233bbd0cafb5b" kindref="member">size</ref><sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>STBTT__CSERR(</highlight><highlight class="stringliteral">&quot;subr<sp/>not<sp/>found&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b.<ref refid="structstbtt____buf_1ac047fda650726920531272c28aa354fb" kindref="member">cursor</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clear_stack<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2158"><highlight class="normal"></highlight></codeline>
<codeline lineno="2159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x0B:<sp/></highlight><highlight class="comment">//<sp/>return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(subr_stack_height<sp/>&lt;=<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>STBTT__CSERR(</highlight><highlight class="stringliteral">&quot;return<sp/>outside<sp/>subr&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>=<sp/>subr_stack[--subr_stack_height];</highlight></codeline>
<codeline lineno="2162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clear_stack<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2164"><highlight class="normal"></highlight></codeline>
<codeline lineno="2165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x0E:<sp/></highlight><highlight class="comment">//<sp/>endchar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt__csctx_close_shape(c);</highlight></codeline>
<codeline lineno="2167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="2168"><highlight class="normal"></highlight></codeline>
<codeline lineno="2169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x0C:<sp/>{<sp/></highlight><highlight class="comment">//<sp/>two-byte<sp/>escape</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dx1,<sp/>dx2,<sp/>dx3,<sp/>dx4,<sp/>dx5,<sp/>dx6,<sp/>dy1,<sp/>dy2,<sp/>dy3,<sp/>dy4,<sp/>dy5,<sp/>dy6;</highlight></codeline>
<codeline lineno="2171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dx,<sp/>dy;</highlight></codeline>
<codeline lineno="2172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>b1<sp/>=<sp/>stbtt__buf_get8(&amp;b);</highlight></codeline>
<codeline lineno="2173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(b1)<sp/>{</highlight></codeline>
<codeline lineno="2174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>@TODO<sp/>These<sp/>&quot;flex&quot;<sp/>implementations<sp/>ignore<sp/>the<sp/>flex-depth<sp/>and<sp/>resolution,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>always<sp/>draw<sp/>beziers.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x22:<sp/></highlight><highlight class="comment">//<sp/>hflex</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sp<sp/>&lt;<sp/>7)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>STBTT__CSERR(</highlight><highlight class="stringliteral">&quot;hflex<sp/>stack&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dx1<sp/>=<sp/>s[0];</highlight></codeline>
<codeline lineno="2179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dx2<sp/>=<sp/>s[1];</highlight></codeline>
<codeline lineno="2180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dy2<sp/>=<sp/>s[2];</highlight></codeline>
<codeline lineno="2181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dx3<sp/>=<sp/>s[3];</highlight></codeline>
<codeline lineno="2182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dx4<sp/>=<sp/>s[4];</highlight></codeline>
<codeline lineno="2183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dx5<sp/>=<sp/>s[5];</highlight></codeline>
<codeline lineno="2184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dx6<sp/>=<sp/>s[6];</highlight></codeline>
<codeline lineno="2185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt__csctx_rccurve_to(c,<sp/>dx1,<sp/>0,<sp/>dx2,<sp/>dy2,<sp/>dx3,<sp/>0);</highlight></codeline>
<codeline lineno="2186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt__csctx_rccurve_to(c,<sp/>dx4,<sp/>0,<sp/>dx5,<sp/>-dy2,<sp/>dx6,<sp/>0);</highlight></codeline>
<codeline lineno="2187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2188"><highlight class="normal"></highlight></codeline>
<codeline lineno="2189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x23:<sp/></highlight><highlight class="comment">//<sp/>flex</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sp<sp/>&lt;<sp/>13)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>STBTT__CSERR(</highlight><highlight class="stringliteral">&quot;flex<sp/>stack&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dx1<sp/>=<sp/>s[0];</highlight></codeline>
<codeline lineno="2192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dy1<sp/>=<sp/>s[1];</highlight></codeline>
<codeline lineno="2193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dx2<sp/>=<sp/>s[2];</highlight></codeline>
<codeline lineno="2194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dy2<sp/>=<sp/>s[3];</highlight></codeline>
<codeline lineno="2195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dx3<sp/>=<sp/>s[4];</highlight></codeline>
<codeline lineno="2196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dy3<sp/>=<sp/>s[5];</highlight></codeline>
<codeline lineno="2197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dx4<sp/>=<sp/>s[6];</highlight></codeline>
<codeline lineno="2198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dy4<sp/>=<sp/>s[7];</highlight></codeline>
<codeline lineno="2199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dx5<sp/>=<sp/>s[8];</highlight></codeline>
<codeline lineno="2200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dy5<sp/>=<sp/>s[9];</highlight></codeline>
<codeline lineno="2201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dx6<sp/>=<sp/>s[10];</highlight></codeline>
<codeline lineno="2202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dy6<sp/>=<sp/>s[11];</highlight></codeline>
<codeline lineno="2203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//fd<sp/>is<sp/>s[12]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt__csctx_rccurve_to(c,<sp/>dx1,<sp/>dy1,<sp/>dx2,<sp/>dy2,<sp/>dx3,<sp/>dy3);</highlight></codeline>
<codeline lineno="2205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt__csctx_rccurve_to(c,<sp/>dx4,<sp/>dy4,<sp/>dx5,<sp/>dy5,<sp/>dx6,<sp/>dy6);</highlight></codeline>
<codeline lineno="2206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2207"><highlight class="normal"></highlight></codeline>
<codeline lineno="2208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x24:<sp/></highlight><highlight class="comment">//<sp/>hflex1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sp<sp/>&lt;<sp/>9)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>STBTT__CSERR(</highlight><highlight class="stringliteral">&quot;hflex1<sp/>stack&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dx1<sp/>=<sp/>s[0];</highlight></codeline>
<codeline lineno="2211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dy1<sp/>=<sp/>s[1];</highlight></codeline>
<codeline lineno="2212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dx2<sp/>=<sp/>s[2];</highlight></codeline>
<codeline lineno="2213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dy2<sp/>=<sp/>s[3];</highlight></codeline>
<codeline lineno="2214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dx3<sp/>=<sp/>s[4];</highlight></codeline>
<codeline lineno="2215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dx4<sp/>=<sp/>s[5];</highlight></codeline>
<codeline lineno="2216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dx5<sp/>=<sp/>s[6];</highlight></codeline>
<codeline lineno="2217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dy5<sp/>=<sp/>s[7];</highlight></codeline>
<codeline lineno="2218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dx6<sp/>=<sp/>s[8];</highlight></codeline>
<codeline lineno="2219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt__csctx_rccurve_to(c,<sp/>dx1,<sp/>dy1,<sp/>dx2,<sp/>dy2,<sp/>dx3,<sp/>0);</highlight></codeline>
<codeline lineno="2220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt__csctx_rccurve_to(c,<sp/>dx4,<sp/>0,<sp/>dx5,<sp/>dy5,<sp/>dx6,<sp/>-(dy1+dy2+dy5));</highlight></codeline>
<codeline lineno="2221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2222"><highlight class="normal"></highlight></codeline>
<codeline lineno="2223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x25:<sp/></highlight><highlight class="comment">//<sp/>flex1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sp<sp/>&lt;<sp/>11)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>STBTT__CSERR(</highlight><highlight class="stringliteral">&quot;flex1<sp/>stack&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dx1<sp/>=<sp/>s[0];</highlight></codeline>
<codeline lineno="2226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dy1<sp/>=<sp/>s[1];</highlight></codeline>
<codeline lineno="2227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dx2<sp/>=<sp/>s[2];</highlight></codeline>
<codeline lineno="2228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dy2<sp/>=<sp/>s[3];</highlight></codeline>
<codeline lineno="2229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dx3<sp/>=<sp/>s[4];</highlight></codeline>
<codeline lineno="2230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dy3<sp/>=<sp/>s[5];</highlight></codeline>
<codeline lineno="2231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dx4<sp/>=<sp/>s[6];</highlight></codeline>
<codeline lineno="2232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dy4<sp/>=<sp/>s[7];</highlight></codeline>
<codeline lineno="2233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dx5<sp/>=<sp/>s[8];</highlight></codeline>
<codeline lineno="2234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dy5<sp/>=<sp/>s[9];</highlight></codeline>
<codeline lineno="2235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dx6<sp/>=<sp/>dy6<sp/>=<sp/>s[10];</highlight></codeline>
<codeline lineno="2236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dx<sp/>=<sp/>dx1+dx2+dx3+dx4+dx5;</highlight></codeline>
<codeline lineno="2237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dy<sp/>=<sp/>dy1+dy2+dy3+dy4+dy5;</highlight></codeline>
<codeline lineno="2238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="imgui__draw_8cpp_1a2b639a5c1ed39bb9e223a78b743f3769" kindref="member">STBTT_fabs</ref>(dx)<sp/>&gt;<sp/><ref refid="imgui__draw_8cpp_1a2b639a5c1ed39bb9e223a78b743f3769" kindref="member">STBTT_fabs</ref>(dy))</highlight></codeline>
<codeline lineno="2239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dy6<sp/>=<sp/>-dy;</highlight></codeline>
<codeline lineno="2240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dx6<sp/>=<sp/>-dx;</highlight></codeline>
<codeline lineno="2242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt__csctx_rccurve_to(c,<sp/>dx1,<sp/>dy1,<sp/>dx2,<sp/>dy2,<sp/>dx3,<sp/>dy3);</highlight></codeline>
<codeline lineno="2243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt__csctx_rccurve_to(c,<sp/>dx4,<sp/>dy4,<sp/>dx5,<sp/>dy5,<sp/>dx6,<sp/>dy6);</highlight></codeline>
<codeline lineno="2244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2245"><highlight class="normal"></highlight></codeline>
<codeline lineno="2246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>STBTT__CSERR(</highlight><highlight class="stringliteral">&quot;unimplemented&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2250"><highlight class="normal"></highlight></codeline>
<codeline lineno="2251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(b0<sp/>!=<sp/>255<sp/>&amp;&amp;<sp/>b0<sp/>!=<sp/>28<sp/>&amp;&amp;<sp/>b0<sp/>&lt;<sp/>32)</highlight></codeline>
<codeline lineno="2253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>STBTT__CSERR(</highlight><highlight class="stringliteral">&quot;reserved<sp/>operator&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2254"><highlight class="normal"></highlight></codeline>
<codeline lineno="2255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>push<sp/>immediate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(b0<sp/>==<sp/>255)<sp/>{</highlight></codeline>
<codeline lineno="2257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f<sp/>=<sp/>(float)(stbtt_int32)stbtt__buf_get32(&amp;b)<sp/>/<sp/>0x10000;</highlight></codeline>
<codeline lineno="2258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt__buf_skip(&amp;b,<sp/>-1);</highlight></codeline>
<codeline lineno="2260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f<sp/>=<sp/>(float)(stbtt_int16)stbtt__cff_int(&amp;b);</highlight></codeline>
<codeline lineno="2261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sp<sp/>&gt;=<sp/>48)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>STBTT__CSERR(</highlight><highlight class="stringliteral">&quot;push<sp/>stack<sp/>overflow&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s[sp++]<sp/>=<sp/>f;</highlight></codeline>
<codeline lineno="2264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clear_stack<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(clear_stack)<sp/>sp<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2268"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2269"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>STBTT__CSERR(</highlight><highlight class="stringliteral">&quot;no<sp/>endchar&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2270"><highlight class="normal"></highlight></codeline>
<codeline lineno="2271"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>STBTT__CSERR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2272"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2273"><highlight class="normal"></highlight></codeline>
<codeline lineno="2274"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbtt__GetGlyphShapeT2(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref><sp/>*info,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>glyph_index,<sp/><ref refid="structstbtt__vertex" kindref="compound">stbtt_vertex</ref><sp/>**pvertices)</highlight></codeline>
<codeline lineno="2275"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2276"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>runs<sp/>the<sp/>charstring<sp/>twice,<sp/>once<sp/>to<sp/>count<sp/>and<sp/>once<sp/>to<sp/>output<sp/>(to<sp/>avoid<sp/>realloc)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2277"><highlight class="normal"><sp/><sp/><sp/>stbtt__csctx<sp/>count_ctx<sp/>=<sp/>STBTT__CSCTX_INIT(1);</highlight></codeline>
<codeline lineno="2278"><highlight class="normal"><sp/><sp/><sp/>stbtt__csctx<sp/>output_ctx<sp/>=<sp/>STBTT__CSCTX_INIT(0);</highlight></codeline>
<codeline lineno="2279"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stbtt__run_charstring(info,<sp/>glyph_index,<sp/>&amp;count_ctx))<sp/>{</highlight></codeline>
<codeline lineno="2280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*pvertices<sp/>=<sp/>(<ref refid="structstbtt__vertex" kindref="compound">stbtt_vertex</ref>*)<ref refid="imgui__draw_8cpp_1a8f6734fe0cb6d6aa09e494602afa96be" kindref="member">STBTT_malloc</ref>(count_ctx.num_vertices*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structstbtt__vertex" kindref="compound">stbtt_vertex</ref>),<sp/>info-&gt;<ref refid="structstbtt__fontinfo_1a9c81078df96a7a3f730137151efab285" kindref="member">userdata</ref>);</highlight></codeline>
<codeline lineno="2281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>output_ctx.pvertices<sp/>=<sp/>*pvertices;</highlight></codeline>
<codeline lineno="2282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stbtt__run_charstring(info,<sp/>glyph_index,<sp/>&amp;output_ctx))<sp/>{</highlight></codeline>
<codeline lineno="2283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imgui__draw_8cpp_1a1123d905f512c19c8d796a6d294a3a84" kindref="member">STBTT_assert</ref>(output_ctx.num_vertices<sp/>==<sp/>count_ctx.num_vertices);</highlight></codeline>
<codeline lineno="2284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>output_ctx.num_vertices;</highlight></codeline>
<codeline lineno="2285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2286"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2287"><highlight class="normal"><sp/><sp/><sp/>*pvertices<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2288"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2289"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2290"><highlight class="normal"></highlight></codeline>
<codeline lineno="2291"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbtt__GetGlyphInfoT2(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref><sp/>*info,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>glyph_index,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*x0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*y0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*x1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*y1)</highlight></codeline>
<codeline lineno="2292"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2293"><highlight class="normal"><sp/><sp/><sp/>stbtt__csctx<sp/>c<sp/>=<sp/>STBTT__CSCTX_INIT(1);</highlight></codeline>
<codeline lineno="2294"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>stbtt__run_charstring(info,<sp/>glyph_index,<sp/>&amp;c);</highlight></codeline>
<codeline lineno="2295"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x0)<sp/><sp/>*x0<sp/>=<sp/>r<sp/>?<sp/>c.min_x<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="2296"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y0)<sp/><sp/>*y0<sp/>=<sp/>r<sp/>?<sp/>c.min_y<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="2297"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x1)<sp/><sp/>*x1<sp/>=<sp/>r<sp/>?<sp/>c.max_x<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="2298"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y1)<sp/><sp/>*y1<sp/>=<sp/>r<sp/>?<sp/>c.max_y<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="2299"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r<sp/>?<sp/>c.num_vertices<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="2300"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2301"><highlight class="normal"></highlight></codeline>
<codeline lineno="2302"><highlight class="normal"><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="imstb__truetype_8h_1a695c82840a7d4eaa1d5be00131c9718b" kindref="member">stbtt_GetGlyphShape</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref><sp/>*info,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>glyph_index,<sp/><ref refid="structstbtt__vertex" kindref="compound">stbtt_vertex</ref><sp/>**pvertices)</highlight></codeline>
<codeline lineno="2303"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2304"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!info-&gt;<ref refid="structstbtt__fontinfo_1a6031b4bda94aa2b5ff07ef5d626a15a4" kindref="member">cff</ref>.<ref refid="structstbtt____buf_1a0f6f2d06981ab4a5697233bbd0cafb5b" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="2305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbtt__GetGlyphShapeTT(info,<sp/>glyph_index,<sp/>pvertices);</highlight></codeline>
<codeline lineno="2306"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbtt__GetGlyphShapeT2(info,<sp/>glyph_index,<sp/>pvertices);</highlight></codeline>
<codeline lineno="2308"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2309"><highlight class="normal"></highlight></codeline>
<codeline lineno="2310"><highlight class="normal"><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="imstb__truetype_8h_1ab593f3066f2a8a7e33e7b7011d1b1f9a" kindref="member">stbtt_GetGlyphHMetrics</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref><sp/>*info,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>glyph_index,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*advanceWidth,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*leftSideBearing)</highlight></codeline>
<codeline lineno="2311"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2312"><highlight class="normal"><sp/><sp/><sp/>stbtt_uint16<sp/>numOfLongHorMetrics<sp/>=<sp/>ttUSHORT(info-&gt;<ref refid="structstbtt__fontinfo_1af348db379cf0e0e71a68603d00501d41" kindref="member">data</ref>+info-&gt;<ref refid="structstbtt__fontinfo_1a91b82ae03d68892eb7f3fbd3a8b990e5" kindref="member">hhea</ref><sp/>+<sp/>34);</highlight></codeline>
<codeline lineno="2313"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(glyph_index<sp/>&lt;<sp/>numOfLongHorMetrics)<sp/>{</highlight></codeline>
<codeline lineno="2314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(advanceWidth)<sp/><sp/><sp/><sp/><sp/>*advanceWidth<sp/><sp/><sp/><sp/>=<sp/>ttSHORT(info-&gt;<ref refid="structstbtt__fontinfo_1af348db379cf0e0e71a68603d00501d41" kindref="member">data</ref><sp/>+<sp/>info-&gt;<ref refid="structstbtt__fontinfo_1aebf42701e99b88d07a59bf99cb84b9a1" kindref="member">hmtx</ref><sp/>+<sp/>4*glyph_index);</highlight></codeline>
<codeline lineno="2315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(leftSideBearing)<sp/><sp/>*leftSideBearing<sp/>=<sp/>ttSHORT(info-&gt;<ref refid="structstbtt__fontinfo_1af348db379cf0e0e71a68603d00501d41" kindref="member">data</ref><sp/>+<sp/>info-&gt;<ref refid="structstbtt__fontinfo_1aebf42701e99b88d07a59bf99cb84b9a1" kindref="member">hmtx</ref><sp/>+<sp/>4*glyph_index<sp/>+<sp/>2);</highlight></codeline>
<codeline lineno="2316"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(advanceWidth)<sp/><sp/><sp/><sp/><sp/>*advanceWidth<sp/><sp/><sp/><sp/>=<sp/>ttSHORT(info-&gt;<ref refid="structstbtt__fontinfo_1af348db379cf0e0e71a68603d00501d41" kindref="member">data</ref><sp/>+<sp/>info-&gt;<ref refid="structstbtt__fontinfo_1aebf42701e99b88d07a59bf99cb84b9a1" kindref="member">hmtx</ref><sp/>+<sp/>4*(numOfLongHorMetrics-1));</highlight></codeline>
<codeline lineno="2318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(leftSideBearing)<sp/><sp/>*leftSideBearing<sp/>=<sp/>ttSHORT(info-&gt;<ref refid="structstbtt__fontinfo_1af348db379cf0e0e71a68603d00501d41" kindref="member">data</ref><sp/>+<sp/>info-&gt;<ref refid="structstbtt__fontinfo_1aebf42701e99b88d07a59bf99cb84b9a1" kindref="member">hmtx</ref><sp/>+<sp/>4*numOfLongHorMetrics<sp/>+<sp/>2*(glyph_index<sp/>-<sp/>numOfLongHorMetrics));</highlight></codeline>
<codeline lineno="2319"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2320"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2321"><highlight class="normal"></highlight></codeline>
<codeline lineno="2322"><highlight class="normal"><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><ref refid="imstb__truetype_8h_1ab638ddcf9ae1b15ea18b2de58443136e" kindref="member">stbtt_GetKerningTableLength</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref><sp/>*info)</highlight></codeline>
<codeline lineno="2323"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2324"><highlight class="normal"><sp/><sp/><sp/>stbtt_uint8<sp/>*data<sp/>=<sp/>info-&gt;<ref refid="structstbtt__fontinfo_1af348db379cf0e0e71a68603d00501d41" kindref="member">data</ref><sp/>+<sp/>info-&gt;<ref refid="structstbtt__fontinfo_1a57cc83512daea60e97ed49354d634d37" kindref="member">kern</ref>;</highlight></codeline>
<codeline lineno="2325"><highlight class="normal"></highlight></codeline>
<codeline lineno="2326"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>only<sp/>look<sp/>at<sp/>the<sp/>first<sp/>table.<sp/>it<sp/>must<sp/>be<sp/>&apos;horizontal&apos;<sp/>and<sp/>format<sp/>0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2327"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!info-&gt;<ref refid="structstbtt__fontinfo_1a57cc83512daea60e97ed49354d634d37" kindref="member">kern</ref>)</highlight></codeline>
<codeline lineno="2328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2329"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ttUSHORT(data+2)<sp/>&lt;<sp/>1)<sp/></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>tables,<sp/>need<sp/>at<sp/>least<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2331"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ttUSHORT(data+8)<sp/>!=<sp/>1)<sp/></highlight><highlight class="comment">//<sp/>horizontal<sp/>flag<sp/>must<sp/>be<sp/>set<sp/>in<sp/>format</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2333"><highlight class="normal"></highlight></codeline>
<codeline lineno="2334"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ttUSHORT(data+10);</highlight></codeline>
<codeline lineno="2335"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2336"><highlight class="normal"></highlight></codeline>
<codeline lineno="2337"><highlight class="normal"><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="imstb__truetype_8h_1a190bffe156cdb32ac891e835248c90e3" kindref="member">stbtt_GetKerningTable</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref><sp/>*info,<sp/><ref refid="structstbtt__kerningentry" kindref="compound">stbtt_kerningentry</ref>*<sp/>table,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>table_length)</highlight></codeline>
<codeline lineno="2338"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2339"><highlight class="normal"><sp/><sp/><sp/>stbtt_uint8<sp/>*data<sp/>=<sp/>info-&gt;<ref refid="structstbtt__fontinfo_1af348db379cf0e0e71a68603d00501d41" kindref="member">data</ref><sp/>+<sp/>info-&gt;<ref refid="structstbtt__fontinfo_1a57cc83512daea60e97ed49354d634d37" kindref="member">kern</ref>;</highlight></codeline>
<codeline lineno="2340"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k,<sp/>length;</highlight></codeline>
<codeline lineno="2341"><highlight class="normal"></highlight></codeline>
<codeline lineno="2342"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>only<sp/>look<sp/>at<sp/>the<sp/>first<sp/>table.<sp/>it<sp/>must<sp/>be<sp/>&apos;horizontal&apos;<sp/>and<sp/>format<sp/>0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2343"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!info-&gt;<ref refid="structstbtt__fontinfo_1a57cc83512daea60e97ed49354d634d37" kindref="member">kern</ref>)</highlight></codeline>
<codeline lineno="2344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2345"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ttUSHORT(data+2)<sp/>&lt;<sp/>1)<sp/></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>tables,<sp/>need<sp/>at<sp/>least<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2347"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ttUSHORT(data+8)<sp/>!=<sp/>1)<sp/></highlight><highlight class="comment">//<sp/>horizontal<sp/>flag<sp/>must<sp/>be<sp/>set<sp/>in<sp/>format</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2349"><highlight class="normal"></highlight></codeline>
<codeline lineno="2350"><highlight class="normal"><sp/><sp/><sp/>length<sp/>=<sp/>ttUSHORT(data+10);</highlight></codeline>
<codeline lineno="2351"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(table_length<sp/>&lt;<sp/>length)</highlight></codeline>
<codeline lineno="2352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>length<sp/>=<sp/>table_length;</highlight></codeline>
<codeline lineno="2353"><highlight class="normal"></highlight></codeline>
<codeline lineno="2354"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>length;<sp/>k++)</highlight></codeline>
<codeline lineno="2355"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>table[k].<ref refid="structstbtt__kerningentry_1a395848ac004ad9193c532ebc08b07f91" kindref="member">glyph1</ref><sp/>=<sp/>ttUSHORT(data+18+(k*6));</highlight></codeline>
<codeline lineno="2357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>table[k].<ref refid="structstbtt__kerningentry_1a9d5a83a93bb6a40bed5c166c5f295c61" kindref="member">glyph2</ref><sp/>=<sp/>ttUSHORT(data+20+(k*6));</highlight></codeline>
<codeline lineno="2358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>table[k].<ref refid="structstbtt__kerningentry_1a1924543c84b2abbdbac1a951f441d8aa" kindref="member">advance</ref><sp/>=<sp/>ttSHORT(data+22+(k*6));</highlight></codeline>
<codeline lineno="2359"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2360"><highlight class="normal"></highlight></codeline>
<codeline lineno="2361"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>length;</highlight></codeline>
<codeline lineno="2362"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2363"><highlight class="normal"></highlight></codeline>
<codeline lineno="2364"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbtt__GetGlyphKernInfoAdvance(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref><sp/>*info,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>glyph1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>glyph2)</highlight></codeline>
<codeline lineno="2365"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2366"><highlight class="normal"><sp/><sp/><sp/>stbtt_uint8<sp/>*data<sp/>=<sp/>info-&gt;<ref refid="structstbtt__fontinfo_1af348db379cf0e0e71a68603d00501d41" kindref="member">data</ref><sp/>+<sp/>info-&gt;<ref refid="structstbtt__fontinfo_1a57cc83512daea60e97ed49354d634d37" kindref="member">kern</ref>;</highlight></codeline>
<codeline lineno="2367"><highlight class="normal"><sp/><sp/><sp/>stbtt_uint32<sp/>needle,<sp/>straw;</highlight></codeline>
<codeline lineno="2368"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>l,<sp/>r,<sp/>m;</highlight></codeline>
<codeline lineno="2369"><highlight class="normal"></highlight></codeline>
<codeline lineno="2370"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>only<sp/>look<sp/>at<sp/>the<sp/>first<sp/>table.<sp/>it<sp/>must<sp/>be<sp/>&apos;horizontal&apos;<sp/>and<sp/>format<sp/>0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2371"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!info-&gt;<ref refid="structstbtt__fontinfo_1a57cc83512daea60e97ed49354d634d37" kindref="member">kern</ref>)</highlight></codeline>
<codeline lineno="2372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2373"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ttUSHORT(data+2)<sp/>&lt;<sp/>1)<sp/></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>tables,<sp/>need<sp/>at<sp/>least<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2375"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ttUSHORT(data+8)<sp/>!=<sp/>1)<sp/></highlight><highlight class="comment">//<sp/>horizontal<sp/>flag<sp/>must<sp/>be<sp/>set<sp/>in<sp/>format</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2377"><highlight class="normal"></highlight></codeline>
<codeline lineno="2378"><highlight class="normal"><sp/><sp/><sp/>l<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2379"><highlight class="normal"><sp/><sp/><sp/>r<sp/>=<sp/>ttUSHORT(data+10)<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="2380"><highlight class="normal"><sp/><sp/><sp/>needle<sp/>=<sp/>glyph1<sp/>&lt;&lt;<sp/>16<sp/>|<sp/>glyph2;</highlight></codeline>
<codeline lineno="2381"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(l<sp/>&lt;=<sp/>r)<sp/>{</highlight></codeline>
<codeline lineno="2382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m<sp/>=<sp/>(l<sp/>+<sp/>r)<sp/>&gt;&gt;<sp/>1;</highlight></codeline>
<codeline lineno="2383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>straw<sp/>=<sp/>ttULONG(data+18+(m*6));<sp/></highlight><highlight class="comment">//<sp/>note:<sp/>unaligned<sp/>read</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(needle<sp/>&lt;<sp/>straw)</highlight></codeline>
<codeline lineno="2385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>m<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="2386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(needle<sp/>&gt;<sp/>straw)</highlight></codeline>
<codeline lineno="2387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>l<sp/>=<sp/>m<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="2388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ttSHORT(data+22+(m*6));</highlight></codeline>
<codeline lineno="2390"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2391"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2392"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2393"><highlight class="normal"></highlight></codeline>
<codeline lineno="2394"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>stbtt_int32<sp/>stbtt__GetCoverageIndex(stbtt_uint8<sp/>*coverageTable,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>glyph)</highlight></codeline>
<codeline lineno="2395"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2396"><highlight class="normal"><sp/><sp/><sp/>stbtt_uint16<sp/>coverageFormat<sp/>=<sp/>ttUSHORT(coverageTable);</highlight></codeline>
<codeline lineno="2397"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(coverageFormat)<sp/>{</highlight></codeline>
<codeline lineno="2398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/>{</highlight></codeline>
<codeline lineno="2399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt_uint16<sp/>glyphCount<sp/>=<sp/>ttUSHORT(coverageTable<sp/>+<sp/>2);</highlight></codeline>
<codeline lineno="2400"><highlight class="normal"></highlight></codeline>
<codeline lineno="2401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Binary<sp/>search.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt_int32<sp/>l=0,<sp/>r=glyphCount-1,<sp/>m;</highlight></codeline>
<codeline lineno="2403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>straw,<sp/>needle=glyph;</highlight></codeline>
<codeline lineno="2404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(l<sp/>&lt;=<sp/>r)<sp/>{</highlight></codeline>
<codeline lineno="2405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt_uint8<sp/>*glyphArray<sp/>=<sp/>coverageTable<sp/>+<sp/>4;</highlight></codeline>
<codeline lineno="2406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt_uint16<sp/>glyphID;</highlight></codeline>
<codeline lineno="2407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m<sp/>=<sp/>(l<sp/>+<sp/>r)<sp/>&gt;&gt;<sp/>1;</highlight></codeline>
<codeline lineno="2408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glyphID<sp/>=<sp/>ttUSHORT(glyphArray<sp/>+<sp/>2<sp/>*<sp/>m);</highlight></codeline>
<codeline lineno="2409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>straw<sp/>=<sp/>glyphID;</highlight></codeline>
<codeline lineno="2410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(needle<sp/>&lt;<sp/>straw)</highlight></codeline>
<codeline lineno="2411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>m<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="2412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(needle<sp/>&gt;<sp/>straw)</highlight></codeline>
<codeline lineno="2413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>l<sp/>=<sp/>m<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="2414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m;</highlight></codeline>
<codeline lineno="2416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2420"><highlight class="normal"></highlight></codeline>
<codeline lineno="2421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:<sp/>{</highlight></codeline>
<codeline lineno="2422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt_uint16<sp/>rangeCount<sp/>=<sp/>ttUSHORT(coverageTable<sp/>+<sp/>2);</highlight></codeline>
<codeline lineno="2423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt_uint8<sp/>*rangeArray<sp/>=<sp/>coverageTable<sp/>+<sp/>4;</highlight></codeline>
<codeline lineno="2424"><highlight class="normal"></highlight></codeline>
<codeline lineno="2425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Binary<sp/>search.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt_int32<sp/>l=0,<sp/>r=rangeCount-1,<sp/>m;</highlight></codeline>
<codeline lineno="2427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>strawStart,<sp/>strawEnd,<sp/>needle=glyph;</highlight></codeline>
<codeline lineno="2428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(l<sp/>&lt;=<sp/>r)<sp/>{</highlight></codeline>
<codeline lineno="2429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt_uint8<sp/>*rangeRecord;</highlight></codeline>
<codeline lineno="2430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m<sp/>=<sp/>(l<sp/>+<sp/>r)<sp/>&gt;&gt;<sp/>1;</highlight></codeline>
<codeline lineno="2431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rangeRecord<sp/>=<sp/>rangeArray<sp/>+<sp/>6<sp/>*<sp/>m;</highlight></codeline>
<codeline lineno="2432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strawStart<sp/>=<sp/>ttUSHORT(rangeRecord);</highlight></codeline>
<codeline lineno="2433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strawEnd<sp/>=<sp/>ttUSHORT(rangeRecord<sp/>+<sp/>2);</highlight></codeline>
<codeline lineno="2434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(needle<sp/>&lt;<sp/>strawStart)</highlight></codeline>
<codeline lineno="2435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>m<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="2436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(needle<sp/>&gt;<sp/>strawEnd)</highlight></codeline>
<codeline lineno="2437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>l<sp/>=<sp/>m<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="2438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt_uint16<sp/>startCoverageIndex<sp/>=<sp/>ttUSHORT(rangeRecord<sp/>+<sp/>4);</highlight></codeline>
<codeline lineno="2440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>startCoverageIndex<sp/>+<sp/>glyph<sp/>-<sp/>strawStart;</highlight></codeline>
<codeline lineno="2441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2445"><highlight class="normal"></highlight></codeline>
<codeline lineno="2446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;<sp/></highlight><highlight class="comment">//<sp/>unsupported</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2447"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2448"><highlight class="normal"></highlight></codeline>
<codeline lineno="2449"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="2450"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2451"><highlight class="normal"></highlight></codeline>
<codeline lineno="2452"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>stbtt_int32<sp/><sp/>stbtt__GetGlyphClass(stbtt_uint8<sp/>*classDefTable,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>glyph)</highlight></codeline>
<codeline lineno="2453"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2454"><highlight class="normal"><sp/><sp/><sp/>stbtt_uint16<sp/>classDefFormat<sp/>=<sp/>ttUSHORT(classDefTable);</highlight></codeline>
<codeline lineno="2455"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(classDefFormat)</highlight></codeline>
<codeline lineno="2456"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/>{</highlight></codeline>
<codeline lineno="2458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt_uint16<sp/>startGlyphID<sp/>=<sp/>ttUSHORT(classDefTable<sp/>+<sp/>2);</highlight></codeline>
<codeline lineno="2459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt_uint16<sp/>glyphCount<sp/>=<sp/>ttUSHORT(classDefTable<sp/>+<sp/>4);</highlight></codeline>
<codeline lineno="2460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt_uint8<sp/>*classDef1ValueArray<sp/>=<sp/>classDefTable<sp/>+<sp/>6;</highlight></codeline>
<codeline lineno="2461"><highlight class="normal"></highlight></codeline>
<codeline lineno="2462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(glyph<sp/>&gt;=<sp/>startGlyphID<sp/>&amp;&amp;<sp/>glyph<sp/>&lt;<sp/>startGlyphID<sp/>+<sp/>glyphCount)</highlight></codeline>
<codeline lineno="2463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(stbtt_int32)ttUSHORT(classDef1ValueArray<sp/>+<sp/>2<sp/>*<sp/>(glyph<sp/>-<sp/>startGlyphID));</highlight></codeline>
<codeline lineno="2464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2466"><highlight class="normal"></highlight></codeline>
<codeline lineno="2467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:<sp/>{</highlight></codeline>
<codeline lineno="2468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt_uint16<sp/>classRangeCount<sp/>=<sp/>ttUSHORT(classDefTable<sp/>+<sp/>2);</highlight></codeline>
<codeline lineno="2469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt_uint8<sp/>*classRangeRecords<sp/>=<sp/>classDefTable<sp/>+<sp/>4;</highlight></codeline>
<codeline lineno="2470"><highlight class="normal"></highlight></codeline>
<codeline lineno="2471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Binary<sp/>search.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt_int32<sp/>l=0,<sp/>r=classRangeCount-1,<sp/>m;</highlight></codeline>
<codeline lineno="2473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>strawStart,<sp/>strawEnd,<sp/>needle=glyph;</highlight></codeline>
<codeline lineno="2474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(l<sp/>&lt;=<sp/>r)<sp/>{</highlight></codeline>
<codeline lineno="2475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt_uint8<sp/>*classRangeRecord;</highlight></codeline>
<codeline lineno="2476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m<sp/>=<sp/>(l<sp/>+<sp/>r)<sp/>&gt;&gt;<sp/>1;</highlight></codeline>
<codeline lineno="2477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>classRangeRecord<sp/>=<sp/>classRangeRecords<sp/>+<sp/>6<sp/>*<sp/>m;</highlight></codeline>
<codeline lineno="2478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strawStart<sp/>=<sp/>ttUSHORT(classRangeRecord);</highlight></codeline>
<codeline lineno="2479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strawEnd<sp/>=<sp/>ttUSHORT(classRangeRecord<sp/>+<sp/>2);</highlight></codeline>
<codeline lineno="2480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(needle<sp/>&lt;<sp/>strawStart)</highlight></codeline>
<codeline lineno="2481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>m<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="2482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(needle<sp/>&gt;<sp/>strawEnd)</highlight></codeline>
<codeline lineno="2483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>l<sp/>=<sp/>m<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="2484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(stbtt_int32)ttUSHORT(classRangeRecord<sp/>+<sp/>4);</highlight></codeline>
<codeline lineno="2486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2489"><highlight class="normal"></highlight></codeline>
<codeline lineno="2490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;<sp/></highlight><highlight class="comment">//<sp/>Unsupported<sp/>definition<sp/>type,<sp/>return<sp/>an<sp/>error.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2492"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2493"><highlight class="normal"></highlight></codeline>
<codeline lineno="2494"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&quot;All<sp/>glyphs<sp/>not<sp/>assigned<sp/>to<sp/>a<sp/>class<sp/>fall<sp/>into<sp/>class<sp/>0&quot;.<sp/>(OpenType<sp/>spec)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2495"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2496"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2497"><highlight class="normal"></highlight></codeline>
<codeline lineno="2498"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Define<sp/>to<sp/>STBTT_assert(x)<sp/>if<sp/>you<sp/>want<sp/>to<sp/>break<sp/>on<sp/>unimplemented<sp/>formats.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2499"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBTT_GPOS_TODO_assert(x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2500"><highlight class="normal"></highlight></codeline>
<codeline lineno="2501"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>stbtt_int32<sp/>stbtt__GetGlyphGPOSInfoAdvance(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref><sp/>*info,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>glyph1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>glyph2)</highlight></codeline>
<codeline lineno="2502"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2503"><highlight class="normal"><sp/><sp/><sp/>stbtt_uint16<sp/>lookupListOffset;</highlight></codeline>
<codeline lineno="2504"><highlight class="normal"><sp/><sp/><sp/>stbtt_uint8<sp/>*lookupList;</highlight></codeline>
<codeline lineno="2505"><highlight class="normal"><sp/><sp/><sp/>stbtt_uint16<sp/>lookupCount;</highlight></codeline>
<codeline lineno="2506"><highlight class="normal"><sp/><sp/><sp/>stbtt_uint8<sp/>*data;</highlight></codeline>
<codeline lineno="2507"><highlight class="normal"><sp/><sp/><sp/>stbtt_int32<sp/>i,<sp/>sti;</highlight></codeline>
<codeline lineno="2508"><highlight class="normal"></highlight></codeline>
<codeline lineno="2509"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!info-&gt;<ref refid="structstbtt__fontinfo_1aeb6732549a55fa30235d0c0ecd743022" kindref="member">gpos</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2510"><highlight class="normal"></highlight></codeline>
<codeline lineno="2511"><highlight class="normal"><sp/><sp/><sp/>data<sp/>=<sp/>info-&gt;<ref refid="structstbtt__fontinfo_1af348db379cf0e0e71a68603d00501d41" kindref="member">data</ref><sp/>+<sp/>info-&gt;<ref refid="structstbtt__fontinfo_1aeb6732549a55fa30235d0c0ecd743022" kindref="member">gpos</ref>;</highlight></codeline>
<codeline lineno="2512"><highlight class="normal"></highlight></codeline>
<codeline lineno="2513"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ttUSHORT(data+0)<sp/>!=<sp/>1)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/></highlight><highlight class="comment">//<sp/>Major<sp/>version<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2514"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ttUSHORT(data+2)<sp/>!=<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/></highlight><highlight class="comment">//<sp/>Minor<sp/>version<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2515"><highlight class="normal"></highlight></codeline>
<codeline lineno="2516"><highlight class="normal"><sp/><sp/><sp/>lookupListOffset<sp/>=<sp/>ttUSHORT(data+8);</highlight></codeline>
<codeline lineno="2517"><highlight class="normal"><sp/><sp/><sp/>lookupList<sp/>=<sp/>data<sp/>+<sp/>lookupListOffset;</highlight></codeline>
<codeline lineno="2518"><highlight class="normal"><sp/><sp/><sp/>lookupCount<sp/>=<sp/>ttUSHORT(lookupList);</highlight></codeline>
<codeline lineno="2519"><highlight class="normal"></highlight></codeline>
<codeline lineno="2520"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;lookupCount;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="2521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbtt_uint16<sp/>lookupOffset<sp/>=<sp/>ttUSHORT(lookupList<sp/>+<sp/>2<sp/>+<sp/>2<sp/>*<sp/>i);</highlight></codeline>
<codeline lineno="2522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbtt_uint8<sp/>*lookupTable<sp/>=<sp/>lookupList<sp/>+<sp/>lookupOffset;</highlight></codeline>
<codeline lineno="2523"><highlight class="normal"></highlight></codeline>
<codeline lineno="2524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbtt_uint16<sp/>lookupType<sp/>=<sp/>ttUSHORT(lookupTable);</highlight></codeline>
<codeline lineno="2525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbtt_uint16<sp/>subTableCount<sp/>=<sp/>ttUSHORT(lookupTable<sp/>+<sp/>4);</highlight></codeline>
<codeline lineno="2526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbtt_uint8<sp/>*subTableOffsets<sp/>=<sp/>lookupTable<sp/>+<sp/>6;</highlight></codeline>
<codeline lineno="2527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lookupType<sp/>!=<sp/>2)<sp/></highlight><highlight class="comment">//<sp/>Pair<sp/>Adjustment<sp/>Positioning<sp/>Subtable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2529"><highlight class="normal"></highlight></codeline>
<codeline lineno="2530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(sti=0;<sp/>sti&lt;subTableCount;<sp/>sti++)<sp/>{</highlight></codeline>
<codeline lineno="2531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt_uint16<sp/>subtableOffset<sp/>=<sp/>ttUSHORT(subTableOffsets<sp/>+<sp/>2<sp/>*<sp/>sti);</highlight></codeline>
<codeline lineno="2532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt_uint8<sp/>*table<sp/>=<sp/>lookupTable<sp/>+<sp/>subtableOffset;</highlight></codeline>
<codeline lineno="2533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt_uint16<sp/>posFormat<sp/>=<sp/>ttUSHORT(table);</highlight></codeline>
<codeline lineno="2534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt_uint16<sp/>coverageOffset<sp/>=<sp/>ttUSHORT(table<sp/>+<sp/>2);</highlight></codeline>
<codeline lineno="2535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt_int32<sp/>coverageIndex<sp/>=<sp/>stbtt__GetCoverageIndex(table<sp/>+<sp/>coverageOffset,<sp/>glyph1);</highlight></codeline>
<codeline lineno="2536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(coverageIndex<sp/>==<sp/>-1)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2537"><highlight class="normal"></highlight></codeline>
<codeline lineno="2538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(posFormat)<sp/>{</highlight></codeline>
<codeline lineno="2539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/>{</highlight></codeline>
<codeline lineno="2540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt_int32<sp/>l,<sp/>r,<sp/>m;</highlight></codeline>
<codeline lineno="2541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>straw,<sp/>needle;</highlight></codeline>
<codeline lineno="2542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt_uint16<sp/>valueFormat1<sp/>=<sp/>ttUSHORT(table<sp/>+<sp/>4);</highlight></codeline>
<codeline lineno="2543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt_uint16<sp/>valueFormat2<sp/>=<sp/>ttUSHORT(table<sp/>+<sp/>6);</highlight></codeline>
<codeline lineno="2544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(valueFormat1<sp/>==<sp/>4<sp/>&amp;&amp;<sp/>valueFormat2<sp/>==<sp/>0)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>Support<sp/>more<sp/>formats?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt_int32<sp/>valueRecordPairSizeInBytes<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="2546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt_uint16<sp/>pairSetCount<sp/>=<sp/>ttUSHORT(table<sp/>+<sp/>8);</highlight></codeline>
<codeline lineno="2547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt_uint16<sp/>pairPosOffset<sp/>=<sp/>ttUSHORT(table<sp/>+<sp/>10<sp/>+<sp/>2<sp/>*<sp/>coverageIndex);</highlight></codeline>
<codeline lineno="2548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt_uint8<sp/>*pairValueTable<sp/>=<sp/>table<sp/>+<sp/>pairPosOffset;</highlight></codeline>
<codeline lineno="2549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt_uint16<sp/>pairValueCount<sp/>=<sp/>ttUSHORT(pairValueTable);</highlight></codeline>
<codeline lineno="2550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt_uint8<sp/>*pairValueArray<sp/>=<sp/>pairValueTable<sp/>+<sp/>2;</highlight></codeline>
<codeline lineno="2551"><highlight class="normal"></highlight></codeline>
<codeline lineno="2552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(coverageIndex<sp/>&gt;=<sp/>pairSetCount)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2553"><highlight class="normal"></highlight></codeline>
<codeline lineno="2554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>needle=glyph2;</highlight></codeline>
<codeline lineno="2555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r=pairValueCount-1;</highlight></codeline>
<codeline lineno="2556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>l=0;</highlight></codeline>
<codeline lineno="2557"><highlight class="normal"></highlight></codeline>
<codeline lineno="2558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Binary<sp/>search.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(l<sp/>&lt;=<sp/>r)<sp/>{</highlight></codeline>
<codeline lineno="2560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt_uint16<sp/>secondGlyph;</highlight></codeline>
<codeline lineno="2561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt_uint8<sp/>*pairValue;</highlight></codeline>
<codeline lineno="2562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m<sp/>=<sp/>(l<sp/>+<sp/>r)<sp/>&gt;&gt;<sp/>1;</highlight></codeline>
<codeline lineno="2563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pairValue<sp/>=<sp/>pairValueArray<sp/>+<sp/>(2<sp/>+<sp/>valueRecordPairSizeInBytes)<sp/>*<sp/>m;</highlight></codeline>
<codeline lineno="2564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>secondGlyph<sp/>=<sp/>ttUSHORT(pairValue);</highlight></codeline>
<codeline lineno="2565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>straw<sp/>=<sp/>secondGlyph;</highlight></codeline>
<codeline lineno="2566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(needle<sp/>&lt;<sp/>straw)</highlight></codeline>
<codeline lineno="2567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>m<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="2568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(needle<sp/>&gt;<sp/>straw)</highlight></codeline>
<codeline lineno="2569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>l<sp/>=<sp/>m<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="2570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt_int16<sp/>xAdvance<sp/>=<sp/>ttSHORT(pairValue<sp/>+<sp/>2);</highlight></codeline>
<codeline lineno="2572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>xAdvance;</highlight></codeline>
<codeline lineno="2573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2579"><highlight class="normal"></highlight></codeline>
<codeline lineno="2580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:<sp/>{</highlight></codeline>
<codeline lineno="2581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt_uint16<sp/>valueFormat1<sp/>=<sp/>ttUSHORT(table<sp/>+<sp/>4);</highlight></codeline>
<codeline lineno="2582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt_uint16<sp/>valueFormat2<sp/>=<sp/>ttUSHORT(table<sp/>+<sp/>6);</highlight></codeline>
<codeline lineno="2583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(valueFormat1<sp/>==<sp/>4<sp/>&amp;&amp;<sp/>valueFormat2<sp/>==<sp/>0)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>Support<sp/>more<sp/>formats?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt_uint16<sp/>classDef1Offset<sp/>=<sp/>ttUSHORT(table<sp/>+<sp/>8);</highlight></codeline>
<codeline lineno="2585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt_uint16<sp/>classDef2Offset<sp/>=<sp/>ttUSHORT(table<sp/>+<sp/>10);</highlight></codeline>
<codeline lineno="2586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>glyph1class<sp/>=<sp/>stbtt__GetGlyphClass(table<sp/>+<sp/>classDef1Offset,<sp/>glyph1);</highlight></codeline>
<codeline lineno="2587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>glyph2class<sp/>=<sp/>stbtt__GetGlyphClass(table<sp/>+<sp/>classDef2Offset,<sp/>glyph2);</highlight></codeline>
<codeline lineno="2588"><highlight class="normal"></highlight></codeline>
<codeline lineno="2589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt_uint16<sp/>class1Count<sp/>=<sp/>ttUSHORT(table<sp/>+<sp/>12);</highlight></codeline>
<codeline lineno="2590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt_uint16<sp/>class2Count<sp/>=<sp/>ttUSHORT(table<sp/>+<sp/>14);</highlight></codeline>
<codeline lineno="2591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt_uint8<sp/>*class1Records,<sp/>*class2Records;</highlight></codeline>
<codeline lineno="2592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt_int16<sp/>xAdvance;</highlight></codeline>
<codeline lineno="2593"><highlight class="normal"></highlight></codeline>
<codeline lineno="2594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(glyph1class<sp/>&lt;<sp/>0<sp/>||<sp/>glyph1class<sp/>&gt;=<sp/>class1Count)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/></highlight><highlight class="comment">//<sp/>malformed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(glyph2class<sp/>&lt;<sp/>0<sp/>||<sp/>glyph2class<sp/>&gt;=<sp/>class2Count)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/></highlight><highlight class="comment">//<sp/>malformed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2596"><highlight class="normal"></highlight></codeline>
<codeline lineno="2597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class1Records<sp/>=<sp/>table<sp/>+<sp/>16;</highlight></codeline>
<codeline lineno="2598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class2Records<sp/>=<sp/>class1Records<sp/>+<sp/>2<sp/>*<sp/>(glyph1class<sp/>*<sp/>class2Count);</highlight></codeline>
<codeline lineno="2599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xAdvance<sp/>=<sp/>ttSHORT(class2Records<sp/>+<sp/>2<sp/>*<sp/>glyph2class);</highlight></codeline>
<codeline lineno="2600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>xAdvance;</highlight></codeline>
<codeline lineno="2601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2605"><highlight class="normal"></highlight></codeline>
<codeline lineno="2606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/></highlight><highlight class="comment">//<sp/>Unsupported<sp/>position<sp/>format</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2610"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2611"><highlight class="normal"></highlight></codeline>
<codeline lineno="2612"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2613"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2614"><highlight class="normal"></highlight></codeline>
<codeline lineno="2615"><highlight class="normal"><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><ref refid="imstb__truetype_8h_1acf0b09547b1c2002ad0266802224552d" kindref="member">stbtt_GetGlyphKernAdvance</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref><sp/>*info,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>g1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>g2)</highlight></codeline>
<codeline lineno="2616"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2617"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xAdvance<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2618"><highlight class="normal"></highlight></codeline>
<codeline lineno="2619"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(info-&gt;<ref refid="structstbtt__fontinfo_1aeb6732549a55fa30235d0c0ecd743022" kindref="member">gpos</ref>)</highlight></codeline>
<codeline lineno="2620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xAdvance<sp/>+=<sp/>stbtt__GetGlyphGPOSInfoAdvance(info,<sp/>g1,<sp/>g2);</highlight></codeline>
<codeline lineno="2621"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(info-&gt;<ref refid="structstbtt__fontinfo_1a57cc83512daea60e97ed49354d634d37" kindref="member">kern</ref>)</highlight></codeline>
<codeline lineno="2622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xAdvance<sp/>+=<sp/>stbtt__GetGlyphKernInfoAdvance(info,<sp/>g1,<sp/>g2);</highlight></codeline>
<codeline lineno="2623"><highlight class="normal"></highlight></codeline>
<codeline lineno="2624"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>xAdvance;</highlight></codeline>
<codeline lineno="2625"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2626"><highlight class="normal"></highlight></codeline>
<codeline lineno="2627"><highlight class="normal"><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><ref refid="imstb__truetype_8h_1a83703ede616bacefc0312ef2803774a1" kindref="member">stbtt_GetCodepointKernAdvance</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref><sp/>*info,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ch1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ch2)</highlight></codeline>
<codeline lineno="2628"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2629"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!info-&gt;<ref refid="structstbtt__fontinfo_1a57cc83512daea60e97ed49354d634d37" kindref="member">kern</ref><sp/>&amp;&amp;<sp/>!info-&gt;<ref refid="structstbtt__fontinfo_1aeb6732549a55fa30235d0c0ecd743022" kindref="member">gpos</ref>)<sp/></highlight><highlight class="comment">//<sp/>if<sp/>no<sp/>kerning<sp/>table,<sp/>don&apos;t<sp/>waste<sp/>time<sp/>looking<sp/>up<sp/>both<sp/>codepoint-&gt;glyphs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2631"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imstb__truetype_8h_1acf0b09547b1c2002ad0266802224552d" kindref="member">stbtt_GetGlyphKernAdvance</ref>(info,<sp/><ref refid="imstb__truetype_8h_1a213d5628c6b2e5c107b99378eefc6e3a" kindref="member">stbtt_FindGlyphIndex</ref>(info,ch1),<sp/><ref refid="imstb__truetype_8h_1a213d5628c6b2e5c107b99378eefc6e3a" kindref="member">stbtt_FindGlyphIndex</ref>(info,ch2));</highlight></codeline>
<codeline lineno="2632"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2633"><highlight class="normal"></highlight></codeline>
<codeline lineno="2634"><highlight class="normal"><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="imstb__truetype_8h_1a015fbd6e96df8ee58bd41bb4211b64e7" kindref="member">stbtt_GetCodepointHMetrics</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref><sp/>*info,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>codepoint,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*advanceWidth,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*leftSideBearing)</highlight></codeline>
<codeline lineno="2635"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2636"><highlight class="normal"><sp/><sp/><sp/><ref refid="imstb__truetype_8h_1ab593f3066f2a8a7e33e7b7011d1b1f9a" kindref="member">stbtt_GetGlyphHMetrics</ref>(info,<sp/><ref refid="imstb__truetype_8h_1a213d5628c6b2e5c107b99378eefc6e3a" kindref="member">stbtt_FindGlyphIndex</ref>(info,codepoint),<sp/>advanceWidth,<sp/>leftSideBearing);</highlight></codeline>
<codeline lineno="2637"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2638"><highlight class="normal"></highlight></codeline>
<codeline lineno="2639"><highlight class="normal"><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="imstb__truetype_8h_1a2784e0e55678a5980e950b1c9fbc75f0" kindref="member">stbtt_GetFontVMetrics</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref><sp/>*info,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*ascent,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*descent,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*lineGap)</highlight></codeline>
<codeline lineno="2640"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2641"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ascent<sp/>)<sp/>*ascent<sp/><sp/>=<sp/>ttSHORT(info-&gt;<ref refid="structstbtt__fontinfo_1af348db379cf0e0e71a68603d00501d41" kindref="member">data</ref>+info-&gt;<ref refid="structstbtt__fontinfo_1a91b82ae03d68892eb7f3fbd3a8b990e5" kindref="member">hhea</ref><sp/>+<sp/>4);</highlight></codeline>
<codeline lineno="2642"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(descent)<sp/>*descent<sp/>=<sp/>ttSHORT(info-&gt;<ref refid="structstbtt__fontinfo_1af348db379cf0e0e71a68603d00501d41" kindref="member">data</ref>+info-&gt;<ref refid="structstbtt__fontinfo_1a91b82ae03d68892eb7f3fbd3a8b990e5" kindref="member">hhea</ref><sp/>+<sp/>6);</highlight></codeline>
<codeline lineno="2643"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lineGap)<sp/>*lineGap<sp/>=<sp/>ttSHORT(info-&gt;<ref refid="structstbtt__fontinfo_1af348db379cf0e0e71a68603d00501d41" kindref="member">data</ref>+info-&gt;<ref refid="structstbtt__fontinfo_1a91b82ae03d68892eb7f3fbd3a8b990e5" kindref="member">hhea</ref><sp/>+<sp/>8);</highlight></codeline>
<codeline lineno="2644"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2645"><highlight class="normal"></highlight></codeline>
<codeline lineno="2646"><highlight class="normal"><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><ref refid="imstb__truetype_8h_1a12154e222685026a3cf315a1b5720f24" kindref="member">stbtt_GetFontVMetricsOS2</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref><sp/>*info,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*typoAscent,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*typoDescent,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*typoLineGap)</highlight></codeline>
<codeline lineno="2647"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2648"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tab<sp/>=<sp/>stbtt__find_table(info-&gt;<ref refid="structstbtt__fontinfo_1af348db379cf0e0e71a68603d00501d41" kindref="member">data</ref>,<sp/>info-&gt;<ref refid="structstbtt__fontinfo_1a139234d825b585afa27748a1f3d10c7d" kindref="member">fontstart</ref>,<sp/></highlight><highlight class="stringliteral">&quot;OS/2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2649"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!tab)</highlight></codeline>
<codeline lineno="2650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2651"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(typoAscent<sp/>)<sp/>*typoAscent<sp/><sp/>=<sp/>ttSHORT(info-&gt;<ref refid="structstbtt__fontinfo_1af348db379cf0e0e71a68603d00501d41" kindref="member">data</ref>+tab<sp/>+<sp/>68);</highlight></codeline>
<codeline lineno="2652"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(typoDescent)<sp/>*typoDescent<sp/>=<sp/>ttSHORT(info-&gt;<ref refid="structstbtt__fontinfo_1af348db379cf0e0e71a68603d00501d41" kindref="member">data</ref>+tab<sp/>+<sp/>70);</highlight></codeline>
<codeline lineno="2653"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(typoLineGap)<sp/>*typoLineGap<sp/>=<sp/>ttSHORT(info-&gt;<ref refid="structstbtt__fontinfo_1af348db379cf0e0e71a68603d00501d41" kindref="member">data</ref>+tab<sp/>+<sp/>72);</highlight></codeline>
<codeline lineno="2654"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="2655"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2656"><highlight class="normal"></highlight></codeline>
<codeline lineno="2657"><highlight class="normal"><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="imstb__truetype_8h_1a4dd4ca3bff4e304b2c8d952f87fbb639" kindref="member">stbtt_GetFontBoundingBox</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref><sp/>*info,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*x0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*y0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*x1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*y1)</highlight></codeline>
<codeline lineno="2658"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2659"><highlight class="normal"><sp/><sp/><sp/>*x0<sp/>=<sp/>ttSHORT(info-&gt;<ref refid="structstbtt__fontinfo_1af348db379cf0e0e71a68603d00501d41" kindref="member">data</ref><sp/>+<sp/>info-&gt;<ref refid="structstbtt__fontinfo_1ab76ed2f4cbd8fcbd8465ca5f88e7e2b9" kindref="member">head</ref><sp/>+<sp/>36);</highlight></codeline>
<codeline lineno="2660"><highlight class="normal"><sp/><sp/><sp/>*y0<sp/>=<sp/>ttSHORT(info-&gt;<ref refid="structstbtt__fontinfo_1af348db379cf0e0e71a68603d00501d41" kindref="member">data</ref><sp/>+<sp/>info-&gt;<ref refid="structstbtt__fontinfo_1ab76ed2f4cbd8fcbd8465ca5f88e7e2b9" kindref="member">head</ref><sp/>+<sp/>38);</highlight></codeline>
<codeline lineno="2661"><highlight class="normal"><sp/><sp/><sp/>*x1<sp/>=<sp/>ttSHORT(info-&gt;<ref refid="structstbtt__fontinfo_1af348db379cf0e0e71a68603d00501d41" kindref="member">data</ref><sp/>+<sp/>info-&gt;<ref refid="structstbtt__fontinfo_1ab76ed2f4cbd8fcbd8465ca5f88e7e2b9" kindref="member">head</ref><sp/>+<sp/>40);</highlight></codeline>
<codeline lineno="2662"><highlight class="normal"><sp/><sp/><sp/>*y1<sp/>=<sp/>ttSHORT(info-&gt;<ref refid="structstbtt__fontinfo_1af348db379cf0e0e71a68603d00501d41" kindref="member">data</ref><sp/>+<sp/>info-&gt;<ref refid="structstbtt__fontinfo_1ab76ed2f4cbd8fcbd8465ca5f88e7e2b9" kindref="member">head</ref><sp/>+<sp/>42);</highlight></codeline>
<codeline lineno="2663"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2664"><highlight class="normal"></highlight></codeline>
<codeline lineno="2665"><highlight class="normal"><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="imstb__truetype_8h_1aad275d7211530a3d817fcd8647690b7b" kindref="member">stbtt_ScaleForPixelHeight</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref><sp/>*info,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>height)</highlight></codeline>
<codeline lineno="2666"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2667"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fheight<sp/>=<sp/>ttSHORT(info-&gt;<ref refid="structstbtt__fontinfo_1af348db379cf0e0e71a68603d00501d41" kindref="member">data</ref><sp/>+<sp/>info-&gt;<ref refid="structstbtt__fontinfo_1a91b82ae03d68892eb7f3fbd3a8b990e5" kindref="member">hhea</ref><sp/>+<sp/>4)<sp/>-<sp/>ttSHORT(info-&gt;<ref refid="structstbtt__fontinfo_1af348db379cf0e0e71a68603d00501d41" kindref="member">data</ref><sp/>+<sp/>info-&gt;<ref refid="structstbtt__fontinfo_1a91b82ae03d68892eb7f3fbd3a8b990e5" kindref="member">hhea</ref><sp/>+<sp/>6);</highlight></codeline>
<codeline lineno="2668"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)<sp/>height<sp/>/<sp/>fheight;</highlight></codeline>
<codeline lineno="2669"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2670"><highlight class="normal"></highlight></codeline>
<codeline lineno="2671"><highlight class="normal"><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="imstb__truetype_8h_1a76da72e13355eae763c567ffde0b4607" kindref="member">stbtt_ScaleForMappingEmToPixels</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref><sp/>*info,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>pixels)</highlight></codeline>
<codeline lineno="2672"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2673"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>unitsPerEm<sp/>=<sp/>ttUSHORT(info-&gt;<ref refid="structstbtt__fontinfo_1af348db379cf0e0e71a68603d00501d41" kindref="member">data</ref><sp/>+<sp/>info-&gt;<ref refid="structstbtt__fontinfo_1ab76ed2f4cbd8fcbd8465ca5f88e7e2b9" kindref="member">head</ref><sp/>+<sp/>18);</highlight></codeline>
<codeline lineno="2674"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pixels<sp/>/<sp/>unitsPerEm;</highlight></codeline>
<codeline lineno="2675"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2676"><highlight class="normal"></highlight></codeline>
<codeline lineno="2677"><highlight class="normal"><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="imstb__truetype_8h_1a8aa85852fbc25667bf0438e29e128c93" kindref="member">stbtt_FreeShape</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref><sp/>*info,<sp/><ref refid="structstbtt__vertex" kindref="compound">stbtt_vertex</ref><sp/>*v)</highlight></codeline>
<codeline lineno="2678"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2679"><highlight class="normal"><sp/><sp/><sp/><ref refid="imgui__draw_8cpp_1a357d3564409e68f1b694e06f7beeca7e" kindref="member">STBTT_free</ref>(v,<sp/>info-&gt;<ref refid="structstbtt__fontinfo_1a9c81078df96a7a3f730137151efab285" kindref="member">userdata</ref>);</highlight></codeline>
<codeline lineno="2680"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2681"><highlight class="normal"></highlight></codeline>
<codeline lineno="2682"><highlight class="normal"><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref><sp/>stbtt_uint8<sp/>*<ref refid="imstb__truetype_8h_1ab0896826867ac841bba5b6060b3dab09" kindref="member">stbtt_FindSVGDoc</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref><sp/>*info,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gl)</highlight></codeline>
<codeline lineno="2683"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2684"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="2685"><highlight class="normal"><sp/><sp/><sp/>stbtt_uint8<sp/>*data<sp/>=<sp/>info-&gt;<ref refid="structstbtt__fontinfo_1af348db379cf0e0e71a68603d00501d41" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="2686"><highlight class="normal"><sp/><sp/><sp/>stbtt_uint8<sp/>*svg_doc_list<sp/>=<sp/>data<sp/>+<sp/>stbtt__get_svg((<ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref><sp/>*)<sp/>info);</highlight></codeline>
<codeline lineno="2687"><highlight class="normal"></highlight></codeline>
<codeline lineno="2688"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numEntries<sp/>=<sp/>ttUSHORT(svg_doc_list);</highlight></codeline>
<codeline lineno="2689"><highlight class="normal"><sp/><sp/><sp/>stbtt_uint8<sp/>*svg_docs<sp/>=<sp/>svg_doc_list<sp/>+<sp/>2;</highlight></codeline>
<codeline lineno="2690"><highlight class="normal"></highlight></codeline>
<codeline lineno="2691"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;<sp/>i&lt;numEntries;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="2692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbtt_uint8<sp/>*svg_doc<sp/>=<sp/>svg_docs<sp/>+<sp/>(12<sp/>*<sp/>i);</highlight></codeline>
<codeline lineno="2693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((gl<sp/>&gt;=<sp/>ttUSHORT(svg_doc))<sp/>&amp;&amp;<sp/>(gl<sp/>&lt;=<sp/>ttUSHORT(svg_doc<sp/>+<sp/>2)))</highlight></codeline>
<codeline lineno="2694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>svg_doc;</highlight></codeline>
<codeline lineno="2695"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2696"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2697"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2698"><highlight class="normal"></highlight></codeline>
<codeline lineno="2699"><highlight class="normal"><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="imstb__truetype_8h_1a6233237aecda00cf9ccd2c2d50dd6b17" kindref="member">stbtt_GetGlyphSVG</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref><sp/>*info,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gl,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**svg)</highlight></codeline>
<codeline lineno="2700"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2701"><highlight class="normal"><sp/><sp/><sp/>stbtt_uint8<sp/>*data<sp/>=<sp/>info-&gt;<ref refid="structstbtt__fontinfo_1af348db379cf0e0e71a68603d00501d41" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="2702"><highlight class="normal"><sp/><sp/><sp/>stbtt_uint8<sp/>*svg_doc;</highlight></codeline>
<codeline lineno="2703"><highlight class="normal"></highlight></codeline>
<codeline lineno="2704"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(info-&gt;<ref refid="structstbtt__fontinfo_1a2aae62e8e1269ab65be642a7ec82d7b3" kindref="member">svg</ref><sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="2705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2706"><highlight class="normal"></highlight></codeline>
<codeline lineno="2707"><highlight class="normal"><sp/><sp/><sp/>svg_doc<sp/>=<sp/><ref refid="imstb__truetype_8h_1ab0896826867ac841bba5b6060b3dab09" kindref="member">stbtt_FindSVGDoc</ref>(info,<sp/>gl);</highlight></codeline>
<codeline lineno="2708"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(svg_doc<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="2709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*svg<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>data<sp/>+<sp/>info-&gt;<ref refid="structstbtt__fontinfo_1a2aae62e8e1269ab65be642a7ec82d7b3" kindref="member">svg</ref><sp/>+<sp/>ttULONG(svg_doc<sp/>+<sp/>4);</highlight></codeline>
<codeline lineno="2710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ttULONG(svg_doc<sp/>+<sp/>8);</highlight></codeline>
<codeline lineno="2711"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2713"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2714"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2715"><highlight class="normal"></highlight></codeline>
<codeline lineno="2716"><highlight class="normal"><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="imstb__truetype_8h_1a5d290c4aa81bf0f7b933ea290d123a3a" kindref="member">stbtt_GetCodepointSVG</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref><sp/>*info,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>unicode_codepoint,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**svg)</highlight></codeline>
<codeline lineno="2717"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2718"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imstb__truetype_8h_1a6233237aecda00cf9ccd2c2d50dd6b17" kindref="member">stbtt_GetGlyphSVG</ref>(info,<sp/><ref refid="imstb__truetype_8h_1a213d5628c6b2e5c107b99378eefc6e3a" kindref="member">stbtt_FindGlyphIndex</ref>(info,<sp/>unicode_codepoint),<sp/>svg);</highlight></codeline>
<codeline lineno="2719"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2720"><highlight class="normal"></highlight></codeline>
<codeline lineno="2722"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2723"><highlight class="normal"></highlight><highlight class="comment">//<sp/>antialiasing<sp/>software<sp/>rasterizer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2724"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2725"><highlight class="normal"></highlight></codeline>
<codeline lineno="2726"><highlight class="normal"><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="imstb__truetype_8h_1a597ef6b92ab0b5800c74478548b4782f" kindref="member">stbtt_GetGlyphBitmapBoxSubpixel</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref><sp/>*font,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>glyph,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale_x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale_y,</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>shift_x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>shift_y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*ix0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*iy0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*ix1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*iy1)</highlight></codeline>
<codeline lineno="2727"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2728"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x0=0,y0=0,x1,y1;<sp/></highlight><highlight class="comment">//<sp/>=0<sp/>suppresses<sp/>compiler<sp/>warning</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2729"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="imstb__truetype_8h_1accf148d2d285fd55178d9a401734ba92" kindref="member">stbtt_GetGlyphBox</ref>(font,<sp/>glyph,<sp/>&amp;x0,&amp;y0,&amp;x1,&amp;y1))<sp/>{</highlight></codeline>
<codeline lineno="2730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>e.g.<sp/>space<sp/>character</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ix0)<sp/>*ix0<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iy0)<sp/>*iy0<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ix1)<sp/>*ix1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iy1)<sp/>*iy1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2735"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>move<sp/>to<sp/>integral<sp/>bboxes<sp/>(treating<sp/>pixels<sp/>as<sp/>little<sp/>squares,<sp/>what<sp/>pixels<sp/>get<sp/>touched)?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ix0)<sp/>*ix0<sp/>=<sp/><ref refid="imgui__draw_8cpp_1a37ec4d14918346d3451d4f44f24d4710" kindref="member">STBTT_ifloor</ref>(<sp/>x0<sp/>*<sp/>scale_x<sp/>+<sp/>shift_x);</highlight></codeline>
<codeline lineno="2738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iy0)<sp/>*iy0<sp/>=<sp/><ref refid="imgui__draw_8cpp_1a37ec4d14918346d3451d4f44f24d4710" kindref="member">STBTT_ifloor</ref>(-y1<sp/>*<sp/>scale_y<sp/>+<sp/>shift_y);</highlight></codeline>
<codeline lineno="2739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ix1)<sp/>*ix1<sp/>=<sp/><ref refid="imgui__draw_8cpp_1a284a26aeebf87bc1688d38b3b16c7248" kindref="member">STBTT_iceil</ref><sp/>(<sp/>x1<sp/>*<sp/>scale_x<sp/>+<sp/>shift_x);</highlight></codeline>
<codeline lineno="2740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iy1)<sp/>*iy1<sp/>=<sp/><ref refid="imgui__draw_8cpp_1a284a26aeebf87bc1688d38b3b16c7248" kindref="member">STBTT_iceil</ref><sp/>(-y0<sp/>*<sp/>scale_y<sp/>+<sp/>shift_y);</highlight></codeline>
<codeline lineno="2741"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2742"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2743"><highlight class="normal"></highlight></codeline>
<codeline lineno="2744"><highlight class="normal"><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="imstb__truetype_8h_1a7bba8bb63f534246ccd3ed5b9390cc53" kindref="member">stbtt_GetGlyphBitmapBox</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref><sp/>*font,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>glyph,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale_x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale_y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*ix0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*iy0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*ix1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*iy1)</highlight></codeline>
<codeline lineno="2745"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2746"><highlight class="normal"><sp/><sp/><sp/><ref refid="imstb__truetype_8h_1a597ef6b92ab0b5800c74478548b4782f" kindref="member">stbtt_GetGlyphBitmapBoxSubpixel</ref>(font,<sp/>glyph,<sp/>scale_x,<sp/>scale_y,0.0f,0.0f,<sp/>ix0,<sp/>iy0,<sp/>ix1,<sp/>iy1);</highlight></codeline>
<codeline lineno="2747"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2748"><highlight class="normal"></highlight></codeline>
<codeline lineno="2749"><highlight class="normal"><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="imstb__truetype_8h_1a18fae014dd2261e554248ca737d05578" kindref="member">stbtt_GetCodepointBitmapBoxSubpixel</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref><sp/>*font,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>codepoint,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale_x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale_y,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>shift_x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>shift_y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*ix0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*iy0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*ix1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*iy1)</highlight></codeline>
<codeline lineno="2750"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2751"><highlight class="normal"><sp/><sp/><sp/><ref refid="imstb__truetype_8h_1a597ef6b92ab0b5800c74478548b4782f" kindref="member">stbtt_GetGlyphBitmapBoxSubpixel</ref>(font,<sp/><ref refid="imstb__truetype_8h_1a213d5628c6b2e5c107b99378eefc6e3a" kindref="member">stbtt_FindGlyphIndex</ref>(font,codepoint),<sp/>scale_x,<sp/>scale_y,shift_x,shift_y,<sp/>ix0,iy0,ix1,iy1);</highlight></codeline>
<codeline lineno="2752"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2753"><highlight class="normal"></highlight></codeline>
<codeline lineno="2754"><highlight class="normal"><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="imstb__truetype_8h_1a2e607ba774cee7f2425917105dabd16f" kindref="member">stbtt_GetCodepointBitmapBox</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref><sp/>*font,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>codepoint,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale_x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale_y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*ix0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*iy0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*ix1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*iy1)</highlight></codeline>
<codeline lineno="2755"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2756"><highlight class="normal"><sp/><sp/><sp/><ref refid="imstb__truetype_8h_1a18fae014dd2261e554248ca737d05578" kindref="member">stbtt_GetCodepointBitmapBoxSubpixel</ref>(font,<sp/>codepoint,<sp/>scale_x,<sp/>scale_y,0.0f,0.0f,<sp/>ix0,iy0,ix1,iy1);</highlight></codeline>
<codeline lineno="2757"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2758"><highlight class="normal"></highlight></codeline>
<codeline lineno="2760"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2761"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Rasterizer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2762"><highlight class="normal"></highlight></codeline>
<codeline lineno="2763"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">stbtt__hheap_chunk</highlight></codeline>
<codeline lineno="2764"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2765"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">stbtt__hheap_chunk<sp/>*next;</highlight></codeline>
<codeline lineno="2766"><highlight class="normal">}<sp/>stbtt__hheap_chunk;</highlight></codeline>
<codeline lineno="2767"><highlight class="normal"></highlight></codeline>
<codeline lineno="2768"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">stbtt__hheap</highlight></codeline>
<codeline lineno="2769"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2770"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">stbtt__hheap_chunk<sp/>*head;</highlight></codeline>
<codeline lineno="2771"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/>*first_free;</highlight></codeline>
<codeline lineno="2772"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>num_remaining_in_head_chunk;</highlight></codeline>
<codeline lineno="2773"><highlight class="normal">}<sp/>stbtt__hheap;</highlight></codeline>
<codeline lineno="2774"><highlight class="normal"></highlight></codeline>
<codeline lineno="2775"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*stbtt__hheap_alloc(stbtt__hheap<sp/>*hh,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*userdata)</highlight></codeline>
<codeline lineno="2776"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2777"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hh-&gt;first_free)<sp/>{</highlight></codeline>
<codeline lineno="2778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p<sp/>=<sp/>hh-&gt;first_free;</highlight></codeline>
<codeline lineno="2779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hh-&gt;first_free<sp/>=<sp/>*<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**)<sp/>p;</highlight></codeline>
<codeline lineno="2780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p;</highlight></codeline>
<codeline lineno="2781"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hh-&gt;num_remaining_in_head_chunk<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count<sp/>=<sp/>(size<sp/>&lt;<sp/>32<sp/>?<sp/>2000<sp/>:<sp/>size<sp/>&lt;<sp/>128<sp/>?<sp/>800<sp/>:<sp/>100);</highlight></codeline>
<codeline lineno="2784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt__hheap_chunk<sp/>*c<sp/>=<sp/>(stbtt__hheap_chunk<sp/>*)<sp/><ref refid="imgui__draw_8cpp_1a8f6734fe0cb6d6aa09e494602afa96be" kindref="member">STBTT_malloc</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(stbtt__hheap_chunk)<sp/>+<sp/>size<sp/>*<sp/>count,<sp/>userdata);</highlight></codeline>
<codeline lineno="2785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="2786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="2787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c-&gt;next<sp/>=<sp/>hh-&gt;head;</highlight></codeline>
<codeline lineno="2788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hh-&gt;head<sp/>=<sp/>c;</highlight></codeline>
<codeline lineno="2789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hh-&gt;num_remaining_in_head_chunk<sp/>=<sp/>count;</highlight></codeline>
<codeline lineno="2790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>--hh-&gt;num_remaining_in_head_chunk;</highlight></codeline>
<codeline lineno="2792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>(hh-&gt;head)<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(stbtt__hheap_chunk)<sp/>+<sp/>size<sp/>*<sp/>hh-&gt;num_remaining_in_head_chunk;</highlight></codeline>
<codeline lineno="2793"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2794"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2795"><highlight class="normal"></highlight></codeline>
<codeline lineno="2796"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stbtt__hheap_free(stbtt__hheap<sp/>*hh,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p)</highlight></codeline>
<codeline lineno="2797"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2798"><highlight class="normal"><sp/><sp/><sp/>*(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**)<sp/>p<sp/>=<sp/>hh-&gt;first_free;</highlight></codeline>
<codeline lineno="2799"><highlight class="normal"><sp/><sp/><sp/>hh-&gt;first_free<sp/>=<sp/>p;</highlight></codeline>
<codeline lineno="2800"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2801"><highlight class="normal"></highlight></codeline>
<codeline lineno="2802"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stbtt__hheap_cleanup(stbtt__hheap<sp/>*hh,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*userdata)</highlight></codeline>
<codeline lineno="2803"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2804"><highlight class="normal"><sp/><sp/><sp/>stbtt__hheap_chunk<sp/>*c<sp/>=<sp/>hh-&gt;head;</highlight></codeline>
<codeline lineno="2805"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(c)<sp/>{</highlight></codeline>
<codeline lineno="2806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbtt__hheap_chunk<sp/>*n<sp/>=<sp/>c-&gt;next;</highlight></codeline>
<codeline lineno="2807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imgui__draw_8cpp_1a357d3564409e68f1b694e06f7beeca7e" kindref="member">STBTT_free</ref>(c,<sp/>userdata);</highlight></codeline>
<codeline lineno="2808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>n;</highlight></codeline>
<codeline lineno="2809"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2810"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2811"><highlight class="normal"></highlight></codeline>
<codeline lineno="2812"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">stbtt__edge<sp/>{</highlight></codeline>
<codeline lineno="2813"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x0,y0,<sp/>x1,y1;</highlight></codeline>
<codeline lineno="2814"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>invert;</highlight></codeline>
<codeline lineno="2815"><highlight class="normal">}<sp/>stbtt__edge;</highlight></codeline>
<codeline lineno="2816"><highlight class="normal"></highlight></codeline>
<codeline lineno="2817"><highlight class="normal"></highlight></codeline>
<codeline lineno="2818"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">stbtt__active_edge</highlight></codeline>
<codeline lineno="2819"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2820"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">stbtt__active_edge<sp/>*next;</highlight></codeline>
<codeline lineno="2821"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#if<sp/>STBTT_RASTERIZER_VERSION==1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2822"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,dx;</highlight></codeline>
<codeline lineno="2823"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ey;</highlight></codeline>
<codeline lineno="2824"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>direction;</highlight></codeline>
<codeline lineno="2825"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#elif<sp/>STBTT_RASTERIZER_VERSION==2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2826"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fx,fdx,fdy;</highlight></codeline>
<codeline lineno="2827"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>direction;</highlight></codeline>
<codeline lineno="2828"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>sy;</highlight></codeline>
<codeline lineno="2829"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ey;</highlight></codeline>
<codeline lineno="2830"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2831"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#error<sp/>&quot;Unrecognized<sp/>value<sp/>of<sp/>STBTT_RASTERIZER_VERSION&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2832"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2833"><highlight class="normal">}<sp/>stbtt__active_edge;</highlight></codeline>
<codeline lineno="2834"><highlight class="normal"></highlight></codeline>
<codeline lineno="2835"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>STBTT_RASTERIZER_VERSION<sp/>==<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2836"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBTT_FIXSHIFT<sp/><sp/><sp/>10</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2837"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBTT_FIX<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(1<sp/>&lt;&lt;<sp/>STBTT_FIXSHIFT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2838"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBTT_FIXMASK<sp/><sp/><sp/><sp/>(STBTT_FIX-1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2839"><highlight class="normal"></highlight></codeline>
<codeline lineno="2840"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>stbtt__active_edge<sp/>*stbtt__new_active(stbtt__hheap<sp/>*hh,<sp/>stbtt__edge<sp/>*e,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>off_x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>start_point,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*userdata)</highlight></codeline>
<codeline lineno="2841"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2842"><highlight class="normal"><sp/><sp/><sp/>stbtt__active_edge<sp/>*z<sp/>=<sp/>(stbtt__active_edge<sp/>*)<sp/>stbtt__hheap_alloc(hh,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*z),<sp/>userdata);</highlight></codeline>
<codeline lineno="2843"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dxdy<sp/>=<sp/>(e-&gt;x1<sp/>-<sp/>e-&gt;x0)<sp/>/<sp/>(e-&gt;y1<sp/>-<sp/>e-&gt;y0);</highlight></codeline>
<codeline lineno="2844"><highlight class="normal"><sp/><sp/><sp/><ref refid="imgui__draw_8cpp_1a1123d905f512c19c8d796a6d294a3a84" kindref="member">STBTT_assert</ref>(z<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="2845"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!z)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>z;</highlight></codeline>
<codeline lineno="2846"><highlight class="normal"></highlight></codeline>
<codeline lineno="2847"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>round<sp/>dx<sp/>down<sp/>to<sp/>avoid<sp/>overshooting</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2848"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dxdy<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="2849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>z-&gt;dx<sp/>=<sp/>-<ref refid="imgui__draw_8cpp_1a37ec4d14918346d3451d4f44f24d4710" kindref="member">STBTT_ifloor</ref>(STBTT_FIX<sp/>*<sp/>-dxdy);</highlight></codeline>
<codeline lineno="2850"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>z-&gt;dx<sp/>=<sp/><ref refid="imgui__draw_8cpp_1a37ec4d14918346d3451d4f44f24d4710" kindref="member">STBTT_ifloor</ref>(STBTT_FIX<sp/>*<sp/>dxdy);</highlight></codeline>
<codeline lineno="2852"><highlight class="normal"></highlight></codeline>
<codeline lineno="2853"><highlight class="normal"><sp/><sp/><sp/>z-&gt;x<sp/>=<sp/><ref refid="imgui__draw_8cpp_1a37ec4d14918346d3451d4f44f24d4710" kindref="member">STBTT_ifloor</ref>(STBTT_FIX<sp/>*<sp/>e-&gt;x0<sp/>+<sp/>z-&gt;dx<sp/>*<sp/>(start_point<sp/>-<sp/>e-&gt;y0));<sp/></highlight><highlight class="comment">//<sp/>use<sp/>z-&gt;dx<sp/>so<sp/>when<sp/>we<sp/>offset<sp/>later<sp/>it&apos;s<sp/>by<sp/>the<sp/>same<sp/>amount</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2854"><highlight class="normal"><sp/><sp/><sp/>z-&gt;x<sp/>-=<sp/>off_x<sp/>*<sp/>STBTT_FIX;</highlight></codeline>
<codeline lineno="2855"><highlight class="normal"></highlight></codeline>
<codeline lineno="2856"><highlight class="normal"><sp/><sp/><sp/>z-&gt;ey<sp/>=<sp/>e-&gt;y1;</highlight></codeline>
<codeline lineno="2857"><highlight class="normal"><sp/><sp/><sp/>z-&gt;next<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2858"><highlight class="normal"><sp/><sp/><sp/>z-&gt;direction<sp/>=<sp/>e-&gt;invert<sp/>?<sp/>1<sp/>:<sp/>-1;</highlight></codeline>
<codeline lineno="2859"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>z;</highlight></codeline>
<codeline lineno="2860"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2861"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>STBTT_RASTERIZER_VERSION<sp/>==<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2862"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>stbtt__active_edge<sp/>*stbtt__new_active(stbtt__hheap<sp/>*hh,<sp/>stbtt__edge<sp/>*e,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>off_x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>start_point,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*userdata)</highlight></codeline>
<codeline lineno="2863"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2864"><highlight class="normal"><sp/><sp/><sp/>stbtt__active_edge<sp/>*z<sp/>=<sp/>(stbtt__active_edge<sp/>*)<sp/>stbtt__hheap_alloc(hh,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*z),<sp/>userdata);</highlight></codeline>
<codeline lineno="2865"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dxdy<sp/>=<sp/>(e-&gt;x1<sp/>-<sp/>e-&gt;x0)<sp/>/<sp/>(e-&gt;y1<sp/>-<sp/>e-&gt;y0);</highlight></codeline>
<codeline lineno="2866"><highlight class="normal"><sp/><sp/><sp/><ref refid="imgui__draw_8cpp_1a1123d905f512c19c8d796a6d294a3a84" kindref="member">STBTT_assert</ref>(z<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="2867"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//STBTT_assert(e-&gt;y0<sp/>&lt;=<sp/>start_point);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2868"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!z)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>z;</highlight></codeline>
<codeline lineno="2869"><highlight class="normal"><sp/><sp/><sp/>z-&gt;fdx<sp/>=<sp/>dxdy;</highlight></codeline>
<codeline lineno="2870"><highlight class="normal"><sp/><sp/><sp/>z-&gt;fdy<sp/>=<sp/>dxdy<sp/>!=<sp/>0.0f<sp/>?<sp/>(1.0f/dxdy)<sp/>:<sp/>0.0f;</highlight></codeline>
<codeline lineno="2871"><highlight class="normal"><sp/><sp/><sp/>z-&gt;fx<sp/>=<sp/>e-&gt;x0<sp/>+<sp/>dxdy<sp/>*<sp/>(start_point<sp/>-<sp/>e-&gt;y0);</highlight></codeline>
<codeline lineno="2872"><highlight class="normal"><sp/><sp/><sp/>z-&gt;fx<sp/>-=<sp/>off_x;</highlight></codeline>
<codeline lineno="2873"><highlight class="normal"><sp/><sp/><sp/>z-&gt;direction<sp/>=<sp/>e-&gt;invert<sp/>?<sp/>1.0f<sp/>:<sp/>-1.0f;</highlight></codeline>
<codeline lineno="2874"><highlight class="normal"><sp/><sp/><sp/>z-&gt;sy<sp/>=<sp/>e-&gt;y0;</highlight></codeline>
<codeline lineno="2875"><highlight class="normal"><sp/><sp/><sp/>z-&gt;ey<sp/>=<sp/>e-&gt;y1;</highlight></codeline>
<codeline lineno="2876"><highlight class="normal"><sp/><sp/><sp/>z-&gt;next<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2877"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>z;</highlight></codeline>
<codeline lineno="2878"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2879"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2880"><highlight class="normal"></highlight><highlight class="preprocessor">#error<sp/>&quot;Unrecognized<sp/>value<sp/>of<sp/>STBTT_RASTERIZER_VERSION&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2881"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2882"><highlight class="normal"></highlight></codeline>
<codeline lineno="2883"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>STBTT_RASTERIZER_VERSION<sp/>==<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2884"><highlight class="normal"></highlight><highlight class="comment">//<sp/>note:<sp/>this<sp/>routine<sp/>clips<sp/>fills<sp/>that<sp/>extend<sp/>off<sp/>the<sp/>edges...<sp/>ideally<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2885"><highlight class="normal"></highlight><highlight class="comment">//<sp/>wouldn&apos;t<sp/>happen,<sp/>but<sp/>it<sp/>could<sp/>happen<sp/>if<sp/>the<sp/>truetype<sp/>glyph<sp/>bounding<sp/>boxes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2886"><highlight class="normal"></highlight><highlight class="comment">//<sp/>are<sp/>wrong,<sp/>or<sp/>if<sp/>the<sp/>user<sp/>supplies<sp/>a<sp/>too-small<sp/>bitmap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2887"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stbtt__fill_active_edges(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*scanline,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len,<sp/>stbtt__active_edge<sp/>*e,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_weight)</highlight></codeline>
<codeline lineno="2888"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2889"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>non-zero<sp/>winding<sp/>fill</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2890"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x0=0,<sp/>w=0;</highlight></codeline>
<codeline lineno="2891"><highlight class="normal"></highlight></codeline>
<codeline lineno="2892"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(e)<sp/>{</highlight></codeline>
<codeline lineno="2893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(w<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>we&apos;re<sp/>currently<sp/>at<sp/>zero,<sp/>we<sp/>need<sp/>to<sp/>record<sp/>the<sp/>edge<sp/>start<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x0<sp/>=<sp/>e-&gt;x;<sp/>w<sp/>+=<sp/>e-&gt;direction;</highlight></codeline>
<codeline lineno="2896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x1<sp/>=<sp/>e-&gt;x;<sp/>w<sp/>+=<sp/>e-&gt;direction;</highlight></codeline>
<codeline lineno="2898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>we<sp/>went<sp/>to<sp/>zero,<sp/>we<sp/>need<sp/>to<sp/>draw</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(w<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>x0<sp/>&gt;&gt;<sp/>STBTT_FIXSHIFT;</highlight></codeline>
<codeline lineno="2901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>x1<sp/>&gt;&gt;<sp/>STBTT_FIXSHIFT;</highlight></codeline>
<codeline lineno="2902"><highlight class="normal"></highlight></codeline>
<codeline lineno="2903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>len<sp/>&amp;&amp;<sp/>j<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>j)<sp/>{</highlight></codeline>
<codeline lineno="2905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>x0,x1<sp/>are<sp/>the<sp/>same<sp/>pixel,<sp/>so<sp/>compute<sp/>combined<sp/>coverage</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanline[i]<sp/>=<sp/>scanline[i]<sp/>+<sp/>(stbtt_uint8)<sp/>((x1<sp/>-<sp/>x0)<sp/>*<sp/>max_weight<sp/>&gt;&gt;<sp/>STBTT_FIXSHIFT);</highlight></codeline>
<codeline lineno="2907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&gt;=<sp/>0)<sp/></highlight><highlight class="comment">//<sp/>add<sp/>antialiasing<sp/>for<sp/>x0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanline[i]<sp/>=<sp/>scanline[i]<sp/>+<sp/>(stbtt_uint8)<sp/>(((STBTT_FIX<sp/>-<sp/>(x0<sp/>&amp;<sp/>STBTT_FIXMASK))<sp/>*<sp/>max_weight)<sp/>&gt;&gt;<sp/>STBTT_FIXSHIFT);</highlight></codeline>
<codeline lineno="2910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>-1;<sp/></highlight><highlight class="comment">//<sp/>clip</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2912"><highlight class="normal"></highlight></codeline>
<codeline lineno="2913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j<sp/>&lt;<sp/>len)<sp/></highlight><highlight class="comment">//<sp/>add<sp/>antialiasing<sp/>for<sp/>x1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanline[j]<sp/>=<sp/>scanline[j]<sp/>+<sp/>(stbtt_uint8)<sp/>(((x1<sp/>&amp;<sp/>STBTT_FIXMASK)<sp/>*<sp/>max_weight)<sp/>&gt;&gt;<sp/>STBTT_FIXSHIFT);</highlight></codeline>
<codeline lineno="2915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j<sp/>=<sp/>len;<sp/></highlight><highlight class="comment">//<sp/>clip</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2917"><highlight class="normal"></highlight></codeline>
<codeline lineno="2918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(++i;<sp/>i<sp/>&lt;<sp/>j;<sp/>++i)<sp/></highlight><highlight class="comment">//<sp/>fill<sp/>pixels<sp/>between<sp/>x0<sp/>and<sp/>x1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanline[i]<sp/>=<sp/>scanline[i]<sp/>+<sp/>(stbtt_uint8)<sp/>max_weight;</highlight></codeline>
<codeline lineno="2920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2924"><highlight class="normal"></highlight></codeline>
<codeline lineno="2925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>e<sp/>=<sp/>e-&gt;next;</highlight></codeline>
<codeline lineno="2926"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2927"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2928"><highlight class="normal"></highlight></codeline>
<codeline lineno="2929"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stbtt__rasterize_sorted_edges(<ref refid="structstbtt____bitmap" kindref="compound">stbtt__bitmap</ref><sp/>*result,<sp/>stbtt__edge<sp/>*e,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vsubsample,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>off_x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>off_y,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*userdata)</highlight></codeline>
<codeline lineno="2930"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2931"><highlight class="normal"><sp/><sp/><sp/>stbtt__hheap<sp/>hh<sp/>=<sp/>{<sp/>0,<sp/>0,<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="2932"><highlight class="normal"><sp/><sp/><sp/>stbtt__active_edge<sp/>*active<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2933"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,j=0;</highlight></codeline>
<codeline lineno="2934"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_weight<sp/>=<sp/>(255<sp/>/<sp/>vsubsample);<sp/><sp/></highlight><highlight class="comment">//<sp/>weight<sp/>per<sp/>vertical<sp/>scanline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2935"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s;<sp/></highlight><highlight class="comment">//<sp/>vertical<sp/>subsample<sp/>index</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2936"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>scanline_data[512],<sp/>*scanline;</highlight></codeline>
<codeline lineno="2937"><highlight class="normal"></highlight></codeline>
<codeline lineno="2938"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result-&gt;<ref refid="structstbtt____bitmap_1afbd607426f0a457b1a871ed902eeb926" kindref="member">w</ref><sp/>&gt;<sp/>512)</highlight></codeline>
<codeline lineno="2939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>scanline<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/><ref refid="imgui__draw_8cpp_1a8f6734fe0cb6d6aa09e494602afa96be" kindref="member">STBTT_malloc</ref>(result-&gt;<ref refid="structstbtt____bitmap_1afbd607426f0a457b1a871ed902eeb926" kindref="member">w</ref>,<sp/>userdata);</highlight></codeline>
<codeline lineno="2940"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>scanline<sp/>=<sp/>scanline_data;</highlight></codeline>
<codeline lineno="2942"><highlight class="normal"></highlight></codeline>
<codeline lineno="2943"><highlight class="normal"><sp/><sp/><sp/>y<sp/>=<sp/>off_y<sp/>*<sp/>vsubsample;</highlight></codeline>
<codeline lineno="2944"><highlight class="normal"><sp/><sp/><sp/>e[n].y0<sp/>=<sp/>(off_y<sp/>+<sp/>result-&gt;<ref refid="structstbtt____bitmap_1a2afc802e26e9f1dda897ac16ecfff10e" kindref="member">h</ref>)<sp/>*<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)<sp/>vsubsample<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="2945"><highlight class="normal"></highlight></codeline>
<codeline lineno="2946"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(j<sp/>&lt;<sp/>result-&gt;h)<sp/>{</highlight></codeline>
<codeline lineno="2947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>STBTT_memset(scanline,<sp/>0,<sp/>result-&gt;<ref refid="structstbtt____bitmap_1afbd607426f0a457b1a871ed902eeb926" kindref="member">w</ref>);</highlight></codeline>
<codeline lineno="2948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(s=0;<sp/>s<sp/>&lt;<sp/>vsubsample;<sp/>++s)<sp/>{</highlight></codeline>
<codeline lineno="2949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>find<sp/>center<sp/>of<sp/>pixel<sp/>for<sp/>this<sp/>scanline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scan_y<sp/>=<sp/>y<sp/>+<sp/>0.5f;</highlight></codeline>
<codeline lineno="2951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt__active_edge<sp/>**step<sp/>=<sp/>&amp;active;</highlight></codeline>
<codeline lineno="2952"><highlight class="normal"></highlight></codeline>
<codeline lineno="2953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>all<sp/>active<sp/>edges;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>remove<sp/>all<sp/>active<sp/>edges<sp/>that<sp/>terminate<sp/>before<sp/>the<sp/>center<sp/>of<sp/>this<sp/>scanline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*step)<sp/>{</highlight></codeline>
<codeline lineno="2956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt__active_edge<sp/>*<sp/>z<sp/>=<sp/>*step;</highlight></codeline>
<codeline lineno="2957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(z-&gt;ey<sp/>&lt;=<sp/>scan_y)<sp/>{</highlight></codeline>
<codeline lineno="2958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*step<sp/>=<sp/>z-&gt;next;<sp/></highlight><highlight class="comment">//<sp/>delete<sp/>from<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imgui__draw_8cpp_1a1123d905f512c19c8d796a6d294a3a84" kindref="member">STBTT_assert</ref>(z-&gt;direction);</highlight></codeline>
<codeline lineno="2960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z-&gt;direction<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt__hheap_free(&amp;hh,<sp/>z);</highlight></codeline>
<codeline lineno="2962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z-&gt;x<sp/>+=<sp/>z-&gt;dx;<sp/></highlight><highlight class="comment">//<sp/>advance<sp/>to<sp/>position<sp/>for<sp/>current<sp/>scanline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>step<sp/>=<sp/>&amp;((*step)-&gt;next);<sp/></highlight><highlight class="comment">//<sp/>advance<sp/>through<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2967"><highlight class="normal"></highlight></codeline>
<codeline lineno="2968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>resort<sp/>the<sp/>list<sp/>if<sp/>needed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;;)<sp/>{</highlight></codeline>
<codeline lineno="2970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>changed=0;</highlight></codeline>
<codeline lineno="2971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>step<sp/>=<sp/>&amp;active;</highlight></codeline>
<codeline lineno="2972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*step<sp/>&amp;&amp;<sp/>(*step)-&gt;next)<sp/>{</highlight></codeline>
<codeline lineno="2973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*step)-&gt;x<sp/>&gt;<sp/>(*step)-&gt;next-&gt;x)<sp/>{</highlight></codeline>
<codeline lineno="2974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt__active_edge<sp/>*t<sp/>=<sp/>*step;</highlight></codeline>
<codeline lineno="2975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt__active_edge<sp/>*q<sp/>=<sp/>t-&gt;next;</highlight></codeline>
<codeline lineno="2976"><highlight class="normal"></highlight></codeline>
<codeline lineno="2977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t-&gt;next<sp/>=<sp/>q-&gt;next;</highlight></codeline>
<codeline lineno="2978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q-&gt;next<sp/>=<sp/>t;</highlight></codeline>
<codeline lineno="2979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*step<sp/>=<sp/>q;</highlight></codeline>
<codeline lineno="2980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>changed<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="2981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>step<sp/>=<sp/>&amp;(*step)-&gt;next;</highlight></codeline>
<codeline lineno="2983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!changed)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2986"><highlight class="normal"></highlight></codeline>
<codeline lineno="2987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>insert<sp/>all<sp/>edges<sp/>that<sp/>start<sp/>before<sp/>the<sp/>center<sp/>of<sp/>this<sp/>scanline<sp/>--<sp/>omit<sp/>ones<sp/>that<sp/>also<sp/>end<sp/>on<sp/>this<sp/>scanline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(e-&gt;y0<sp/>&lt;=<sp/>scan_y)<sp/>{</highlight></codeline>
<codeline lineno="2989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(e-&gt;y1<sp/>&gt;<sp/>scan_y)<sp/>{</highlight></codeline>
<codeline lineno="2990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt__active_edge<sp/>*z<sp/>=<sp/>stbtt__new_active(&amp;hh,<sp/>e,<sp/>off_x,<sp/>scan_y,<sp/>userdata);</highlight></codeline>
<codeline lineno="2991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(z<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="2992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>find<sp/>insertion<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(active<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="2994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>active<sp/>=<sp/>z;</highlight></codeline>
<codeline lineno="2995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(z-&gt;x<sp/>&lt;<sp/>active-&gt;x)<sp/>{</highlight></codeline>
<codeline lineno="2996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>insert<sp/>at<sp/>front</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z-&gt;next<sp/>=<sp/>active;</highlight></codeline>
<codeline lineno="2998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>active<sp/>=<sp/>z;</highlight></codeline>
<codeline lineno="2999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>find<sp/>thing<sp/>to<sp/>insert<sp/>AFTER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt__active_edge<sp/>*p<sp/>=<sp/>active;</highlight></codeline>
<codeline lineno="3002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(p-&gt;next<sp/>&amp;&amp;<sp/>p-&gt;next-&gt;x<sp/>&lt;<sp/>z-&gt;x)</highlight></codeline>
<codeline lineno="3003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/>p-&gt;next;</highlight></codeline>
<codeline lineno="3004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>at<sp/>this<sp/>point,<sp/>p-&gt;next-&gt;x<sp/>is<sp/>NOT<sp/>&lt;<sp/>z-&gt;x</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z-&gt;next<sp/>=<sp/>p-&gt;next;</highlight></codeline>
<codeline lineno="3006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;next<sp/>=<sp/>z;</highlight></codeline>
<codeline lineno="3007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++e;</highlight></codeline>
<codeline lineno="3011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3012"><highlight class="normal"></highlight></codeline>
<codeline lineno="3013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>process<sp/>all<sp/>active<sp/>edges<sp/>in<sp/>XOR<sp/>fashion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(active)</highlight></codeline>
<codeline lineno="3015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt__fill_active_edges(scanline,<sp/>result-&gt;<ref refid="structstbtt____bitmap_1afbd607426f0a457b1a871ed902eeb926" kindref="member">w</ref>,<sp/>active,<sp/>max_weight);</highlight></codeline>
<codeline lineno="3016"><highlight class="normal"></highlight></codeline>
<codeline lineno="3017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++y;</highlight></codeline>
<codeline lineno="3018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>STBTT_memcpy(result-&gt;<ref refid="structstbtt____bitmap_1ae6be77625faf55b110eaaffde5c7733c" kindref="member">pixels</ref><sp/>+<sp/>j<sp/>*<sp/>result-&gt;<ref refid="structstbtt____bitmap_1a48ee6b550ee4f1d85bfc32c62c0e9a98" kindref="member">stride</ref>,<sp/>scanline,<sp/>result-&gt;<ref refid="structstbtt____bitmap_1afbd607426f0a457b1a871ed902eeb926" kindref="member">w</ref>);</highlight></codeline>
<codeline lineno="3020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++j;</highlight></codeline>
<codeline lineno="3021"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3022"><highlight class="normal"></highlight></codeline>
<codeline lineno="3023"><highlight class="normal"><sp/><sp/><sp/>stbtt__hheap_cleanup(&amp;hh,<sp/>userdata);</highlight></codeline>
<codeline lineno="3024"><highlight class="normal"></highlight></codeline>
<codeline lineno="3025"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scanline<sp/>!=<sp/>scanline_data)</highlight></codeline>
<codeline lineno="3026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imgui__draw_8cpp_1a357d3564409e68f1b694e06f7beeca7e" kindref="member">STBTT_free</ref>(scanline,<sp/>userdata);</highlight></codeline>
<codeline lineno="3027"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3028"><highlight class="normal"></highlight></codeline>
<codeline lineno="3029"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>STBTT_RASTERIZER_VERSION<sp/>==<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3030"><highlight class="normal"></highlight></codeline>
<codeline lineno="3031"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>edge<sp/>passed<sp/>in<sp/>here<sp/>does<sp/>not<sp/>cross<sp/>the<sp/>vertical<sp/>line<sp/>at<sp/>x<sp/>or<sp/>the<sp/>vertical<sp/>line<sp/>at<sp/>x+1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3032"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(i.e.<sp/>it<sp/>has<sp/>already<sp/>been<sp/>clipped<sp/>to<sp/>those)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3033"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stbtt__handle_clipped_edge(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*scanline,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/>stbtt__active_edge<sp/>*e,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x0,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y0,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x1,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y1)</highlight></codeline>
<codeline lineno="3034"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3035"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y0<sp/>==<sp/>y1)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3036"><highlight class="normal"><sp/><sp/><sp/><ref refid="imgui__draw_8cpp_1a1123d905f512c19c8d796a6d294a3a84" kindref="member">STBTT_assert</ref>(y0<sp/>&lt;<sp/>y1);</highlight></codeline>
<codeline lineno="3037"><highlight class="normal"><sp/><sp/><sp/><ref refid="imgui__draw_8cpp_1a1123d905f512c19c8d796a6d294a3a84" kindref="member">STBTT_assert</ref>(e-&gt;sy<sp/>&lt;=<sp/>e-&gt;ey);</highlight></codeline>
<codeline lineno="3038"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y0<sp/>&gt;<sp/>e-&gt;ey)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3039"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y1<sp/>&lt;<sp/>e-&gt;sy)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3040"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y0<sp/>&lt;<sp/>e-&gt;sy)<sp/>{</highlight></codeline>
<codeline lineno="3041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>x0<sp/>+=<sp/>(x1-x0)<sp/>*<sp/>(e-&gt;sy<sp/>-<sp/>y0)<sp/>/<sp/>(y1-y0);</highlight></codeline>
<codeline lineno="3042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>y0<sp/>=<sp/>e-&gt;sy;</highlight></codeline>
<codeline lineno="3043"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3044"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y1<sp/>&gt;<sp/>e-&gt;ey)<sp/>{</highlight></codeline>
<codeline lineno="3045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>x1<sp/>+=<sp/>(x1-x0)<sp/>*<sp/>(e-&gt;ey<sp/>-<sp/>y1)<sp/>/<sp/>(y1-y0);</highlight></codeline>
<codeline lineno="3046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>y1<sp/>=<sp/>e-&gt;ey;</highlight></codeline>
<codeline lineno="3047"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3048"><highlight class="normal"></highlight></codeline>
<codeline lineno="3049"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x0<sp/>==<sp/>x)</highlight></codeline>
<codeline lineno="3050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imgui__draw_8cpp_1a1123d905f512c19c8d796a6d294a3a84" kindref="member">STBTT_assert</ref>(x1<sp/>&lt;=<sp/>x+1);</highlight></codeline>
<codeline lineno="3051"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x0<sp/>==<sp/>x+1)</highlight></codeline>
<codeline lineno="3052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imgui__draw_8cpp_1a1123d905f512c19c8d796a6d294a3a84" kindref="member">STBTT_assert</ref>(x1<sp/>&gt;=<sp/>x);</highlight></codeline>
<codeline lineno="3053"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x0<sp/>&lt;=<sp/>x)</highlight></codeline>
<codeline lineno="3054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imgui__draw_8cpp_1a1123d905f512c19c8d796a6d294a3a84" kindref="member">STBTT_assert</ref>(x1<sp/>&lt;=<sp/>x);</highlight></codeline>
<codeline lineno="3055"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x0<sp/>&gt;=<sp/>x+1)</highlight></codeline>
<codeline lineno="3056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imgui__draw_8cpp_1a1123d905f512c19c8d796a6d294a3a84" kindref="member">STBTT_assert</ref>(x1<sp/>&gt;=<sp/>x+1);</highlight></codeline>
<codeline lineno="3057"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imgui__draw_8cpp_1a1123d905f512c19c8d796a6d294a3a84" kindref="member">STBTT_assert</ref>(x1<sp/>&gt;=<sp/>x<sp/>&amp;&amp;<sp/>x1<sp/>&lt;=<sp/>x+1);</highlight></codeline>
<codeline lineno="3059"><highlight class="normal"></highlight></codeline>
<codeline lineno="3060"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x0<sp/>&lt;=<sp/>x<sp/>&amp;&amp;<sp/>x1<sp/>&lt;=<sp/>x)</highlight></codeline>
<codeline lineno="3061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>scanline[x]<sp/>+=<sp/>e-&gt;direction<sp/>*<sp/>(y1-y0);</highlight></codeline>
<codeline lineno="3062"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x0<sp/>&gt;=<sp/>x+1<sp/>&amp;&amp;<sp/>x1<sp/>&gt;=<sp/>x+1)</highlight></codeline>
<codeline lineno="3063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="3064"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imgui__draw_8cpp_1a1123d905f512c19c8d796a6d294a3a84" kindref="member">STBTT_assert</ref>(x0<sp/>&gt;=<sp/>x<sp/>&amp;&amp;<sp/>x0<sp/>&lt;=<sp/>x+1<sp/>&amp;&amp;<sp/>x1<sp/>&gt;=<sp/>x<sp/>&amp;&amp;<sp/>x1<sp/>&lt;=<sp/>x+1);</highlight></codeline>
<codeline lineno="3066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>scanline[x]<sp/>+=<sp/>e-&gt;direction<sp/>*<sp/>(y1-y0)<sp/>*<sp/>(1-((x0-x)+(x1-x))/2);<sp/></highlight><highlight class="comment">//<sp/>coverage<sp/>=<sp/>1<sp/>-<sp/>average<sp/>x<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3067"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3068"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3069"><highlight class="normal"></highlight></codeline>
<codeline lineno="3070"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>stbtt__sized_trapezoid_area(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>height,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>top_width,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>bottom_width)</highlight></codeline>
<codeline lineno="3071"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3072"><highlight class="normal"><sp/><sp/><sp/><ref refid="imgui__draw_8cpp_1a1123d905f512c19c8d796a6d294a3a84" kindref="member">STBTT_assert</ref>(top_width<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="3073"><highlight class="normal"><sp/><sp/><sp/><ref refid="imgui__draw_8cpp_1a1123d905f512c19c8d796a6d294a3a84" kindref="member">STBTT_assert</ref>(bottom_width<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="3074"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(top_width<sp/>+<sp/>bottom_width)<sp/>/<sp/>2.0f<sp/>*<sp/>height;</highlight></codeline>
<codeline lineno="3075"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3076"><highlight class="normal"></highlight></codeline>
<codeline lineno="3077"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>stbtt__position_trapezoid_area(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>height,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>tx0,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>tx1,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>bx0,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>bx1)</highlight></codeline>
<codeline lineno="3078"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3079"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbtt__sized_trapezoid_area(height,<sp/>tx1<sp/>-<sp/>tx0,<sp/>bx1<sp/>-<sp/>bx0);</highlight></codeline>
<codeline lineno="3080"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3081"><highlight class="normal"></highlight></codeline>
<codeline lineno="3082"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>stbtt__sized_triangle_area(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>height,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>width)</highlight></codeline>
<codeline lineno="3083"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3084"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>height<sp/>*<sp/>width<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="3085"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3086"><highlight class="normal"></highlight></codeline>
<codeline lineno="3087"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stbtt__fill_active_edges_new(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*scanline,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*scanline_fill,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len,<sp/>stbtt__active_edge<sp/>*e,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y_top)</highlight></codeline>
<codeline lineno="3088"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3089"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y_bottom<sp/>=<sp/>y_top+1;</highlight></codeline>
<codeline lineno="3090"><highlight class="normal"></highlight></codeline>
<codeline lineno="3091"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(e)<sp/>{</highlight></codeline>
<codeline lineno="3092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>brute<sp/>force<sp/>every<sp/>pixel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3093"><highlight class="normal"></highlight></codeline>
<codeline lineno="3094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>intersection<sp/>points<sp/>with<sp/>top<sp/>&amp;<sp/>bottom</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imgui__draw_8cpp_1a1123d905f512c19c8d796a6d294a3a84" kindref="member">STBTT_assert</ref>(e-&gt;ey<sp/>&gt;=<sp/>y_top);</highlight></codeline>
<codeline lineno="3096"><highlight class="normal"></highlight></codeline>
<codeline lineno="3097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(e-&gt;fdx<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="3098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x0<sp/>=<sp/>e-&gt;fx;</highlight></codeline>
<codeline lineno="3099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x0<sp/>&lt;<sp/>len)<sp/>{</highlight></codeline>
<codeline lineno="3100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x0<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="3101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt__handle_clipped_edge(scanline,(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>x0,e,<sp/>x0,y_top,<sp/>x0,y_bottom);</highlight></codeline>
<codeline lineno="3102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt__handle_clipped_edge(scanline_fill-1,(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>x0+1,e,<sp/>x0,y_top,<sp/>x0,y_bottom);</highlight></codeline>
<codeline lineno="3103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt__handle_clipped_edge(scanline_fill-1,0,e,<sp/>x0,y_top,<sp/>x0,y_bottom);</highlight></codeline>
<codeline lineno="3105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x0<sp/>=<sp/>e-&gt;fx;</highlight></codeline>
<codeline lineno="3109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dx<sp/>=<sp/>e-&gt;fdx;</highlight></codeline>
<codeline lineno="3110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>xb<sp/>=<sp/>x0<sp/>+<sp/>dx;</highlight></codeline>
<codeline lineno="3111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x_top,<sp/>x_bottom;</highlight></codeline>
<codeline lineno="3112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>sy0,sy1;</highlight></codeline>
<codeline lineno="3113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dy<sp/>=<sp/>e-&gt;fdy;</highlight></codeline>
<codeline lineno="3114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imgui__draw_8cpp_1a1123d905f512c19c8d796a6d294a3a84" kindref="member">STBTT_assert</ref>(e-&gt;sy<sp/>&lt;=<sp/>y_bottom<sp/>&amp;&amp;<sp/>e-&gt;ey<sp/>&gt;=<sp/>y_top);</highlight></codeline>
<codeline lineno="3115"><highlight class="normal"></highlight></codeline>
<codeline lineno="3116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>endpoints<sp/>of<sp/>line<sp/>segment<sp/>clipped<sp/>to<sp/>this<sp/>scanline<sp/>(if<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>line<sp/>segment<sp/>starts<sp/>on<sp/>this<sp/>scanline.<sp/>x0<sp/>is<sp/>the<sp/>intersection<sp/>of<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>line<sp/>with<sp/>y_top,<sp/>but<sp/>that<sp/>may<sp/>be<sp/>off<sp/>the<sp/>line<sp/>segment.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(e-&gt;sy<sp/>&gt;<sp/>y_top)<sp/>{</highlight></codeline>
<codeline lineno="3120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_top<sp/>=<sp/>x0<sp/>+<sp/>dx<sp/>*<sp/>(e-&gt;sy<sp/>-<sp/>y_top);</highlight></codeline>
<codeline lineno="3121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sy0<sp/>=<sp/>e-&gt;sy;</highlight></codeline>
<codeline lineno="3122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_top<sp/>=<sp/>x0;</highlight></codeline>
<codeline lineno="3124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sy0<sp/>=<sp/>y_top;</highlight></codeline>
<codeline lineno="3125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(e-&gt;ey<sp/>&lt;<sp/>y_bottom)<sp/>{</highlight></codeline>
<codeline lineno="3127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_bottom<sp/>=<sp/>x0<sp/>+<sp/>dx<sp/>*<sp/>(e-&gt;ey<sp/>-<sp/>y_top);</highlight></codeline>
<codeline lineno="3128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sy1<sp/>=<sp/>e-&gt;ey;</highlight></codeline>
<codeline lineno="3129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_bottom<sp/>=<sp/>xb;</highlight></codeline>
<codeline lineno="3131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sy1<sp/>=<sp/>y_bottom;</highlight></codeline>
<codeline lineno="3132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3133"><highlight class="normal"></highlight></codeline>
<codeline lineno="3134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x_top<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>x_bottom<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>x_top<sp/>&lt;<sp/>len<sp/>&amp;&amp;<sp/>x_bottom<sp/>&lt;<sp/>len)<sp/>{</highlight></codeline>
<codeline lineno="3135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>from<sp/>here<sp/>on,<sp/>we<sp/>don&apos;t<sp/>have<sp/>to<sp/>range<sp/>check<sp/>x<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3136"><highlight class="normal"></highlight></codeline>
<codeline lineno="3137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>x_top<sp/>==<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>x_bottom)<sp/>{</highlight></codeline>
<codeline lineno="3138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>height;</highlight></codeline>
<codeline lineno="3139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>simple<sp/>case,<sp/>only<sp/>spans<sp/>one<sp/>pixel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>(int)<sp/>x_top;</highlight></codeline>
<codeline lineno="3141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>height<sp/>=<sp/>(sy1<sp/>-<sp/>sy0)<sp/>*<sp/>e-&gt;direction;</highlight></codeline>
<codeline lineno="3142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imgui__draw_8cpp_1a1123d905f512c19c8d796a6d294a3a84" kindref="member">STBTT_assert</ref>(x<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>x<sp/>&lt;<sp/>len);</highlight></codeline>
<codeline lineno="3143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanline[x]<sp/><sp/><sp/><sp/><sp/><sp/>+=<sp/>stbtt__position_trapezoid_area(height,<sp/>x_top,<sp/>x+1.0f,<sp/>x_bottom,<sp/>x+1.0f);</highlight></codeline>
<codeline lineno="3144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanline_fill[x]<sp/>+=<sp/>height;<sp/></highlight><highlight class="comment">//<sp/>everything<sp/>right<sp/>of<sp/>this<sp/>pixel<sp/>is<sp/>filled</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,x1,x2;</highlight></codeline>
<codeline lineno="3147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y_crossing,<sp/>y_final,<sp/>step,<sp/>sign,<sp/>area;</highlight></codeline>
<codeline lineno="3148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>covers<sp/>2+<sp/>pixels</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x_top<sp/>&gt;<sp/>x_bottom)<sp/>{</highlight></codeline>
<codeline lineno="3150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>flip<sp/>scanline<sp/>vertically;<sp/>signed<sp/>area<sp/>is<sp/>the<sp/>same</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>t;</highlight></codeline>
<codeline lineno="3152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sy0<sp/>=<sp/>y_bottom<sp/>-<sp/>(sy0<sp/>-<sp/>y_top);</highlight></codeline>
<codeline lineno="3153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sy1<sp/>=<sp/>y_bottom<sp/>-<sp/>(sy1<sp/>-<sp/>y_top);</highlight></codeline>
<codeline lineno="3154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>=<sp/>sy0,<sp/>sy0<sp/>=<sp/>sy1,<sp/>sy1<sp/>=<sp/>t;</highlight></codeline>
<codeline lineno="3155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>=<sp/>x_bottom,<sp/>x_bottom<sp/>=<sp/>x_top,<sp/>x_top<sp/>=<sp/>t;</highlight></codeline>
<codeline lineno="3156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dx<sp/>=<sp/>-dx;</highlight></codeline>
<codeline lineno="3157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dy<sp/>=<sp/>-dy;</highlight></codeline>
<codeline lineno="3158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>=<sp/>x0,<sp/>x0<sp/>=<sp/>xb,<sp/>xb<sp/>=<sp/>t;</highlight></codeline>
<codeline lineno="3159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imgui__draw_8cpp_1a1123d905f512c19c8d796a6d294a3a84" kindref="member">STBTT_assert</ref>(dy<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="3161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imgui__draw_8cpp_1a1123d905f512c19c8d796a6d294a3a84" kindref="member">STBTT_assert</ref>(dx<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="3162"><highlight class="normal"></highlight></codeline>
<codeline lineno="3163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x1<sp/>=<sp/>(int)<sp/>x_top;</highlight></codeline>
<codeline lineno="3164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x2<sp/>=<sp/>(int)<sp/>x_bottom;</highlight></codeline>
<codeline lineno="3165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>intersection<sp/>with<sp/>y<sp/>axis<sp/>at<sp/>x1+1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_crossing<sp/>=<sp/>y_top<sp/>+<sp/>dy<sp/>*<sp/>(x1+1<sp/>-<sp/>x0);</highlight></codeline>
<codeline lineno="3167"><highlight class="normal"></highlight></codeline>
<codeline lineno="3168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>intersection<sp/>with<sp/>y<sp/>axis<sp/>at<sp/>x2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_final<sp/>=<sp/>y_top<sp/>+<sp/>dy<sp/>*<sp/>(x2<sp/>-<sp/>x0);</highlight></codeline>
<codeline lineno="3170"><highlight class="normal"></highlight></codeline>
<codeline lineno="3171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x1<sp/><sp/><sp/><sp/>x_top<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x2<sp/><sp/><sp/><sp/>x_bottom</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>y_top<sp/><sp/>+------|-----+------------+------------+--------|---+------------+</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>sy0<sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>Txxxxx|............|............|............|............|</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>y_crossing<sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*xxxxx.......|............|............|............|</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/>xxxxx..|............|............|............|</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/>/-<sp/><sp/><sp/>xx*xxxx........|............|............|</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>dy<sp/>&lt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/>xxxxxx..|............|............|</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>y_final<sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/>\-<sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xx*xxx.........|............|</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>sy1<sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/>xxxxxB...|............|</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>y_bottom<sp/><sp/>+------------+------------+------------+------------+------------+</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>goal<sp/>is<sp/>to<sp/>measure<sp/>the<sp/>area<sp/>covered<sp/>by<sp/>&apos;.&apos;<sp/>in<sp/>each<sp/>pixel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3187"><highlight class="normal"></highlight></codeline>
<codeline lineno="3188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>x2<sp/>is<sp/>right<sp/>at<sp/>the<sp/>right<sp/>edge<sp/>of<sp/>x1,<sp/>y_crossing<sp/>can<sp/>blow<sp/>up,<sp/>github<sp/>#1057</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>@TODO:<sp/>maybe<sp/>test<sp/>against<sp/>sy1<sp/>rather<sp/>than<sp/>y_bottom?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y_crossing<sp/>&gt;<sp/>y_bottom)</highlight></codeline>
<codeline lineno="3191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_crossing<sp/>=<sp/>y_bottom;</highlight></codeline>
<codeline lineno="3192"><highlight class="normal"></highlight></codeline>
<codeline lineno="3193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sign<sp/>=<sp/>e-&gt;direction;</highlight></codeline>
<codeline lineno="3194"><highlight class="normal"></highlight></codeline>
<codeline lineno="3195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>area<sp/>of<sp/>the<sp/>rectangle<sp/>covered<sp/>from<sp/>sy0..y_crossing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>area<sp/>=<sp/>sign<sp/>*<sp/>(y_crossing-sy0);</highlight></codeline>
<codeline lineno="3197"><highlight class="normal"></highlight></codeline>
<codeline lineno="3198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>area<sp/>of<sp/>the<sp/>triangle<sp/>(x_top,sy0),<sp/>(x1+1,sy0),<sp/>(x1+1,y_crossing)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanline[x1]<sp/>+=<sp/>stbtt__sized_triangle_area(area,<sp/>x1+1<sp/>-<sp/>x_top);</highlight></codeline>
<codeline lineno="3200"><highlight class="normal"></highlight></codeline>
<codeline lineno="3201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>if<sp/>final<sp/>y_crossing<sp/>is<sp/>blown<sp/>up;<sp/>no<sp/>test<sp/>case<sp/>for<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y_final<sp/>&gt;<sp/>y_bottom)<sp/>{</highlight></codeline>
<codeline lineno="3203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>denom<sp/>=<sp/>(x2<sp/>-<sp/>(x1+1));</highlight></codeline>
<codeline lineno="3204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_final<sp/>=<sp/>y_bottom;</highlight></codeline>
<codeline lineno="3205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(denom<sp/>!=<sp/>0)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>[DEAR<sp/>IMGUI]<sp/>Avoid<sp/>div<sp/>by<sp/>zero<sp/>(https://github.com/nothings/stb/issues/1316)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dy<sp/>=<sp/>(y_final<sp/>-<sp/>y_crossing<sp/>)<sp/>/<sp/>denom;<sp/></highlight><highlight class="comment">//<sp/>if<sp/>denom=0,<sp/>y_final<sp/>=<sp/>y_crossing,<sp/>so<sp/>y_final<sp/>&lt;=<sp/>y_bottom</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3209"><highlight class="normal"></highlight></codeline>
<codeline lineno="3210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>second<sp/>pixel,<sp/>area<sp/>covered<sp/>by<sp/>line<sp/>segment<sp/>found<sp/>in<sp/>first<sp/>pixel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>always<sp/>a<sp/>rectangle<sp/>1<sp/>wide<sp/>*<sp/>the<sp/>height<sp/>of<sp/>that<sp/>line<sp/>segment;<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>exactly<sp/>what<sp/>the<sp/>variable<sp/>&apos;area&apos;<sp/>stores.<sp/>it<sp/>also<sp/>gets<sp/>a<sp/>contribution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>from<sp/>the<sp/>line<sp/>segment<sp/>within<sp/>it.<sp/>the<sp/>THIRD<sp/>pixel<sp/>will<sp/>get<sp/>the<sp/>first</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pixel&apos;s<sp/>rectangle<sp/>contribution,<sp/>the<sp/>second<sp/>pixel&apos;s<sp/>rectangle<sp/>contribution,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>its<sp/>own<sp/>contribution.<sp/>the<sp/>&apos;own<sp/>contribution&apos;<sp/>is<sp/>the<sp/>same<sp/>in<sp/>every<sp/>pixel<sp/>except</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>leftmost<sp/>and<sp/>rightmost,<sp/>a<sp/>trapezoid<sp/>that<sp/>slides<sp/>down<sp/>in<sp/>each<sp/>pixel.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>second<sp/>pixel&apos;s<sp/>contribution<sp/>to<sp/>the<sp/>third<sp/>pixel<sp/>will<sp/>be<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>rectangle<sp/>1<sp/>wide<sp/>times<sp/>the<sp/>height<sp/>change<sp/>in<sp/>the<sp/>second<sp/>pixel,<sp/>which<sp/>is<sp/>dy.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3219"><highlight class="normal"></highlight></codeline>
<codeline lineno="3220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>step<sp/>=<sp/>sign<sp/>*<sp/>dy<sp/>*<sp/>1;<sp/></highlight><highlight class="comment">//<sp/>dy<sp/>is<sp/>dy/dx,<sp/>change<sp/>in<sp/>y<sp/>for<sp/>every<sp/>1<sp/>change<sp/>in<sp/>x,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>which<sp/>multiplied<sp/>by<sp/>1-pixel-width<sp/>is<sp/>how<sp/>much<sp/>pixel<sp/>area<sp/>changes<sp/>for<sp/>each<sp/>step<sp/>in<sp/>x</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>so<sp/>the<sp/>area<sp/>advances<sp/>by<sp/>&apos;step&apos;<sp/>every<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3223"><highlight class="normal"></highlight></codeline>
<codeline lineno="3224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(x<sp/>=<sp/>x1+1;<sp/>x<sp/>&lt;<sp/>x2;<sp/>++x)<sp/>{</highlight></codeline>
<codeline lineno="3225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanline[x]<sp/>+=<sp/>area<sp/>+<sp/>step/2;<sp/></highlight><highlight class="comment">//<sp/>area<sp/>of<sp/>trapezoid<sp/>is<sp/>1*step/2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>area<sp/>+=<sp/>step;</highlight></codeline>
<codeline lineno="3227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imgui__draw_8cpp_1a1123d905f512c19c8d796a6d294a3a84" kindref="member">STBTT_assert</ref>(<ref refid="imgui__draw_8cpp_1a2b639a5c1ed39bb9e223a78b743f3769" kindref="member">STBTT_fabs</ref>(area)<sp/>&lt;=<sp/>1.01f);<sp/></highlight><highlight class="comment">//<sp/>accumulated<sp/>error<sp/>from<sp/>area<sp/>+=<sp/>step<sp/>unless<sp/>we<sp/>round<sp/>step<sp/>down</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imgui__draw_8cpp_1a1123d905f512c19c8d796a6d294a3a84" kindref="member">STBTT_assert</ref>(sy1<sp/>&gt;<sp/>y_final-0.01f);</highlight></codeline>
<codeline lineno="3230"><highlight class="normal"></highlight></codeline>
<codeline lineno="3231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>area<sp/>covered<sp/>in<sp/>the<sp/>last<sp/>pixel<sp/>is<sp/>the<sp/>rectangle<sp/>from<sp/>all<sp/>the<sp/>pixels<sp/>to<sp/>the<sp/>left,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>plus<sp/>the<sp/>trapezoid<sp/>filled<sp/>by<sp/>the<sp/>line<sp/>segment<sp/>in<sp/>this<sp/>pixel<sp/>all<sp/>the<sp/>way<sp/>to<sp/>the<sp/>right<sp/>edge</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanline[x2]<sp/>+=<sp/>area<sp/>+<sp/>sign<sp/>*<sp/>stbtt__position_trapezoid_area(sy1-y_final,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)<sp/>x2,<sp/>x2+1.0f,<sp/>x_bottom,<sp/>x2+1.0f);</highlight></codeline>
<codeline lineno="3234"><highlight class="normal"></highlight></codeline>
<codeline lineno="3235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>rest<sp/>of<sp/>the<sp/>line<sp/>is<sp/>filled<sp/>based<sp/>on<sp/>the<sp/>total<sp/>height<sp/>of<sp/>the<sp/>line<sp/>segment<sp/>in<sp/>this<sp/>pixel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanline_fill[x2]<sp/>+=<sp/>sign<sp/>*<sp/>(sy1-sy0);</highlight></codeline>
<codeline lineno="3237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>edge<sp/>goes<sp/>outside<sp/>of<sp/>box<sp/>we&apos;re<sp/>drawing,<sp/>we<sp/>require</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clipping<sp/>logic.<sp/>since<sp/>this<sp/>does<sp/>not<sp/>match<sp/>the<sp/>intended<sp/>use</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>of<sp/>this<sp/>library,<sp/>we<sp/>use<sp/>a<sp/>different,<sp/>very<sp/>slow<sp/>brute</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>force<sp/>implementation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>note<sp/>though<sp/>that<sp/>this<sp/>does<sp/>happen<sp/>some<sp/>of<sp/>the<sp/>time<sp/>because</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>x_top<sp/>and<sp/>x_bottom<sp/>can<sp/>be<sp/>extrapolated<sp/>at<sp/>the<sp/>top<sp/>&amp;<sp/>bottom<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>shape<sp/>and<sp/>actually<sp/>lie<sp/>outside<sp/>the<sp/>bounding<sp/>box</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x;</highlight></codeline>
<codeline lineno="3247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(x=0;<sp/>x<sp/>&lt;<sp/>len;<sp/>++x)<sp/>{</highlight></codeline>
<codeline lineno="3248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cases:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>there<sp/>can<sp/>be<sp/>up<sp/>to<sp/>two<sp/>intersections<sp/>with<sp/>the<sp/>pixel.<sp/>any<sp/>intersection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>with<sp/>left<sp/>or<sp/>right<sp/>edges<sp/>can<sp/>be<sp/>handled<sp/>by<sp/>splitting<sp/>into<sp/>two<sp/>(or<sp/>three)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>regions.<sp/>intersections<sp/>with<sp/>top<sp/>&amp;<sp/>bottom<sp/>do<sp/>not<sp/>necessitate<sp/>case-wise<sp/>logic.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>old<sp/>way<sp/>of<sp/>doing<sp/>this<sp/>found<sp/>the<sp/>intersections<sp/>with<sp/>the<sp/>left<sp/>&amp;<sp/>right<sp/>edges,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>then<sp/>used<sp/>some<sp/>simple<sp/>logic<sp/>to<sp/>produce<sp/>up<sp/>to<sp/>three<sp/>segments<sp/>in<sp/>sorted<sp/>order</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>from<sp/>top-to-bottom.<sp/>however,<sp/>this<sp/>had<sp/>a<sp/>problem:<sp/>if<sp/>an<sp/>x<sp/>edge<sp/>was<sp/>epsilon</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>across<sp/>the<sp/>x<sp/>border,<sp/>then<sp/>the<sp/>corresponding<sp/>y<sp/>position<sp/>might<sp/>not<sp/>be<sp/>distinct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>from<sp/>the<sp/>other<sp/>y<sp/>segment,<sp/>and<sp/>it<sp/>might<sp/>ignored<sp/>as<sp/>an<sp/>empty<sp/>segment.<sp/>to<sp/>avoid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>that,<sp/>we<sp/>need<sp/>to<sp/>explicitly<sp/>produce<sp/>segments<sp/>based<sp/>on<sp/>x<sp/>positions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3260"><highlight class="normal"></highlight></codeline>
<codeline lineno="3261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>rename<sp/>variables<sp/>to<sp/>clearly-defined<sp/>pairs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y0<sp/>=<sp/>y_top;</highlight></codeline>
<codeline lineno="3263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x1<sp/>=<sp/>(float)<sp/>(x);</highlight></codeline>
<codeline lineno="3264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x2<sp/>=<sp/>(float)<sp/>(x+1);</highlight></codeline>
<codeline lineno="3265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x3<sp/>=<sp/>xb;</highlight></codeline>
<codeline lineno="3266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y3<sp/>=<sp/>y_bottom;</highlight></codeline>
<codeline lineno="3267"><highlight class="normal"></highlight></codeline>
<codeline lineno="3268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>x<sp/>=<sp/>e-&gt;x<sp/>+<sp/>e-&gt;dx<sp/>*<sp/>(y-y_top)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(y-y_top)<sp/>=<sp/>(x<sp/>-<sp/>e-&gt;x)<sp/>/<sp/>e-&gt;dx</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>y<sp/>=<sp/>(x<sp/>-<sp/>e-&gt;x)<sp/>/<sp/>e-&gt;dx<sp/>+<sp/>y_top</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y1<sp/>=<sp/>(x<sp/>-<sp/>x0)<sp/>/<sp/>dx<sp/>+<sp/>y_top;</highlight></codeline>
<codeline lineno="3272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y2<sp/>=<sp/>(x+1<sp/>-<sp/>x0)<sp/>/<sp/>dx<sp/>+<sp/>y_top;</highlight></codeline>
<codeline lineno="3273"><highlight class="normal"></highlight></codeline>
<codeline lineno="3274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x0<sp/>&lt;<sp/>x1<sp/>&amp;&amp;<sp/>x3<sp/>&gt;<sp/>x2)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>three<sp/>segments<sp/>descending<sp/>down-right</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt__handle_clipped_edge(scanline,x,e,<sp/>x0,y0,<sp/>x1,y1);</highlight></codeline>
<codeline lineno="3276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt__handle_clipped_edge(scanline,x,e,<sp/>x1,y1,<sp/>x2,y2);</highlight></codeline>
<codeline lineno="3277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt__handle_clipped_edge(scanline,x,e,<sp/>x2,y2,<sp/>x3,y3);</highlight></codeline>
<codeline lineno="3278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x3<sp/>&lt;<sp/>x1<sp/>&amp;&amp;<sp/>x0<sp/>&gt;<sp/>x2)<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>three<sp/>segments<sp/>descending<sp/>down-left</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt__handle_clipped_edge(scanline,x,e,<sp/>x0,y0,<sp/>x2,y2);</highlight></codeline>
<codeline lineno="3280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt__handle_clipped_edge(scanline,x,e,<sp/>x2,y2,<sp/>x1,y1);</highlight></codeline>
<codeline lineno="3281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt__handle_clipped_edge(scanline,x,e,<sp/>x1,y1,<sp/>x3,y3);</highlight></codeline>
<codeline lineno="3282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x0<sp/>&lt;<sp/>x1<sp/>&amp;&amp;<sp/>x3<sp/>&gt;<sp/>x1)<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>two<sp/>segments<sp/>across<sp/>x,<sp/>down-right</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt__handle_clipped_edge(scanline,x,e,<sp/>x0,y0,<sp/>x1,y1);</highlight></codeline>
<codeline lineno="3284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt__handle_clipped_edge(scanline,x,e,<sp/>x1,y1,<sp/>x3,y3);</highlight></codeline>
<codeline lineno="3285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x3<sp/>&lt;<sp/>x1<sp/>&amp;&amp;<sp/>x0<sp/>&gt;<sp/>x1)<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>two<sp/>segments<sp/>across<sp/>x,<sp/>down-left</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt__handle_clipped_edge(scanline,x,e,<sp/>x0,y0,<sp/>x1,y1);</highlight></codeline>
<codeline lineno="3287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt__handle_clipped_edge(scanline,x,e,<sp/>x1,y1,<sp/>x3,y3);</highlight></codeline>
<codeline lineno="3288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x0<sp/>&lt;<sp/>x2<sp/>&amp;&amp;<sp/>x3<sp/>&gt;<sp/>x2)<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>two<sp/>segments<sp/>across<sp/>x+1,<sp/>down-right</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt__handle_clipped_edge(scanline,x,e,<sp/>x0,y0,<sp/>x2,y2);</highlight></codeline>
<codeline lineno="3290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt__handle_clipped_edge(scanline,x,e,<sp/>x2,y2,<sp/>x3,y3);</highlight></codeline>
<codeline lineno="3291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x3<sp/>&lt;<sp/>x2<sp/>&amp;&amp;<sp/>x0<sp/>&gt;<sp/>x2)<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>two<sp/>segments<sp/>across<sp/>x+1,<sp/>down-left</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt__handle_clipped_edge(scanline,x,e,<sp/>x0,y0,<sp/>x2,y2);</highlight></codeline>
<codeline lineno="3293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt__handle_clipped_edge(scanline,x,e,<sp/>x2,y2,<sp/>x3,y3);</highlight></codeline>
<codeline lineno="3294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>one<sp/>segment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt__handle_clipped_edge(scanline,x,e,<sp/>x0,y0,<sp/>x3,y3);</highlight></codeline>
<codeline lineno="3296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>e<sp/>=<sp/>e-&gt;next;</highlight></codeline>
<codeline lineno="3301"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3302"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3303"><highlight class="normal"></highlight></codeline>
<codeline lineno="3304"><highlight class="normal"></highlight><highlight class="comment">//<sp/>directly<sp/>AA<sp/>rasterize<sp/>edges<sp/>w/o<sp/>supersampling</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3305"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stbtt__rasterize_sorted_edges(<ref refid="structstbtt____bitmap" kindref="compound">stbtt__bitmap</ref><sp/>*result,<sp/>stbtt__edge<sp/>*e,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vsubsample,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>off_x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>off_y,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*userdata)</highlight></codeline>
<codeline lineno="3306"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3307"><highlight class="normal"><sp/><sp/><sp/>stbtt__hheap<sp/>hh<sp/>=<sp/>{<sp/>0,<sp/>0,<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="3308"><highlight class="normal"><sp/><sp/><sp/>stbtt__active_edge<sp/>*active<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3309"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,j=0,<sp/>i;</highlight></codeline>
<codeline lineno="3310"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scanline_data[129],<sp/>*scanline,<sp/>*scanline2;</highlight></codeline>
<codeline lineno="3311"><highlight class="normal"></highlight></codeline>
<codeline lineno="3312"><highlight class="normal"><sp/><sp/><sp/>STBTT__NOTUSED(vsubsample);</highlight></codeline>
<codeline lineno="3313"><highlight class="normal"></highlight></codeline>
<codeline lineno="3314"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result-&gt;<ref refid="structstbtt____bitmap_1afbd607426f0a457b1a871ed902eeb926" kindref="member">w</ref><sp/>&gt;<sp/>64)</highlight></codeline>
<codeline lineno="3315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>scanline<sp/>=<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*)<sp/><ref refid="imgui__draw_8cpp_1a8f6734fe0cb6d6aa09e494602afa96be" kindref="member">STBTT_malloc</ref>((result-&gt;<ref refid="structstbtt____bitmap_1afbd607426f0a457b1a871ed902eeb926" kindref="member">w</ref>*2+1)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">),<sp/>userdata);</highlight></codeline>
<codeline lineno="3316"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>scanline<sp/>=<sp/>scanline_data;</highlight></codeline>
<codeline lineno="3318"><highlight class="normal"></highlight></codeline>
<codeline lineno="3319"><highlight class="normal"><sp/><sp/><sp/>scanline2<sp/>=<sp/>scanline<sp/>+<sp/>result-&gt;<ref refid="structstbtt____bitmap_1afbd607426f0a457b1a871ed902eeb926" kindref="member">w</ref>;</highlight></codeline>
<codeline lineno="3320"><highlight class="normal"></highlight></codeline>
<codeline lineno="3321"><highlight class="normal"><sp/><sp/><sp/>y<sp/>=<sp/>off_y;</highlight></codeline>
<codeline lineno="3322"><highlight class="normal"><sp/><sp/><sp/>e[n].y0<sp/>=<sp/>(float)<sp/>(off_y<sp/>+<sp/>result-&gt;<ref refid="structstbtt____bitmap_1a2afc802e26e9f1dda897ac16ecfff10e" kindref="member">h</ref>)<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="3323"><highlight class="normal"></highlight></codeline>
<codeline lineno="3324"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(j<sp/>&lt;<sp/>result-&gt;h)<sp/>{</highlight></codeline>
<codeline lineno="3325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>find<sp/>center<sp/>of<sp/>pixel<sp/>for<sp/>this<sp/>scanline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scan_y_top<sp/><sp/><sp/><sp/>=<sp/>y<sp/>+<sp/>0.0f;</highlight></codeline>
<codeline lineno="3327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scan_y_bottom<sp/>=<sp/>y<sp/>+<sp/>1.0f;</highlight></codeline>
<codeline lineno="3328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbtt__active_edge<sp/>**step<sp/>=<sp/>&amp;active;</highlight></codeline>
<codeline lineno="3329"><highlight class="normal"></highlight></codeline>
<codeline lineno="3330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>STBTT_memset(scanline<sp/>,<sp/>0,<sp/>result-&gt;<ref refid="structstbtt____bitmap_1afbd607426f0a457b1a871ed902eeb926" kindref="member">w</ref>*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(scanline[0]));</highlight></codeline>
<codeline lineno="3331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>STBTT_memset(scanline2,<sp/>0,<sp/>(result-&gt;<ref refid="structstbtt____bitmap_1afbd607426f0a457b1a871ed902eeb926" kindref="member">w</ref>+1)*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(scanline[0]));</highlight></codeline>
<codeline lineno="3332"><highlight class="normal"></highlight></codeline>
<codeline lineno="3333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>all<sp/>active<sp/>edges;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>remove<sp/>all<sp/>active<sp/>edges<sp/>that<sp/>terminate<sp/>before<sp/>the<sp/>top<sp/>of<sp/>this<sp/>scanline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*step)<sp/>{</highlight></codeline>
<codeline lineno="3336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt__active_edge<sp/>*<sp/>z<sp/>=<sp/>*step;</highlight></codeline>
<codeline lineno="3337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(z-&gt;ey<sp/>&lt;=<sp/>scan_y_top)<sp/>{</highlight></codeline>
<codeline lineno="3338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*step<sp/>=<sp/>z-&gt;next;<sp/></highlight><highlight class="comment">//<sp/>delete<sp/>from<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imgui__draw_8cpp_1a1123d905f512c19c8d796a6d294a3a84" kindref="member">STBTT_assert</ref>(z-&gt;direction);</highlight></codeline>
<codeline lineno="3340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z-&gt;direction<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt__hheap_free(&amp;hh,<sp/>z);</highlight></codeline>
<codeline lineno="3342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>step<sp/>=<sp/>&amp;((*step)-&gt;next);<sp/></highlight><highlight class="comment">//<sp/>advance<sp/>through<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3346"><highlight class="normal"></highlight></codeline>
<codeline lineno="3347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>insert<sp/>all<sp/>edges<sp/>that<sp/>start<sp/>before<sp/>the<sp/>bottom<sp/>of<sp/>this<sp/>scanline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(e-&gt;y0<sp/>&lt;=<sp/>scan_y_bottom)<sp/>{</highlight></codeline>
<codeline lineno="3349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(e-&gt;y0<sp/>!=<sp/>e-&gt;y1)<sp/>{</highlight></codeline>
<codeline lineno="3350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt__active_edge<sp/>*z<sp/>=<sp/>stbtt__new_active(&amp;hh,<sp/>e,<sp/>off_x,<sp/>scan_y_top,<sp/>userdata);</highlight></codeline>
<codeline lineno="3351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(z<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="3352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>off_y<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="3353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(z-&gt;ey<sp/>&lt;<sp/>scan_y_top)<sp/>{</highlight></codeline>
<codeline lineno="3354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>can<sp/>happen<sp/>due<sp/>to<sp/>subpixel<sp/>positioning<sp/>and<sp/>some<sp/>kind<sp/>of<sp/>fp<sp/>rounding<sp/>error<sp/>i<sp/>think</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z-&gt;ey<sp/>=<sp/>scan_y_top;</highlight></codeline>
<codeline lineno="3356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imgui__draw_8cpp_1a1123d905f512c19c8d796a6d294a3a84" kindref="member">STBTT_assert</ref>(z-&gt;ey<sp/>&gt;=<sp/>scan_y_top);<sp/></highlight><highlight class="comment">//<sp/>if<sp/>we<sp/>get<sp/>really<sp/>unlucky<sp/>a<sp/>tiny<sp/>bit<sp/>of<sp/>an<sp/>edge<sp/>can<sp/>be<sp/>out<sp/>of<sp/>bounds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>insert<sp/>at<sp/>front</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z-&gt;next<sp/>=<sp/>active;</highlight></codeline>
<codeline lineno="3361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>active<sp/>=<sp/>z;</highlight></codeline>
<codeline lineno="3362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++e;</highlight></codeline>
<codeline lineno="3365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3366"><highlight class="normal"></highlight></codeline>
<codeline lineno="3367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>process<sp/>all<sp/>active<sp/>edges</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(active)</highlight></codeline>
<codeline lineno="3369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt__fill_active_edges_new(scanline,<sp/>scanline2+1,<sp/>result-&gt;<ref refid="structstbtt____bitmap_1afbd607426f0a457b1a871ed902eeb926" kindref="member">w</ref>,<sp/>active,<sp/>scan_y_top);</highlight></codeline>
<codeline lineno="3370"><highlight class="normal"></highlight></codeline>
<codeline lineno="3371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>sum<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>result-&gt;<ref refid="structstbtt____bitmap_1afbd607426f0a457b1a871ed902eeb926" kindref="member">w</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="3374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>k;</highlight></codeline>
<codeline lineno="3375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m;</highlight></codeline>
<codeline lineno="3376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sum<sp/>+=<sp/>scanline2[i];</highlight></codeline>
<codeline lineno="3377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k<sp/>=<sp/>scanline[i]<sp/>+<sp/>sum;</highlight></codeline>
<codeline lineno="3378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k<sp/>=<sp/>(float)<sp/><ref refid="imgui__draw_8cpp_1a2b639a5c1ed39bb9e223a78b743f3769" kindref="member">STBTT_fabs</ref>(k)*255<sp/>+<sp/>0.5f;</highlight></codeline>
<codeline lineno="3379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m<sp/>=<sp/>(int)<sp/>k;</highlight></codeline>
<codeline lineno="3380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m<sp/>&gt;<sp/>255)<sp/>m<sp/>=<sp/>255;</highlight></codeline>
<codeline lineno="3381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result-&gt;<ref refid="structstbtt____bitmap_1ae6be77625faf55b110eaaffde5c7733c" kindref="member">pixels</ref>[j*result-&gt;<ref refid="structstbtt____bitmap_1a48ee6b550ee4f1d85bfc32c62c0e9a98" kindref="member">stride</ref><sp/>+<sp/>i]<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>char)<sp/>m;</highlight></codeline>
<codeline lineno="3382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>advance<sp/>all<sp/>the<sp/>edges</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>step<sp/>=<sp/>&amp;active;</highlight></codeline>
<codeline lineno="3386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*step)<sp/>{</highlight></codeline>
<codeline lineno="3387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt__active_edge<sp/>*z<sp/>=<sp/>*step;</highlight></codeline>
<codeline lineno="3388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z-&gt;fx<sp/>+=<sp/>z-&gt;fdx;<sp/></highlight><highlight class="comment">//<sp/>advance<sp/>to<sp/>position<sp/>for<sp/>current<sp/>scanline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>step<sp/>=<sp/>&amp;((*step)-&gt;next);<sp/></highlight><highlight class="comment">//<sp/>advance<sp/>through<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3391"><highlight class="normal"></highlight></codeline>
<codeline lineno="3392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++y;</highlight></codeline>
<codeline lineno="3393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++j;</highlight></codeline>
<codeline lineno="3394"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3395"><highlight class="normal"></highlight></codeline>
<codeline lineno="3396"><highlight class="normal"><sp/><sp/><sp/>stbtt__hheap_cleanup(&amp;hh,<sp/>userdata);</highlight></codeline>
<codeline lineno="3397"><highlight class="normal"></highlight></codeline>
<codeline lineno="3398"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scanline<sp/>!=<sp/>scanline_data)</highlight></codeline>
<codeline lineno="3399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imgui__draw_8cpp_1a357d3564409e68f1b694e06f7beeca7e" kindref="member">STBTT_free</ref>(scanline,<sp/>userdata);</highlight></codeline>
<codeline lineno="3400"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3401"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3402"><highlight class="normal"></highlight><highlight class="preprocessor">#error<sp/>&quot;Unrecognized<sp/>value<sp/>of<sp/>STBTT_RASTERIZER_VERSION&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3403"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3404"><highlight class="normal"></highlight></codeline>
<codeline lineno="3405"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBTT__COMPARE(a,b)<sp/><sp/>((a)-&gt;y0<sp/>&lt;<sp/>(b)-&gt;y0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3406"><highlight class="normal"></highlight></codeline>
<codeline lineno="3407"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stbtt__sort_edges_ins_sort(stbtt__edge<sp/>*p,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n)</highlight></codeline>
<codeline lineno="3408"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3409"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,j;</highlight></codeline>
<codeline lineno="3410"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=1;<sp/>i<sp/>&lt;<sp/>n;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="3411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbtt__edge<sp/>t<sp/>=<sp/>p[i],<sp/>*<ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref><sp/>=<sp/>&amp;t;</highlight></codeline>
<codeline lineno="3412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>j<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="3413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(j<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="3414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt__edge<sp/>*b<sp/>=<sp/>&amp;p[j-1];</highlight></codeline>
<codeline lineno="3415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>STBTT__COMPARE(<ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>,b);</highlight></codeline>
<codeline lineno="3416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!c)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p[j]<sp/>=<sp/>p[j-1];</highlight></codeline>
<codeline lineno="3418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--j;</highlight></codeline>
<codeline lineno="3419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>!=<sp/>j)</highlight></codeline>
<codeline lineno="3421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p[j]<sp/>=<sp/>t;</highlight></codeline>
<codeline lineno="3422"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3423"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3424"><highlight class="normal"></highlight></codeline>
<codeline lineno="3425"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stbtt__sort_edges_quicksort(stbtt__edge<sp/>*p,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n)</highlight></codeline>
<codeline lineno="3426"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3427"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>threshold<sp/>for<sp/>transitioning<sp/>to<sp/>insertion<sp/>sort<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3428"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(n<sp/>&gt;<sp/>12)<sp/>{</highlight></codeline>
<codeline lineno="3429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbtt__edge<sp/>t;</highlight></codeline>
<codeline lineno="3430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c01,c12,c,m,i,j;</highlight></codeline>
<codeline lineno="3431"><highlight class="normal"></highlight></codeline>
<codeline lineno="3432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>compute<sp/>median<sp/>of<sp/>three<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m<sp/>=<sp/>n<sp/>&gt;&gt;<sp/>1;</highlight></codeline>
<codeline lineno="3434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c01<sp/>=<sp/>STBTT__COMPARE(&amp;p[0],&amp;p[m]);</highlight></codeline>
<codeline lineno="3435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c12<sp/>=<sp/>STBTT__COMPARE(&amp;p[m],&amp;p[n-1]);</highlight></codeline>
<codeline lineno="3436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>0<sp/>&gt;=<sp/>mid<sp/>&gt;=<sp/>end,<sp/>or<sp/>0<sp/>&lt;<sp/>mid<sp/>&lt;<sp/>end,<sp/>then<sp/>use<sp/>mid<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c01<sp/>!=<sp/>c12)<sp/>{</highlight></codeline>
<codeline lineno="3438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>otherwise,<sp/>we&apos;ll<sp/>need<sp/>to<sp/>swap<sp/>something<sp/>else<sp/>to<sp/>middle<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>z;</highlight></codeline>
<codeline lineno="3440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>STBTT__COMPARE(&amp;p[0],&amp;p[n-1]);</highlight></codeline>
<codeline lineno="3441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>0&gt;mid<sp/>&amp;&amp;<sp/>mid&lt;n:<sp/><sp/>0&gt;n<sp/>=&gt;<sp/>n;<sp/>0&lt;n<sp/>=&gt;<sp/>0<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>0&lt;mid<sp/>&amp;&amp;<sp/>mid&gt;n:<sp/><sp/>0&gt;n<sp/>=&gt;<sp/>0;<sp/>0&lt;n<sp/>=&gt;<sp/>n<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z<sp/>=<sp/>(c<sp/>==<sp/>c12)<sp/>?<sp/>0<sp/>:<sp/>n-1;</highlight></codeline>
<codeline lineno="3444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>=<sp/>p[z];</highlight></codeline>
<codeline lineno="3445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p[z]<sp/>=<sp/>p[m];</highlight></codeline>
<codeline lineno="3446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p[m]<sp/>=<sp/>t;</highlight></codeline>
<codeline lineno="3447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>now<sp/>p[m]<sp/>is<sp/>the<sp/>median-of-three<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>swap<sp/>it<sp/>to<sp/>the<sp/>beginning<sp/>so<sp/>it<sp/>won&apos;t<sp/>move<sp/>around<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>=<sp/>p[0];</highlight></codeline>
<codeline lineno="3451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p[0]<sp/>=<sp/>p[m];</highlight></codeline>
<codeline lineno="3452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p[m]<sp/>=<sp/>t;</highlight></codeline>
<codeline lineno="3453"><highlight class="normal"></highlight></codeline>
<codeline lineno="3454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>partition<sp/>loop<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>i=1;</highlight></codeline>
<codeline lineno="3456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>j=n-1;</highlight></codeline>
<codeline lineno="3457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;;)<sp/>{</highlight></codeline>
<codeline lineno="3458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>handling<sp/>of<sp/>equality<sp/>is<sp/>crucial<sp/>here<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>for<sp/>sentinels<sp/>&amp;<sp/>efficiency<sp/>with<sp/>duplicates<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;;++i)<sp/>{</highlight></codeline>
<codeline lineno="3461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!STBTT__COMPARE(&amp;p[i],<sp/>&amp;p[0]))<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;;--j)<sp/>{</highlight></codeline>
<codeline lineno="3464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!STBTT__COMPARE(&amp;p[0],<sp/>&amp;p[j]))<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>make<sp/>sure<sp/>we<sp/>haven&apos;t<sp/>crossed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&gt;=<sp/>j)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>=<sp/>p[i];</highlight></codeline>
<codeline lineno="3469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p[i]<sp/>=<sp/>p[j];</highlight></codeline>
<codeline lineno="3470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p[j]<sp/>=<sp/>t;</highlight></codeline>
<codeline lineno="3471"><highlight class="normal"></highlight></codeline>
<codeline lineno="3472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="3473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--j;</highlight></codeline>
<codeline lineno="3474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>recurse<sp/>on<sp/>smaller<sp/>side,<sp/>iterate<sp/>on<sp/>larger<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j<sp/>&lt;<sp/>(n-i))<sp/>{</highlight></codeline>
<codeline lineno="3477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt__sort_edges_quicksort(p,j);</highlight></codeline>
<codeline lineno="3478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/>p+i;</highlight></codeline>
<codeline lineno="3479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>n-i;</highlight></codeline>
<codeline lineno="3480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt__sort_edges_quicksort(p+i,<sp/>n-i);</highlight></codeline>
<codeline lineno="3482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>j;</highlight></codeline>
<codeline lineno="3483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3484"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3485"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3486"><highlight class="normal"></highlight></codeline>
<codeline lineno="3487"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stbtt__sort_edges(stbtt__edge<sp/>*p,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n)</highlight></codeline>
<codeline lineno="3488"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3489"><highlight class="normal"><sp/><sp/><sp/>stbtt__sort_edges_quicksort(p,<sp/>n);</highlight></codeline>
<codeline lineno="3490"><highlight class="normal"><sp/><sp/><sp/>stbtt__sort_edges_ins_sort(p,<sp/>n);</highlight></codeline>
<codeline lineno="3491"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3492"><highlight class="normal"></highlight></codeline>
<codeline lineno="3493"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3494"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3495"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,y;</highlight></codeline>
<codeline lineno="3496"><highlight class="normal">}<sp/>stbtt__point;</highlight></codeline>
<codeline lineno="3497"><highlight class="normal"></highlight></codeline>
<codeline lineno="3498"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stbtt__rasterize(<ref refid="structstbtt____bitmap" kindref="compound">stbtt__bitmap</ref><sp/>*result,<sp/>stbtt__point<sp/>*pts,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*wcount,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>windings,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale_x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale_y,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>shift_x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>shift_y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>off_x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>off_y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>invert,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*userdata)</highlight></codeline>
<codeline lineno="3499"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3500"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y_scale_inv<sp/>=<sp/>invert<sp/>?<sp/>-scale_y<sp/>:<sp/>scale_y;</highlight></codeline>
<codeline lineno="3501"><highlight class="normal"><sp/><sp/><sp/>stbtt__edge<sp/>*e;</highlight></codeline>
<codeline lineno="3502"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,i,j,k,m;</highlight></codeline>
<codeline lineno="3503"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>STBTT_RASTERIZER_VERSION<sp/>==<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3504"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vsubsample<sp/>=<sp/>result-&gt;<ref refid="structstbtt____bitmap_1a2afc802e26e9f1dda897ac16ecfff10e" kindref="member">h</ref><sp/>&lt;<sp/>8<sp/>?<sp/>15<sp/>:<sp/>5;</highlight></codeline>
<codeline lineno="3505"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>STBTT_RASTERIZER_VERSION<sp/>==<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3506"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vsubsample<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="3507"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3508"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#error<sp/>&quot;Unrecognized<sp/>value<sp/>of<sp/>STBTT_RASTERIZER_VERSION&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3509"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3510"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>vsubsample<sp/>should<sp/>divide<sp/>255<sp/>evenly;<sp/>otherwise<sp/>we<sp/>won&apos;t<sp/>reach<sp/>full<sp/>opacity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3511"><highlight class="normal"></highlight></codeline>
<codeline lineno="3512"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>we<sp/>have<sp/>to<sp/>blow<sp/>out<sp/>the<sp/>windings<sp/>into<sp/>explicit<sp/>edge<sp/>lists</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3513"><highlight class="normal"><sp/><sp/><sp/>n<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3514"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>windings;<sp/>++i)</highlight></codeline>
<codeline lineno="3515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>+=<sp/>wcount[i];</highlight></codeline>
<codeline lineno="3516"><highlight class="normal"></highlight></codeline>
<codeline lineno="3517"><highlight class="normal"><sp/><sp/><sp/>e<sp/>=<sp/>(stbtt__edge<sp/>*)<sp/><ref refid="imgui__draw_8cpp_1a8f6734fe0cb6d6aa09e494602afa96be" kindref="member">STBTT_malloc</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*e)<sp/>*<sp/>(n+1),<sp/>userdata);<sp/></highlight><highlight class="comment">//<sp/>add<sp/>an<sp/>extra<sp/>one<sp/>as<sp/>a<sp/>sentinel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3518"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(e<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3519"><highlight class="normal"><sp/><sp/><sp/>n<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3520"><highlight class="normal"></highlight></codeline>
<codeline lineno="3521"><highlight class="normal"><sp/><sp/><sp/>m=0;</highlight></codeline>
<codeline lineno="3522"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>windings;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="3523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbtt__point<sp/>*p<sp/>=<sp/>pts<sp/>+<sp/>m;</highlight></codeline>
<codeline lineno="3524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m<sp/>+=<sp/>wcount[i];</highlight></codeline>
<codeline lineno="3525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>j<sp/>=<sp/>wcount[i]-1;</highlight></codeline>
<codeline lineno="3526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k=0;<sp/>k<sp/>&lt;<sp/>wcount[i];<sp/>j=k++)<sp/>{</highlight></codeline>
<codeline lineno="3527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>=k,b=j;</highlight></codeline>
<codeline lineno="3528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>skip<sp/>the<sp/>edge<sp/>if<sp/>horizontal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p[j].y<sp/>==<sp/>p[k].y)</highlight></codeline>
<codeline lineno="3530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>edge<sp/>from<sp/>j<sp/>to<sp/>k<sp/>to<sp/>the<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e[n].invert<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(invert<sp/>?<sp/>p[j].y<sp/>&gt;<sp/>p[k].y<sp/>:<sp/>p[j].y<sp/>&lt;<sp/>p[k].y)<sp/>{</highlight></codeline>
<codeline lineno="3534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e[n].invert<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="3535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>=j,b=k;</highlight></codeline>
<codeline lineno="3536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e[n].x0<sp/>=<sp/>p[<ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>].x<sp/>*<sp/>scale_x<sp/>+<sp/>shift_x;</highlight></codeline>
<codeline lineno="3538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e[n].y0<sp/>=<sp/>(p[<ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>].y<sp/>*<sp/>y_scale_inv<sp/>+<sp/>shift_y)<sp/>*<sp/>vsubsample;</highlight></codeline>
<codeline lineno="3539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e[n].x1<sp/>=<sp/>p[b].x<sp/>*<sp/>scale_x<sp/>+<sp/>shift_x;</highlight></codeline>
<codeline lineno="3540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e[n].y1<sp/>=<sp/>(p[b].y<sp/>*<sp/>y_scale_inv<sp/>+<sp/>shift_y)<sp/>*<sp/>vsubsample;</highlight></codeline>
<codeline lineno="3541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++n;</highlight></codeline>
<codeline lineno="3542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3543"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3544"><highlight class="normal"></highlight></codeline>
<codeline lineno="3545"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>sort<sp/>the<sp/>edges<sp/>by<sp/>their<sp/>highest<sp/>point<sp/>(should<sp/>snap<sp/>to<sp/>integer,<sp/>and<sp/>then<sp/>by<sp/>x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3546"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//STBTT_sort(e,<sp/>n,<sp/>sizeof(e[0]),<sp/>stbtt__edge_compare);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3547"><highlight class="normal"><sp/><sp/><sp/>stbtt__sort_edges(e,<sp/>n);</highlight></codeline>
<codeline lineno="3548"><highlight class="normal"></highlight></codeline>
<codeline lineno="3549"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>now,<sp/>traverse<sp/>the<sp/>scanlines<sp/>and<sp/>find<sp/>the<sp/>intersections<sp/>on<sp/>each<sp/>scanline,<sp/>use<sp/>xor<sp/>winding<sp/>rule</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3550"><highlight class="normal"><sp/><sp/><sp/>stbtt__rasterize_sorted_edges(result,<sp/>e,<sp/>n,<sp/>vsubsample,<sp/>off_x,<sp/>off_y,<sp/>userdata);</highlight></codeline>
<codeline lineno="3551"><highlight class="normal"></highlight></codeline>
<codeline lineno="3552"><highlight class="normal"><sp/><sp/><sp/><ref refid="imgui__draw_8cpp_1a357d3564409e68f1b694e06f7beeca7e" kindref="member">STBTT_free</ref>(e,<sp/>userdata);</highlight></codeline>
<codeline lineno="3553"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3554"><highlight class="normal"></highlight></codeline>
<codeline lineno="3555"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stbtt__add_point(stbtt__point<sp/>*points,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y)</highlight></codeline>
<codeline lineno="3556"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3557"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!points)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>during<sp/>first<sp/>pass,<sp/>it&apos;s<sp/>unallocated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3558"><highlight class="normal"><sp/><sp/><sp/>points[n].x<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="3559"><highlight class="normal"><sp/><sp/><sp/>points[n].y<sp/>=<sp/>y;</highlight></codeline>
<codeline lineno="3560"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3561"><highlight class="normal"></highlight></codeline>
<codeline lineno="3562"><highlight class="normal"></highlight><highlight class="comment">//<sp/>tessellate<sp/>until<sp/>threshold<sp/>p<sp/>is<sp/>happy...<sp/>@TODO<sp/>warped<sp/>to<sp/>compensate<sp/>for<sp/>non-linear<sp/>stretching</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3563"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbtt__tesselate_curve(stbtt__point<sp/>*points,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*num_points,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x0,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y0,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x1,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y1,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x2,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y2,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>objspace_flatness_squared,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n)</highlight></codeline>
<codeline lineno="3564"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3565"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>midpoint</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3566"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>mx<sp/>=<sp/>(x0<sp/>+<sp/>2*x1<sp/>+<sp/>x2)/4;</highlight></codeline>
<codeline lineno="3567"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>my<sp/>=<sp/>(y0<sp/>+<sp/>2*y1<sp/>+<sp/>y2)/4;</highlight></codeline>
<codeline lineno="3568"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>versus<sp/>directly<sp/>drawn<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3569"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dx<sp/>=<sp/>(x0+x2)/2<sp/>-<sp/>mx;</highlight></codeline>
<codeline lineno="3570"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dy<sp/>=<sp/>(y0+y2)/2<sp/>-<sp/>my;</highlight></codeline>
<codeline lineno="3571"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&gt;<sp/>16)<sp/></highlight><highlight class="comment">//<sp/>65536<sp/>segments<sp/>on<sp/>one<sp/>curve<sp/>better<sp/>be<sp/>enough!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="3573"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dx*dx+dy*dy<sp/>&gt;<sp/>objspace_flatness_squared)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>half-pixel<sp/>error<sp/>allowed...<sp/>need<sp/>to<sp/>be<sp/>smaller<sp/>if<sp/>AA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbtt__tesselate_curve(points,<sp/>num_points,<sp/>x0,y0,<sp/>(x0+x1)/2.0f,(y0+y1)/2.0f,<sp/>mx,my,<sp/>objspace_flatness_squared,n+1);</highlight></codeline>
<codeline lineno="3575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbtt__tesselate_curve(points,<sp/>num_points,<sp/>mx,my,<sp/>(x1+x2)/2.0f,(y1+y2)/2.0f,<sp/>x2,y2,<sp/>objspace_flatness_squared,n+1);</highlight></codeline>
<codeline lineno="3576"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbtt__add_point(points,<sp/>*num_points,x2,y2);</highlight></codeline>
<codeline lineno="3578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*num_points<sp/>=<sp/>*num_points+1;</highlight></codeline>
<codeline lineno="3579"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3580"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="3581"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3582"><highlight class="normal"></highlight></codeline>
<codeline lineno="3583"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stbtt__tesselate_cubic(stbtt__point<sp/>*points,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*num_points,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x0,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y0,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x1,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y1,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x2,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y2,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x3,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y3,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>objspace_flatness_squared,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n)</highlight></codeline>
<codeline lineno="3584"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3585"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>@TODO<sp/>this<sp/>&quot;flatness&quot;<sp/>calculation<sp/>is<sp/>just<sp/>made-up<sp/>nonsense<sp/>that<sp/>seems<sp/>to<sp/>work<sp/>well<sp/>enough</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3586"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dx0<sp/>=<sp/>x1-x0;</highlight></codeline>
<codeline lineno="3587"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dy0<sp/>=<sp/>y1-y0;</highlight></codeline>
<codeline lineno="3588"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dx1<sp/>=<sp/>x2-x1;</highlight></codeline>
<codeline lineno="3589"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dy1<sp/>=<sp/>y2-y1;</highlight></codeline>
<codeline lineno="3590"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dx2<sp/>=<sp/>x3-x2;</highlight></codeline>
<codeline lineno="3591"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dy2<sp/>=<sp/>y3-y2;</highlight></codeline>
<codeline lineno="3592"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dx<sp/>=<sp/>x3-x0;</highlight></codeline>
<codeline lineno="3593"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dy<sp/>=<sp/>y3-y0;</highlight></codeline>
<codeline lineno="3594"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>longlen<sp/>=<sp/>(float)<sp/>(<ref refid="imgui__draw_8cpp_1ace1fcbebd394a5bed76bc9b97dbe8d5a" kindref="member">STBTT_sqrt</ref>(dx0*dx0+dy0*dy0)+<ref refid="imgui__draw_8cpp_1ace1fcbebd394a5bed76bc9b97dbe8d5a" kindref="member">STBTT_sqrt</ref>(dx1*dx1+dy1*dy1)+<ref refid="imgui__draw_8cpp_1ace1fcbebd394a5bed76bc9b97dbe8d5a" kindref="member">STBTT_sqrt</ref>(dx2*dx2+dy2*dy2));</highlight></codeline>
<codeline lineno="3595"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>shortlen<sp/>=<sp/>(float)<sp/><ref refid="imgui__draw_8cpp_1ace1fcbebd394a5bed76bc9b97dbe8d5a" kindref="member">STBTT_sqrt</ref>(dx*dx+dy*dy);</highlight></codeline>
<codeline lineno="3596"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>flatness_squared<sp/>=<sp/>longlen*longlen-shortlen*shortlen;</highlight></codeline>
<codeline lineno="3597"><highlight class="normal"></highlight></codeline>
<codeline lineno="3598"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&gt;<sp/>16)<sp/></highlight><highlight class="comment">//<sp/>65536<sp/>segments<sp/>on<sp/>one<sp/>curve<sp/>better<sp/>be<sp/>enough!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3600"><highlight class="normal"></highlight></codeline>
<codeline lineno="3601"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flatness_squared<sp/>&gt;<sp/>objspace_flatness_squared)<sp/>{</highlight></codeline>
<codeline lineno="3602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x01<sp/>=<sp/>(x0+x1)/2;</highlight></codeline>
<codeline lineno="3603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y01<sp/>=<sp/>(y0+y1)/2;</highlight></codeline>
<codeline lineno="3604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x12<sp/>=<sp/>(x1+x2)/2;</highlight></codeline>
<codeline lineno="3605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y12<sp/>=<sp/>(y1+y2)/2;</highlight></codeline>
<codeline lineno="3606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x23<sp/>=<sp/>(x2+x3)/2;</highlight></codeline>
<codeline lineno="3607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y23<sp/>=<sp/>(y2+y3)/2;</highlight></codeline>
<codeline lineno="3608"><highlight class="normal"></highlight></codeline>
<codeline lineno="3609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>xa<sp/>=<sp/>(x01+x12)/2;</highlight></codeline>
<codeline lineno="3610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ya<sp/>=<sp/>(y01+y12)/2;</highlight></codeline>
<codeline lineno="3611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>xb<sp/>=<sp/>(x12+x23)/2;</highlight></codeline>
<codeline lineno="3612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>yb<sp/>=<sp/>(y12+y23)/2;</highlight></codeline>
<codeline lineno="3613"><highlight class="normal"></highlight></codeline>
<codeline lineno="3614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>mx<sp/>=<sp/>(xa+xb)/2;</highlight></codeline>
<codeline lineno="3615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>my<sp/>=<sp/>(ya+yb)/2;</highlight></codeline>
<codeline lineno="3616"><highlight class="normal"></highlight></codeline>
<codeline lineno="3617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbtt__tesselate_cubic(points,<sp/>num_points,<sp/>x0,y0,<sp/>x01,y01,<sp/>xa,ya,<sp/>mx,my,<sp/>objspace_flatness_squared,n+1);</highlight></codeline>
<codeline lineno="3618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbtt__tesselate_cubic(points,<sp/>num_points,<sp/>mx,my,<sp/>xb,yb,<sp/>x23,y23,<sp/>x3,y3,<sp/>objspace_flatness_squared,n+1);</highlight></codeline>
<codeline lineno="3619"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbtt__add_point(points,<sp/>*num_points,x3,y3);</highlight></codeline>
<codeline lineno="3621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*num_points<sp/>=<sp/>*num_points+1;</highlight></codeline>
<codeline lineno="3622"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3623"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3624"><highlight class="normal"></highlight></codeline>
<codeline lineno="3625"><highlight class="normal"></highlight><highlight class="comment">//<sp/>returns<sp/>number<sp/>of<sp/>contours</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3626"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>stbtt__point<sp/>*stbtt_FlattenCurves(<ref refid="structstbtt__vertex" kindref="compound">stbtt_vertex</ref><sp/>*vertices,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_verts,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>objspace_flatness,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>**contour_lengths,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*num_contours,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*userdata)</highlight></codeline>
<codeline lineno="3627"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3628"><highlight class="normal"><sp/><sp/><sp/>stbtt__point<sp/>*points=0;</highlight></codeline>
<codeline lineno="3629"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_points=0;</highlight></codeline>
<codeline lineno="3630"><highlight class="normal"></highlight></codeline>
<codeline lineno="3631"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>objspace_flatness_squared<sp/>=<sp/>objspace_flatness<sp/>*<sp/>objspace_flatness;</highlight></codeline>
<codeline lineno="3632"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,n=0,start=0,<sp/>pass;</highlight></codeline>
<codeline lineno="3633"><highlight class="normal"></highlight></codeline>
<codeline lineno="3634"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>count<sp/>how<sp/>many<sp/>&quot;moves&quot;<sp/>there<sp/>are<sp/>to<sp/>get<sp/>the<sp/>contour<sp/>count</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3635"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>num_verts;<sp/>++i)</highlight></codeline>
<codeline lineno="3636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vertices[i].type<sp/>==<sp/><ref refid="imstb__truetype_8h_1a9dff5253600497fb00c1c785dd5a309dab335ba97e1798b621313de85a9a6e69d" kindref="member">STBTT_vmove</ref>)</highlight></codeline>
<codeline lineno="3637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++n;</highlight></codeline>
<codeline lineno="3638"><highlight class="normal"></highlight></codeline>
<codeline lineno="3639"><highlight class="normal"><sp/><sp/><sp/>*num_contours<sp/>=<sp/>n;</highlight></codeline>
<codeline lineno="3640"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="3641"><highlight class="normal"></highlight></codeline>
<codeline lineno="3642"><highlight class="normal"><sp/><sp/><sp/>*contour_lengths<sp/>=<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*)<sp/><ref refid="imgui__draw_8cpp_1a8f6734fe0cb6d6aa09e494602afa96be" kindref="member">STBTT_malloc</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(**contour_lengths)<sp/>*<sp/>n,<sp/>userdata);</highlight></codeline>
<codeline lineno="3643"><highlight class="normal"></highlight></codeline>
<codeline lineno="3644"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*contour_lengths<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="3645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*num_contours<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="3647"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3648"><highlight class="normal"></highlight></codeline>
<codeline lineno="3649"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>two<sp/>passes<sp/>through<sp/>the<sp/>points<sp/>so<sp/>we<sp/>don&apos;t<sp/>need<sp/>to<sp/>realloc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3650"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(pass=0;<sp/>pass<sp/>&lt;<sp/>2;<sp/>++pass)<sp/>{</highlight></codeline>
<codeline lineno="3651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x=0,y=0;</highlight></codeline>
<codeline lineno="3652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pass<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="3653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>points<sp/>=<sp/>(stbtt__point<sp/>*)<sp/><ref refid="imgui__draw_8cpp_1a8f6734fe0cb6d6aa09e494602afa96be" kindref="member">STBTT_malloc</ref>(num_points<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(points[0]),<sp/>userdata);</highlight></codeline>
<codeline lineno="3654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(points<sp/>==<sp/>NULL)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error;</highlight></codeline>
<codeline lineno="3655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>num_points<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>n=<sp/>-1;</highlight></codeline>
<codeline lineno="3658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>num_verts;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="3659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(vertices[i].type)<sp/>{</highlight></codeline>
<codeline lineno="3660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="imstb__truetype_8h_1a9dff5253600497fb00c1c785dd5a309dab335ba97e1798b621313de85a9a6e69d" kindref="member">STBTT_vmove</ref>:</highlight></codeline>
<codeline lineno="3661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>start<sp/>the<sp/>next<sp/>contour</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="3663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*contour_lengths)[n]<sp/>=<sp/>num_points<sp/>-<sp/>start;</highlight></codeline>
<codeline lineno="3664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++n;</highlight></codeline>
<codeline lineno="3665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start<sp/>=<sp/>num_points;</highlight></codeline>
<codeline lineno="3666"><highlight class="normal"></highlight></codeline>
<codeline lineno="3667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>vertices[i].<ref refid="structstbtt__vertex_1a81773edbe760d0e090561a3c1e86c919" kindref="member">x</ref>,<sp/>y<sp/>=<sp/>vertices[i].<ref refid="structstbtt__vertex_1a9052065ca544b63d537325b246928cfc" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="3668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt__add_point(points,<sp/>num_points++,<sp/>x,y);</highlight></codeline>
<codeline lineno="3669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="imstb__truetype_8h_1a9dff5253600497fb00c1c785dd5a309dade4bb6465c32e56588f35e5120769e2e" kindref="member">STBTT_vline</ref>:</highlight></codeline>
<codeline lineno="3671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>vertices[i].<ref refid="structstbtt__vertex_1a81773edbe760d0e090561a3c1e86c919" kindref="member">x</ref>,<sp/>y<sp/>=<sp/>vertices[i].<ref refid="structstbtt__vertex_1a9052065ca544b63d537325b246928cfc" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="3672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt__add_point(points,<sp/>num_points++,<sp/>x,<sp/>y);</highlight></codeline>
<codeline lineno="3673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="imstb__truetype_8h_1a9dff5253600497fb00c1c785dd5a309dab9ac3e527ce18873abeab556f6768ce4" kindref="member">STBTT_vcurve</ref>:</highlight></codeline>
<codeline lineno="3675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt__tesselate_curve(points,<sp/>&amp;num_points,<sp/>x,y,</highlight></codeline>
<codeline lineno="3676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vertices[i].cx,<sp/>vertices[i].cy,</highlight></codeline>
<codeline lineno="3677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vertices[i].x,<sp/><sp/>vertices[i].y,</highlight></codeline>
<codeline lineno="3678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>objspace_flatness_squared,<sp/>0);</highlight></codeline>
<codeline lineno="3679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>vertices[i].<ref refid="structstbtt__vertex_1a81773edbe760d0e090561a3c1e86c919" kindref="member">x</ref>,<sp/>y<sp/>=<sp/>vertices[i].<ref refid="structstbtt__vertex_1a9052065ca544b63d537325b246928cfc" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="3680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="imstb__truetype_8h_1a9dff5253600497fb00c1c785dd5a309dab6cd2670234c731eafba404d3a2470fd" kindref="member">STBTT_vcubic</ref>:</highlight></codeline>
<codeline lineno="3682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt__tesselate_cubic(points,<sp/>&amp;num_points,<sp/>x,y,</highlight></codeline>
<codeline lineno="3683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vertices[i].cx,<sp/>vertices[i].cy,</highlight></codeline>
<codeline lineno="3684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vertices[i].cx1,<sp/>vertices[i].cy1,</highlight></codeline>
<codeline lineno="3685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vertices[i].x,<sp/><sp/>vertices[i].y,</highlight></codeline>
<codeline lineno="3686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>objspace_flatness_squared,<sp/>0);</highlight></codeline>
<codeline lineno="3687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>vertices[i].<ref refid="structstbtt__vertex_1a81773edbe760d0e090561a3c1e86c919" kindref="member">x</ref>,<sp/>y<sp/>=<sp/>vertices[i].<ref refid="structstbtt__vertex_1a9052065ca544b63d537325b246928cfc" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="3688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*contour_lengths)[n]<sp/>=<sp/>num_points<sp/>-<sp/>start;</highlight></codeline>
<codeline lineno="3692"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3693"><highlight class="normal"></highlight></codeline>
<codeline lineno="3694"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>points;</highlight></codeline>
<codeline lineno="3695"><highlight class="normal">error:</highlight></codeline>
<codeline lineno="3696"><highlight class="normal"><sp/><sp/><sp/><ref refid="imgui__draw_8cpp_1a357d3564409e68f1b694e06f7beeca7e" kindref="member">STBTT_free</ref>(points,<sp/>userdata);</highlight></codeline>
<codeline lineno="3697"><highlight class="normal"><sp/><sp/><sp/><ref refid="imgui__draw_8cpp_1a357d3564409e68f1b694e06f7beeca7e" kindref="member">STBTT_free</ref>(*contour_lengths,<sp/>userdata);</highlight></codeline>
<codeline lineno="3698"><highlight class="normal"><sp/><sp/><sp/>*contour_lengths<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3699"><highlight class="normal"><sp/><sp/><sp/>*num_contours<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3700"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="3701"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3702"><highlight class="normal"></highlight></codeline>
<codeline lineno="3703"><highlight class="normal"><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="imstb__truetype_8h_1a5b868ef9a9f92e0cc8b6bc0dd52087db" kindref="member">stbtt_Rasterize</ref>(<ref refid="structstbtt____bitmap" kindref="compound">stbtt__bitmap</ref><sp/>*result,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>flatness_in_pixels,<sp/><ref refid="structstbtt__vertex" kindref="compound">stbtt_vertex</ref><sp/>*vertices,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_verts,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale_x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale_y,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>shift_x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>shift_y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x_off,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y_off,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>invert,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*userdata)</highlight></codeline>
<codeline lineno="3704"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3705"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>scale_x<sp/>&gt;<sp/>scale_y<sp/>?<sp/>scale_y<sp/>:<sp/>scale_x;</highlight></codeline>
<codeline lineno="3706"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>winding_count<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3707"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*winding_lengths<sp/><sp/><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3708"><highlight class="normal"><sp/><sp/><sp/>stbtt__point<sp/>*windings<sp/>=<sp/>stbtt_FlattenCurves(vertices,<sp/>num_verts,<sp/>flatness_in_pixels<sp/>/<sp/>scale,<sp/>&amp;winding_lengths,<sp/>&amp;winding_count,<sp/>userdata);</highlight></codeline>
<codeline lineno="3709"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(windings)<sp/>{</highlight></codeline>
<codeline lineno="3710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbtt__rasterize(result,<sp/>windings,<sp/>winding_lengths,<sp/>winding_count,<sp/>scale_x,<sp/>scale_y,<sp/>shift_x,<sp/>shift_y,<sp/>x_off,<sp/>y_off,<sp/>invert,<sp/>userdata);</highlight></codeline>
<codeline lineno="3711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imgui__draw_8cpp_1a357d3564409e68f1b694e06f7beeca7e" kindref="member">STBTT_free</ref>(winding_lengths,<sp/>userdata);</highlight></codeline>
<codeline lineno="3712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imgui__draw_8cpp_1a357d3564409e68f1b694e06f7beeca7e" kindref="member">STBTT_free</ref>(windings,<sp/>userdata);</highlight></codeline>
<codeline lineno="3713"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3714"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3715"><highlight class="normal"></highlight></codeline>
<codeline lineno="3716"><highlight class="normal"><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="imstb__truetype_8h_1a8254e6763560645597c44e00024b58fa" kindref="member">stbtt_FreeBitmap</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*bitmap,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*userdata)</highlight></codeline>
<codeline lineno="3717"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3718"><highlight class="normal"><sp/><sp/><sp/><ref refid="imgui__draw_8cpp_1a357d3564409e68f1b694e06f7beeca7e" kindref="member">STBTT_free</ref>(bitmap,<sp/>userdata);</highlight></codeline>
<codeline lineno="3719"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3720"><highlight class="normal"></highlight></codeline>
<codeline lineno="3721"><highlight class="normal"><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="imstb__truetype_8h_1a7a9824b918bd24da2c0193e61bc9ff24" kindref="member">stbtt_GetGlyphBitmapSubpixel</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref><sp/>*info,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale_x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale_y,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>shift_x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>shift_y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>glyph,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*height,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*xoff,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*yoff)</highlight></codeline>
<codeline lineno="3722"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3723"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ix0,iy0,ix1,iy1;</highlight></codeline>
<codeline lineno="3724"><highlight class="normal"><sp/><sp/><sp/><ref refid="structstbtt____bitmap" kindref="compound">stbtt__bitmap</ref><sp/>gbm;</highlight></codeline>
<codeline lineno="3725"><highlight class="normal"><sp/><sp/><sp/><ref refid="structstbtt__vertex" kindref="compound">stbtt_vertex</ref><sp/>*vertices;</highlight></codeline>
<codeline lineno="3726"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_verts<sp/>=<sp/><ref refid="imstb__truetype_8h_1a695c82840a7d4eaa1d5be00131c9718b" kindref="member">stbtt_GetGlyphShape</ref>(info,<sp/>glyph,<sp/>&amp;vertices);</highlight></codeline>
<codeline lineno="3727"><highlight class="normal"></highlight></codeline>
<codeline lineno="3728"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scale_x<sp/>==<sp/>0)<sp/>scale_x<sp/>=<sp/>scale_y;</highlight></codeline>
<codeline lineno="3729"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scale_y<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="3730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scale_x<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="3731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imgui__draw_8cpp_1a357d3564409e68f1b694e06f7beeca7e" kindref="member">STBTT_free</ref>(vertices,<sp/>info-&gt;<ref refid="structstbtt__fontinfo_1a9c81078df96a7a3f730137151efab285" kindref="member">userdata</ref>);</highlight></codeline>
<codeline lineno="3732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="3733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>scale_y<sp/>=<sp/>scale_x;</highlight></codeline>
<codeline lineno="3735"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3736"><highlight class="normal"></highlight></codeline>
<codeline lineno="3737"><highlight class="normal"><sp/><sp/><sp/><ref refid="imstb__truetype_8h_1a597ef6b92ab0b5800c74478548b4782f" kindref="member">stbtt_GetGlyphBitmapBoxSubpixel</ref>(info,<sp/>glyph,<sp/>scale_x,<sp/>scale_y,<sp/>shift_x,<sp/>shift_y,<sp/>&amp;ix0,&amp;iy0,&amp;ix1,&amp;iy1);</highlight></codeline>
<codeline lineno="3738"><highlight class="normal"></highlight></codeline>
<codeline lineno="3739"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>we<sp/>get<sp/>the<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3740"><highlight class="normal"><sp/><sp/><sp/>gbm.<ref refid="structstbtt____bitmap_1afbd607426f0a457b1a871ed902eeb926" kindref="member">w</ref><sp/>=<sp/>(ix1<sp/>-<sp/>ix0);</highlight></codeline>
<codeline lineno="3741"><highlight class="normal"><sp/><sp/><sp/>gbm.<ref refid="structstbtt____bitmap_1a2afc802e26e9f1dda897ac16ecfff10e" kindref="member">h</ref><sp/>=<sp/>(iy1<sp/>-<sp/>iy0);</highlight></codeline>
<codeline lineno="3742"><highlight class="normal"><sp/><sp/><sp/>gbm.<ref refid="structstbtt____bitmap_1ae6be77625faf55b110eaaffde5c7733c" kindref="member">pixels</ref><sp/>=<sp/>NULL;<sp/></highlight><highlight class="comment">//<sp/>in<sp/>case<sp/>we<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3743"><highlight class="normal"></highlight></codeline>
<codeline lineno="3744"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(width<sp/>)<sp/>*width<sp/><sp/>=<sp/>gbm.<ref refid="structstbtt____bitmap_1afbd607426f0a457b1a871ed902eeb926" kindref="member">w</ref>;</highlight></codeline>
<codeline lineno="3745"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(height)<sp/>*height<sp/>=<sp/>gbm.<ref refid="structstbtt____bitmap_1a2afc802e26e9f1dda897ac16ecfff10e" kindref="member">h</ref>;</highlight></codeline>
<codeline lineno="3746"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xoff<sp/><sp/>)<sp/>*xoff<sp/><sp/><sp/>=<sp/>ix0;</highlight></codeline>
<codeline lineno="3747"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(yoff<sp/><sp/>)<sp/>*yoff<sp/><sp/><sp/>=<sp/>iy0;</highlight></codeline>
<codeline lineno="3748"><highlight class="normal"></highlight></codeline>
<codeline lineno="3749"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gbm.<ref refid="structstbtt____bitmap_1afbd607426f0a457b1a871ed902eeb926" kindref="member">w</ref><sp/>&amp;&amp;<sp/>gbm.<ref refid="structstbtt____bitmap_1a2afc802e26e9f1dda897ac16ecfff10e" kindref="member">h</ref>)<sp/>{</highlight></codeline>
<codeline lineno="3750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gbm.<ref refid="structstbtt____bitmap_1ae6be77625faf55b110eaaffde5c7733c" kindref="member">pixels</ref><sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/><ref refid="imgui__draw_8cpp_1a8f6734fe0cb6d6aa09e494602afa96be" kindref="member">STBTT_malloc</ref>(gbm.<ref refid="structstbtt____bitmap_1afbd607426f0a457b1a871ed902eeb926" kindref="member">w</ref><sp/>*<sp/>gbm.<ref refid="structstbtt____bitmap_1a2afc802e26e9f1dda897ac16ecfff10e" kindref="member">h</ref>,<sp/>info-&gt;<ref refid="structstbtt__fontinfo_1a9c81078df96a7a3f730137151efab285" kindref="member">userdata</ref>);</highlight></codeline>
<codeline lineno="3751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gbm.<ref refid="structstbtt____bitmap_1ae6be77625faf55b110eaaffde5c7733c" kindref="member">pixels</ref>)<sp/>{</highlight></codeline>
<codeline lineno="3752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gbm.<ref refid="structstbtt____bitmap_1a48ee6b550ee4f1d85bfc32c62c0e9a98" kindref="member">stride</ref><sp/>=<sp/>gbm.<ref refid="structstbtt____bitmap_1afbd607426f0a457b1a871ed902eeb926" kindref="member">w</ref>;</highlight></codeline>
<codeline lineno="3753"><highlight class="normal"></highlight></codeline>
<codeline lineno="3754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imstb__truetype_8h_1a5b868ef9a9f92e0cc8b6bc0dd52087db" kindref="member">stbtt_Rasterize</ref>(&amp;gbm,<sp/>0.35f,<sp/>vertices,<sp/>num_verts,<sp/>scale_x,<sp/>scale_y,<sp/>shift_x,<sp/>shift_y,<sp/>ix0,<sp/>iy0,<sp/>1,<sp/>info-&gt;<ref refid="structstbtt__fontinfo_1a9c81078df96a7a3f730137151efab285" kindref="member">userdata</ref>);</highlight></codeline>
<codeline lineno="3755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3756"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3757"><highlight class="normal"><sp/><sp/><sp/><ref refid="imgui__draw_8cpp_1a357d3564409e68f1b694e06f7beeca7e" kindref="member">STBTT_free</ref>(vertices,<sp/>info-&gt;<ref refid="structstbtt__fontinfo_1a9c81078df96a7a3f730137151efab285" kindref="member">userdata</ref>);</highlight></codeline>
<codeline lineno="3758"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gbm.<ref refid="structstbtt____bitmap_1ae6be77625faf55b110eaaffde5c7733c" kindref="member">pixels</ref>;</highlight></codeline>
<codeline lineno="3759"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3760"><highlight class="normal"></highlight></codeline>
<codeline lineno="3761"><highlight class="normal"><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="imstb__truetype_8h_1adba6ae7b9f05604eb366a828836b62a9" kindref="member">stbtt_GetGlyphBitmap</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref><sp/>*info,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale_x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale_y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>glyph,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*height,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*xoff,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*yoff)</highlight></codeline>
<codeline lineno="3762"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3763"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imstb__truetype_8h_1a7a9824b918bd24da2c0193e61bc9ff24" kindref="member">stbtt_GetGlyphBitmapSubpixel</ref>(info,<sp/>scale_x,<sp/>scale_y,<sp/>0.0f,<sp/>0.0f,<sp/>glyph,<sp/>width,<sp/>height,<sp/>xoff,<sp/>yoff);</highlight></codeline>
<codeline lineno="3764"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3765"><highlight class="normal"></highlight></codeline>
<codeline lineno="3766"><highlight class="normal"><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="imstb__truetype_8h_1aa82d35f758bc70bd675c48da381e7ea7" kindref="member">stbtt_MakeGlyphBitmapSubpixel</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref><sp/>*info,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*output,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>out_w,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>out_h,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>out_stride,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale_x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale_y,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>shift_x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>shift_y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>glyph)</highlight></codeline>
<codeline lineno="3767"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3768"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ix0,iy0;</highlight></codeline>
<codeline lineno="3769"><highlight class="normal"><sp/><sp/><sp/><ref refid="structstbtt__vertex" kindref="compound">stbtt_vertex</ref><sp/>*vertices;</highlight></codeline>
<codeline lineno="3770"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_verts<sp/>=<sp/><ref refid="imstb__truetype_8h_1a695c82840a7d4eaa1d5be00131c9718b" kindref="member">stbtt_GetGlyphShape</ref>(info,<sp/>glyph,<sp/>&amp;vertices);</highlight></codeline>
<codeline lineno="3771"><highlight class="normal"><sp/><sp/><sp/><ref refid="structstbtt____bitmap" kindref="compound">stbtt__bitmap</ref><sp/>gbm;</highlight></codeline>
<codeline lineno="3772"><highlight class="normal"></highlight></codeline>
<codeline lineno="3773"><highlight class="normal"><sp/><sp/><sp/><ref refid="imstb__truetype_8h_1a597ef6b92ab0b5800c74478548b4782f" kindref="member">stbtt_GetGlyphBitmapBoxSubpixel</ref>(info,<sp/>glyph,<sp/>scale_x,<sp/>scale_y,<sp/>shift_x,<sp/>shift_y,<sp/>&amp;ix0,&amp;iy0,0,0);</highlight></codeline>
<codeline lineno="3774"><highlight class="normal"><sp/><sp/><sp/>gbm.<ref refid="structstbtt____bitmap_1ae6be77625faf55b110eaaffde5c7733c" kindref="member">pixels</ref><sp/>=<sp/>output;</highlight></codeline>
<codeline lineno="3775"><highlight class="normal"><sp/><sp/><sp/>gbm.<ref refid="structstbtt____bitmap_1afbd607426f0a457b1a871ed902eeb926" kindref="member">w</ref><sp/>=<sp/>out_w;</highlight></codeline>
<codeline lineno="3776"><highlight class="normal"><sp/><sp/><sp/>gbm.<ref refid="structstbtt____bitmap_1a2afc802e26e9f1dda897ac16ecfff10e" kindref="member">h</ref><sp/>=<sp/>out_h;</highlight></codeline>
<codeline lineno="3777"><highlight class="normal"><sp/><sp/><sp/>gbm.<ref refid="structstbtt____bitmap_1a48ee6b550ee4f1d85bfc32c62c0e9a98" kindref="member">stride</ref><sp/>=<sp/>out_stride;</highlight></codeline>
<codeline lineno="3778"><highlight class="normal"></highlight></codeline>
<codeline lineno="3779"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gbm.<ref refid="structstbtt____bitmap_1afbd607426f0a457b1a871ed902eeb926" kindref="member">w</ref><sp/>&amp;&amp;<sp/>gbm.<ref refid="structstbtt____bitmap_1a2afc802e26e9f1dda897ac16ecfff10e" kindref="member">h</ref>)</highlight></codeline>
<codeline lineno="3780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imstb__truetype_8h_1a5b868ef9a9f92e0cc8b6bc0dd52087db" kindref="member">stbtt_Rasterize</ref>(&amp;gbm,<sp/>0.35f,<sp/>vertices,<sp/>num_verts,<sp/>scale_x,<sp/>scale_y,<sp/>shift_x,<sp/>shift_y,<sp/>ix0,iy0,<sp/>1,<sp/>info-&gt;<ref refid="structstbtt__fontinfo_1a9c81078df96a7a3f730137151efab285" kindref="member">userdata</ref>);</highlight></codeline>
<codeline lineno="3781"><highlight class="normal"></highlight></codeline>
<codeline lineno="3782"><highlight class="normal"><sp/><sp/><sp/><ref refid="imgui__draw_8cpp_1a357d3564409e68f1b694e06f7beeca7e" kindref="member">STBTT_free</ref>(vertices,<sp/>info-&gt;<ref refid="structstbtt__fontinfo_1a9c81078df96a7a3f730137151efab285" kindref="member">userdata</ref>);</highlight></codeline>
<codeline lineno="3783"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3784"><highlight class="normal"></highlight></codeline>
<codeline lineno="3785"><highlight class="normal"><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="imstb__truetype_8h_1a915acab7676b20098f4d480376c5b589" kindref="member">stbtt_MakeGlyphBitmap</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref><sp/>*info,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*output,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>out_w,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>out_h,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>out_stride,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale_x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale_y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>glyph)</highlight></codeline>
<codeline lineno="3786"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3787"><highlight class="normal"><sp/><sp/><sp/><ref refid="imstb__truetype_8h_1aa82d35f758bc70bd675c48da381e7ea7" kindref="member">stbtt_MakeGlyphBitmapSubpixel</ref>(info,<sp/>output,<sp/>out_w,<sp/>out_h,<sp/>out_stride,<sp/>scale_x,<sp/>scale_y,<sp/>0.0f,0.0f,<sp/>glyph);</highlight></codeline>
<codeline lineno="3788"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3789"><highlight class="normal"></highlight></codeline>
<codeline lineno="3790"><highlight class="normal"><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="imstb__truetype_8h_1a99855a21c1021bd51d03ae337a0d49be" kindref="member">stbtt_GetCodepointBitmapSubpixel</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref><sp/>*info,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale_x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale_y,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>shift_x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>shift_y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>codepoint,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*height,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*xoff,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*yoff)</highlight></codeline>
<codeline lineno="3791"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3792"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imstb__truetype_8h_1a7a9824b918bd24da2c0193e61bc9ff24" kindref="member">stbtt_GetGlyphBitmapSubpixel</ref>(info,<sp/>scale_x,<sp/>scale_y,shift_x,shift_y,<sp/><ref refid="imstb__truetype_8h_1a213d5628c6b2e5c107b99378eefc6e3a" kindref="member">stbtt_FindGlyphIndex</ref>(info,codepoint),<sp/>width,height,xoff,yoff);</highlight></codeline>
<codeline lineno="3793"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3794"><highlight class="normal"></highlight></codeline>
<codeline lineno="3795"><highlight class="normal"><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="imstb__truetype_8h_1a4b3487c748701f5b89b7be56625df1be" kindref="member">stbtt_MakeCodepointBitmapSubpixelPrefilter</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref><sp/>*info,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*output,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>out_w,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>out_h,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>out_stride,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale_x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale_y,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>shift_x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>shift_y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>oversample_x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>oversample_y,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*sub_x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*sub_y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>codepoint)</highlight></codeline>
<codeline lineno="3796"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3797"><highlight class="normal"><sp/><sp/><sp/><ref refid="imstb__truetype_8h_1a006159e27c5c733ea11c688211e47c25" kindref="member">stbtt_MakeGlyphBitmapSubpixelPrefilter</ref>(info,<sp/>output,<sp/>out_w,<sp/>out_h,<sp/>out_stride,<sp/>scale_x,<sp/>scale_y,<sp/>shift_x,<sp/>shift_y,<sp/>oversample_x,<sp/>oversample_y,<sp/>sub_x,<sp/>sub_y,<sp/><ref refid="imstb__truetype_8h_1a213d5628c6b2e5c107b99378eefc6e3a" kindref="member">stbtt_FindGlyphIndex</ref>(info,codepoint));</highlight></codeline>
<codeline lineno="3798"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3799"><highlight class="normal"></highlight></codeline>
<codeline lineno="3800"><highlight class="normal"><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="imstb__truetype_8h_1a51bd3fc45817d8606c749e585241fa71" kindref="member">stbtt_MakeCodepointBitmapSubpixel</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref><sp/>*info,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*output,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>out_w,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>out_h,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>out_stride,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale_x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale_y,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>shift_x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>shift_y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>codepoint)</highlight></codeline>
<codeline lineno="3801"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3802"><highlight class="normal"><sp/><sp/><sp/><ref refid="imstb__truetype_8h_1aa82d35f758bc70bd675c48da381e7ea7" kindref="member">stbtt_MakeGlyphBitmapSubpixel</ref>(info,<sp/>output,<sp/>out_w,<sp/>out_h,<sp/>out_stride,<sp/>scale_x,<sp/>scale_y,<sp/>shift_x,<sp/>shift_y,<sp/><ref refid="imstb__truetype_8h_1a213d5628c6b2e5c107b99378eefc6e3a" kindref="member">stbtt_FindGlyphIndex</ref>(info,codepoint));</highlight></codeline>
<codeline lineno="3803"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3804"><highlight class="normal"></highlight></codeline>
<codeline lineno="3805"><highlight class="normal"><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="imstb__truetype_8h_1a6206e92bc06993ba26b8e7c7671f8aaa" kindref="member">stbtt_GetCodepointBitmap</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref><sp/>*info,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale_x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale_y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>codepoint,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*height,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*xoff,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*yoff)</highlight></codeline>
<codeline lineno="3806"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3807"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imstb__truetype_8h_1a99855a21c1021bd51d03ae337a0d49be" kindref="member">stbtt_GetCodepointBitmapSubpixel</ref>(info,<sp/>scale_x,<sp/>scale_y,<sp/>0.0f,0.0f,<sp/>codepoint,<sp/>width,height,xoff,yoff);</highlight></codeline>
<codeline lineno="3808"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3809"><highlight class="normal"></highlight></codeline>
<codeline lineno="3810"><highlight class="normal"><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="imstb__truetype_8h_1a4416bb8395a4d2e717f613bb4903c7eb" kindref="member">stbtt_MakeCodepointBitmap</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref><sp/>*info,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*output,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>out_w,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>out_h,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>out_stride,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale_x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale_y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>codepoint)</highlight></codeline>
<codeline lineno="3811"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3812"><highlight class="normal"><sp/><sp/><sp/><ref refid="imstb__truetype_8h_1a51bd3fc45817d8606c749e585241fa71" kindref="member">stbtt_MakeCodepointBitmapSubpixel</ref>(info,<sp/>output,<sp/>out_w,<sp/>out_h,<sp/>out_stride,<sp/>scale_x,<sp/>scale_y,<sp/>0.0f,0.0f,<sp/>codepoint);</highlight></codeline>
<codeline lineno="3813"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3814"><highlight class="normal"></highlight></codeline>
<codeline lineno="3816"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3817"><highlight class="normal"></highlight><highlight class="comment">//<sp/>bitmap<sp/>baking</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3818"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3819"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>SUPER-CRAPPY<sp/>packing<sp/>to<sp/>keep<sp/>source<sp/>code<sp/>small</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3820"><highlight class="normal"></highlight></codeline>
<codeline lineno="3821"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbtt_BakeFontBitmap_internal(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offset,<sp/><sp/></highlight><highlight class="comment">//<sp/>font<sp/>location<sp/>(use<sp/>offset=0<sp/>for<sp/>plain<sp/>.ttf)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>pixel_height,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>height<sp/>of<sp/>font<sp/>in<sp/>pixels</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pixels,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pw,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ph,<sp/><sp/></highlight><highlight class="comment">//<sp/>bitmap<sp/>to<sp/>be<sp/>filled<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>first_char,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_chars,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>characters<sp/>to<sp/>bake</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structstbtt__bakedchar" kindref="compound">stbtt_bakedchar</ref><sp/>*chardata)</highlight></codeline>
<codeline lineno="3826"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3827"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale;</highlight></codeline>
<codeline lineno="3828"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,y,bottom_y,<sp/>i;</highlight></codeline>
<codeline lineno="3829"><highlight class="normal"><sp/><sp/><sp/><ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref><sp/>f;</highlight></codeline>
<codeline lineno="3830"><highlight class="normal"><sp/><sp/><sp/>f.<ref refid="structstbtt__fontinfo_1a9c81078df96a7a3f730137151efab285" kindref="member">userdata</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3831"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="imstb__truetype_8h_1ac3b6bda1851d0b1a4fd53f5f353668e5" kindref="member">stbtt_InitFont</ref>(&amp;f,<sp/>data,<sp/>offset))</highlight></codeline>
<codeline lineno="3832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="3833"><highlight class="normal"><sp/><sp/><sp/>STBTT_memset(pixels,<sp/>0,<sp/>pw*ph);<sp/></highlight><highlight class="comment">//<sp/>background<sp/>of<sp/>0<sp/>around<sp/>pixels</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3834"><highlight class="normal"><sp/><sp/><sp/>x=y=1;</highlight></codeline>
<codeline lineno="3835"><highlight class="normal"><sp/><sp/><sp/>bottom_y<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="3836"><highlight class="normal"></highlight></codeline>
<codeline lineno="3837"><highlight class="normal"><sp/><sp/><sp/>scale<sp/>=<sp/><ref refid="imstb__truetype_8h_1aad275d7211530a3d817fcd8647690b7b" kindref="member">stbtt_ScaleForPixelHeight</ref>(&amp;f,<sp/>pixel_height);</highlight></codeline>
<codeline lineno="3838"><highlight class="normal"></highlight></codeline>
<codeline lineno="3839"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>num_chars;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="3840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>advance,<sp/>lsb,<sp/>x0,y0,x1,y1,gw,gh;</highlight></codeline>
<codeline lineno="3841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>g<sp/>=<sp/><ref refid="imstb__truetype_8h_1a213d5628c6b2e5c107b99378eefc6e3a" kindref="member">stbtt_FindGlyphIndex</ref>(&amp;f,<sp/>first_char<sp/>+<sp/>i);</highlight></codeline>
<codeline lineno="3842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imstb__truetype_8h_1ab593f3066f2a8a7e33e7b7011d1b1f9a" kindref="member">stbtt_GetGlyphHMetrics</ref>(&amp;f,<sp/>g,<sp/>&amp;advance,<sp/>&amp;lsb);</highlight></codeline>
<codeline lineno="3843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imstb__truetype_8h_1a7bba8bb63f534246ccd3ed5b9390cc53" kindref="member">stbtt_GetGlyphBitmapBox</ref>(&amp;f,<sp/>g,<sp/>scale,scale,<sp/>&amp;x0,&amp;y0,&amp;x1,&amp;y1);</highlight></codeline>
<codeline lineno="3844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gw<sp/>=<sp/>x1-x0;</highlight></codeline>
<codeline lineno="3845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gh<sp/>=<sp/>y1-y0;</highlight></codeline>
<codeline lineno="3846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x<sp/>+<sp/>gw<sp/>+<sp/>1<sp/>&gt;=<sp/>pw)</highlight></codeline>
<codeline lineno="3847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>bottom_y,<sp/>x<sp/>=<sp/>1;<sp/></highlight><highlight class="comment">//<sp/>advance<sp/>to<sp/>next<sp/>row</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y<sp/>+<sp/>gh<sp/>+<sp/>1<sp/>&gt;=<sp/>ph)<sp/></highlight><highlight class="comment">//<sp/>check<sp/>if<sp/>it<sp/>fits<sp/>vertically<sp/>AFTER<sp/>potentially<sp/>moving<sp/>to<sp/>next<sp/>row</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-i;</highlight></codeline>
<codeline lineno="3850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imgui__draw_8cpp_1a1123d905f512c19c8d796a6d294a3a84" kindref="member">STBTT_assert</ref>(x+gw<sp/>&lt;<sp/>pw);</highlight></codeline>
<codeline lineno="3851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imgui__draw_8cpp_1a1123d905f512c19c8d796a6d294a3a84" kindref="member">STBTT_assert</ref>(y+gh<sp/>&lt;<sp/>ph);</highlight></codeline>
<codeline lineno="3852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imstb__truetype_8h_1a915acab7676b20098f4d480376c5b589" kindref="member">stbtt_MakeGlyphBitmap</ref>(&amp;f,<sp/>pixels+x+y*pw,<sp/>gw,gh,pw,<sp/>scale,scale,<sp/>g);</highlight></codeline>
<codeline lineno="3853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>chardata[i].<ref refid="structstbtt__bakedchar_1a8011a0ed0410de9fa405c9cb1ab43da2" kindref="member">x0</ref><sp/>=<sp/>(stbtt_int16)<sp/>x;</highlight></codeline>
<codeline lineno="3854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>chardata[i].<ref refid="structstbtt__bakedchar_1aec4def12c086e0038ba32ff33ee78644" kindref="member">y0</ref><sp/>=<sp/>(stbtt_int16)<sp/>y;</highlight></codeline>
<codeline lineno="3855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>chardata[i].<ref refid="structstbtt__bakedchar_1a72c22c32abde95a5ba02925b8bd892bf" kindref="member">x1</ref><sp/>=<sp/>(stbtt_int16)<sp/>(x<sp/>+<sp/>gw);</highlight></codeline>
<codeline lineno="3856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>chardata[i].<ref refid="structstbtt__bakedchar_1ac831dc667f6c39b5d22740c6cbd5bc3f" kindref="member">y1</ref><sp/>=<sp/>(stbtt_int16)<sp/>(y<sp/>+<sp/>gh);</highlight></codeline>
<codeline lineno="3857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>chardata[i].<ref refid="structstbtt__bakedchar_1ad77b35d1a849d9eb7edb91df05b10536" kindref="member">xadvance</ref><sp/>=<sp/>scale<sp/>*<sp/>advance;</highlight></codeline>
<codeline lineno="3858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>chardata[i].<ref refid="structstbtt__bakedchar_1a0708a6588a2768b68a3ae59002944b7c" kindref="member">xoff</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>(float)<sp/>x0;</highlight></codeline>
<codeline lineno="3859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>chardata[i].<ref refid="structstbtt__bakedchar_1aba01393e52d1c6f4ce86a8b51e498bb4" kindref="member">yoff</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>(float)<sp/>y0;</highlight></codeline>
<codeline lineno="3860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>x<sp/>+<sp/>gw<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="3861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y+gh+1<sp/>&gt;<sp/>bottom_y)</highlight></codeline>
<codeline lineno="3862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bottom_y<sp/>=<sp/>y+gh+1;</highlight></codeline>
<codeline lineno="3863"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3864"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bottom_y;</highlight></codeline>
<codeline lineno="3865"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3866"><highlight class="normal"></highlight></codeline>
<codeline lineno="3867"><highlight class="normal"><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="imstb__truetype_8h_1ab7f7e3a2bc7ae72720057b07a13c400f" kindref="member">stbtt_GetBakedQuad</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structstbtt__bakedchar" kindref="compound">stbtt_bakedchar</ref><sp/>*chardata,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pw,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ph,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>char_index,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*xpos,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*ypos,<sp/><ref refid="structstbtt__aligned__quad" kindref="compound">stbtt_aligned_quad</ref><sp/>*q,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>opengl_fillrule)</highlight></codeline>
<codeline lineno="3868"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3869"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>d3d_bias<sp/>=<sp/>opengl_fillrule<sp/>?<sp/>0<sp/>:<sp/>-0.5f;</highlight></codeline>
<codeline lineno="3870"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ipw<sp/>=<sp/>1.0f<sp/>/<sp/>pw,<sp/>iph<sp/>=<sp/>1.0f<sp/>/<sp/>ph;</highlight></codeline>
<codeline lineno="3871"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structstbtt__bakedchar" kindref="compound">stbtt_bakedchar</ref><sp/>*b<sp/>=<sp/>chardata<sp/>+<sp/>char_index;</highlight></codeline>
<codeline lineno="3872"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>round_x<sp/>=<sp/><ref refid="imgui__draw_8cpp_1a37ec4d14918346d3451d4f44f24d4710" kindref="member">STBTT_ifloor</ref>((*xpos<sp/>+<sp/>b-&gt;<ref refid="structstbtt__bakedchar_1a0708a6588a2768b68a3ae59002944b7c" kindref="member">xoff</ref>)<sp/>+<sp/>0.5f);</highlight></codeline>
<codeline lineno="3873"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>round_y<sp/>=<sp/><ref refid="imgui__draw_8cpp_1a37ec4d14918346d3451d4f44f24d4710" kindref="member">STBTT_ifloor</ref>((*ypos<sp/>+<sp/>b-&gt;<ref refid="structstbtt__bakedchar_1aba01393e52d1c6f4ce86a8b51e498bb4" kindref="member">yoff</ref>)<sp/>+<sp/>0.5f);</highlight></codeline>
<codeline lineno="3874"><highlight class="normal"></highlight></codeline>
<codeline lineno="3875"><highlight class="normal"><sp/><sp/><sp/>q-&gt;<ref refid="structstbtt__aligned__quad_1ad74fd8fd69f8a8e1bd20cb0ab7df6e2e" kindref="member">x0</ref><sp/>=<sp/>round_x<sp/>+<sp/>d3d_bias;</highlight></codeline>
<codeline lineno="3876"><highlight class="normal"><sp/><sp/><sp/>q-&gt;<ref refid="structstbtt__aligned__quad_1a6178a6b380cf6889893afaeb5019ecd6" kindref="member">y0</ref><sp/>=<sp/>round_y<sp/>+<sp/>d3d_bias;</highlight></codeline>
<codeline lineno="3877"><highlight class="normal"><sp/><sp/><sp/>q-&gt;<ref refid="structstbtt__aligned__quad_1a43a7eeac24238e289f825e644331dee6" kindref="member">x1</ref><sp/>=<sp/>round_x<sp/>+<sp/>b-&gt;<ref refid="structstbtt__bakedchar_1a72c22c32abde95a5ba02925b8bd892bf" kindref="member">x1</ref><sp/>-<sp/>b-&gt;<ref refid="structstbtt__bakedchar_1a8011a0ed0410de9fa405c9cb1ab43da2" kindref="member">x0</ref><sp/>+<sp/>d3d_bias;</highlight></codeline>
<codeline lineno="3878"><highlight class="normal"><sp/><sp/><sp/>q-&gt;<ref refid="structstbtt__aligned__quad_1a66ee8061da982804073a3d2a9114e53c" kindref="member">y1</ref><sp/>=<sp/>round_y<sp/>+<sp/>b-&gt;<ref refid="structstbtt__bakedchar_1ac831dc667f6c39b5d22740c6cbd5bc3f" kindref="member">y1</ref><sp/>-<sp/>b-&gt;<ref refid="structstbtt__bakedchar_1aec4def12c086e0038ba32ff33ee78644" kindref="member">y0</ref><sp/>+<sp/>d3d_bias;</highlight></codeline>
<codeline lineno="3879"><highlight class="normal"></highlight></codeline>
<codeline lineno="3880"><highlight class="normal"><sp/><sp/><sp/>q-&gt;<ref refid="structstbtt__aligned__quad_1ac23b153ff4042deb5499e5a8cacf4a59" kindref="member">s0</ref><sp/>=<sp/>b-&gt;<ref refid="structstbtt__bakedchar_1a8011a0ed0410de9fa405c9cb1ab43da2" kindref="member">x0</ref><sp/>*<sp/>ipw;</highlight></codeline>
<codeline lineno="3881"><highlight class="normal"><sp/><sp/><sp/>q-&gt;<ref refid="structstbtt__aligned__quad_1a921cd13638a8b3a1e0729021d371da49" kindref="member">t0</ref><sp/>=<sp/>b-&gt;<ref refid="structstbtt__bakedchar_1aec4def12c086e0038ba32ff33ee78644" kindref="member">y0</ref><sp/>*<sp/>iph;</highlight></codeline>
<codeline lineno="3882"><highlight class="normal"><sp/><sp/><sp/>q-&gt;<ref refid="structstbtt__aligned__quad_1a26360efee3cdfb5aa2bdc593157b436b" kindref="member">s1</ref><sp/>=<sp/>b-&gt;<ref refid="structstbtt__bakedchar_1a72c22c32abde95a5ba02925b8bd892bf" kindref="member">x1</ref><sp/>*<sp/>ipw;</highlight></codeline>
<codeline lineno="3883"><highlight class="normal"><sp/><sp/><sp/>q-&gt;<ref refid="structstbtt__aligned__quad_1ae1f5ed7333ca5bba46c6a098a05ac75b" kindref="member">t1</ref><sp/>=<sp/>b-&gt;<ref refid="structstbtt__bakedchar_1ac831dc667f6c39b5d22740c6cbd5bc3f" kindref="member">y1</ref><sp/>*<sp/>iph;</highlight></codeline>
<codeline lineno="3884"><highlight class="normal"></highlight></codeline>
<codeline lineno="3885"><highlight class="normal"><sp/><sp/><sp/>*xpos<sp/>+=<sp/>b-&gt;<ref refid="structstbtt__bakedchar_1ad77b35d1a849d9eb7edb91df05b10536" kindref="member">xadvance</ref>;</highlight></codeline>
<codeline lineno="3886"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3887"><highlight class="normal"></highlight></codeline>
<codeline lineno="3889"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3890"><highlight class="normal"></highlight><highlight class="comment">//<sp/>rectangle<sp/>packing<sp/>replacement<sp/>routines<sp/>if<sp/>you<sp/>don&apos;t<sp/>have<sp/>stb_rect_pack.h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3891"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3892"><highlight class="normal"></highlight></codeline>
<codeline lineno="3893"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>STB_RECT_PACK_VERSION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3894"><highlight class="normal"></highlight></codeline>
<codeline lineno="3895"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="imstb__rectpack_8h_1a4a396a45893c12de32e2d598abd6b302" kindref="member">stbrp_coord</ref>;</highlight></codeline>
<codeline lineno="3896"><highlight class="normal"></highlight></codeline>
<codeline lineno="3898"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3899"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3900"><highlight class="normal"></highlight><highlight class="comment">//<sp/>COMPILER<sp/>WARNING<sp/>?!?!?<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3901"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3902"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3903"><highlight class="normal"></highlight><highlight class="comment">//<sp/>if<sp/>you<sp/>get<sp/>a<sp/>compile<sp/>warning<sp/>due<sp/>to<sp/>these<sp/>symbols<sp/>being<sp/>defined<sp/>more<sp/>than<sp/><sp/><sp/><sp/><sp/><sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3904"><highlight class="normal"></highlight><highlight class="comment">//<sp/>once,<sp/>move<sp/>#include<sp/>&quot;stb_rect_pack.h&quot;<sp/>before<sp/>#include<sp/>&quot;stb_truetype.h&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3905"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3907"><highlight class="normal"></highlight></codeline>
<codeline lineno="3908"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3909"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3910"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,height;</highlight></codeline>
<codeline lineno="3911"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,y,bottom_y;</highlight></codeline>
<codeline lineno="3912"><highlight class="normal">}<sp/><ref refid="structstbrp__context" kindref="compound">stbrp_context</ref>;</highlight></codeline>
<codeline lineno="3913"><highlight class="normal"></highlight></codeline>
<codeline lineno="3914"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3915"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3916"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>x;</highlight></codeline>
<codeline lineno="3917"><highlight class="normal">}<sp/><ref refid="structstbrp__node" kindref="compound">stbrp_node</ref>;</highlight></codeline>
<codeline lineno="3918"><highlight class="normal"></highlight></codeline>
<codeline lineno="3919"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structstbrp__rect" kindref="compound">stbrp_rect</ref></highlight></codeline>
<codeline lineno="3920"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3921"><highlight class="normal"><sp/><sp/><sp/><ref refid="imstb__rectpack_8h_1a4a396a45893c12de32e2d598abd6b302" kindref="member">stbrp_coord</ref><sp/><ref refid="structstbrp__rect_1a4cc623a3e29f0bc0d3375f6645c84d18" kindref="member">x</ref>,<ref refid="structstbrp__rect_1ae3034c1fbf86043b568f5a4dddf946fa" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="3922"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structstbrp__rect_1a92da8626bc99df041c0c3bfd01c25f7a" kindref="member">id</ref>,<ref refid="structstbrp__rect_1a248d43f1eb979c1e7b92ba6df431dec5" kindref="member">w</ref>,<ref refid="structstbrp__rect_1af68de2dadc7972b7c089d5e0c0558398" kindref="member">h</ref>,<ref refid="structstbrp__rect_1a74ba347755ce17f2f8a2ea66c612af49" kindref="member">was_packed</ref>;</highlight></codeline>
<codeline lineno="3923"><highlight class="normal">};</highlight></codeline>
<codeline lineno="3924"><highlight class="normal"></highlight></codeline>
<codeline lineno="3925"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="imstb__rectpack_8h_1a8b32f5ad458f614f5d419ef26cef5b3c" kindref="member">stbrp_init_target</ref>(<ref refid="structstbrp__context" kindref="compound">stbrp_context</ref><sp/>*con,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pw,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ph,<sp/><ref refid="structstbrp__node" kindref="compound">stbrp_node</ref><sp/>*nodes,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_nodes)</highlight></codeline>
<codeline lineno="3926"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3927"><highlight class="normal"><sp/><sp/><sp/>con-&gt;<ref refid="structstbrp__context_1a70cfcb2044ce8397cc440d28b30c09b2" kindref="member">width</ref><sp/><sp/>=<sp/>pw;</highlight></codeline>
<codeline lineno="3928"><highlight class="normal"><sp/><sp/><sp/>con-&gt;<ref refid="structstbrp__context_1af3715a6f3faecfb4fac8f6ccbb71f9c7" kindref="member">height</ref><sp/>=<sp/>ph;</highlight></codeline>
<codeline lineno="3929"><highlight class="normal"><sp/><sp/><sp/>con-&gt;x<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3930"><highlight class="normal"><sp/><sp/><sp/>con-&gt;y<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3931"><highlight class="normal"><sp/><sp/><sp/>con-&gt;bottom_y<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3932"><highlight class="normal"><sp/><sp/><sp/>STBTT__NOTUSED(nodes);</highlight></codeline>
<codeline lineno="3933"><highlight class="normal"><sp/><sp/><sp/>STBTT__NOTUSED(num_nodes);</highlight></codeline>
<codeline lineno="3934"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3935"><highlight class="normal"></highlight></codeline>
<codeline lineno="3936"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="imstb__rectpack_8h_1af038ae1b98573f24736c9a3eed0478ba" kindref="member">stbrp_pack_rects</ref>(<ref refid="structstbrp__context" kindref="compound">stbrp_context</ref><sp/>*con,<sp/><ref refid="structstbrp__rect" kindref="compound">stbrp_rect</ref><sp/>*rects,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_rects)</highlight></codeline>
<codeline lineno="3937"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3938"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="3939"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>num_rects;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="3940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(con-&gt;x<sp/>+<sp/>rects[i].w<sp/>&gt;<sp/>con-&gt;<ref refid="structstbrp__context_1a70cfcb2044ce8397cc440d28b30c09b2" kindref="member">width</ref>)<sp/>{</highlight></codeline>
<codeline lineno="3941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>con-&gt;x<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>con-&gt;y<sp/>=<sp/>con-&gt;bottom_y;</highlight></codeline>
<codeline lineno="3943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(con-&gt;y<sp/>+<sp/>rects[i].h<sp/>&gt;<sp/>con-&gt;<ref refid="structstbrp__context_1af3715a6f3faecfb4fac8f6ccbb71f9c7" kindref="member">height</ref>)</highlight></codeline>
<codeline lineno="3945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rects[i].<ref refid="structstbrp__rect_1a4cc623a3e29f0bc0d3375f6645c84d18" kindref="member">x</ref><sp/>=<sp/>con-&gt;x;</highlight></codeline>
<codeline lineno="3947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rects[i].<ref refid="structstbrp__rect_1ae3034c1fbf86043b568f5a4dddf946fa" kindref="member">y</ref><sp/>=<sp/>con-&gt;y;</highlight></codeline>
<codeline lineno="3948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rects[i].<ref refid="structstbrp__rect_1a74ba347755ce17f2f8a2ea66c612af49" kindref="member">was_packed</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="3949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>con-&gt;x<sp/>+=<sp/>rects[i].<ref refid="structstbrp__rect_1a248d43f1eb979c1e7b92ba6df431dec5" kindref="member">w</ref>;</highlight></codeline>
<codeline lineno="3950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(con-&gt;y<sp/>+<sp/>rects[i].h<sp/>&gt;<sp/>con-&gt;bottom_y)</highlight></codeline>
<codeline lineno="3951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>con-&gt;bottom_y<sp/>=<sp/>con-&gt;y<sp/>+<sp/>rects[i].<ref refid="structstbrp__rect_1af68de2dadc7972b7c089d5e0c0558398" kindref="member">h</ref>;</highlight></codeline>
<codeline lineno="3952"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3953"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/><sp/><sp/>;<sp/>i<sp/>&lt;<sp/>num_rects;<sp/>++i)</highlight></codeline>
<codeline lineno="3954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rects[i].was_packed<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3955"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3956"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3957"><highlight class="normal"></highlight></codeline>
<codeline lineno="3959"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3960"><highlight class="normal"></highlight><highlight class="comment">//<sp/>bitmap<sp/>baking</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3961"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3962"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>SUPER-AWESOME<sp/>(tm<sp/>Ryan<sp/>Gordon)<sp/>packing<sp/>using<sp/>stb_rect_pack.h.<sp/>If</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3963"><highlight class="normal"></highlight><highlight class="comment">//<sp/>stb_rect_pack.h<sp/>isn&apos;t<sp/>available,<sp/>it<sp/>uses<sp/>the<sp/>BakeFontBitmap<sp/>strategy.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3964"><highlight class="normal"></highlight></codeline>
<codeline lineno="3965"><highlight class="normal"><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="imstb__truetype_8h_1adfc8faff4ebfbad1ce0bff9b4ebc691c" kindref="member">stbtt_PackBegin</ref>(<ref refid="structstbtt__pack__context" kindref="compound">stbtt_pack_context</ref><sp/>*spc,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pixels,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pw,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ph,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stride_in_bytes,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>padding,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*alloc_context)</highlight></codeline>
<codeline lineno="3966"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3967"><highlight class="normal"><sp/><sp/><sp/><ref refid="structstbrp__context" kindref="compound">stbrp_context</ref><sp/>*context<sp/>=<sp/>(<ref refid="structstbrp__context" kindref="compound">stbrp_context</ref><sp/>*)<sp/><ref refid="imgui__draw_8cpp_1a8f6734fe0cb6d6aa09e494602afa96be" kindref="member">STBTT_malloc</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*context)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,alloc_context);</highlight></codeline>
<codeline lineno="3968"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_nodes<sp/>=<sp/>pw<sp/>-<sp/>padding;</highlight></codeline>
<codeline lineno="3969"><highlight class="normal"><sp/><sp/><sp/><ref refid="structstbrp__node" kindref="compound">stbrp_node</ref><sp/><sp/><sp/><sp/>*nodes<sp/><sp/><sp/>=<sp/>(<ref refid="structstbrp__node" kindref="compound">stbrp_node</ref><sp/><sp/><sp/><sp/>*)<sp/><ref refid="imgui__draw_8cpp_1a8f6734fe0cb6d6aa09e494602afa96be" kindref="member">STBTT_malloc</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*nodes<sp/><sp/>)<sp/>*<sp/>num_nodes,alloc_context);</highlight></codeline>
<codeline lineno="3970"><highlight class="normal"></highlight></codeline>
<codeline lineno="3971"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(context<sp/>==<sp/>NULL<sp/>||<sp/>nodes<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="3972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(context<sp/>!=<sp/>NULL)<sp/><ref refid="imgui__draw_8cpp_1a357d3564409e68f1b694e06f7beeca7e" kindref="member">STBTT_free</ref>(context,<sp/>alloc_context);</highlight></codeline>
<codeline lineno="3973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nodes<sp/><sp/><sp/>!=<sp/>NULL)<sp/><ref refid="imgui__draw_8cpp_1a357d3564409e68f1b694e06f7beeca7e" kindref="member">STBTT_free</ref>(nodes<sp/><sp/>,<sp/>alloc_context);</highlight></codeline>
<codeline lineno="3974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="3975"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3976"><highlight class="normal"></highlight></codeline>
<codeline lineno="3977"><highlight class="normal"><sp/><sp/><sp/>spc-&gt;<ref refid="structstbtt__pack__context_1a45fddc4d4adfcef58aa08ad2874cedc0" kindref="member">user_allocator_context</ref><sp/>=<sp/>alloc_context;</highlight></codeline>
<codeline lineno="3978"><highlight class="normal"><sp/><sp/><sp/>spc-&gt;<ref refid="structstbtt__pack__context_1a5da0b7b5d3b82d5fc75ea1c8945183fa" kindref="member">width</ref><sp/>=<sp/>pw;</highlight></codeline>
<codeline lineno="3979"><highlight class="normal"><sp/><sp/><sp/>spc-&gt;<ref refid="structstbtt__pack__context_1a817ec010d7f09ba9776517c5a87f13a7" kindref="member">height</ref><sp/>=<sp/>ph;</highlight></codeline>
<codeline lineno="3980"><highlight class="normal"><sp/><sp/><sp/>spc-&gt;<ref refid="structstbtt__pack__context_1a6549105fd1922df983fbe036b9db4a1a" kindref="member">pixels</ref><sp/>=<sp/>pixels;</highlight></codeline>
<codeline lineno="3981"><highlight class="normal"><sp/><sp/><sp/>spc-&gt;<ref refid="structstbtt__pack__context_1a303a72f0a39479b439fa531925be7031" kindref="member">pack_info</ref><sp/>=<sp/>context;</highlight></codeline>
<codeline lineno="3982"><highlight class="normal"><sp/><sp/><sp/>spc-&gt;<ref refid="structstbtt__pack__context_1a11a73fa6860e6be1ac039fcca9db2c7c" kindref="member">nodes</ref><sp/>=<sp/>nodes;</highlight></codeline>
<codeline lineno="3983"><highlight class="normal"><sp/><sp/><sp/>spc-&gt;<ref refid="structstbtt__pack__context_1a1191f34fa995910044191584f0d7a803" kindref="member">padding</ref><sp/>=<sp/>padding;</highlight></codeline>
<codeline lineno="3984"><highlight class="normal"><sp/><sp/><sp/>spc-&gt;<ref refid="structstbtt__pack__context_1abbe9a25aae0e26b81a5f7339fac23801" kindref="member">stride_in_bytes</ref><sp/>=<sp/>stride_in_bytes<sp/>!=<sp/>0<sp/>?<sp/>stride_in_bytes<sp/>:<sp/>pw;</highlight></codeline>
<codeline lineno="3985"><highlight class="normal"><sp/><sp/><sp/>spc-&gt;<ref refid="structstbtt__pack__context_1aee1019f9634cad49fa07e8e1f897d6b7" kindref="member">h_oversample</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="3986"><highlight class="normal"><sp/><sp/><sp/>spc-&gt;<ref refid="structstbtt__pack__context_1a4b55efa27ef36e7f258afe92921784c0" kindref="member">v_oversample</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="3987"><highlight class="normal"><sp/><sp/><sp/>spc-&gt;<ref refid="structstbtt__pack__context_1a435bae89225862e65211e0b456f632d3" kindref="member">skip_missing</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3988"><highlight class="normal"></highlight></codeline>
<codeline lineno="3989"><highlight class="normal"><sp/><sp/><sp/><ref refid="imstb__rectpack_8h_1a8b32f5ad458f614f5d419ef26cef5b3c" kindref="member">stbrp_init_target</ref>(context,<sp/>pw-padding,<sp/>ph-padding,<sp/>nodes,<sp/>num_nodes);</highlight></codeline>
<codeline lineno="3990"><highlight class="normal"></highlight></codeline>
<codeline lineno="3991"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pixels)</highlight></codeline>
<codeline lineno="3992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>STBTT_memset(pixels,<sp/>0,<sp/>pw*ph);<sp/></highlight><highlight class="comment">//<sp/>background<sp/>of<sp/>0<sp/>around<sp/>pixels</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3993"><highlight class="normal"></highlight></codeline>
<codeline lineno="3994"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="3995"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3996"><highlight class="normal"></highlight></codeline>
<codeline lineno="3997"><highlight class="normal"><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="imstb__truetype_8h_1ab51e492c4b320b8af6ef557ad3388140" kindref="member">stbtt_PackEnd</ref><sp/><sp/>(<ref refid="structstbtt__pack__context" kindref="compound">stbtt_pack_context</ref><sp/>*spc)</highlight></codeline>
<codeline lineno="3998"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3999"><highlight class="normal"><sp/><sp/><sp/><ref refid="imgui__draw_8cpp_1a357d3564409e68f1b694e06f7beeca7e" kindref="member">STBTT_free</ref>(spc-&gt;<ref refid="structstbtt__pack__context_1a11a73fa6860e6be1ac039fcca9db2c7c" kindref="member">nodes</ref><sp/><sp/><sp/><sp/>,<sp/>spc-&gt;<ref refid="structstbtt__pack__context_1a45fddc4d4adfcef58aa08ad2874cedc0" kindref="member">user_allocator_context</ref>);</highlight></codeline>
<codeline lineno="4000"><highlight class="normal"><sp/><sp/><sp/><ref refid="imgui__draw_8cpp_1a357d3564409e68f1b694e06f7beeca7e" kindref="member">STBTT_free</ref>(spc-&gt;<ref refid="structstbtt__pack__context_1a303a72f0a39479b439fa531925be7031" kindref="member">pack_info</ref>,<sp/>spc-&gt;<ref refid="structstbtt__pack__context_1a45fddc4d4adfcef58aa08ad2874cedc0" kindref="member">user_allocator_context</ref>);</highlight></codeline>
<codeline lineno="4001"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4002"><highlight class="normal"></highlight></codeline>
<codeline lineno="4003"><highlight class="normal"><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="imstb__truetype_8h_1a4c55e174efbacaf82a8ddb9d1956717e" kindref="member">stbtt_PackSetOversampling</ref>(<ref refid="structstbtt__pack__context" kindref="compound">stbtt_pack_context</ref><sp/>*spc,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h_oversample,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>v_oversample)</highlight></codeline>
<codeline lineno="4004"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4005"><highlight class="normal"><sp/><sp/><sp/><ref refid="imgui__draw_8cpp_1a1123d905f512c19c8d796a6d294a3a84" kindref="member">STBTT_assert</ref>(h_oversample<sp/>&lt;=<sp/>STBTT_MAX_OVERSAMPLE);</highlight></codeline>
<codeline lineno="4006"><highlight class="normal"><sp/><sp/><sp/><ref refid="imgui__draw_8cpp_1a1123d905f512c19c8d796a6d294a3a84" kindref="member">STBTT_assert</ref>(v_oversample<sp/>&lt;=<sp/>STBTT_MAX_OVERSAMPLE);</highlight></codeline>
<codeline lineno="4007"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(h_oversample<sp/>&lt;=<sp/>STBTT_MAX_OVERSAMPLE)</highlight></codeline>
<codeline lineno="4008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>spc-&gt;<ref refid="structstbtt__pack__context_1aee1019f9634cad49fa07e8e1f897d6b7" kindref="member">h_oversample</ref><sp/>=<sp/>h_oversample;</highlight></codeline>
<codeline lineno="4009"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v_oversample<sp/>&lt;=<sp/>STBTT_MAX_OVERSAMPLE)</highlight></codeline>
<codeline lineno="4010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>spc-&gt;<ref refid="structstbtt__pack__context_1a4b55efa27ef36e7f258afe92921784c0" kindref="member">v_oversample</ref><sp/>=<sp/>v_oversample;</highlight></codeline>
<codeline lineno="4011"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4012"><highlight class="normal"></highlight></codeline>
<codeline lineno="4013"><highlight class="normal"><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="imstb__truetype_8h_1a0549774d30f6c64b85b88acc2329e89e" kindref="member">stbtt_PackSetSkipMissingCodepoints</ref>(<ref refid="structstbtt__pack__context" kindref="compound">stbtt_pack_context</ref><sp/>*spc,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>skip)</highlight></codeline>
<codeline lineno="4014"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4015"><highlight class="normal"><sp/><sp/><sp/>spc-&gt;<ref refid="structstbtt__pack__context_1a435bae89225862e65211e0b456f632d3" kindref="member">skip_missing</ref><sp/>=<sp/>skip;</highlight></codeline>
<codeline lineno="4016"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4017"><highlight class="normal"></highlight></codeline>
<codeline lineno="4018"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBTT__OVER_MASK<sp/><sp/>(STBTT_MAX_OVERSAMPLE-1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4019"><highlight class="normal"></highlight></codeline>
<codeline lineno="4020"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stbtt__h_prefilter(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pixels,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stride_in_bytes,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kernel_width)</highlight></codeline>
<codeline lineno="4021"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4022"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buffer[STBTT_MAX_OVERSAMPLE];</highlight></codeline>
<codeline lineno="4023"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>safe_w<sp/>=<sp/>w<sp/>-<sp/>kernel_width;</highlight></codeline>
<codeline lineno="4024"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j;</highlight></codeline>
<codeline lineno="4025"><highlight class="normal"><sp/><sp/><sp/>STBTT_memset(buffer,<sp/>0,<sp/>STBTT_MAX_OVERSAMPLE);<sp/></highlight><highlight class="comment">//<sp/>suppress<sp/>bogus<sp/>warning<sp/>from<sp/>VS2013<sp/>-analyze</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4026"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j=0;<sp/>j<sp/>&lt;<sp/>h;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="4027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="4028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>total;</highlight></codeline>
<codeline lineno="4029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>STBTT_memset(buffer,<sp/>0,<sp/>kernel_width);</highlight></codeline>
<codeline lineno="4030"><highlight class="normal"></highlight></codeline>
<codeline lineno="4031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>total<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4032"><highlight class="normal"></highlight></codeline>
<codeline lineno="4033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>kernel_width<sp/>a<sp/>constant<sp/>in<sp/>common<sp/>cases<sp/>so<sp/>compiler<sp/>can<sp/>optimize<sp/>out<sp/>the<sp/>divide</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(kernel_width)<sp/>{</highlight></codeline>
<codeline lineno="4035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="4036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;=<sp/>safe_w;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="4037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>total<sp/>+=<sp/>pixels[i]<sp/>-<sp/>buffer[i<sp/>&amp;<sp/>STBTT__OVER_MASK];</highlight></codeline>
<codeline lineno="4038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer[(i+kernel_width)<sp/>&amp;<sp/>STBTT__OVER_MASK]<sp/>=<sp/>pixels[i];</highlight></codeline>
<codeline lineno="4039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixels[i]<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>char)<sp/>(total<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="4040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:</highlight></codeline>
<codeline lineno="4043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;=<sp/>safe_w;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="4044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>total<sp/>+=<sp/>pixels[i]<sp/>-<sp/>buffer[i<sp/>&amp;<sp/>STBTT__OVER_MASK];</highlight></codeline>
<codeline lineno="4045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer[(i+kernel_width)<sp/>&amp;<sp/>STBTT__OVER_MASK]<sp/>=<sp/>pixels[i];</highlight></codeline>
<codeline lineno="4046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixels[i]<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>char)<sp/>(total<sp/>/<sp/>3);</highlight></codeline>
<codeline lineno="4047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4:</highlight></codeline>
<codeline lineno="4050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;=<sp/>safe_w;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="4051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>total<sp/>+=<sp/>pixels[i]<sp/>-<sp/>buffer[i<sp/>&amp;<sp/>STBTT__OVER_MASK];</highlight></codeline>
<codeline lineno="4052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer[(i+kernel_width)<sp/>&amp;<sp/>STBTT__OVER_MASK]<sp/>=<sp/>pixels[i];</highlight></codeline>
<codeline lineno="4053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixels[i]<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>char)<sp/>(total<sp/>/<sp/>4);</highlight></codeline>
<codeline lineno="4054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>5:</highlight></codeline>
<codeline lineno="4057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;=<sp/>safe_w;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="4058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>total<sp/>+=<sp/>pixels[i]<sp/>-<sp/>buffer[i<sp/>&amp;<sp/>STBTT__OVER_MASK];</highlight></codeline>
<codeline lineno="4059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer[(i+kernel_width)<sp/>&amp;<sp/>STBTT__OVER_MASK]<sp/>=<sp/>pixels[i];</highlight></codeline>
<codeline lineno="4060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixels[i]<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>char)<sp/>(total<sp/>/<sp/>5);</highlight></codeline>
<codeline lineno="4061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="4064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;=<sp/>safe_w;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="4065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>total<sp/>+=<sp/>pixels[i]<sp/>-<sp/>buffer[i<sp/>&amp;<sp/>STBTT__OVER_MASK];</highlight></codeline>
<codeline lineno="4066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer[(i+kernel_width)<sp/>&amp;<sp/>STBTT__OVER_MASK]<sp/>=<sp/>pixels[i];</highlight></codeline>
<codeline lineno="4067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixels[i]<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>char)<sp/>(total<sp/>/<sp/>kernel_width);</highlight></codeline>
<codeline lineno="4068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4071"><highlight class="normal"></highlight></codeline>
<codeline lineno="4072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>i<sp/>&lt;<sp/>w;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="4073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imgui__draw_8cpp_1a1123d905f512c19c8d796a6d294a3a84" kindref="member">STBTT_assert</ref>(pixels[i]<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="4074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>total<sp/>-=<sp/>buffer[i<sp/>&amp;<sp/>STBTT__OVER_MASK];</highlight></codeline>
<codeline lineno="4075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixels[i]<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>char)<sp/>(total<sp/>/<sp/>kernel_width);</highlight></codeline>
<codeline lineno="4076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4077"><highlight class="normal"></highlight></codeline>
<codeline lineno="4078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pixels<sp/>+=<sp/>stride_in_bytes;</highlight></codeline>
<codeline lineno="4079"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4080"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4081"><highlight class="normal"></highlight></codeline>
<codeline lineno="4082"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stbtt__v_prefilter(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pixels,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stride_in_bytes,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kernel_width)</highlight></codeline>
<codeline lineno="4083"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4084"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buffer[STBTT_MAX_OVERSAMPLE];</highlight></codeline>
<codeline lineno="4085"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>safe_h<sp/>=<sp/>h<sp/>-<sp/>kernel_width;</highlight></codeline>
<codeline lineno="4086"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j;</highlight></codeline>
<codeline lineno="4087"><highlight class="normal"><sp/><sp/><sp/>STBTT_memset(buffer,<sp/>0,<sp/>STBTT_MAX_OVERSAMPLE);<sp/></highlight><highlight class="comment">//<sp/>suppress<sp/>bogus<sp/>warning<sp/>from<sp/>VS2013<sp/>-analyze</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4088"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j=0;<sp/>j<sp/>&lt;<sp/>w;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="4089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="4090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>total;</highlight></codeline>
<codeline lineno="4091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>STBTT_memset(buffer,<sp/>0,<sp/>kernel_width);</highlight></codeline>
<codeline lineno="4092"><highlight class="normal"></highlight></codeline>
<codeline lineno="4093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>total<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4094"><highlight class="normal"></highlight></codeline>
<codeline lineno="4095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>kernel_width<sp/>a<sp/>constant<sp/>in<sp/>common<sp/>cases<sp/>so<sp/>compiler<sp/>can<sp/>optimize<sp/>out<sp/>the<sp/>divide</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(kernel_width)<sp/>{</highlight></codeline>
<codeline lineno="4097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="4098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;=<sp/>safe_h;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="4099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>total<sp/>+=<sp/>pixels[i*stride_in_bytes]<sp/>-<sp/>buffer[i<sp/>&amp;<sp/>STBTT__OVER_MASK];</highlight></codeline>
<codeline lineno="4100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer[(i+kernel_width)<sp/>&amp;<sp/>STBTT__OVER_MASK]<sp/>=<sp/>pixels[i*stride_in_bytes];</highlight></codeline>
<codeline lineno="4101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixels[i*stride_in_bytes]<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>char)<sp/>(total<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="4102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:</highlight></codeline>
<codeline lineno="4105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;=<sp/>safe_h;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="4106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>total<sp/>+=<sp/>pixels[i*stride_in_bytes]<sp/>-<sp/>buffer[i<sp/>&amp;<sp/>STBTT__OVER_MASK];</highlight></codeline>
<codeline lineno="4107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer[(i+kernel_width)<sp/>&amp;<sp/>STBTT__OVER_MASK]<sp/>=<sp/>pixels[i*stride_in_bytes];</highlight></codeline>
<codeline lineno="4108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixels[i*stride_in_bytes]<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>char)<sp/>(total<sp/>/<sp/>3);</highlight></codeline>
<codeline lineno="4109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4:</highlight></codeline>
<codeline lineno="4112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;=<sp/>safe_h;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="4113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>total<sp/>+=<sp/>pixels[i*stride_in_bytes]<sp/>-<sp/>buffer[i<sp/>&amp;<sp/>STBTT__OVER_MASK];</highlight></codeline>
<codeline lineno="4114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer[(i+kernel_width)<sp/>&amp;<sp/>STBTT__OVER_MASK]<sp/>=<sp/>pixels[i*stride_in_bytes];</highlight></codeline>
<codeline lineno="4115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixels[i*stride_in_bytes]<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>char)<sp/>(total<sp/>/<sp/>4);</highlight></codeline>
<codeline lineno="4116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>5:</highlight></codeline>
<codeline lineno="4119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;=<sp/>safe_h;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="4120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>total<sp/>+=<sp/>pixels[i*stride_in_bytes]<sp/>-<sp/>buffer[i<sp/>&amp;<sp/>STBTT__OVER_MASK];</highlight></codeline>
<codeline lineno="4121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer[(i+kernel_width)<sp/>&amp;<sp/>STBTT__OVER_MASK]<sp/>=<sp/>pixels[i*stride_in_bytes];</highlight></codeline>
<codeline lineno="4122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixels[i*stride_in_bytes]<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>char)<sp/>(total<sp/>/<sp/>5);</highlight></codeline>
<codeline lineno="4123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="4126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;=<sp/>safe_h;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="4127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>total<sp/>+=<sp/>pixels[i*stride_in_bytes]<sp/>-<sp/>buffer[i<sp/>&amp;<sp/>STBTT__OVER_MASK];</highlight></codeline>
<codeline lineno="4128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer[(i+kernel_width)<sp/>&amp;<sp/>STBTT__OVER_MASK]<sp/>=<sp/>pixels[i*stride_in_bytes];</highlight></codeline>
<codeline lineno="4129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixels[i*stride_in_bytes]<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>char)<sp/>(total<sp/>/<sp/>kernel_width);</highlight></codeline>
<codeline lineno="4130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4133"><highlight class="normal"></highlight></codeline>
<codeline lineno="4134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>i<sp/>&lt;<sp/>h;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="4135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imgui__draw_8cpp_1a1123d905f512c19c8d796a6d294a3a84" kindref="member">STBTT_assert</ref>(pixels[i*stride_in_bytes]<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="4136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>total<sp/>-=<sp/>buffer[i<sp/>&amp;<sp/>STBTT__OVER_MASK];</highlight></codeline>
<codeline lineno="4137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixels[i*stride_in_bytes]<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>char)<sp/>(total<sp/>/<sp/>kernel_width);</highlight></codeline>
<codeline lineno="4138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4139"><highlight class="normal"></highlight></codeline>
<codeline lineno="4140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pixels<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="4141"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4142"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4143"><highlight class="normal"></highlight></codeline>
<codeline lineno="4144"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>stbtt__oversample_shift(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>oversample)</highlight></codeline>
<codeline lineno="4145"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4146"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!oversample)</highlight></codeline>
<codeline lineno="4147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.0f;</highlight></codeline>
<codeline lineno="4148"><highlight class="normal"></highlight></codeline>
<codeline lineno="4149"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>prefilter<sp/>is<sp/>a<sp/>box<sp/>filter<sp/>of<sp/>width<sp/>&quot;oversample&quot;,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4150"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>which<sp/>shifts<sp/>phase<sp/>by<sp/>(oversample<sp/>-<sp/>1)/2<sp/>pixels<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4151"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>oversampled<sp/>space.<sp/>We<sp/>want<sp/>to<sp/>shift<sp/>in<sp/>the<sp/>opposite</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4152"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>direction<sp/>to<sp/>counter<sp/>this.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4153"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)-(oversample<sp/>-<sp/>1)<sp/>/<sp/>(2.0f<sp/>*<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)oversample);</highlight></codeline>
<codeline lineno="4154"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4155"><highlight class="normal"></highlight></codeline>
<codeline lineno="4156"><highlight class="normal"></highlight><highlight class="comment">//<sp/>rects<sp/>array<sp/>must<sp/>be<sp/>big<sp/>enough<sp/>to<sp/>accommodate<sp/>all<sp/>characters<sp/>in<sp/>the<sp/>given<sp/>ranges</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4157"><highlight class="normal"><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="imstb__truetype_8h_1a8cf20362ceefc78d4df2e1703de3da50" kindref="member">stbtt_PackFontRangesGatherRects</ref>(<ref refid="structstbtt__pack__context" kindref="compound">stbtt_pack_context</ref><sp/>*spc,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref><sp/>*info,<sp/><ref refid="structstbtt__pack__range" kindref="compound">stbtt_pack_range</ref><sp/>*ranges,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_ranges,<sp/><ref refid="structstbrp__rect" kindref="compound">stbrp_rect</ref><sp/>*rects)</highlight></codeline>
<codeline lineno="4158"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4159"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,j,k;</highlight></codeline>
<codeline lineno="4160"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>missing_glyph_added<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4161"><highlight class="normal"></highlight></codeline>
<codeline lineno="4162"><highlight class="normal"><sp/><sp/><sp/>k=0;</highlight></codeline>
<codeline lineno="4163"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>num_ranges;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="4164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fh<sp/>=<sp/>ranges[i].<ref refid="structstbtt__pack__range_1a296916dc971e5e7627822fe98dc42828" kindref="member">font_size</ref>;</highlight></codeline>
<codeline lineno="4165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale<sp/>=<sp/>fh<sp/>&gt;<sp/>0<sp/>?<sp/><ref refid="imstb__truetype_8h_1aad275d7211530a3d817fcd8647690b7b" kindref="member">stbtt_ScaleForPixelHeight</ref>(info,<sp/>fh)<sp/>:<sp/><ref refid="imstb__truetype_8h_1a76da72e13355eae763c567ffde0b4607" kindref="member">stbtt_ScaleForMappingEmToPixels</ref>(info,<sp/>-fh);</highlight></codeline>
<codeline lineno="4166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ranges[i].<ref refid="structstbtt__pack__range_1a7a642139ce446c58fde5c48553bcf008" kindref="member">h_oversample</ref><sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>char)<sp/>spc-&gt;<ref refid="structstbtt__pack__context_1aee1019f9634cad49fa07e8e1f897d6b7" kindref="member">h_oversample</ref>;</highlight></codeline>
<codeline lineno="4167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ranges[i].<ref refid="structstbtt__pack__range_1a6288f14006e257544db3d015c32b4113" kindref="member">v_oversample</ref><sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>char)<sp/>spc-&gt;<ref refid="structstbtt__pack__context_1a4b55efa27ef36e7f258afe92921784c0" kindref="member">v_oversample</ref>;</highlight></codeline>
<codeline lineno="4168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j=0;<sp/>j<sp/>&lt;<sp/>ranges[i].<ref refid="structstbtt__pack__range_1a046d65b6ffb65fb998d471ba098e2e23" kindref="member">num_chars</ref>;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="4169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x0,y0,x1,y1;</highlight></codeline>
<codeline lineno="4170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>codepoint<sp/>=<sp/>ranges[i].<ref refid="structstbtt__pack__range_1a1567aa5455e1251529a91b46261368cf" kindref="member">array_of_unicode_codepoints</ref><sp/>==<sp/>NULL<sp/>?<sp/>ranges[i].<ref refid="structstbtt__pack__range_1a3b414cbee1e164c29dd138e0ae3d5759" kindref="member">first_unicode_codepoint_in_range</ref><sp/>+<sp/>j<sp/>:<sp/>ranges[i].<ref refid="structstbtt__pack__range_1a1567aa5455e1251529a91b46261368cf" kindref="member">array_of_unicode_codepoints</ref>[j];</highlight></codeline>
<codeline lineno="4171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>glyph<sp/>=<sp/><ref refid="imstb__truetype_8h_1a213d5628c6b2e5c107b99378eefc6e3a" kindref="member">stbtt_FindGlyphIndex</ref>(info,<sp/>codepoint);</highlight></codeline>
<codeline lineno="4172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(glyph<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>(spc-&gt;<ref refid="structstbtt__pack__context_1a435bae89225862e65211e0b456f632d3" kindref="member">skip_missing</ref><sp/>||<sp/>missing_glyph_added))<sp/>{</highlight></codeline>
<codeline lineno="4173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rects[k].<ref refid="structstbrp__rect_1a248d43f1eb979c1e7b92ba6df431dec5" kindref="member">w</ref><sp/>=<sp/>rects[k].<ref refid="structstbrp__rect_1af68de2dadc7972b7c089d5e0c0558398" kindref="member">h</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imstb__truetype_8h_1a597ef6b92ab0b5800c74478548b4782f" kindref="member">stbtt_GetGlyphBitmapBoxSubpixel</ref>(info,glyph,</highlight></codeline>
<codeline lineno="4176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scale<sp/>*<sp/>spc-&gt;<ref refid="structstbtt__pack__context_1aee1019f9634cad49fa07e8e1f897d6b7" kindref="member">h_oversample</ref>,</highlight></codeline>
<codeline lineno="4177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scale<sp/>*<sp/>spc-&gt;<ref refid="structstbtt__pack__context_1a4b55efa27ef36e7f258afe92921784c0" kindref="member">v_oversample</ref>,</highlight></codeline>
<codeline lineno="4178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,0,</highlight></codeline>
<codeline lineno="4179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;x0,&amp;y0,&amp;x1,&amp;y1);</highlight></codeline>
<codeline lineno="4180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rects[k].<ref refid="structstbrp__rect_1a248d43f1eb979c1e7b92ba6df431dec5" kindref="member">w</ref><sp/>=<sp/>(<ref refid="imstb__rectpack_8h_1a4a396a45893c12de32e2d598abd6b302" kindref="member">stbrp_coord</ref>)<sp/>(x1-x0<sp/>+<sp/>spc-&gt;<ref refid="structstbtt__pack__context_1a1191f34fa995910044191584f0d7a803" kindref="member">padding</ref><sp/>+<sp/>spc-&gt;<ref refid="structstbtt__pack__context_1aee1019f9634cad49fa07e8e1f897d6b7" kindref="member">h_oversample</ref>-1);</highlight></codeline>
<codeline lineno="4181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rects[k].<ref refid="structstbrp__rect_1af68de2dadc7972b7c089d5e0c0558398" kindref="member">h</ref><sp/>=<sp/>(<ref refid="imstb__rectpack_8h_1a4a396a45893c12de32e2d598abd6b302" kindref="member">stbrp_coord</ref>)<sp/>(y1-y0<sp/>+<sp/>spc-&gt;<ref refid="structstbtt__pack__context_1a1191f34fa995910044191584f0d7a803" kindref="member">padding</ref><sp/>+<sp/>spc-&gt;<ref refid="structstbtt__pack__context_1a4b55efa27ef36e7f258afe92921784c0" kindref="member">v_oversample</ref>-1);</highlight></codeline>
<codeline lineno="4182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(glyph<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="4183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>missing_glyph_added<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="4184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++k;</highlight></codeline>
<codeline lineno="4186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4187"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4188"><highlight class="normal"></highlight></codeline>
<codeline lineno="4189"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>k;</highlight></codeline>
<codeline lineno="4190"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4191"><highlight class="normal"></highlight></codeline>
<codeline lineno="4192"><highlight class="normal"><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="imstb__truetype_8h_1a006159e27c5c733ea11c688211e47c25" kindref="member">stbtt_MakeGlyphBitmapSubpixelPrefilter</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref><sp/>*info,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*output,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>out_w,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>out_h,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>out_stride,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale_x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale_y,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>shift_x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>shift_y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>prefilter_x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>prefilter_y,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*sub_x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*sub_y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>glyph)</highlight></codeline>
<codeline lineno="4193"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4194"><highlight class="normal"><sp/><sp/><sp/><ref refid="imstb__truetype_8h_1aa82d35f758bc70bd675c48da381e7ea7" kindref="member">stbtt_MakeGlyphBitmapSubpixel</ref>(info,</highlight></codeline>
<codeline lineno="4195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output,</highlight></codeline>
<codeline lineno="4196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_w<sp/>-<sp/>(prefilter_x<sp/>-<sp/>1),</highlight></codeline>
<codeline lineno="4197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_h<sp/>-<sp/>(prefilter_y<sp/>-<sp/>1),</highlight></codeline>
<codeline lineno="4198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_stride,</highlight></codeline>
<codeline lineno="4199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scale_x,</highlight></codeline>
<codeline lineno="4200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scale_y,</highlight></codeline>
<codeline lineno="4201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shift_x,</highlight></codeline>
<codeline lineno="4202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shift_y,</highlight></codeline>
<codeline lineno="4203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glyph);</highlight></codeline>
<codeline lineno="4204"><highlight class="normal"></highlight></codeline>
<codeline lineno="4205"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(prefilter_x<sp/>&gt;<sp/>1)</highlight></codeline>
<codeline lineno="4206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbtt__h_prefilter(output,<sp/>out_w,<sp/>out_h,<sp/>out_stride,<sp/>prefilter_x);</highlight></codeline>
<codeline lineno="4207"><highlight class="normal"></highlight></codeline>
<codeline lineno="4208"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(prefilter_y<sp/>&gt;<sp/>1)</highlight></codeline>
<codeline lineno="4209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbtt__v_prefilter(output,<sp/>out_w,<sp/>out_h,<sp/>out_stride,<sp/>prefilter_y);</highlight></codeline>
<codeline lineno="4210"><highlight class="normal"></highlight></codeline>
<codeline lineno="4211"><highlight class="normal"><sp/><sp/><sp/>*sub_x<sp/>=<sp/>stbtt__oversample_shift(prefilter_x);</highlight></codeline>
<codeline lineno="4212"><highlight class="normal"><sp/><sp/><sp/>*sub_y<sp/>=<sp/>stbtt__oversample_shift(prefilter_y);</highlight></codeline>
<codeline lineno="4213"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4214"><highlight class="normal"></highlight></codeline>
<codeline lineno="4215"><highlight class="normal"></highlight><highlight class="comment">//<sp/>rects<sp/>array<sp/>must<sp/>be<sp/>big<sp/>enough<sp/>to<sp/>accommodate<sp/>all<sp/>characters<sp/>in<sp/>the<sp/>given<sp/>ranges</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4216"><highlight class="normal"><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="imstb__truetype_8h_1ab6eca9e0104838ca2483dea24dd9e631" kindref="member">stbtt_PackFontRangesRenderIntoRects</ref>(<ref refid="structstbtt__pack__context" kindref="compound">stbtt_pack_context</ref><sp/>*spc,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref><sp/>*info,<sp/><ref refid="structstbtt__pack__range" kindref="compound">stbtt_pack_range</ref><sp/>*ranges,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_ranges,<sp/><ref refid="structstbrp__rect" kindref="compound">stbrp_rect</ref><sp/>*rects)</highlight></codeline>
<codeline lineno="4217"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4218"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,j,k,<sp/>missing_glyph<sp/>=<sp/>-1,<sp/>return_value<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="4219"><highlight class="normal"></highlight></codeline>
<codeline lineno="4220"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>save<sp/>current<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4221"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>old_h_over<sp/>=<sp/>spc-&gt;<ref refid="structstbtt__pack__context_1aee1019f9634cad49fa07e8e1f897d6b7" kindref="member">h_oversample</ref>;</highlight></codeline>
<codeline lineno="4222"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>old_v_over<sp/>=<sp/>spc-&gt;<ref refid="structstbtt__pack__context_1a4b55efa27ef36e7f258afe92921784c0" kindref="member">v_oversample</ref>;</highlight></codeline>
<codeline lineno="4223"><highlight class="normal"></highlight></codeline>
<codeline lineno="4224"><highlight class="normal"><sp/><sp/><sp/>k<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4225"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>num_ranges;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="4226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fh<sp/>=<sp/>ranges[i].<ref refid="structstbtt__pack__range_1a296916dc971e5e7627822fe98dc42828" kindref="member">font_size</ref>;</highlight></codeline>
<codeline lineno="4227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale<sp/>=<sp/>fh<sp/>&gt;<sp/>0<sp/>?<sp/><ref refid="imstb__truetype_8h_1aad275d7211530a3d817fcd8647690b7b" kindref="member">stbtt_ScaleForPixelHeight</ref>(info,<sp/>fh)<sp/>:<sp/><ref refid="imstb__truetype_8h_1a76da72e13355eae763c567ffde0b4607" kindref="member">stbtt_ScaleForMappingEmToPixels</ref>(info,<sp/>-fh);</highlight></codeline>
<codeline lineno="4228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>recip_h,recip_v,sub_x,sub_y;</highlight></codeline>
<codeline lineno="4229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>spc-&gt;<ref refid="structstbtt__pack__context_1aee1019f9634cad49fa07e8e1f897d6b7" kindref="member">h_oversample</ref><sp/>=<sp/>ranges[i].<ref refid="structstbtt__pack__range_1a7a642139ce446c58fde5c48553bcf008" kindref="member">h_oversample</ref>;</highlight></codeline>
<codeline lineno="4230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>spc-&gt;<ref refid="structstbtt__pack__context_1a4b55efa27ef36e7f258afe92921784c0" kindref="member">v_oversample</ref><sp/>=<sp/>ranges[i].<ref refid="structstbtt__pack__range_1a6288f14006e257544db3d015c32b4113" kindref="member">v_oversample</ref>;</highlight></codeline>
<codeline lineno="4231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>recip_h<sp/>=<sp/>1.0f<sp/>/<sp/>spc-&gt;<ref refid="structstbtt__pack__context_1aee1019f9634cad49fa07e8e1f897d6b7" kindref="member">h_oversample</ref>;</highlight></codeline>
<codeline lineno="4232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>recip_v<sp/>=<sp/>1.0f<sp/>/<sp/>spc-&gt;<ref refid="structstbtt__pack__context_1a4b55efa27ef36e7f258afe92921784c0" kindref="member">v_oversample</ref>;</highlight></codeline>
<codeline lineno="4233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sub_x<sp/>=<sp/>stbtt__oversample_shift(spc-&gt;<ref refid="structstbtt__pack__context_1aee1019f9634cad49fa07e8e1f897d6b7" kindref="member">h_oversample</ref>);</highlight></codeline>
<codeline lineno="4234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sub_y<sp/>=<sp/>stbtt__oversample_shift(spc-&gt;<ref refid="structstbtt__pack__context_1a4b55efa27ef36e7f258afe92921784c0" kindref="member">v_oversample</ref>);</highlight></codeline>
<codeline lineno="4235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j=0;<sp/>j<sp/>&lt;<sp/>ranges[i].<ref refid="structstbtt__pack__range_1a046d65b6ffb65fb998d471ba098e2e23" kindref="member">num_chars</ref>;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="4236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structstbrp__rect" kindref="compound">stbrp_rect</ref><sp/>*r<sp/>=<sp/>&amp;rects[k];</highlight></codeline>
<codeline lineno="4237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(r-&gt;<ref refid="structstbrp__rect_1a74ba347755ce17f2f8a2ea66c612af49" kindref="member">was_packed</ref><sp/>&amp;&amp;<sp/>r-&gt;<ref refid="structstbrp__rect_1a248d43f1eb979c1e7b92ba6df431dec5" kindref="member">w</ref><sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>r-&gt;<ref refid="structstbrp__rect_1af68de2dadc7972b7c089d5e0c0558398" kindref="member">h</ref><sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="4238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structstbtt__packedchar" kindref="compound">stbtt_packedchar</ref><sp/>*bc<sp/>=<sp/>&amp;ranges[i].<ref refid="structstbtt__pack__range_1aa8f7ddd637ed341ea39b08466fab9284" kindref="member">chardata_for_range</ref>[j];</highlight></codeline>
<codeline lineno="4239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>advance,<sp/>lsb,<sp/>x0,y0,x1,y1;</highlight></codeline>
<codeline lineno="4240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>codepoint<sp/>=<sp/>ranges[i].<ref refid="structstbtt__pack__range_1a1567aa5455e1251529a91b46261368cf" kindref="member">array_of_unicode_codepoints</ref><sp/>==<sp/>NULL<sp/>?<sp/>ranges[i].<ref refid="structstbtt__pack__range_1a3b414cbee1e164c29dd138e0ae3d5759" kindref="member">first_unicode_codepoint_in_range</ref><sp/>+<sp/>j<sp/>:<sp/>ranges[i].<ref refid="structstbtt__pack__range_1a1567aa5455e1251529a91b46261368cf" kindref="member">array_of_unicode_codepoints</ref>[j];</highlight></codeline>
<codeline lineno="4241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>glyph<sp/>=<sp/><ref refid="imstb__truetype_8h_1a213d5628c6b2e5c107b99378eefc6e3a" kindref="member">stbtt_FindGlyphIndex</ref>(info,<sp/>codepoint);</highlight></codeline>
<codeline lineno="4242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imstb__rectpack_8h_1a4a396a45893c12de32e2d598abd6b302" kindref="member">stbrp_coord</ref><sp/>pad<sp/>=<sp/>(<ref refid="imstb__rectpack_8h_1a4a396a45893c12de32e2d598abd6b302" kindref="member">stbrp_coord</ref>)<sp/>spc-&gt;<ref refid="structstbtt__pack__context_1a1191f34fa995910044191584f0d7a803" kindref="member">padding</ref>;</highlight></codeline>
<codeline lineno="4243"><highlight class="normal"></highlight></codeline>
<codeline lineno="4244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pad<sp/>on<sp/>left<sp/>and<sp/>top</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structstbrp__rect_1a4cc623a3e29f0bc0d3375f6645c84d18" kindref="member">x</ref><sp/>+=<sp/>pad;</highlight></codeline>
<codeline lineno="4246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structstbrp__rect_1ae3034c1fbf86043b568f5a4dddf946fa" kindref="member">y</ref><sp/>+=<sp/>pad;</highlight></codeline>
<codeline lineno="4247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structstbrp__rect_1a248d43f1eb979c1e7b92ba6df431dec5" kindref="member">w</ref><sp/>-=<sp/>pad;</highlight></codeline>
<codeline lineno="4248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structstbrp__rect_1af68de2dadc7972b7c089d5e0c0558398" kindref="member">h</ref><sp/>-=<sp/>pad;</highlight></codeline>
<codeline lineno="4249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imstb__truetype_8h_1ab593f3066f2a8a7e33e7b7011d1b1f9a" kindref="member">stbtt_GetGlyphHMetrics</ref>(info,<sp/>glyph,<sp/>&amp;advance,<sp/>&amp;lsb);</highlight></codeline>
<codeline lineno="4250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imstb__truetype_8h_1a7bba8bb63f534246ccd3ed5b9390cc53" kindref="member">stbtt_GetGlyphBitmapBox</ref>(info,<sp/>glyph,</highlight></codeline>
<codeline lineno="4251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scale<sp/>*<sp/>spc-&gt;<ref refid="structstbtt__pack__context_1aee1019f9634cad49fa07e8e1f897d6b7" kindref="member">h_oversample</ref>,</highlight></codeline>
<codeline lineno="4252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scale<sp/>*<sp/>spc-&gt;<ref refid="structstbtt__pack__context_1a4b55efa27ef36e7f258afe92921784c0" kindref="member">v_oversample</ref>,</highlight></codeline>
<codeline lineno="4253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;x0,&amp;y0,&amp;x1,&amp;y1);</highlight></codeline>
<codeline lineno="4254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imstb__truetype_8h_1aa82d35f758bc70bd675c48da381e7ea7" kindref="member">stbtt_MakeGlyphBitmapSubpixel</ref>(info,</highlight></codeline>
<codeline lineno="4255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spc-&gt;<ref refid="structstbtt__pack__context_1a6549105fd1922df983fbe036b9db4a1a" kindref="member">pixels</ref><sp/>+<sp/>r-&gt;<ref refid="structstbrp__rect_1a4cc623a3e29f0bc0d3375f6645c84d18" kindref="member">x</ref><sp/>+<sp/>r-&gt;<ref refid="structstbrp__rect_1ae3034c1fbf86043b568f5a4dddf946fa" kindref="member">y</ref>*spc-&gt;<ref refid="structstbtt__pack__context_1abbe9a25aae0e26b81a5f7339fac23801" kindref="member">stride_in_bytes</ref>,</highlight></codeline>
<codeline lineno="4256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structstbrp__rect_1a248d43f1eb979c1e7b92ba6df431dec5" kindref="member">w</ref><sp/>-<sp/>spc-&gt;<ref refid="structstbtt__pack__context_1aee1019f9634cad49fa07e8e1f897d6b7" kindref="member">h_oversample</ref>+1,</highlight></codeline>
<codeline lineno="4257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structstbrp__rect_1af68de2dadc7972b7c089d5e0c0558398" kindref="member">h</ref><sp/>-<sp/>spc-&gt;<ref refid="structstbtt__pack__context_1a4b55efa27ef36e7f258afe92921784c0" kindref="member">v_oversample</ref>+1,</highlight></codeline>
<codeline lineno="4258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spc-&gt;<ref refid="structstbtt__pack__context_1abbe9a25aae0e26b81a5f7339fac23801" kindref="member">stride_in_bytes</ref>,</highlight></codeline>
<codeline lineno="4259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scale<sp/>*<sp/>spc-&gt;<ref refid="structstbtt__pack__context_1aee1019f9634cad49fa07e8e1f897d6b7" kindref="member">h_oversample</ref>,</highlight></codeline>
<codeline lineno="4260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scale<sp/>*<sp/>spc-&gt;<ref refid="structstbtt__pack__context_1a4b55efa27ef36e7f258afe92921784c0" kindref="member">v_oversample</ref>,</highlight></codeline>
<codeline lineno="4261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,0,</highlight></codeline>
<codeline lineno="4262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glyph);</highlight></codeline>
<codeline lineno="4263"><highlight class="normal"></highlight></codeline>
<codeline lineno="4264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(spc-&gt;<ref refid="structstbtt__pack__context_1aee1019f9634cad49fa07e8e1f897d6b7" kindref="member">h_oversample</ref><sp/>&gt;<sp/>1)</highlight></codeline>
<codeline lineno="4265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt__h_prefilter(spc-&gt;<ref refid="structstbtt__pack__context_1a6549105fd1922df983fbe036b9db4a1a" kindref="member">pixels</ref><sp/>+<sp/>r-&gt;<ref refid="structstbrp__rect_1a4cc623a3e29f0bc0d3375f6645c84d18" kindref="member">x</ref><sp/>+<sp/>r-&gt;<ref refid="structstbrp__rect_1ae3034c1fbf86043b568f5a4dddf946fa" kindref="member">y</ref>*spc-&gt;<ref refid="structstbtt__pack__context_1abbe9a25aae0e26b81a5f7339fac23801" kindref="member">stride_in_bytes</ref>,</highlight></codeline>
<codeline lineno="4266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structstbrp__rect_1a248d43f1eb979c1e7b92ba6df431dec5" kindref="member">w</ref>,<sp/>r-&gt;<ref refid="structstbrp__rect_1af68de2dadc7972b7c089d5e0c0558398" kindref="member">h</ref>,<sp/>spc-&gt;<ref refid="structstbtt__pack__context_1abbe9a25aae0e26b81a5f7339fac23801" kindref="member">stride_in_bytes</ref>,</highlight></codeline>
<codeline lineno="4267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spc-&gt;<ref refid="structstbtt__pack__context_1aee1019f9634cad49fa07e8e1f897d6b7" kindref="member">h_oversample</ref>);</highlight></codeline>
<codeline lineno="4268"><highlight class="normal"></highlight></codeline>
<codeline lineno="4269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(spc-&gt;<ref refid="structstbtt__pack__context_1a4b55efa27ef36e7f258afe92921784c0" kindref="member">v_oversample</ref><sp/>&gt;<sp/>1)</highlight></codeline>
<codeline lineno="4270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt__v_prefilter(spc-&gt;<ref refid="structstbtt__pack__context_1a6549105fd1922df983fbe036b9db4a1a" kindref="member">pixels</ref><sp/>+<sp/>r-&gt;<ref refid="structstbrp__rect_1a4cc623a3e29f0bc0d3375f6645c84d18" kindref="member">x</ref><sp/>+<sp/>r-&gt;<ref refid="structstbrp__rect_1ae3034c1fbf86043b568f5a4dddf946fa" kindref="member">y</ref>*spc-&gt;<ref refid="structstbtt__pack__context_1abbe9a25aae0e26b81a5f7339fac23801" kindref="member">stride_in_bytes</ref>,</highlight></codeline>
<codeline lineno="4271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structstbrp__rect_1a248d43f1eb979c1e7b92ba6df431dec5" kindref="member">w</ref>,<sp/>r-&gt;<ref refid="structstbrp__rect_1af68de2dadc7972b7c089d5e0c0558398" kindref="member">h</ref>,<sp/>spc-&gt;<ref refid="structstbtt__pack__context_1abbe9a25aae0e26b81a5f7339fac23801" kindref="member">stride_in_bytes</ref>,</highlight></codeline>
<codeline lineno="4272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spc-&gt;<ref refid="structstbtt__pack__context_1a4b55efa27ef36e7f258afe92921784c0" kindref="member">v_oversample</ref>);</highlight></codeline>
<codeline lineno="4273"><highlight class="normal"></highlight></codeline>
<codeline lineno="4274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bc-&gt;x0<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>(stbtt_int16)<sp/><sp/>r-&gt;<ref refid="structstbrp__rect_1a4cc623a3e29f0bc0d3375f6645c84d18" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="4275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bc-&gt;y0<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>(stbtt_int16)<sp/><sp/>r-&gt;<ref refid="structstbrp__rect_1ae3034c1fbf86043b568f5a4dddf946fa" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="4276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bc-&gt;x1<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>(stbtt_int16)<sp/>(r-&gt;<ref refid="structstbrp__rect_1a4cc623a3e29f0bc0d3375f6645c84d18" kindref="member">x</ref><sp/>+<sp/>r-&gt;<ref refid="structstbrp__rect_1a248d43f1eb979c1e7b92ba6df431dec5" kindref="member">w</ref>);</highlight></codeline>
<codeline lineno="4277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bc-&gt;y1<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>(stbtt_int16)<sp/>(r-&gt;<ref refid="structstbrp__rect_1ae3034c1fbf86043b568f5a4dddf946fa" kindref="member">y</ref><sp/>+<sp/>r-&gt;<ref refid="structstbrp__rect_1af68de2dadc7972b7c089d5e0c0558398" kindref="member">h</ref>);</highlight></codeline>
<codeline lineno="4278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bc-&gt;xadvance<sp/>=<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scale<sp/>*<sp/>advance;</highlight></codeline>
<codeline lineno="4279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bc-&gt;xoff<sp/><sp/><sp/><sp/><sp/>=<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(float)<sp/><sp/>x0<sp/>*<sp/>recip_h<sp/>+<sp/>sub_x;</highlight></codeline>
<codeline lineno="4280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bc-&gt;yoff<sp/><sp/><sp/><sp/><sp/>=<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(float)<sp/><sp/>y0<sp/>*<sp/>recip_v<sp/>+<sp/>sub_y;</highlight></codeline>
<codeline lineno="4281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bc-&gt;xoff2<sp/><sp/><sp/><sp/>=<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(x0<sp/>+<sp/>r-&gt;<ref refid="structstbrp__rect_1a248d43f1eb979c1e7b92ba6df431dec5" kindref="member">w</ref>)<sp/>*<sp/>recip_h<sp/>+<sp/>sub_x;</highlight></codeline>
<codeline lineno="4282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bc-&gt;yoff2<sp/><sp/><sp/><sp/>=<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(y0<sp/>+<sp/>r-&gt;<ref refid="structstbrp__rect_1af68de2dadc7972b7c089d5e0c0558398" kindref="member">h</ref>)<sp/>*<sp/>recip_v<sp/>+<sp/>sub_y;</highlight></codeline>
<codeline lineno="4283"><highlight class="normal"></highlight></codeline>
<codeline lineno="4284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(glyph<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="4285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>missing_glyph<sp/>=<sp/>j;</highlight></codeline>
<codeline lineno="4286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(spc-&gt;<ref refid="structstbtt__pack__context_1a435bae89225862e65211e0b456f632d3" kindref="member">skip_missing</ref>)<sp/>{</highlight></codeline>
<codeline lineno="4287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return_value<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(r-&gt;<ref refid="structstbrp__rect_1a74ba347755ce17f2f8a2ea66c612af49" kindref="member">was_packed</ref><sp/>&amp;&amp;<sp/>r-&gt;<ref refid="structstbrp__rect_1a248d43f1eb979c1e7b92ba6df431dec5" kindref="member">w</ref><sp/>==<sp/>0<sp/>&amp;&amp;<sp/>r-&gt;<ref refid="structstbrp__rect_1af68de2dadc7972b7c089d5e0c0558398" kindref="member">h</ref><sp/>==<sp/>0<sp/>&amp;&amp;<sp/>missing_glyph<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="4289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ranges[i].<ref refid="structstbtt__pack__range_1aa8f7ddd637ed341ea39b08466fab9284" kindref="member">chardata_for_range</ref>[j]<sp/>=<sp/>ranges[i].<ref refid="structstbtt__pack__range_1aa8f7ddd637ed341ea39b08466fab9284" kindref="member">chardata_for_range</ref>[missing_glyph];</highlight></codeline>
<codeline lineno="4290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return_value<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>if<sp/>any<sp/>fail,<sp/>report<sp/>failure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4293"><highlight class="normal"></highlight></codeline>
<codeline lineno="4294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++k;</highlight></codeline>
<codeline lineno="4295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4296"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4297"><highlight class="normal"></highlight></codeline>
<codeline lineno="4298"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>restore<sp/>original<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4299"><highlight class="normal"><sp/><sp/><sp/>spc-&gt;<ref refid="structstbtt__pack__context_1aee1019f9634cad49fa07e8e1f897d6b7" kindref="member">h_oversample</ref><sp/>=<sp/>old_h_over;</highlight></codeline>
<codeline lineno="4300"><highlight class="normal"><sp/><sp/><sp/>spc-&gt;<ref refid="structstbtt__pack__context_1a4b55efa27ef36e7f258afe92921784c0" kindref="member">v_oversample</ref><sp/>=<sp/>old_v_over;</highlight></codeline>
<codeline lineno="4301"><highlight class="normal"></highlight></codeline>
<codeline lineno="4302"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>return_value;</highlight></codeline>
<codeline lineno="4303"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4304"><highlight class="normal"></highlight></codeline>
<codeline lineno="4305"><highlight class="normal"><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="imstb__truetype_8h_1aeec3933fdb14884b7c2919e6ddc44259" kindref="member">stbtt_PackFontRangesPackRects</ref>(<ref refid="structstbtt__pack__context" kindref="compound">stbtt_pack_context</ref><sp/>*spc,<sp/><ref refid="structstbrp__rect" kindref="compound">stbrp_rect</ref><sp/>*rects,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_rects)</highlight></codeline>
<codeline lineno="4306"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4307"><highlight class="normal"><sp/><sp/><sp/><ref refid="imstb__rectpack_8h_1af038ae1b98573f24736c9a3eed0478ba" kindref="member">stbrp_pack_rects</ref>((<ref refid="structstbrp__context" kindref="compound">stbrp_context</ref><sp/>*)<sp/>spc-&gt;<ref refid="structstbtt__pack__context_1a303a72f0a39479b439fa531925be7031" kindref="member">pack_info</ref>,<sp/>rects,<sp/>num_rects);</highlight></codeline>
<codeline lineno="4308"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4309"><highlight class="normal"></highlight></codeline>
<codeline lineno="4310"><highlight class="normal"><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="imstb__truetype_8h_1a051bbf0eddd73f253c1b1050a9e47157" kindref="member">stbtt_PackFontRanges</ref>(<ref refid="structstbtt__pack__context" kindref="compound">stbtt_pack_context</ref><sp/>*spc,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fontdata,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>font_index,<sp/><ref refid="structstbtt__pack__range" kindref="compound">stbtt_pack_range</ref><sp/>*ranges,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_ranges)</highlight></codeline>
<codeline lineno="4311"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4312"><highlight class="normal"><sp/><sp/><sp/><ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref><sp/>info;</highlight></codeline>
<codeline lineno="4313"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>j,<sp/>n,<sp/>return_value;<sp/></highlight><highlight class="comment">//<sp/>[DEAR<sp/>IMGUI]<sp/>removed<sp/>=<sp/>1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4314"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//stbrp_context<sp/>*context<sp/>=<sp/>(stbrp_context<sp/>*)<sp/>spc-&gt;pack_info;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4315"><highlight class="normal"><sp/><sp/><sp/><ref refid="structstbrp__rect" kindref="compound">stbrp_rect</ref><sp/><sp/><sp/><sp/>*rects;</highlight></codeline>
<codeline lineno="4316"><highlight class="normal"></highlight></codeline>
<codeline lineno="4317"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>flag<sp/>all<sp/>characters<sp/>as<sp/>NOT<sp/>packed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4318"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>num_ranges;<sp/>++i)</highlight></codeline>
<codeline lineno="4319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j=0;<sp/>j<sp/>&lt;<sp/>ranges[i].<ref refid="structstbtt__pack__range_1a046d65b6ffb65fb998d471ba098e2e23" kindref="member">num_chars</ref>;<sp/>++j)</highlight></codeline>
<codeline lineno="4320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ranges[i].chardata_for_range[j].x0<sp/>=</highlight></codeline>
<codeline lineno="4321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ranges[i].chardata_for_range[j].y0<sp/>=</highlight></codeline>
<codeline lineno="4322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ranges[i].chardata_for_range[j].x1<sp/>=</highlight></codeline>
<codeline lineno="4323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ranges[i].chardata_for_range[j].y1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4324"><highlight class="normal"></highlight></codeline>
<codeline lineno="4325"><highlight class="normal"><sp/><sp/><sp/>n<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4326"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>num_ranges;<sp/>++i)</highlight></codeline>
<codeline lineno="4327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>+=<sp/>ranges[i].num_chars;</highlight></codeline>
<codeline lineno="4328"><highlight class="normal"></highlight></codeline>
<codeline lineno="4329"><highlight class="normal"><sp/><sp/><sp/>rects<sp/>=<sp/>(<ref refid="structstbrp__rect" kindref="compound">stbrp_rect</ref><sp/>*)<sp/><ref refid="imgui__draw_8cpp_1a8f6734fe0cb6d6aa09e494602afa96be" kindref="member">STBTT_malloc</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*rects)<sp/>*<sp/>n,<sp/>spc-&gt;<ref refid="structstbtt__pack__context_1a45fddc4d4adfcef58aa08ad2874cedc0" kindref="member">user_allocator_context</ref>);</highlight></codeline>
<codeline lineno="4330"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rects<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="4331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4332"><highlight class="normal"></highlight></codeline>
<codeline lineno="4333"><highlight class="normal"><sp/><sp/><sp/>info.<ref refid="structstbtt__fontinfo_1a9c81078df96a7a3f730137151efab285" kindref="member">userdata</ref><sp/>=<sp/>spc-&gt;<ref refid="structstbtt__pack__context_1a45fddc4d4adfcef58aa08ad2874cedc0" kindref="member">user_allocator_context</ref>;</highlight></codeline>
<codeline lineno="4334"><highlight class="normal"><sp/><sp/><sp/><ref refid="imstb__truetype_8h_1ac3b6bda1851d0b1a4fd53f5f353668e5" kindref="member">stbtt_InitFont</ref>(&amp;info,<sp/>fontdata,<sp/><ref refid="imstb__truetype_8h_1a5ba17159df62ca39649e6f2231ac6e89" kindref="member">stbtt_GetFontOffsetForIndex</ref>(fontdata,font_index));</highlight></codeline>
<codeline lineno="4335"><highlight class="normal"></highlight></codeline>
<codeline lineno="4336"><highlight class="normal"><sp/><sp/><sp/>n<sp/>=<sp/><ref refid="imstb__truetype_8h_1a8cf20362ceefc78d4df2e1703de3da50" kindref="member">stbtt_PackFontRangesGatherRects</ref>(spc,<sp/>&amp;info,<sp/>ranges,<sp/>num_ranges,<sp/>rects);</highlight></codeline>
<codeline lineno="4337"><highlight class="normal"></highlight></codeline>
<codeline lineno="4338"><highlight class="normal"><sp/><sp/><sp/><ref refid="imstb__truetype_8h_1aeec3933fdb14884b7c2919e6ddc44259" kindref="member">stbtt_PackFontRangesPackRects</ref>(spc,<sp/>rects,<sp/>n);</highlight></codeline>
<codeline lineno="4339"><highlight class="normal"></highlight></codeline>
<codeline lineno="4340"><highlight class="normal"><sp/><sp/><sp/>return_value<sp/>=<sp/><ref refid="imstb__truetype_8h_1ab6eca9e0104838ca2483dea24dd9e631" kindref="member">stbtt_PackFontRangesRenderIntoRects</ref>(spc,<sp/>&amp;info,<sp/>ranges,<sp/>num_ranges,<sp/>rects);</highlight></codeline>
<codeline lineno="4341"><highlight class="normal"></highlight></codeline>
<codeline lineno="4342"><highlight class="normal"><sp/><sp/><sp/><ref refid="imgui__draw_8cpp_1a357d3564409e68f1b694e06f7beeca7e" kindref="member">STBTT_free</ref>(rects,<sp/>spc-&gt;<ref refid="structstbtt__pack__context_1a45fddc4d4adfcef58aa08ad2874cedc0" kindref="member">user_allocator_context</ref>);</highlight></codeline>
<codeline lineno="4343"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>return_value;</highlight></codeline>
<codeline lineno="4344"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4345"><highlight class="normal"></highlight></codeline>
<codeline lineno="4346"><highlight class="normal"><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="imstb__truetype_8h_1a344fc3b0ff7829d993ca8db3eadd321f" kindref="member">stbtt_PackFontRange</ref>(<ref refid="structstbtt__pack__context" kindref="compound">stbtt_pack_context</ref><sp/>*spc,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fontdata,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>font_index,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>font_size,</highlight></codeline>
<codeline lineno="4347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>first_unicode_codepoint_in_range,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_chars_in_range,<sp/><ref refid="structstbtt__packedchar" kindref="compound">stbtt_packedchar</ref><sp/>*chardata_for_range)</highlight></codeline>
<codeline lineno="4348"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4349"><highlight class="normal"><sp/><sp/><sp/><ref refid="structstbtt__pack__range" kindref="compound">stbtt_pack_range</ref><sp/>range;</highlight></codeline>
<codeline lineno="4350"><highlight class="normal"><sp/><sp/><sp/>range.<ref refid="structstbtt__pack__range_1a3b414cbee1e164c29dd138e0ae3d5759" kindref="member">first_unicode_codepoint_in_range</ref><sp/>=<sp/>first_unicode_codepoint_in_range;</highlight></codeline>
<codeline lineno="4351"><highlight class="normal"><sp/><sp/><sp/>range.<ref refid="structstbtt__pack__range_1a1567aa5455e1251529a91b46261368cf" kindref="member">array_of_unicode_codepoints</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="4352"><highlight class="normal"><sp/><sp/><sp/>range.<ref refid="structstbtt__pack__range_1a046d65b6ffb65fb998d471ba098e2e23" kindref="member">num_chars</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>num_chars_in_range;</highlight></codeline>
<codeline lineno="4353"><highlight class="normal"><sp/><sp/><sp/>range.<ref refid="structstbtt__pack__range_1aa8f7ddd637ed341ea39b08466fab9284" kindref="member">chardata_for_range</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>chardata_for_range;</highlight></codeline>
<codeline lineno="4354"><highlight class="normal"><sp/><sp/><sp/>range.<ref refid="structstbtt__pack__range_1a296916dc971e5e7627822fe98dc42828" kindref="member">font_size</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>font_size;</highlight></codeline>
<codeline lineno="4355"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imstb__truetype_8h_1a051bbf0eddd73f253c1b1050a9e47157" kindref="member">stbtt_PackFontRanges</ref>(spc,<sp/>fontdata,<sp/>font_index,<sp/>&amp;range,<sp/>1);</highlight></codeline>
<codeline lineno="4356"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4357"><highlight class="normal"></highlight></codeline>
<codeline lineno="4358"><highlight class="normal"><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="imstb__truetype_8h_1ae402c69747eee588a5fc18d8ea506b42" kindref="member">stbtt_GetScaledFontVMetrics</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fontdata,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>size,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*ascent,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*descent,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*lineGap)</highlight></codeline>
<codeline lineno="4359"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4360"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i_ascent,<sp/>i_descent,<sp/>i_lineGap;</highlight></codeline>
<codeline lineno="4361"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale;</highlight></codeline>
<codeline lineno="4362"><highlight class="normal"><sp/><sp/><sp/><ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref><sp/>info;</highlight></codeline>
<codeline lineno="4363"><highlight class="normal"><sp/><sp/><sp/><ref refid="imstb__truetype_8h_1ac3b6bda1851d0b1a4fd53f5f353668e5" kindref="member">stbtt_InitFont</ref>(&amp;info,<sp/>fontdata,<sp/><ref refid="imstb__truetype_8h_1a5ba17159df62ca39649e6f2231ac6e89" kindref="member">stbtt_GetFontOffsetForIndex</ref>(fontdata,<sp/>index));</highlight></codeline>
<codeline lineno="4364"><highlight class="normal"><sp/><sp/><sp/>scale<sp/>=<sp/>size<sp/>&gt;<sp/>0<sp/>?<sp/><ref refid="imstb__truetype_8h_1aad275d7211530a3d817fcd8647690b7b" kindref="member">stbtt_ScaleForPixelHeight</ref>(&amp;info,<sp/>size)<sp/>:<sp/><ref refid="imstb__truetype_8h_1a76da72e13355eae763c567ffde0b4607" kindref="member">stbtt_ScaleForMappingEmToPixels</ref>(&amp;info,<sp/>-size);</highlight></codeline>
<codeline lineno="4365"><highlight class="normal"><sp/><sp/><sp/><ref refid="imstb__truetype_8h_1a2784e0e55678a5980e950b1c9fbc75f0" kindref="member">stbtt_GetFontVMetrics</ref>(&amp;info,<sp/>&amp;i_ascent,<sp/>&amp;i_descent,<sp/>&amp;i_lineGap);</highlight></codeline>
<codeline lineno="4366"><highlight class="normal"><sp/><sp/><sp/>*ascent<sp/><sp/>=<sp/>(float)<sp/>i_ascent<sp/><sp/>*<sp/>scale;</highlight></codeline>
<codeline lineno="4367"><highlight class="normal"><sp/><sp/><sp/>*descent<sp/>=<sp/>(float)<sp/>i_descent<sp/>*<sp/>scale;</highlight></codeline>
<codeline lineno="4368"><highlight class="normal"><sp/><sp/><sp/>*lineGap<sp/>=<sp/>(float)<sp/>i_lineGap<sp/>*<sp/>scale;</highlight></codeline>
<codeline lineno="4369"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4370"><highlight class="normal"></highlight></codeline>
<codeline lineno="4371"><highlight class="normal"><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="imstb__truetype_8h_1abbca8f4e5de8209200a7be6c1c57661e" kindref="member">stbtt_GetPackedQuad</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structstbtt__packedchar" kindref="compound">stbtt_packedchar</ref><sp/>*chardata,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pw,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ph,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>char_index,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*xpos,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*ypos,<sp/><ref refid="structstbtt__aligned__quad" kindref="compound">stbtt_aligned_quad</ref><sp/>*q,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>align_to_integer)</highlight></codeline>
<codeline lineno="4372"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4373"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ipw<sp/>=<sp/>1.0f<sp/>/<sp/>pw,<sp/>iph<sp/>=<sp/>1.0f<sp/>/<sp/>ph;</highlight></codeline>
<codeline lineno="4374"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structstbtt__packedchar" kindref="compound">stbtt_packedchar</ref><sp/>*b<sp/>=<sp/>chardata<sp/>+<sp/>char_index;</highlight></codeline>
<codeline lineno="4375"><highlight class="normal"></highlight></codeline>
<codeline lineno="4376"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(align_to_integer)<sp/>{</highlight></codeline>
<codeline lineno="4377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>(float)<sp/><ref refid="imgui__draw_8cpp_1a37ec4d14918346d3451d4f44f24d4710" kindref="member">STBTT_ifloor</ref>((*xpos<sp/>+<sp/>b-&gt;<ref refid="structstbtt__packedchar_1adb30c50674c79d32116ae6f94bd5893f" kindref="member">xoff</ref>)<sp/>+<sp/>0.5f);</highlight></codeline>
<codeline lineno="4378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>(float)<sp/><ref refid="imgui__draw_8cpp_1a37ec4d14918346d3451d4f44f24d4710" kindref="member">STBTT_ifloor</ref>((*ypos<sp/>+<sp/>b-&gt;<ref refid="structstbtt__packedchar_1a6f342ae10df5319f4999ffd256567142" kindref="member">yoff</ref>)<sp/>+<sp/>0.5f);</highlight></codeline>
<codeline lineno="4379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>q-&gt;<ref refid="structstbtt__aligned__quad_1ad74fd8fd69f8a8e1bd20cb0ab7df6e2e" kindref="member">x0</ref><sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="4380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>q-&gt;<ref refid="structstbtt__aligned__quad_1a6178a6b380cf6889893afaeb5019ecd6" kindref="member">y0</ref><sp/>=<sp/>y;</highlight></codeline>
<codeline lineno="4381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>q-&gt;<ref refid="structstbtt__aligned__quad_1a43a7eeac24238e289f825e644331dee6" kindref="member">x1</ref><sp/>=<sp/>x<sp/>+<sp/>b-&gt;<ref refid="structstbtt__packedchar_1a3a33880f925ca826c908cbf9f0673c9f" kindref="member">xoff2</ref><sp/>-<sp/>b-&gt;<ref refid="structstbtt__packedchar_1adb30c50674c79d32116ae6f94bd5893f" kindref="member">xoff</ref>;</highlight></codeline>
<codeline lineno="4382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>q-&gt;<ref refid="structstbtt__aligned__quad_1a66ee8061da982804073a3d2a9114e53c" kindref="member">y1</ref><sp/>=<sp/>y<sp/>+<sp/>b-&gt;<ref refid="structstbtt__packedchar_1a2ec5bbd1010c9a9b7cbdeb7503dcaffa" kindref="member">yoff2</ref><sp/>-<sp/>b-&gt;<ref refid="structstbtt__packedchar_1a6f342ae10df5319f4999ffd256567142" kindref="member">yoff</ref>;</highlight></codeline>
<codeline lineno="4383"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>q-&gt;<ref refid="structstbtt__aligned__quad_1ad74fd8fd69f8a8e1bd20cb0ab7df6e2e" kindref="member">x0</ref><sp/>=<sp/>*xpos<sp/>+<sp/>b-&gt;<ref refid="structstbtt__packedchar_1adb30c50674c79d32116ae6f94bd5893f" kindref="member">xoff</ref>;</highlight></codeline>
<codeline lineno="4385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>q-&gt;<ref refid="structstbtt__aligned__quad_1a6178a6b380cf6889893afaeb5019ecd6" kindref="member">y0</ref><sp/>=<sp/>*ypos<sp/>+<sp/>b-&gt;<ref refid="structstbtt__packedchar_1a6f342ae10df5319f4999ffd256567142" kindref="member">yoff</ref>;</highlight></codeline>
<codeline lineno="4386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>q-&gt;<ref refid="structstbtt__aligned__quad_1a43a7eeac24238e289f825e644331dee6" kindref="member">x1</ref><sp/>=<sp/>*xpos<sp/>+<sp/>b-&gt;<ref refid="structstbtt__packedchar_1a3a33880f925ca826c908cbf9f0673c9f" kindref="member">xoff2</ref>;</highlight></codeline>
<codeline lineno="4387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>q-&gt;<ref refid="structstbtt__aligned__quad_1a66ee8061da982804073a3d2a9114e53c" kindref="member">y1</ref><sp/>=<sp/>*ypos<sp/>+<sp/>b-&gt;<ref refid="structstbtt__packedchar_1a2ec5bbd1010c9a9b7cbdeb7503dcaffa" kindref="member">yoff2</ref>;</highlight></codeline>
<codeline lineno="4388"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4389"><highlight class="normal"></highlight></codeline>
<codeline lineno="4390"><highlight class="normal"><sp/><sp/><sp/>q-&gt;<ref refid="structstbtt__aligned__quad_1ac23b153ff4042deb5499e5a8cacf4a59" kindref="member">s0</ref><sp/>=<sp/>b-&gt;<ref refid="structstbtt__packedchar_1a02cb73a5af37ed60dafd5e4b731af09e" kindref="member">x0</ref><sp/>*<sp/>ipw;</highlight></codeline>
<codeline lineno="4391"><highlight class="normal"><sp/><sp/><sp/>q-&gt;<ref refid="structstbtt__aligned__quad_1a921cd13638a8b3a1e0729021d371da49" kindref="member">t0</ref><sp/>=<sp/>b-&gt;<ref refid="structstbtt__packedchar_1a43429c9545ca8ccf14012cedcf83c1a7" kindref="member">y0</ref><sp/>*<sp/>iph;</highlight></codeline>
<codeline lineno="4392"><highlight class="normal"><sp/><sp/><sp/>q-&gt;<ref refid="structstbtt__aligned__quad_1a26360efee3cdfb5aa2bdc593157b436b" kindref="member">s1</ref><sp/>=<sp/>b-&gt;<ref refid="structstbtt__packedchar_1a99d371f0261cd13dfd1a179f143175d1" kindref="member">x1</ref><sp/>*<sp/>ipw;</highlight></codeline>
<codeline lineno="4393"><highlight class="normal"><sp/><sp/><sp/>q-&gt;<ref refid="structstbtt__aligned__quad_1ae1f5ed7333ca5bba46c6a098a05ac75b" kindref="member">t1</ref><sp/>=<sp/>b-&gt;<ref refid="structstbtt__packedchar_1a9569073ba79fad355210b6ffc35905a7" kindref="member">y1</ref><sp/>*<sp/>iph;</highlight></codeline>
<codeline lineno="4394"><highlight class="normal"></highlight></codeline>
<codeline lineno="4395"><highlight class="normal"><sp/><sp/><sp/>*xpos<sp/>+=<sp/>b-&gt;<ref refid="structstbtt__packedchar_1a28707ae98d1fa946b3390840aeff76ab" kindref="member">xadvance</ref>;</highlight></codeline>
<codeline lineno="4396"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4397"><highlight class="normal"></highlight></codeline>
<codeline lineno="4399"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4400"><highlight class="normal"></highlight><highlight class="comment">//<sp/>sdf<sp/>computation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4401"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4402"><highlight class="normal"></highlight></codeline>
<codeline lineno="4403"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBTT_min(a,b)<sp/><sp/>((a)<sp/>&lt;<sp/>(b)<sp/>?<sp/>(a)<sp/>:<sp/>(b))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4404"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBTT_max(a,b)<sp/><sp/>((a)<sp/>&lt;<sp/>(b)<sp/>?<sp/>(b)<sp/>:<sp/>(a))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4405"><highlight class="normal"></highlight></codeline>
<codeline lineno="4406"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbtt__ray_intersect_bezier(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>orig[2],<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ray[2],<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>q0[2],<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>q1[2],<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>q2[2],<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>hits[2][2])</highlight></codeline>
<codeline lineno="4407"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4408"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>q0perp<sp/>=<sp/>q0[1]*ray[0]<sp/>-<sp/>q0[0]*ray[1];</highlight></codeline>
<codeline lineno="4409"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>q1perp<sp/>=<sp/>q1[1]*ray[0]<sp/>-<sp/>q1[0]*ray[1];</highlight></codeline>
<codeline lineno="4410"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>q2perp<sp/>=<sp/>q2[1]*ray[0]<sp/>-<sp/>q2[0]*ray[1];</highlight></codeline>
<codeline lineno="4411"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>roperp<sp/>=<sp/>orig[1]*ray[0]<sp/>-<sp/>orig[0]*ray[1];</highlight></codeline>
<codeline lineno="4412"><highlight class="normal"></highlight></codeline>
<codeline lineno="4413"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref><sp/>=<sp/>q0perp<sp/>-<sp/>2*q1perp<sp/>+<sp/>q2perp;</highlight></codeline>
<codeline lineno="4414"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>b<sp/>=<sp/>q1perp<sp/>-<sp/>q0perp;</highlight></codeline>
<codeline lineno="4415"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>q0perp<sp/>-<sp/>roperp;</highlight></codeline>
<codeline lineno="4416"><highlight class="normal"></highlight></codeline>
<codeline lineno="4417"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>s0<sp/>=<sp/>0.,<sp/>s1<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="4418"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_s<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4419"><highlight class="normal"></highlight></codeline>
<codeline lineno="4420"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref><sp/>!=<sp/>0.0)<sp/>{</highlight></codeline>
<codeline lineno="4421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>discr<sp/>=<sp/>b*b<sp/>-<sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>*c;</highlight></codeline>
<codeline lineno="4422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(discr<sp/>&gt;<sp/>0.0)<sp/>{</highlight></codeline>
<codeline lineno="4423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>rcpna<sp/>=<sp/>-1<sp/>/<sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>;</highlight></codeline>
<codeline lineno="4424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>d<sp/>=<sp/>(float)<sp/><ref refid="imgui__draw_8cpp_1ace1fcbebd394a5bed76bc9b97dbe8d5a" kindref="member">STBTT_sqrt</ref>(discr);</highlight></codeline>
<codeline lineno="4425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s0<sp/>=<sp/>(b+d)<sp/>*<sp/>rcpna;</highlight></codeline>
<codeline lineno="4426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s1<sp/>=<sp/>(b-d)<sp/>*<sp/>rcpna;</highlight></codeline>
<codeline lineno="4427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s0<sp/>&gt;=<sp/>0.0<sp/>&amp;&amp;<sp/>s0<sp/>&lt;=<sp/>1.0)</highlight></codeline>
<codeline lineno="4428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_s<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="4429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d<sp/>&gt;<sp/>0.0<sp/>&amp;&amp;<sp/>s1<sp/>&gt;=<sp/>0.0<sp/>&amp;&amp;<sp/>s1<sp/>&lt;=<sp/>1.0)<sp/>{</highlight></codeline>
<codeline lineno="4430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num_s<sp/>==<sp/>0)<sp/>s0<sp/>=<sp/>s1;</highlight></codeline>
<codeline lineno="4431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++num_s;</highlight></codeline>
<codeline lineno="4432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4434"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>2*b*s<sp/>+<sp/>c<sp/>=<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>s<sp/>=<sp/>-c<sp/>/<sp/>(2*b)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s0<sp/>=<sp/>c<sp/>/<sp/>(-2<sp/>*<sp/>b);</highlight></codeline>
<codeline lineno="4438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s0<sp/>&gt;=<sp/>0.0<sp/>&amp;&amp;<sp/>s0<sp/>&lt;=<sp/>1.0)</highlight></codeline>
<codeline lineno="4439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_s<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="4440"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4441"><highlight class="normal"></highlight></codeline>
<codeline lineno="4442"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num_s<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="4443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4444"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>rcp_len2<sp/>=<sp/>1<sp/>/<sp/>(ray[0]*ray[0]<sp/>+<sp/>ray[1]*ray[1]);</highlight></codeline>
<codeline lineno="4446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>rayn_x<sp/>=<sp/>ray[0]<sp/>*<sp/>rcp_len2,<sp/>rayn_y<sp/>=<sp/>ray[1]<sp/>*<sp/>rcp_len2;</highlight></codeline>
<codeline lineno="4447"><highlight class="normal"></highlight></codeline>
<codeline lineno="4448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>q0d<sp/>=<sp/><sp/><sp/>q0[0]*rayn_x<sp/>+<sp/><sp/><sp/>q0[1]*rayn_y;</highlight></codeline>
<codeline lineno="4449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>q1d<sp/>=<sp/><sp/><sp/>q1[0]*rayn_x<sp/>+<sp/><sp/><sp/>q1[1]*rayn_y;</highlight></codeline>
<codeline lineno="4450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>q2d<sp/>=<sp/><sp/><sp/>q2[0]*rayn_x<sp/>+<sp/><sp/><sp/>q2[1]*rayn_y;</highlight></codeline>
<codeline lineno="4451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>rod<sp/>=<sp/>orig[0]*rayn_x<sp/>+<sp/>orig[1]*rayn_y;</highlight></codeline>
<codeline lineno="4452"><highlight class="normal"></highlight></codeline>
<codeline lineno="4453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>q10d<sp/>=<sp/>q1d<sp/>-<sp/>q0d;</highlight></codeline>
<codeline lineno="4454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>q20d<sp/>=<sp/>q2d<sp/>-<sp/>q0d;</highlight></codeline>
<codeline lineno="4455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>q0rd<sp/>=<sp/>q0d<sp/>-<sp/>rod;</highlight></codeline>
<codeline lineno="4456"><highlight class="normal"></highlight></codeline>
<codeline lineno="4457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hits[0][0]<sp/>=<sp/>q0rd<sp/>+<sp/>s0*(2.0f<sp/>-<sp/>2.0f*s0)*q10d<sp/>+<sp/>s0*s0*q20d;</highlight></codeline>
<codeline lineno="4458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hits[0][1]<sp/>=<sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>*s0+b;</highlight></codeline>
<codeline lineno="4459"><highlight class="normal"></highlight></codeline>
<codeline lineno="4460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num_s<sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="4461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hits[1][0]<sp/>=<sp/>q0rd<sp/>+<sp/>s1*(2.0f<sp/>-<sp/>2.0f*s1)*q10d<sp/>+<sp/>s1*s1*q20d;</highlight></codeline>
<codeline lineno="4462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hits[1][1]<sp/>=<sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>*s1+b;</highlight></codeline>
<codeline lineno="4463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>2;</highlight></codeline>
<codeline lineno="4464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="4466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4467"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4468"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4469"><highlight class="normal"></highlight></codeline>
<codeline lineno="4470"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>equal(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*b)</highlight></codeline>
<codeline lineno="4471"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4472"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>[0]<sp/>==<sp/>b[0]<sp/>&amp;&amp;<sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>[1]<sp/>==<sp/>b[1]);</highlight></codeline>
<codeline lineno="4473"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4474"><highlight class="normal"></highlight></codeline>
<codeline lineno="4475"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbtt__compute_crossings_x(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nverts,<sp/><ref refid="structstbtt__vertex" kindref="compound">stbtt_vertex</ref><sp/>*verts)</highlight></codeline>
<codeline lineno="4476"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4477"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="4478"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>orig[2],<sp/>ray[2]<sp/>=<sp/>{<sp/>1,<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="4479"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y_frac;</highlight></codeline>
<codeline lineno="4480"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>winding<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4481"><highlight class="normal"></highlight></codeline>
<codeline lineno="4482"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>sure<sp/>y<sp/>never<sp/>passes<sp/>through<sp/>a<sp/>vertex<sp/>of<sp/>the<sp/>shape</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4483"><highlight class="normal"><sp/><sp/><sp/>y_frac<sp/>=<sp/>(float)<sp/><ref refid="imgui__draw_8cpp_1ab937f3c3c6d0c2c126c50bb32e379f02" kindref="member">STBTT_fmod</ref>(y,<sp/>1.0f);</highlight></codeline>
<codeline lineno="4484"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y_frac<sp/>&lt;<sp/>0.01f)</highlight></codeline>
<codeline lineno="4485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>+=<sp/>0.01f;</highlight></codeline>
<codeline lineno="4486"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y_frac<sp/>&gt;<sp/>0.99f)</highlight></codeline>
<codeline lineno="4487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>-=<sp/>0.01f;</highlight></codeline>
<codeline lineno="4488"><highlight class="normal"></highlight></codeline>
<codeline lineno="4489"><highlight class="normal"><sp/><sp/><sp/>orig[0]<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="4490"><highlight class="normal"><sp/><sp/><sp/>orig[1]<sp/>=<sp/>y;</highlight></codeline>
<codeline lineno="4491"><highlight class="normal"></highlight></codeline>
<codeline lineno="4492"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>test<sp/>a<sp/>ray<sp/>from<sp/>(-infinity,y)<sp/>to<sp/>(x,y)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4493"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>nverts;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="4494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(verts[i].type<sp/>==<sp/><ref refid="imstb__truetype_8h_1a9dff5253600497fb00c1c785dd5a309dade4bb6465c32e56588f35e5120769e2e" kindref="member">STBTT_vline</ref>)<sp/>{</highlight></codeline>
<codeline lineno="4495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x0<sp/>=<sp/>(int)<sp/>verts[i-1].x,<sp/>y0<sp/>=<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>verts[i-1].<ref refid="structstbtt__vertex_1a9052065ca544b63d537325b246928cfc" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="4496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x1<sp/>=<sp/>(int)<sp/>verts[i<sp/><sp/>].x,<sp/>y1<sp/>=<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>verts[i<sp/><sp/>].<ref refid="structstbtt__vertex_1a9052065ca544b63d537325b246928cfc" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="4497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y<sp/>&gt;<sp/>STBTT_min(y0,y1)<sp/>&amp;&amp;<sp/>y<sp/>&lt;<sp/>STBTT_max(y0,y1)<sp/>&amp;&amp;<sp/>x<sp/>&gt;<sp/>STBTT_min(x0,x1))<sp/>{</highlight></codeline>
<codeline lineno="4498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x_inter<sp/>=<sp/>(y<sp/>-<sp/>y0)<sp/>/<sp/>(y1<sp/>-<sp/>y0)<sp/>*<sp/>(x1-x0)<sp/>+<sp/>x0;</highlight></codeline>
<codeline lineno="4499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x_inter<sp/>&lt;<sp/>x)</highlight></codeline>
<codeline lineno="4500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>winding<sp/>+=<sp/>(y0<sp/>&lt;<sp/>y1)<sp/>?<sp/>1<sp/>:<sp/>-1;</highlight></codeline>
<codeline lineno="4501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(verts[i].type<sp/>==<sp/><ref refid="imstb__truetype_8h_1a9dff5253600497fb00c1c785dd5a309dab9ac3e527ce18873abeab556f6768ce4" kindref="member">STBTT_vcurve</ref>)<sp/>{</highlight></codeline>
<codeline lineno="4504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x0<sp/>=<sp/>(int)<sp/>verts[i-1].x<sp/>,<sp/>y0<sp/>=<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>verts[i-1].<ref refid="structstbtt__vertex_1a9052065ca544b63d537325b246928cfc" kindref="member">y</ref><sp/>;</highlight></codeline>
<codeline lineno="4505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x1<sp/>=<sp/>(int)<sp/>verts[i<sp/><sp/>].cx,<sp/>y1<sp/>=<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>verts[i<sp/><sp/>].<ref refid="structstbtt__vertex_1a5610d6335aa6962d970fc7fd2225545e" kindref="member">cy</ref>;</highlight></codeline>
<codeline lineno="4506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x2<sp/>=<sp/>(int)<sp/>verts[i<sp/><sp/>].x<sp/>,<sp/>y2<sp/>=<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>verts[i<sp/><sp/>].<ref refid="structstbtt__vertex_1a9052065ca544b63d537325b246928cfc" kindref="member">y</ref><sp/>;</highlight></codeline>
<codeline lineno="4507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ax<sp/>=<sp/>STBTT_min(x0,STBTT_min(x1,x2)),<sp/>ay<sp/>=<sp/>STBTT_min(y0,STBTT_min(y1,y2));</highlight></codeline>
<codeline lineno="4508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>by<sp/>=<sp/>STBTT_max(y0,STBTT_max(y1,y2));</highlight></codeline>
<codeline lineno="4509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y<sp/>&gt;<sp/>ay<sp/>&amp;&amp;<sp/>y<sp/>&lt;<sp/>by<sp/>&amp;&amp;<sp/>x<sp/>&gt;<sp/>ax)<sp/>{</highlight></codeline>
<codeline lineno="4510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>q0[2],q1[2],q2[2];</highlight></codeline>
<codeline lineno="4511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>hits[2][2];</highlight></codeline>
<codeline lineno="4512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q0[0]<sp/>=<sp/>(float)x0;</highlight></codeline>
<codeline lineno="4513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q0[1]<sp/>=<sp/>(float)y0;</highlight></codeline>
<codeline lineno="4514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q1[0]<sp/>=<sp/>(float)x1;</highlight></codeline>
<codeline lineno="4515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q1[1]<sp/>=<sp/>(float)y1;</highlight></codeline>
<codeline lineno="4516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q2[0]<sp/>=<sp/>(float)x2;</highlight></codeline>
<codeline lineno="4517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q2[1]<sp/>=<sp/>(float)y2;</highlight></codeline>
<codeline lineno="4518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(equal(q0,q1)<sp/>||<sp/>equal(q1,q2))<sp/>{</highlight></codeline>
<codeline lineno="4519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x0<sp/>=<sp/>(int)verts[i-1].x;</highlight></codeline>
<codeline lineno="4520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y0<sp/>=<sp/>(int)verts[i-1].y;</highlight></codeline>
<codeline lineno="4521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x1<sp/>=<sp/>(int)verts[i<sp/><sp/>].x;</highlight></codeline>
<codeline lineno="4522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y1<sp/>=<sp/>(int)verts[i<sp/><sp/>].y;</highlight></codeline>
<codeline lineno="4523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y<sp/>&gt;<sp/>STBTT_min(y0,y1)<sp/>&amp;&amp;<sp/>y<sp/>&lt;<sp/>STBTT_max(y0,y1)<sp/>&amp;&amp;<sp/>x<sp/>&gt;<sp/>STBTT_min(x0,x1))<sp/>{</highlight></codeline>
<codeline lineno="4524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x_inter<sp/>=<sp/>(y<sp/>-<sp/>y0)<sp/>/<sp/>(y1<sp/>-<sp/>y0)<sp/>*<sp/>(x1-x0)<sp/>+<sp/>x0;</highlight></codeline>
<codeline lineno="4525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x_inter<sp/>&lt;<sp/>x)</highlight></codeline>
<codeline lineno="4526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>winding<sp/>+=<sp/>(y0<sp/>&lt;<sp/>y1)<sp/>?<sp/>1<sp/>:<sp/>-1;</highlight></codeline>
<codeline lineno="4527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_hits<sp/>=<sp/>stbtt__ray_intersect_bezier(orig,<sp/>ray,<sp/>q0,<sp/>q1,<sp/>q2,<sp/>hits);</highlight></codeline>
<codeline lineno="4530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num_hits<sp/>&gt;=<sp/>1)</highlight></codeline>
<codeline lineno="4531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hits[0][0]<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="4532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>winding<sp/>+=<sp/>(hits[0][1]<sp/>&lt;<sp/>0<sp/>?<sp/>-1<sp/>:<sp/>1);</highlight></codeline>
<codeline lineno="4533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num_hits<sp/>&gt;=<sp/>2)</highlight></codeline>
<codeline lineno="4534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hits[1][0]<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="4535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>winding<sp/>+=<sp/>(hits[1][1]<sp/>&lt;<sp/>0<sp/>?<sp/>-1<sp/>:<sp/>1);</highlight></codeline>
<codeline lineno="4536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4539"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4540"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>winding;</highlight></codeline>
<codeline lineno="4541"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4542"><highlight class="normal"></highlight></codeline>
<codeline lineno="4543"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>stbtt__cuberoot(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x<sp/>)</highlight></codeline>
<codeline lineno="4544"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4545"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x&lt;0)</highlight></codeline>
<codeline lineno="4546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-(float)<sp/><ref refid="imgui__draw_8cpp_1a20c159e8e6985b92a96497881709659a" kindref="member">STBTT_pow</ref>(-x,1.0f/3.0f);</highlight></codeline>
<codeline lineno="4547"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)<sp/><ref refid="imgui__draw_8cpp_1a20c159e8e6985b92a96497881709659a" kindref="member">STBTT_pow</ref>(<sp/>x,1.0f/3.0f);</highlight></codeline>
<codeline lineno="4549"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4550"><highlight class="normal"></highlight></codeline>
<codeline lineno="4551"><highlight class="normal"></highlight><highlight class="comment">//<sp/>x^3<sp/>+<sp/>a*x^2<sp/>+<sp/>b*x<sp/>+<sp/>c<sp/>=<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4552"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbtt__solve_cubic(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>b,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>c,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>r)</highlight></codeline>
<codeline lineno="4553"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4554"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>s<sp/>=<sp/>-<ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref><sp/>/<sp/>3;</highlight></codeline>
<codeline lineno="4555"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>p<sp/>=<sp/>b<sp/>-<sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>*<ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref><sp/>/<sp/>3;</highlight></codeline>
<codeline lineno="4556"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>q<sp/>=<sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref><sp/>*<sp/>(2*<ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>*<ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref><sp/>-<sp/>9*b)<sp/>/<sp/>27<sp/>+<sp/>c;</highlight></codeline>
<codeline lineno="4557"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>p3<sp/>=<sp/>p*p*p;</highlight></codeline>
<codeline lineno="4558"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>d<sp/>=<sp/>q*q<sp/>+<sp/>4*p3<sp/>/<sp/>27;</highlight></codeline>
<codeline lineno="4559"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="4560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>z<sp/>=<sp/>(float)<sp/><ref refid="imgui__draw_8cpp_1ace1fcbebd394a5bed76bc9b97dbe8d5a" kindref="member">STBTT_sqrt</ref>(d);</highlight></codeline>
<codeline lineno="4561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>u<sp/>=<sp/>(-q<sp/>+<sp/>z)<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="4562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>v<sp/>=<sp/>(-q<sp/>-<sp/>z)<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="4563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>u<sp/>=<sp/>stbtt__cuberoot(u);</highlight></codeline>
<codeline lineno="4564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>=<sp/>stbtt__cuberoot(v);</highlight></codeline>
<codeline lineno="4565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>r[0]<sp/>=<sp/>s<sp/>+<sp/>u<sp/>+<sp/>v;</highlight></codeline>
<codeline lineno="4566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="4567"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>u<sp/>=<sp/>(float)<sp/><ref refid="imgui__draw_8cpp_1ace1fcbebd394a5bed76bc9b97dbe8d5a" kindref="member">STBTT_sqrt</ref>(-p/3);</highlight></codeline>
<codeline lineno="4569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>v<sp/>=<sp/>(float)<sp/>STBTT_acos(-<ref refid="imgui__draw_8cpp_1ace1fcbebd394a5bed76bc9b97dbe8d5a" kindref="member">STBTT_sqrt</ref>(-27/p3)<sp/>*<sp/>q<sp/>/<sp/>2)<sp/>/<sp/>3;<sp/></highlight><highlight class="comment">//<sp/>p3<sp/>must<sp/>be<sp/>negative,<sp/>since<sp/>d<sp/>is<sp/>negative</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>m<sp/>=<sp/>(float)<sp/>STBTT_cos(v);</highlight></codeline>
<codeline lineno="4571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>(float)<sp/>STBTT_cos(v-3.141592/2)*1.732050808f;</highlight></codeline>
<codeline lineno="4572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>r[0]<sp/>=<sp/>s<sp/>+<sp/>u<sp/>*<sp/>2<sp/>*<sp/>m;</highlight></codeline>
<codeline lineno="4573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>r[1]<sp/>=<sp/>s<sp/>-<sp/>u<sp/>*<sp/>(m<sp/>+<sp/>n);</highlight></codeline>
<codeline lineno="4574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>r[2]<sp/>=<sp/>s<sp/>-<sp/>u<sp/>*<sp/>(m<sp/>-<sp/>n);</highlight></codeline>
<codeline lineno="4575"><highlight class="normal"></highlight></codeline>
<codeline lineno="4576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//STBTT_assert(<sp/>STBTT_fabs(((r[0]+a)*r[0]+b)*r[0]+c)<sp/>&lt;<sp/>0.05f);<sp/><sp/>//<sp/>these<sp/>asserts<sp/>may<sp/>not<sp/>be<sp/>safe<sp/>at<sp/>all<sp/>scales,<sp/>though<sp/>they&apos;re<sp/>in<sp/>bezier<sp/>t<sp/>parameter<sp/>units<sp/>so<sp/>maybe?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//STBTT_assert(<sp/>STBTT_fabs(((r[1]+a)*r[1]+b)*r[1]+c)<sp/>&lt;<sp/>0.05f);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//STBTT_assert(<sp/>STBTT_fabs(((r[2]+a)*r[2]+b)*r[2]+c)<sp/>&lt;<sp/>0.05f);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>3;</highlight></codeline>
<codeline lineno="4580"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4581"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4582"><highlight class="normal"></highlight></codeline>
<codeline lineno="4583"><highlight class="normal"><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/><ref refid="imstb__truetype_8h_1a86f324094c416b920f5a4df75b3abe97" kindref="member">stbtt_GetGlyphSDF</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref><sp/>*info,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>glyph,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>padding,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>onedge_value,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>pixel_dist_scale,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*height,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*xoff,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*yoff)</highlight></codeline>
<codeline lineno="4584"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4585"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale_x<sp/>=<sp/>scale,<sp/>scale_y<sp/>=<sp/>scale;</highlight></codeline>
<codeline lineno="4586"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ix0,iy0,ix1,iy1;</highlight></codeline>
<codeline lineno="4587"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w,h;</highlight></codeline>
<codeline lineno="4588"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*data;</highlight></codeline>
<codeline lineno="4589"><highlight class="normal"></highlight></codeline>
<codeline lineno="4590"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scale<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="4591"><highlight class="normal"></highlight></codeline>
<codeline lineno="4592"><highlight class="normal"><sp/><sp/><sp/><ref refid="imstb__truetype_8h_1a597ef6b92ab0b5800c74478548b4782f" kindref="member">stbtt_GetGlyphBitmapBoxSubpixel</ref>(info,<sp/>glyph,<sp/>scale,<sp/>scale,<sp/>0.0f,0.0f,<sp/>&amp;ix0,&amp;iy0,&amp;ix1,&amp;iy1);</highlight></codeline>
<codeline lineno="4593"><highlight class="normal"></highlight></codeline>
<codeline lineno="4594"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>empty,<sp/>return<sp/>NULL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4595"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ix0<sp/>==<sp/>ix1<sp/>||<sp/>iy0<sp/>==<sp/>iy1)</highlight></codeline>
<codeline lineno="4596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="4597"><highlight class="normal"></highlight></codeline>
<codeline lineno="4598"><highlight class="normal"><sp/><sp/><sp/>ix0<sp/>-=<sp/>padding;</highlight></codeline>
<codeline lineno="4599"><highlight class="normal"><sp/><sp/><sp/>iy0<sp/>-=<sp/>padding;</highlight></codeline>
<codeline lineno="4600"><highlight class="normal"><sp/><sp/><sp/>ix1<sp/>+=<sp/>padding;</highlight></codeline>
<codeline lineno="4601"><highlight class="normal"><sp/><sp/><sp/>iy1<sp/>+=<sp/>padding;</highlight></codeline>
<codeline lineno="4602"><highlight class="normal"></highlight></codeline>
<codeline lineno="4603"><highlight class="normal"><sp/><sp/><sp/>w<sp/>=<sp/>(ix1<sp/>-<sp/>ix0);</highlight></codeline>
<codeline lineno="4604"><highlight class="normal"><sp/><sp/><sp/>h<sp/>=<sp/>(iy1<sp/>-<sp/>iy0);</highlight></codeline>
<codeline lineno="4605"><highlight class="normal"></highlight></codeline>
<codeline lineno="4606"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(width<sp/>)<sp/>*width<sp/><sp/>=<sp/>w;</highlight></codeline>
<codeline lineno="4607"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(height)<sp/>*height<sp/>=<sp/>h;</highlight></codeline>
<codeline lineno="4608"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xoff<sp/><sp/>)<sp/>*xoff<sp/><sp/><sp/>=<sp/>ix0;</highlight></codeline>
<codeline lineno="4609"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(yoff<sp/><sp/>)<sp/>*yoff<sp/><sp/><sp/>=<sp/>iy0;</highlight></codeline>
<codeline lineno="4610"><highlight class="normal"></highlight></codeline>
<codeline lineno="4611"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>invert<sp/>for<sp/>y-downwards<sp/>bitmaps</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4612"><highlight class="normal"><sp/><sp/><sp/>scale_y<sp/>=<sp/>-scale_y;</highlight></codeline>
<codeline lineno="4613"><highlight class="normal"></highlight></codeline>
<codeline lineno="4614"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,y,i,j;</highlight></codeline>
<codeline lineno="4616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*precompute;</highlight></codeline>
<codeline lineno="4617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structstbtt__vertex" kindref="compound">stbtt_vertex</ref><sp/>*verts;</highlight></codeline>
<codeline lineno="4618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_verts<sp/>=<sp/><ref refid="imstb__truetype_8h_1a695c82840a7d4eaa1d5be00131c9718b" kindref="member">stbtt_GetGlyphShape</ref>(info,<sp/>glyph,<sp/>&amp;verts);</highlight></codeline>
<codeline lineno="4619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/><ref refid="imgui__draw_8cpp_1a8f6734fe0cb6d6aa09e494602afa96be" kindref="member">STBTT_malloc</ref>(w<sp/>*<sp/>h,<sp/>info-&gt;<ref refid="structstbtt__fontinfo_1a9c81078df96a7a3f730137151efab285" kindref="member">userdata</ref>);</highlight></codeline>
<codeline lineno="4620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>precompute<sp/>=<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*)<sp/><ref refid="imgui__draw_8cpp_1a8f6734fe0cb6d6aa09e494602afa96be" kindref="member">STBTT_malloc</ref>(num_verts<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">),<sp/>info-&gt;<ref refid="structstbtt__fontinfo_1a9c81078df96a7a3f730137151efab285" kindref="member">userdata</ref>);</highlight></codeline>
<codeline lineno="4621"><highlight class="normal"></highlight></codeline>
<codeline lineno="4622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0,j=num_verts-1;<sp/>i<sp/>&lt;<sp/>num_verts;<sp/>j=i++)<sp/>{</highlight></codeline>
<codeline lineno="4623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(verts[i].type<sp/>==<sp/><ref refid="imstb__truetype_8h_1a9dff5253600497fb00c1c785dd5a309dade4bb6465c32e56588f35e5120769e2e" kindref="member">STBTT_vline</ref>)<sp/>{</highlight></codeline>
<codeline lineno="4624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x0<sp/>=<sp/>verts[i].<ref refid="structstbtt__vertex_1a81773edbe760d0e090561a3c1e86c919" kindref="member">x</ref>*scale_x,<sp/>y0<sp/>=<sp/>verts[i].<ref refid="structstbtt__vertex_1a9052065ca544b63d537325b246928cfc" kindref="member">y</ref>*scale_y;</highlight></codeline>
<codeline lineno="4625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x1<sp/>=<sp/>verts[j].<ref refid="structstbtt__vertex_1a81773edbe760d0e090561a3c1e86c919" kindref="member">x</ref>*scale_x,<sp/>y1<sp/>=<sp/>verts[j].<ref refid="structstbtt__vertex_1a9052065ca544b63d537325b246928cfc" kindref="member">y</ref>*scale_y;</highlight></codeline>
<codeline lineno="4626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dist<sp/>=<sp/>(float)<sp/><ref refid="imgui__draw_8cpp_1ace1fcbebd394a5bed76bc9b97dbe8d5a" kindref="member">STBTT_sqrt</ref>((x1-x0)*(x1-x0)<sp/>+<sp/>(y1-y0)*(y1-y0));</highlight></codeline>
<codeline lineno="4627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>precompute[i]<sp/>=<sp/>(dist<sp/>==<sp/>0)<sp/>?<sp/>0.0f<sp/>:<sp/>1.0f<sp/>/<sp/>dist;</highlight></codeline>
<codeline lineno="4628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(verts[i].type<sp/>==<sp/><ref refid="imstb__truetype_8h_1a9dff5253600497fb00c1c785dd5a309dab9ac3e527ce18873abeab556f6768ce4" kindref="member">STBTT_vcurve</ref>)<sp/>{</highlight></codeline>
<codeline lineno="4629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x2<sp/>=<sp/>verts[j].<ref refid="structstbtt__vertex_1a81773edbe760d0e090561a3c1e86c919" kindref="member">x</ref><sp/>*scale_x,<sp/>y2<sp/>=<sp/>verts[j].<ref refid="structstbtt__vertex_1a9052065ca544b63d537325b246928cfc" kindref="member">y</ref><sp/>*scale_y;</highlight></codeline>
<codeline lineno="4630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x1<sp/>=<sp/>verts[i].<ref refid="structstbtt__vertex_1a43835489e2a151b31cb100d20f8adeae" kindref="member">cx</ref>*scale_x,<sp/>y1<sp/>=<sp/>verts[i].<ref refid="structstbtt__vertex_1a5610d6335aa6962d970fc7fd2225545e" kindref="member">cy</ref>*scale_y;</highlight></codeline>
<codeline lineno="4631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x0<sp/>=<sp/>verts[i].<ref refid="structstbtt__vertex_1a81773edbe760d0e090561a3c1e86c919" kindref="member">x</ref><sp/>*scale_x,<sp/>y0<sp/>=<sp/>verts[i].<ref refid="structstbtt__vertex_1a9052065ca544b63d537325b246928cfc" kindref="member">y</ref><sp/>*scale_y;</highlight></codeline>
<codeline lineno="4632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>bx<sp/>=<sp/>x0<sp/>-<sp/>2*x1<sp/>+<sp/>x2,<sp/>by<sp/>=<sp/>y0<sp/>-<sp/>2*y1<sp/>+<sp/>y2;</highlight></codeline>
<codeline lineno="4633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>len2<sp/>=<sp/>bx*bx<sp/>+<sp/>by*by;</highlight></codeline>
<codeline lineno="4634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len2<sp/>!=<sp/>0.0f)</highlight></codeline>
<codeline lineno="4635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>precompute[i]<sp/>=<sp/>1.0f<sp/>/<sp/>(bx*bx<sp/>+<sp/>by*by);</highlight></codeline>
<codeline lineno="4636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>precompute[i]<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="4638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>precompute[i]<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="4640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4641"><highlight class="normal"></highlight></codeline>
<codeline lineno="4642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(y=iy0;<sp/>y<sp/>&lt;<sp/>iy1;<sp/>++y)<sp/>{</highlight></codeline>
<codeline lineno="4643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(x=ix0;<sp/>x<sp/>&lt;<sp/>ix1;<sp/>++x)<sp/>{</highlight></codeline>
<codeline lineno="4644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>val;</highlight></codeline>
<codeline lineno="4645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>min_dist<sp/>=<sp/>999999.0f;</highlight></codeline>
<codeline lineno="4646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>sx<sp/>=<sp/>(float)<sp/>x<sp/>+<sp/>0.5f;</highlight></codeline>
<codeline lineno="4647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>sy<sp/>=<sp/>(float)<sp/>y<sp/>+<sp/>0.5f;</highlight></codeline>
<codeline lineno="4648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x_gspace<sp/>=<sp/>(sx<sp/>/<sp/>scale_x);</highlight></codeline>
<codeline lineno="4649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y_gspace<sp/>=<sp/>(sy<sp/>/<sp/>scale_y);</highlight></codeline>
<codeline lineno="4650"><highlight class="normal"></highlight></codeline>
<codeline lineno="4651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>winding<sp/>=<sp/>stbtt__compute_crossings_x(x_gspace,<sp/>y_gspace,<sp/>num_verts,<sp/>verts);<sp/></highlight><highlight class="comment">//<sp/>@OPTIMIZE:<sp/>this<sp/>could<sp/>just<sp/>be<sp/>a<sp/>rasterization,<sp/>but<sp/>needs<sp/>to<sp/>be<sp/>line<sp/>vs.<sp/>non-tesselated<sp/>curves<sp/>so<sp/>a<sp/>new<sp/>path</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4652"><highlight class="normal"></highlight></codeline>
<codeline lineno="4653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>num_verts;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="4654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x0<sp/>=<sp/>verts[i].<ref refid="structstbtt__vertex_1a81773edbe760d0e090561a3c1e86c919" kindref="member">x</ref>*scale_x,<sp/>y0<sp/>=<sp/>verts[i].<ref refid="structstbtt__vertex_1a9052065ca544b63d537325b246928cfc" kindref="member">y</ref>*scale_y;</highlight></codeline>
<codeline lineno="4655"><highlight class="normal"></highlight></codeline>
<codeline lineno="4656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(verts[i].type<sp/>==<sp/><ref refid="imstb__truetype_8h_1a9dff5253600497fb00c1c785dd5a309dade4bb6465c32e56588f35e5120769e2e" kindref="member">STBTT_vline</ref><sp/>&amp;&amp;<sp/>precompute[i]<sp/>!=<sp/>0.0f)<sp/>{</highlight></codeline>
<codeline lineno="4657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x1<sp/>=<sp/>verts[i-1].<ref refid="structstbtt__vertex_1a81773edbe760d0e090561a3c1e86c919" kindref="member">x</ref>*scale_x,<sp/>y1<sp/>=<sp/>verts[i-1].<ref refid="structstbtt__vertex_1a9052065ca544b63d537325b246928cfc" kindref="member">y</ref>*scale_y;</highlight></codeline>
<codeline lineno="4658"><highlight class="normal"></highlight></codeline>
<codeline lineno="4659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dist,dist2<sp/>=<sp/>(x0-sx)*(x0-sx)<sp/>+<sp/>(y0-sy)*(y0-sy);</highlight></codeline>
<codeline lineno="4660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dist2<sp/>&lt;<sp/>min_dist*min_dist)</highlight></codeline>
<codeline lineno="4661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_dist<sp/>=<sp/>(float)<sp/><ref refid="imgui__draw_8cpp_1ace1fcbebd394a5bed76bc9b97dbe8d5a" kindref="member">STBTT_sqrt</ref>(dist2);</highlight></codeline>
<codeline lineno="4662"><highlight class="normal"></highlight></codeline>
<codeline lineno="4663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>coarse<sp/>culling<sp/>against<sp/>bbox</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>(sx<sp/>&gt;<sp/>STBTT_min(x0,x1)-min_dist<sp/>&amp;&amp;<sp/>sx<sp/>&lt;<sp/>STBTT_max(x0,x1)+min_dist<sp/>&amp;&amp;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>sy<sp/>&gt;<sp/>STBTT_min(y0,y1)-min_dist<sp/>&amp;&amp;<sp/>sy<sp/>&lt;<sp/>STBTT_max(y0,y1)+min_dist)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dist<sp/>=<sp/>(float)<sp/><ref refid="imgui__draw_8cpp_1a2b639a5c1ed39bb9e223a78b743f3769" kindref="member">STBTT_fabs</ref>((x1-x0)*(y0-sy)<sp/>-<sp/>(y1-y0)*(x0-sx))<sp/>*<sp/>precompute[i];</highlight></codeline>
<codeline lineno="4667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imgui__draw_8cpp_1a1123d905f512c19c8d796a6d294a3a84" kindref="member">STBTT_assert</ref>(i<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="4668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dist<sp/>&lt;<sp/>min_dist)<sp/>{</highlight></codeline>
<codeline lineno="4669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>position<sp/>along<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>x&apos;<sp/>=<sp/>x0<sp/>+<sp/>t*(x1-x0),<sp/>y&apos;<sp/>=<sp/>y0<sp/>+<sp/>t*(y1-y0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>minimize<sp/>(x&apos;-sx)*(x&apos;-sx)+(y&apos;-sy)*(y&apos;-sy)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dx<sp/>=<sp/>x1-x0,<sp/>dy<sp/>=<sp/>y1-y0;</highlight></codeline>
<codeline lineno="4673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>px<sp/>=<sp/>x0-sx,<sp/>py<sp/>=<sp/>y0-sy;</highlight></codeline>
<codeline lineno="4674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>minimize<sp/>(px+t*dx)^2<sp/>+<sp/>(py+t*dy)^2<sp/>=<sp/>px*px<sp/>+<sp/>2*px*dx*t<sp/>+<sp/>t^2*dx*dx<sp/>+<sp/>py*py<sp/>+<sp/>2*py*dy*t<sp/>+<sp/>t^2*dy*dy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>derivative:<sp/>2*px*dx<sp/>+<sp/>2*py*dy<sp/>+<sp/>(2*dx*dx+2*dy*dy)*t,<sp/>set<sp/>to<sp/>0<sp/>and<sp/>solve</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>t<sp/>=<sp/>-(px*dx<sp/>+<sp/>py*dy)<sp/>/<sp/>(dx*dx<sp/>+<sp/>dy*dy);</highlight></codeline>
<codeline lineno="4677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t<sp/>&gt;=<sp/>0.0f<sp/>&amp;&amp;<sp/>t<sp/>&lt;=<sp/>1.0f)</highlight></codeline>
<codeline lineno="4678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_dist<sp/>=<sp/>dist;</highlight></codeline>
<codeline lineno="4679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(verts[i].type<sp/>==<sp/><ref refid="imstb__truetype_8h_1a9dff5253600497fb00c1c785dd5a309dab9ac3e527ce18873abeab556f6768ce4" kindref="member">STBTT_vcurve</ref>)<sp/>{</highlight></codeline>
<codeline lineno="4681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x2<sp/>=<sp/>verts[i-1].<ref refid="structstbtt__vertex_1a81773edbe760d0e090561a3c1e86c919" kindref="member">x</ref><sp/>*scale_x,<sp/>y2<sp/>=<sp/>verts[i-1].<ref refid="structstbtt__vertex_1a9052065ca544b63d537325b246928cfc" kindref="member">y</ref><sp/>*scale_y;</highlight></codeline>
<codeline lineno="4682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x1<sp/>=<sp/>verts[i<sp/><sp/>].<ref refid="structstbtt__vertex_1a43835489e2a151b31cb100d20f8adeae" kindref="member">cx</ref>*scale_x,<sp/>y1<sp/>=<sp/>verts[i<sp/><sp/>].<ref refid="structstbtt__vertex_1a5610d6335aa6962d970fc7fd2225545e" kindref="member">cy</ref>*scale_y;</highlight></codeline>
<codeline lineno="4683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>box_x0<sp/>=<sp/>STBTT_min(STBTT_min(x0,x1),x2);</highlight></codeline>
<codeline lineno="4684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>box_y0<sp/>=<sp/>STBTT_min(STBTT_min(y0,y1),y2);</highlight></codeline>
<codeline lineno="4685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>box_x1<sp/>=<sp/>STBTT_max(STBTT_max(x0,x1),x2);</highlight></codeline>
<codeline lineno="4686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>box_y1<sp/>=<sp/>STBTT_max(STBTT_max(y0,y1),y2);</highlight></codeline>
<codeline lineno="4687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>coarse<sp/>culling<sp/>against<sp/>bbox<sp/>to<sp/>avoid<sp/>computing<sp/>cubic<sp/>unnecessarily</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sx<sp/>&gt;<sp/>box_x0-min_dist<sp/>&amp;&amp;<sp/>sx<sp/>&lt;<sp/>box_x1+min_dist<sp/>&amp;&amp;<sp/>sy<sp/>&gt;<sp/>box_y0-min_dist<sp/>&amp;&amp;<sp/>sy<sp/>&lt;<sp/>box_y1+min_dist)<sp/>{</highlight></codeline>
<codeline lineno="4689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num=0;</highlight></codeline>
<codeline lineno="4690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ax<sp/>=<sp/>x1-x0,<sp/>ay<sp/>=<sp/>y1-y0;</highlight></codeline>
<codeline lineno="4691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>bx<sp/>=<sp/>x0<sp/>-<sp/>2*x1<sp/>+<sp/>x2,<sp/>by<sp/>=<sp/>y0<sp/>-<sp/>2*y1<sp/>+<sp/>y2;</highlight></codeline>
<codeline lineno="4692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>mx<sp/>=<sp/>x0<sp/>-<sp/>sx,<sp/>my<sp/>=<sp/>y0<sp/>-<sp/>sy;</highlight></codeline>
<codeline lineno="4693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>res[3]<sp/>=<sp/>{0.f,0.f,0.f};</highlight></codeline>
<codeline lineno="4694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>px,py,t,it,dist2;</highlight></codeline>
<codeline lineno="4695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a_inv<sp/>=<sp/>precompute[i];</highlight></codeline>
<codeline lineno="4696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a_inv<sp/>==<sp/>0.0)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>if<sp/>a_inv<sp/>is<sp/>0,<sp/>it&apos;s<sp/>2nd<sp/>degree<sp/>so<sp/>use<sp/>quadratic<sp/>formula</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref><sp/>=<sp/>3*(ax*bx<sp/>+<sp/>ay*by);</highlight></codeline>
<codeline lineno="4698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>b<sp/>=<sp/>2*(ax*ax<sp/>+<sp/>ay*ay)<sp/>+<sp/>(mx*bx+my*by);</highlight></codeline>
<codeline lineno="4699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>mx*ax+my*ay;</highlight></codeline>
<codeline lineno="4700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref><sp/>==<sp/>0.0)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>if<sp/>a<sp/>is<sp/>0,<sp/>it&apos;s<sp/>linear</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(b<sp/>!=<sp/>0.0)<sp/>{</highlight></codeline>
<codeline lineno="4702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res[num++]<sp/>=<sp/>-c/b;</highlight></codeline>
<codeline lineno="4703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>discriminant<sp/>=<sp/>b*b<sp/>-<sp/>4*<ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>*c;</highlight></codeline>
<codeline lineno="4706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(discriminant<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="4707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>root<sp/>=<sp/>(float)<sp/><ref refid="imgui__draw_8cpp_1ace1fcbebd394a5bed76bc9b97dbe8d5a" kindref="member">STBTT_sqrt</ref>(discriminant);</highlight></codeline>
<codeline lineno="4710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res[0]<sp/>=<sp/>(-b<sp/>-<sp/>root)/(2*<ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>);</highlight></codeline>
<codeline lineno="4711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res[1]<sp/>=<sp/>(-b<sp/>+<sp/>root)/(2*<ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>);</highlight></codeline>
<codeline lineno="4712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num<sp/>=<sp/>2;<sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>bother<sp/>distinguishing<sp/>1-solution<sp/>case,<sp/>as<sp/>code<sp/>below<sp/>will<sp/>still<sp/>work</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>b<sp/>=<sp/>3*(ax*bx<sp/>+<sp/>ay*by)<sp/>*<sp/>a_inv;<sp/></highlight><highlight class="comment">//<sp/>could<sp/>precompute<sp/>this<sp/>as<sp/>it<sp/>doesn&apos;t<sp/>depend<sp/>on<sp/>sample<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>(2*(ax*ax<sp/>+<sp/>ay*ay)<sp/>+<sp/>(mx*bx+my*by))<sp/>*<sp/>a_inv;</highlight></codeline>
<codeline lineno="4718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>d<sp/>=<sp/>(mx*ax+my*ay)<sp/>*<sp/>a_inv;</highlight></codeline>
<codeline lineno="4719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num<sp/>=<sp/>stbtt__solve_cubic(b,<sp/>c,<sp/>d,<sp/>res);</highlight></codeline>
<codeline lineno="4720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dist2<sp/>=<sp/>(x0-sx)*(x0-sx)<sp/>+<sp/>(y0-sy)*(y0-sy);</highlight></codeline>
<codeline lineno="4722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dist2<sp/>&lt;<sp/>min_dist*min_dist)</highlight></codeline>
<codeline lineno="4723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_dist<sp/>=<sp/>(float)<sp/><ref refid="imgui__draw_8cpp_1ace1fcbebd394a5bed76bc9b97dbe8d5a" kindref="member">STBTT_sqrt</ref>(dist2);</highlight></codeline>
<codeline lineno="4724"><highlight class="normal"></highlight></codeline>
<codeline lineno="4725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num<sp/>&gt;=<sp/>1<sp/>&amp;&amp;<sp/>res[0]<sp/>&gt;=<sp/>0.0f<sp/>&amp;&amp;<sp/>res[0]<sp/>&lt;=<sp/>1.0f)<sp/>{</highlight></codeline>
<codeline lineno="4726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>=<sp/>res[0],<sp/>it<sp/>=<sp/>1.0f<sp/>-<sp/>t;</highlight></codeline>
<codeline lineno="4727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>px<sp/>=<sp/>it*it*x0<sp/>+<sp/>2*t*it*x1<sp/>+<sp/>t*t*x2;</highlight></codeline>
<codeline lineno="4728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>py<sp/>=<sp/>it*it*y0<sp/>+<sp/>2*t*it*y1<sp/>+<sp/>t*t*y2;</highlight></codeline>
<codeline lineno="4729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dist2<sp/>=<sp/>(px-sx)*(px-sx)<sp/>+<sp/>(py-sy)*(py-sy);</highlight></codeline>
<codeline lineno="4730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dist2<sp/>&lt;<sp/>min_dist<sp/>*<sp/>min_dist)</highlight></codeline>
<codeline lineno="4731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_dist<sp/>=<sp/>(float)<sp/><ref refid="imgui__draw_8cpp_1ace1fcbebd394a5bed76bc9b97dbe8d5a" kindref="member">STBTT_sqrt</ref>(dist2);</highlight></codeline>
<codeline lineno="4732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num<sp/>&gt;=<sp/>2<sp/>&amp;&amp;<sp/>res[1]<sp/>&gt;=<sp/>0.0f<sp/>&amp;&amp;<sp/>res[1]<sp/>&lt;=<sp/>1.0f)<sp/>{</highlight></codeline>
<codeline lineno="4734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>=<sp/>res[1],<sp/>it<sp/>=<sp/>1.0f<sp/>-<sp/>t;</highlight></codeline>
<codeline lineno="4735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>px<sp/>=<sp/>it*it*x0<sp/>+<sp/>2*t*it*x1<sp/>+<sp/>t*t*x2;</highlight></codeline>
<codeline lineno="4736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>py<sp/>=<sp/>it*it*y0<sp/>+<sp/>2*t*it*y1<sp/>+<sp/>t*t*y2;</highlight></codeline>
<codeline lineno="4737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dist2<sp/>=<sp/>(px-sx)*(px-sx)<sp/>+<sp/>(py-sy)*(py-sy);</highlight></codeline>
<codeline lineno="4738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dist2<sp/>&lt;<sp/>min_dist<sp/>*<sp/>min_dist)</highlight></codeline>
<codeline lineno="4739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_dist<sp/>=<sp/>(float)<sp/><ref refid="imgui__draw_8cpp_1ace1fcbebd394a5bed76bc9b97dbe8d5a" kindref="member">STBTT_sqrt</ref>(dist2);</highlight></codeline>
<codeline lineno="4740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num<sp/>&gt;=<sp/>3<sp/>&amp;&amp;<sp/>res[2]<sp/>&gt;=<sp/>0.0f<sp/>&amp;&amp;<sp/>res[2]<sp/>&lt;=<sp/>1.0f)<sp/>{</highlight></codeline>
<codeline lineno="4742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>=<sp/>res[2],<sp/>it<sp/>=<sp/>1.0f<sp/>-<sp/>t;</highlight></codeline>
<codeline lineno="4743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>px<sp/>=<sp/>it*it*x0<sp/>+<sp/>2*t*it*x1<sp/>+<sp/>t*t*x2;</highlight></codeline>
<codeline lineno="4744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>py<sp/>=<sp/>it*it*y0<sp/>+<sp/>2*t*it*y1<sp/>+<sp/>t*t*y2;</highlight></codeline>
<codeline lineno="4745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dist2<sp/>=<sp/>(px-sx)*(px-sx)<sp/>+<sp/>(py-sy)*(py-sy);</highlight></codeline>
<codeline lineno="4746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dist2<sp/>&lt;<sp/>min_dist<sp/>*<sp/>min_dist)</highlight></codeline>
<codeline lineno="4747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_dist<sp/>=<sp/>(float)<sp/><ref refid="imgui__draw_8cpp_1ace1fcbebd394a5bed76bc9b97dbe8d5a" kindref="member">STBTT_sqrt</ref>(dist2);</highlight></codeline>
<codeline lineno="4748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(winding<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="4753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_dist<sp/>=<sp/>-min_dist;<sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>outside<sp/>the<sp/>shape,<sp/>value<sp/>is<sp/>negative</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>=<sp/>onedge_value<sp/>+<sp/>pixel_dist_scale<sp/>*<sp/>min_dist;</highlight></codeline>
<codeline lineno="4755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(val<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="4756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(val<sp/>&gt;<sp/>255)</highlight></codeline>
<codeline lineno="4758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>=<sp/>255;</highlight></codeline>
<codeline lineno="4759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data[(y-iy0)*w+(x-ix0)]<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>char)<sp/>val;</highlight></codeline>
<codeline lineno="4760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imgui__draw_8cpp_1a357d3564409e68f1b694e06f7beeca7e" kindref="member">STBTT_free</ref>(precompute,<sp/>info-&gt;<ref refid="structstbtt__fontinfo_1a9c81078df96a7a3f730137151efab285" kindref="member">userdata</ref>);</highlight></codeline>
<codeline lineno="4763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imgui__draw_8cpp_1a357d3564409e68f1b694e06f7beeca7e" kindref="member">STBTT_free</ref>(verts,<sp/>info-&gt;<ref refid="structstbtt__fontinfo_1a9c81078df96a7a3f730137151efab285" kindref="member">userdata</ref>);</highlight></codeline>
<codeline lineno="4764"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4765"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data;</highlight></codeline>
<codeline lineno="4766"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4767"><highlight class="normal"></highlight></codeline>
<codeline lineno="4768"><highlight class="normal"><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/><ref refid="imstb__truetype_8h_1ae70e9e09a74359133d5f282e032d5aa7" kindref="member">stbtt_GetCodepointSDF</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref><sp/>*info,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>codepoint,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>padding,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>onedge_value,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>pixel_dist_scale,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*height,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*xoff,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*yoff)</highlight></codeline>
<codeline lineno="4769"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4770"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imstb__truetype_8h_1a86f324094c416b920f5a4df75b3abe97" kindref="member">stbtt_GetGlyphSDF</ref>(info,<sp/>scale,<sp/><ref refid="imstb__truetype_8h_1a213d5628c6b2e5c107b99378eefc6e3a" kindref="member">stbtt_FindGlyphIndex</ref>(info,<sp/>codepoint),<sp/>padding,<sp/>onedge_value,<sp/>pixel_dist_scale,<sp/>width,<sp/>height,<sp/>xoff,<sp/>yoff);</highlight></codeline>
<codeline lineno="4771"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4772"><highlight class="normal"></highlight></codeline>
<codeline lineno="4773"><highlight class="normal"><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="imstb__truetype_8h_1a1254dc807df81931ab070c6e80370489" kindref="member">stbtt_FreeSDF</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*bitmap,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*userdata)</highlight></codeline>
<codeline lineno="4774"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4775"><highlight class="normal"><sp/><sp/><sp/><ref refid="imgui__draw_8cpp_1a357d3564409e68f1b694e06f7beeca7e" kindref="member">STBTT_free</ref>(bitmap,<sp/>userdata);</highlight></codeline>
<codeline lineno="4776"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4777"><highlight class="normal"></highlight></codeline>
<codeline lineno="4779"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4780"><highlight class="normal"></highlight><highlight class="comment">//<sp/>font<sp/>name<sp/>matching<sp/>--<sp/>recommended<sp/>not<sp/>to<sp/>use<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4781"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4782"><highlight class="normal"></highlight></codeline>
<codeline lineno="4783"><highlight class="normal"></highlight><highlight class="comment">//<sp/>check<sp/>if<sp/>a<sp/>utf8<sp/>string<sp/>contains<sp/>a<sp/>prefix<sp/>which<sp/>is<sp/>the<sp/>utf16<sp/>string;<sp/>if<sp/>so<sp/>return<sp/>length<sp/>of<sp/>matching<sp/>utf8<sp/>string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4784"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>stbtt_int32<sp/>stbtt__CompareUTF8toUTF16_bigendian_prefix(stbtt_uint8<sp/>*s1,<sp/>stbtt_int32<sp/>len1,<sp/>stbtt_uint8<sp/>*s2,<sp/>stbtt_int32<sp/>len2)</highlight></codeline>
<codeline lineno="4785"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4786"><highlight class="normal"><sp/><sp/><sp/>stbtt_int32<sp/>i=0;</highlight></codeline>
<codeline lineno="4787"><highlight class="normal"></highlight></codeline>
<codeline lineno="4788"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>convert<sp/>utf16<sp/>to<sp/>utf8<sp/>and<sp/>compare<sp/>the<sp/>results<sp/>while<sp/>converting</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4789"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(len2)<sp/>{</highlight></codeline>
<codeline lineno="4790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbtt_uint16<sp/>ch<sp/>=<sp/>s2[0]*256<sp/>+<sp/>s2[1];</highlight></codeline>
<codeline lineno="4791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ch<sp/>&lt;<sp/>0x80)<sp/>{</highlight></codeline>
<codeline lineno="4792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&gt;=<sp/>len1)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="4793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s1[i++]<sp/>!=<sp/>ch)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="4794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ch<sp/>&lt;<sp/>0x800)<sp/>{</highlight></codeline>
<codeline lineno="4795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i+1<sp/>&gt;=<sp/>len1)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="4796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s1[i++]<sp/>!=<sp/>0xc0<sp/>+<sp/>(ch<sp/>&gt;&gt;<sp/>6))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="4797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s1[i++]<sp/>!=<sp/>0x80<sp/>+<sp/>(ch<sp/>&amp;<sp/>0x3f))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="4798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ch<sp/>&gt;=<sp/>0xd800<sp/>&amp;&amp;<sp/>ch<sp/>&lt;<sp/>0xdc00)<sp/>{</highlight></codeline>
<codeline lineno="4799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt_uint32<sp/>c;</highlight></codeline>
<codeline lineno="4800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt_uint16<sp/>ch2<sp/>=<sp/>s2[2]*256<sp/>+<sp/>s2[3];</highlight></codeline>
<codeline lineno="4801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i+3<sp/>&gt;=<sp/>len1)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="4802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>((ch<sp/>-<sp/>0xd800)<sp/>&lt;&lt;<sp/>10)<sp/>+<sp/>(ch2<sp/>-<sp/>0xdc00)<sp/>+<sp/>0x10000;</highlight></codeline>
<codeline lineno="4803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s1[i++]<sp/>!=<sp/>0xf0<sp/>+<sp/>(c<sp/>&gt;&gt;<sp/>18))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="4804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s1[i++]<sp/>!=<sp/>0x80<sp/>+<sp/>((c<sp/>&gt;&gt;<sp/>12)<sp/>&amp;<sp/>0x3f))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="4805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s1[i++]<sp/>!=<sp/>0x80<sp/>+<sp/>((c<sp/>&gt;&gt;<sp/><sp/>6)<sp/>&amp;<sp/>0x3f))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="4806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s1[i++]<sp/>!=<sp/>0x80<sp/>+<sp/>((c<sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>&amp;<sp/>0x3f))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="4807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s2<sp/>+=<sp/>2;<sp/></highlight><highlight class="comment">//<sp/>plus<sp/>another<sp/>2<sp/>below</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len2<sp/>-=<sp/>2;</highlight></codeline>
<codeline lineno="4809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ch<sp/>&gt;=<sp/>0xdc00<sp/>&amp;&amp;<sp/>ch<sp/>&lt;<sp/>0xe000)<sp/>{</highlight></codeline>
<codeline lineno="4810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="4811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i+2<sp/>&gt;=<sp/>len1)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="4813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s1[i++]<sp/>!=<sp/>0xe0<sp/>+<sp/>(ch<sp/>&gt;&gt;<sp/>12))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="4814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s1[i++]<sp/>!=<sp/>0x80<sp/>+<sp/>((ch<sp/>&gt;&gt;<sp/>6)<sp/>&amp;<sp/>0x3f))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="4815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s1[i++]<sp/>!=<sp/>0x80<sp/>+<sp/>((ch<sp/><sp/><sp/><sp/><sp/>)<sp/>&amp;<sp/>0x3f))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="4816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s2<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="4818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>len2<sp/>-=<sp/>2;</highlight></codeline>
<codeline lineno="4819"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4820"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="4821"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4822"><highlight class="normal"></highlight></codeline>
<codeline lineno="4823"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbtt_CompareUTF8toUTF16_bigendian_internal(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len1,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len2)</highlight></codeline>
<codeline lineno="4824"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4825"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>len1<sp/>==<sp/>stbtt__CompareUTF8toUTF16_bigendian_prefix((stbtt_uint8*)<sp/>s1,<sp/>len1,<sp/>(stbtt_uint8*)<sp/>s2,<sp/>len2);</highlight></codeline>
<codeline lineno="4826"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4827"><highlight class="normal"></highlight></codeline>
<codeline lineno="4828"><highlight class="normal"></highlight><highlight class="comment">//<sp/>returns<sp/>results<sp/>in<sp/>whatever<sp/>encoding<sp/>you<sp/>request...<sp/>but<sp/>note<sp/>that<sp/>2-byte<sp/>encodings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4829"><highlight class="normal"></highlight><highlight class="comment">//<sp/>will<sp/>be<sp/>BIG-ENDIAN...<sp/>use<sp/>stbtt_CompareUTF8toUTF16_bigendian()<sp/>to<sp/>compare</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4830"><highlight class="normal"><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="imstb__truetype_8h_1a404d8b8c23a01c8cdf71f02d6d47d185" kindref="member">stbtt_GetFontNameString</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref><sp/>*font,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*length,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>platformID,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>encodingID,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>languageID,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nameID)</highlight></codeline>
<codeline lineno="4831"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4832"><highlight class="normal"><sp/><sp/><sp/>stbtt_int32<sp/>i,count,stringOffset;</highlight></codeline>
<codeline lineno="4833"><highlight class="normal"><sp/><sp/><sp/>stbtt_uint8<sp/>*fc<sp/>=<sp/>font-&gt;<ref refid="structstbtt__fontinfo_1af348db379cf0e0e71a68603d00501d41" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="4834"><highlight class="normal"><sp/><sp/><sp/>stbtt_uint32<sp/>offset<sp/>=<sp/>font-&gt;<ref refid="structstbtt__fontinfo_1a139234d825b585afa27748a1f3d10c7d" kindref="member">fontstart</ref>;</highlight></codeline>
<codeline lineno="4835"><highlight class="normal"><sp/><sp/><sp/>stbtt_uint32<sp/>nm<sp/>=<sp/>stbtt__find_table(fc,<sp/>offset,<sp/></highlight><highlight class="stringliteral">&quot;name&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4836"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!nm)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="4837"><highlight class="normal"></highlight></codeline>
<codeline lineno="4838"><highlight class="normal"><sp/><sp/><sp/>count<sp/>=<sp/>ttUSHORT(fc+nm+2);</highlight></codeline>
<codeline lineno="4839"><highlight class="normal"><sp/><sp/><sp/>stringOffset<sp/>=<sp/>nm<sp/>+<sp/>ttUSHORT(fc+nm+4);</highlight></codeline>
<codeline lineno="4840"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>count;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="4841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbtt_uint32<sp/>loc<sp/>=<sp/>nm<sp/>+<sp/>6<sp/>+<sp/>12<sp/>*<sp/>i;</highlight></codeline>
<codeline lineno="4842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(platformID<sp/>==<sp/>ttUSHORT(fc+loc+0)<sp/>&amp;&amp;<sp/>encodingID<sp/>==<sp/>ttUSHORT(fc+loc+2)</highlight></codeline>
<codeline lineno="4843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>languageID<sp/>==<sp/>ttUSHORT(fc+loc+4)<sp/>&amp;&amp;<sp/>nameID<sp/>==<sp/>ttUSHORT(fc+loc+6))<sp/>{</highlight></codeline>
<codeline lineno="4844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*length<sp/>=<sp/>ttUSHORT(fc+loc+8);</highlight></codeline>
<codeline lineno="4845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>(fc+stringOffset+ttUSHORT(fc+loc+10));</highlight></codeline>
<codeline lineno="4846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4847"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4848"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="4849"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4850"><highlight class="normal"></highlight></codeline>
<codeline lineno="4851"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbtt__matchpair(stbtt_uint8<sp/>*fc,<sp/>stbtt_uint32<sp/>nm,<sp/>stbtt_uint8<sp/>*name,<sp/>stbtt_int32<sp/>nlen,<sp/>stbtt_int32<sp/>target_id,<sp/>stbtt_int32<sp/>next_id)</highlight></codeline>
<codeline lineno="4852"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4853"><highlight class="normal"><sp/><sp/><sp/>stbtt_int32<sp/>i;</highlight></codeline>
<codeline lineno="4854"><highlight class="normal"><sp/><sp/><sp/>stbtt_int32<sp/>count<sp/>=<sp/>ttUSHORT(fc+nm+2);</highlight></codeline>
<codeline lineno="4855"><highlight class="normal"><sp/><sp/><sp/>stbtt_int32<sp/>stringOffset<sp/>=<sp/>nm<sp/>+<sp/>ttUSHORT(fc+nm+4);</highlight></codeline>
<codeline lineno="4856"><highlight class="normal"></highlight></codeline>
<codeline lineno="4857"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>count;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="4858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbtt_uint32<sp/>loc<sp/>=<sp/>nm<sp/>+<sp/>6<sp/>+<sp/>12<sp/>*<sp/>i;</highlight></codeline>
<codeline lineno="4859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbtt_int32<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/>ttUSHORT(fc+loc+6);</highlight></codeline>
<codeline lineno="4860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>==<sp/>target_id)<sp/>{</highlight></codeline>
<codeline lineno="4861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>find<sp/>the<sp/>encoding</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt_int32<sp/>platform<sp/>=<sp/>ttUSHORT(fc+loc+0),<sp/>encoding<sp/>=<sp/>ttUSHORT(fc+loc+2),<sp/>language<sp/>=<sp/>ttUSHORT(fc+loc+4);</highlight></codeline>
<codeline lineno="4863"><highlight class="normal"></highlight></codeline>
<codeline lineno="4864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>this<sp/>a<sp/>Unicode<sp/>encoding?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(platform<sp/>==<sp/>0<sp/>||<sp/>(platform<sp/>==<sp/>3<sp/>&amp;&amp;<sp/>encoding<sp/>==<sp/>1)<sp/>||<sp/>(platform<sp/>==<sp/>3<sp/>&amp;&amp;<sp/>encoding<sp/>==<sp/>10))<sp/>{</highlight></codeline>
<codeline lineno="4866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt_int32<sp/>slen<sp/>=<sp/>ttUSHORT(fc+loc+8);</highlight></codeline>
<codeline lineno="4867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt_int32<sp/>off<sp/>=<sp/>ttUSHORT(fc+loc+10);</highlight></codeline>
<codeline lineno="4868"><highlight class="normal"></highlight></codeline>
<codeline lineno="4869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>if<sp/>there&apos;s<sp/>a<sp/>prefix<sp/>match</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt_int32<sp/>matchlen<sp/>=<sp/>stbtt__CompareUTF8toUTF16_bigendian_prefix(name,<sp/>nlen,<sp/>fc+stringOffset+off,slen);</highlight></codeline>
<codeline lineno="4871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(matchlen<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="4872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>for<sp/>target_id+1<sp/>immediately<sp/>following,<sp/>with<sp/>same<sp/>encoding<sp/>&amp;<sp/>language</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i+1<sp/>&lt;<sp/>count<sp/>&amp;&amp;<sp/>ttUSHORT(fc+loc+12+6)<sp/>==<sp/>next_id<sp/>&amp;&amp;<sp/>ttUSHORT(fc+loc+12)<sp/>==<sp/>platform<sp/>&amp;&amp;<sp/>ttUSHORT(fc+loc+12+2)<sp/>==<sp/>encoding<sp/>&amp;&amp;<sp/>ttUSHORT(fc+loc+12+4)<sp/>==<sp/>language)<sp/>{</highlight></codeline>
<codeline lineno="4874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>slen<sp/>=<sp/>ttUSHORT(fc+loc+12+8);</highlight></codeline>
<codeline lineno="4875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>off<sp/>=<sp/>ttUSHORT(fc+loc+12+10);</highlight></codeline>
<codeline lineno="4876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(slen<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="4877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(matchlen<sp/>==<sp/>nlen)</highlight></codeline>
<codeline lineno="4878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="4879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(matchlen<sp/>&lt;<sp/>nlen<sp/>&amp;&amp;<sp/>name[matchlen]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="4880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++matchlen;</highlight></codeline>
<codeline lineno="4881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stbtt_CompareUTF8toUTF16_bigendian_internal((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<sp/>(name+matchlen),<sp/>nlen-matchlen,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)(fc+stringOffset+off),slen))</highlight></codeline>
<codeline lineno="4882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="4883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>nothing<sp/>immediately<sp/>following</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(matchlen<sp/>==<sp/>nlen)</highlight></codeline>
<codeline lineno="4887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="4888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4891"><highlight class="normal"></highlight></codeline>
<codeline lineno="4892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>@TODO<sp/>handle<sp/>other<sp/>encodings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4894"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4895"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4896"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4897"><highlight class="normal"></highlight></codeline>
<codeline lineno="4898"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbtt__matches(stbtt_uint8<sp/>*fc,<sp/>stbtt_uint32<sp/>offset,<sp/>stbtt_uint8<sp/>*name,<sp/>stbtt_int32<sp/>flags)</highlight></codeline>
<codeline lineno="4899"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4900"><highlight class="normal"><sp/><sp/><sp/>stbtt_int32<sp/>nlen<sp/>=<sp/>(stbtt_int32)<sp/>STBTT_strlen((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>name);</highlight></codeline>
<codeline lineno="4901"><highlight class="normal"><sp/><sp/><sp/>stbtt_uint32<sp/>nm,hd;</highlight></codeline>
<codeline lineno="4902"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!stbtt__isfont(fc+offset))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4903"><highlight class="normal"></highlight></codeline>
<codeline lineno="4904"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>italics/bold/underline<sp/>flags<sp/>in<sp/>macStyle...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4905"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags)<sp/>{</highlight></codeline>
<codeline lineno="4906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hd<sp/>=<sp/>stbtt__find_table(fc,<sp/>offset,<sp/></highlight><highlight class="stringliteral">&quot;head&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((ttUSHORT(fc+hd+44)<sp/>&amp;<sp/>7)<sp/>!=<sp/>(flags<sp/>&amp;<sp/>7))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4908"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4909"><highlight class="normal"></highlight></codeline>
<codeline lineno="4910"><highlight class="normal"><sp/><sp/><sp/>nm<sp/>=<sp/>stbtt__find_table(fc,<sp/>offset,<sp/></highlight><highlight class="stringliteral">&quot;name&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4911"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!nm)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4912"><highlight class="normal"></highlight></codeline>
<codeline lineno="4913"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags)<sp/>{</highlight></codeline>
<codeline lineno="4914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>we<sp/>checked<sp/>the<sp/>macStyle<sp/>flags,<sp/>then<sp/>just<sp/>check<sp/>the<sp/>family<sp/>and<sp/>ignore<sp/>the<sp/>subfamily</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stbtt__matchpair(fc,<sp/>nm,<sp/>name,<sp/>nlen,<sp/>16,<sp/>-1))<sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="4916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stbtt__matchpair(fc,<sp/>nm,<sp/>name,<sp/>nlen,<sp/><sp/>1,<sp/>-1))<sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="4917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stbtt__matchpair(fc,<sp/>nm,<sp/>name,<sp/>nlen,<sp/><sp/>3,<sp/>-1))<sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="4918"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stbtt__matchpair(fc,<sp/>nm,<sp/>name,<sp/>nlen,<sp/>16,<sp/>17))<sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="4920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stbtt__matchpair(fc,<sp/>nm,<sp/>name,<sp/>nlen,<sp/><sp/>1,<sp/><sp/>2))<sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="4921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stbtt__matchpair(fc,<sp/>nm,<sp/>name,<sp/>nlen,<sp/><sp/>3,<sp/>-1))<sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="4922"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4923"><highlight class="normal"></highlight></codeline>
<codeline lineno="4924"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4925"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4926"><highlight class="normal"></highlight></codeline>
<codeline lineno="4927"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbtt_FindMatchingFont_internal(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*font_collection,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name_utf8,<sp/>stbtt_int32<sp/>flags)</highlight></codeline>
<codeline lineno="4928"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4929"><highlight class="normal"><sp/><sp/><sp/>stbtt_int32<sp/>i;</highlight></codeline>
<codeline lineno="4930"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;;++i)<sp/>{</highlight></codeline>
<codeline lineno="4931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbtt_int32<sp/>off<sp/>=<sp/><ref refid="imstb__truetype_8h_1a5ba17159df62ca39649e6f2231ac6e89" kindref="member">stbtt_GetFontOffsetForIndex</ref>(font_collection,<sp/>i);</highlight></codeline>
<codeline lineno="4932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(off<sp/>&lt;<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>off;</highlight></codeline>
<codeline lineno="4933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stbtt__matches((stbtt_uint8<sp/>*)<sp/>font_collection,<sp/>off,<sp/>(stbtt_uint8*)<sp/>name_utf8,<sp/>flags))</highlight></codeline>
<codeline lineno="4934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>off;</highlight></codeline>
<codeline lineno="4935"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4936"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4937"><highlight class="normal"></highlight></codeline>
<codeline lineno="4938"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__GNUC__)<sp/>||<sp/>defined(__clang__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4939"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>GCC<sp/>diagnostic<sp/>push</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4940"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>GCC<sp/>diagnostic<sp/>ignored<sp/>&quot;-Wcast-qual&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4941"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4942"><highlight class="normal"></highlight></codeline>
<codeline lineno="4943"><highlight class="normal"><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="imstb__truetype_8h_1a9f906556cc09c60d136cb9af18305ef3" kindref="member">stbtt_BakeFontBitmap</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offset,</highlight></codeline>
<codeline lineno="4944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>pixel_height,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pixels,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pw,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ph,</highlight></codeline>
<codeline lineno="4945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>first_char,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_chars,<sp/><ref refid="structstbtt__bakedchar" kindref="compound">stbtt_bakedchar</ref><sp/>*chardata)</highlight></codeline>
<codeline lineno="4946"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4947"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbtt_BakeFontBitmap_internal((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>data,<sp/>offset,<sp/>pixel_height,<sp/>pixels,<sp/>pw,<sp/>ph,<sp/>first_char,<sp/>num_chars,<sp/>chardata);</highlight></codeline>
<codeline lineno="4948"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4949"><highlight class="normal"></highlight></codeline>
<codeline lineno="4950"><highlight class="normal"><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="imstb__truetype_8h_1a5ba17159df62ca39649e6f2231ac6e89" kindref="member">stbtt_GetFontOffsetForIndex</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)</highlight></codeline>
<codeline lineno="4951"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4952"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbtt_GetFontOffsetForIndex_internal((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>data,<sp/>index);</highlight></codeline>
<codeline lineno="4953"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4954"><highlight class="normal"></highlight></codeline>
<codeline lineno="4955"><highlight class="normal"><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="imstb__truetype_8h_1af7ee37667bd84fee4c1fcf640fe8a672" kindref="member">stbtt_GetNumberOfFonts</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*data)</highlight></codeline>
<codeline lineno="4956"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4957"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbtt_GetNumberOfFonts_internal((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>data);</highlight></codeline>
<codeline lineno="4958"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4959"><highlight class="normal"></highlight></codeline>
<codeline lineno="4960"><highlight class="normal"><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="imstb__truetype_8h_1ac3b6bda1851d0b1a4fd53f5f353668e5" kindref="member">stbtt_InitFont</ref>(<ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref><sp/>*info,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offset)</highlight></codeline>
<codeline lineno="4961"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4962"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbtt_InitFont_internal(info,<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>data,<sp/>offset);</highlight></codeline>
<codeline lineno="4963"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4964"><highlight class="normal"></highlight></codeline>
<codeline lineno="4965"><highlight class="normal"><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="imstb__truetype_8h_1a76ec14e5c7e57981dc5a409d89b5e92f" kindref="member">stbtt_FindMatchingFont</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fontdata,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flags)</highlight></codeline>
<codeline lineno="4966"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4967"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbtt_FindMatchingFont_internal((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>fontdata,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>name,<sp/>flags);</highlight></codeline>
<codeline lineno="4968"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4969"><highlight class="normal"></highlight></codeline>
<codeline lineno="4970"><highlight class="normal"><ref refid="imstb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827" kindref="member">STBTT_DEF</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="imstb__truetype_8h_1aafc4974ee424f18246f47b0926a1cd31" kindref="member">stbtt_CompareUTF8toUTF16_bigendian</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len2)</highlight></codeline>
<codeline lineno="4971"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4972"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbtt_CompareUTF8toUTF16_bigendian_internal((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>s1,<sp/>len1,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>s2,<sp/>len2);</highlight></codeline>
<codeline lineno="4973"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4974"><highlight class="normal"></highlight></codeline>
<codeline lineno="4975"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__GNUC__)<sp/>||<sp/>defined(__clang__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4976"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>GCC<sp/>diagnostic<sp/>pop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4977"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4978"><highlight class="normal"></highlight></codeline>
<codeline lineno="4979"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>STB_TRUETYPE_IMPLEMENTATION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4980"><highlight class="normal"></highlight></codeline>
<codeline lineno="4981"><highlight class="normal"></highlight></codeline>
<codeline lineno="4982"><highlight class="normal"></highlight><highlight class="comment">//<sp/>FULL<sp/>VERSION<sp/>HISTORY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4983"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4984"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>1.25<sp/>(2021-07-11)<sp/>many<sp/>fixes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4985"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>1.24<sp/>(2020-02-05)<sp/>fix<sp/>warning</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4986"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>1.23<sp/>(2020-02-02)<sp/>query<sp/>SVG<sp/>data<sp/>for<sp/>glyphs;<sp/>query<sp/>whole<sp/>kerning<sp/>table<sp/>(but<sp/>only<sp/>kern<sp/>not<sp/>GPOS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4987"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>1.22<sp/>(2019-08-11)<sp/>minimize<sp/>missing-glyph<sp/>duplication;<sp/>fix<sp/>kerning<sp/>if<sp/>both<sp/>&apos;GPOS&apos;<sp/>and<sp/>&apos;kern&apos;<sp/>are<sp/>defined</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4988"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>1.21<sp/>(2019-02-25)<sp/>fix<sp/>warning</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4989"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>1.20<sp/>(2019-02-07)<sp/>PackFontRange<sp/>skips<sp/>missing<sp/>codepoints;<sp/>GetScaleFontVMetrics()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4990"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>1.19<sp/>(2018-02-11)<sp/>OpenType<sp/>GPOS<sp/>kerning<sp/>(horizontal<sp/>only),<sp/>STBTT_fmod</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4991"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>1.18<sp/>(2018-01-29)<sp/>add<sp/>missing<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4992"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>1.17<sp/>(2017-07-23)<sp/>make<sp/>more<sp/>arguments<sp/>const;<sp/>doc<sp/>fix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4993"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>1.16<sp/>(2017-07-12)<sp/>SDF<sp/>support</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4994"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>1.15<sp/>(2017-03-03)<sp/>make<sp/>more<sp/>arguments<sp/>const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4995"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>1.14<sp/>(2017-01-16)<sp/>num-fonts-in-TTC<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4996"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>1.13<sp/>(2017-01-02)<sp/>support<sp/>OpenType<sp/>fonts,<sp/>certain<sp/>Apple<sp/>fonts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4997"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>1.12<sp/>(2016-10-25)<sp/>suppress<sp/>warnings<sp/>about<sp/>casting<sp/>away<sp/>const<sp/>with<sp/>-Wcast-qual</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4998"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>1.11<sp/>(2016-04-02)<sp/>fix<sp/>unused-variable<sp/>warning</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4999"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>1.10<sp/>(2016-04-02)<sp/>allow<sp/>user-defined<sp/>fabs()<sp/>replacement</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5000"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fix<sp/>memory<sp/>leak<sp/>if<sp/>fontsize=0.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5001"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fix<sp/>warning<sp/>from<sp/>duplicate<sp/>typedef</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5002"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>1.09<sp/>(2016-01-16)<sp/>warning<sp/>fix;<sp/>avoid<sp/>crash<sp/>on<sp/>outofmem;<sp/>use<sp/>alloc<sp/>userdata<sp/>for<sp/>PackFontRanges</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5003"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>1.08<sp/>(2015-09-13)<sp/>document<sp/>stbtt_Rasterize();<sp/>fixes<sp/>for<sp/>vertical<sp/>&amp;<sp/>horizontal<sp/>edges</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5004"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>1.07<sp/>(2015-08-01)<sp/>allow<sp/>PackFontRanges<sp/>to<sp/>accept<sp/>arrays<sp/>of<sp/>sparse<sp/>codepoints;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5005"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allow<sp/>PackFontRanges<sp/>to<sp/>pack<sp/>and<sp/>render<sp/>in<sp/>separate<sp/>phases;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5006"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fix<sp/>stbtt_GetFontOFfsetForIndex<sp/>(never<sp/>worked<sp/>for<sp/>non-0<sp/>input?);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5007"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fixed<sp/>an<sp/>assert()<sp/>bug<sp/>in<sp/>the<sp/>new<sp/>rasterizer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5008"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>replace<sp/>assert()<sp/>with<sp/>STBTT_assert()<sp/>in<sp/>new<sp/>rasterizer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5009"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>1.06<sp/>(2015-07-14)<sp/>performance<sp/>improvements<sp/>(~35%<sp/>faster<sp/>on<sp/>x86<sp/>and<sp/>x64<sp/>on<sp/>test<sp/>machine)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5010"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>also<sp/>more<sp/>precise<sp/>AA<sp/>rasterizer,<sp/>except<sp/>if<sp/>shapes<sp/>overlap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5011"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>remove<sp/>need<sp/>for<sp/>STBTT_sort</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5012"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>1.05<sp/>(2015-04-15)<sp/>fix<sp/>misplaced<sp/>definitions<sp/>for<sp/>STBTT_STATIC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5013"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>1.04<sp/>(2015-04-15)<sp/>typo<sp/>in<sp/>example</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5014"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>1.03<sp/>(2015-04-12)<sp/>STBTT_STATIC,<sp/>fix<sp/>memory<sp/>leak<sp/>in<sp/>new<sp/>packing,<sp/>various<sp/>fixes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5015"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>1.02<sp/>(2014-12-10)<sp/>fix<sp/>various<sp/>warnings<sp/>&amp;<sp/>compile<sp/>issues<sp/>w/<sp/>stb_rect_pack,<sp/>C++</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5016"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>1.01<sp/>(2014-12-08)<sp/>fix<sp/>subpixel<sp/>position<sp/>when<sp/>oversampling<sp/>to<sp/>exactly<sp/>match</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5017"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>non-oversampled;<sp/>STBTT_POINT_SIZE<sp/>for<sp/>packed<sp/>case<sp/>only</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5018"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>1.00<sp/>(2014-12-06)<sp/>add<sp/>new<sp/>PackBegin<sp/>etc.<sp/>API,<sp/>w/<sp/>support<sp/>for<sp/>oversampling</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5019"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>0.99<sp/>(2014-09-18)<sp/>fix<sp/>multiple<sp/>bugs<sp/>with<sp/>subpixel<sp/>rendering<sp/>(ryg)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5020"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>0.9<sp/><sp/>(2014-08-07)<sp/>support<sp/>certain<sp/>mac/iOS<sp/>fonts<sp/>without<sp/>an<sp/>MS<sp/>platformID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5021"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>0.8b<sp/>(2014-07-07)<sp/>fix<sp/>a<sp/>warning</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5022"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>0.8<sp/><sp/>(2014-05-25)<sp/>fix<sp/>a<sp/>few<sp/>more<sp/>warnings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5023"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>0.7<sp/><sp/>(2013-09-25)<sp/>bugfix:<sp/>subpixel<sp/>glyph<sp/>bug<sp/>fixed<sp/>in<sp/>0.5<sp/>had<sp/>come<sp/>back</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5024"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>0.6c<sp/>(2012-07-24)<sp/>improve<sp/>documentation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5025"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>0.6b<sp/>(2012-07-20)<sp/>fix<sp/>a<sp/>few<sp/>more<sp/>warnings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5026"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>0.6<sp/><sp/>(2012-07-17)<sp/>fix<sp/>warnings;<sp/>added<sp/>stbtt_ScaleForMappingEmToPixels,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5027"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt_GetFontBoundingBox,<sp/>stbtt_IsGlyphEmpty</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5028"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>0.5<sp/><sp/>(2011-12-09)<sp/>bugfixes:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5029"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subpixel<sp/>glyph<sp/>renderer<sp/>computed<sp/>wrong<sp/>bounding<sp/>box</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5030"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>first<sp/>vertex<sp/>of<sp/>shape<sp/>can<sp/>be<sp/>off-curve<sp/>(FreeSans)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5031"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>0.4b<sp/>(2011-12-03)<sp/>fixed<sp/>an<sp/>error<sp/>in<sp/>the<sp/>font<sp/>baking<sp/>example</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5032"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>0.4<sp/><sp/>(2011-12-01)<sp/>kerning,<sp/>subpixel<sp/>rendering<sp/>(tor)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5033"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bugfixes<sp/>for:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5034"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>codepoint-to-glyph<sp/>conversion<sp/>using<sp/>table<sp/>fmt=12</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5035"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>codepoint-to-glyph<sp/>conversion<sp/>using<sp/>table<sp/>fmt=4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5036"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbtt_GetBakedQuad<sp/>with<sp/>non-square<sp/>texture<sp/>(Zer)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5037"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>updated<sp/>Hello<sp/>World!<sp/>sample<sp/>to<sp/>use<sp/>kerning<sp/>and<sp/>subpixel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5038"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fixed<sp/>some<sp/>warnings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5039"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>0.3<sp/><sp/>(2009-06-24)<sp/>cmap<sp/>fmt=12,<sp/>compound<sp/>shapes<sp/>(MM)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5040"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>userdata,<sp/>malloc-from-userdata,<sp/>non-zero<sp/>fill<sp/>(stb)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5041"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>0.2<sp/><sp/>(2009-03-11)<sp/>Fix<sp/>unsigned/signed<sp/>char<sp/>warnings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5042"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>0.1<sp/><sp/>(2009-03-09)<sp/>First<sp/>public<sp/>release</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5043"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5044"><highlight class="normal"></highlight></codeline>
<codeline lineno="5045"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="5046"><highlight class="comment">------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="5047"><highlight class="comment">This<sp/>software<sp/>is<sp/>available<sp/>under<sp/>2<sp/>licenses<sp/>--<sp/>choose<sp/>whichever<sp/>you<sp/>prefer.</highlight></codeline>
<codeline lineno="5048"><highlight class="comment">------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="5049"><highlight class="comment">ALTERNATIVE<sp/>A<sp/>-<sp/>MIT<sp/>License</highlight></codeline>
<codeline lineno="5050"><highlight class="comment">Copyright<sp/>(c)<sp/>2017<sp/>Sean<sp/>Barrett</highlight></codeline>
<codeline lineno="5051"><highlight class="comment">Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining<sp/>a<sp/>copy<sp/>of</highlight></codeline>
<codeline lineno="5052"><highlight class="comment">this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files<sp/>(the<sp/>&quot;Software&quot;),<sp/>to<sp/>deal<sp/>in</highlight></codeline>
<codeline lineno="5053"><highlight class="comment">the<sp/>Software<sp/>without<sp/>restriction,<sp/>including<sp/>without<sp/>limitation<sp/>the<sp/>rights<sp/>to</highlight></codeline>
<codeline lineno="5054"><highlight class="comment">use,<sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell<sp/>copies</highlight></codeline>
<codeline lineno="5055"><highlight class="comment">of<sp/>the<sp/>Software,<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is<sp/>furnished<sp/>to<sp/>do</highlight></codeline>
<codeline lineno="5056"><highlight class="comment">so,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline lineno="5057"><highlight class="comment">The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be<sp/>included<sp/>in<sp/>all</highlight></codeline>
<codeline lineno="5058"><highlight class="comment">copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight></codeline>
<codeline lineno="5059"><highlight class="comment">THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,<sp/>EXPRESS<sp/>OR</highlight></codeline>
<codeline lineno="5060"><highlight class="comment">IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY,</highlight></codeline>
<codeline lineno="5061"><highlight class="comment">FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/>NONINFRINGEMENT.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE</highlight></codeline>
<codeline lineno="5062"><highlight class="comment">AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER</highlight></codeline>
<codeline lineno="5063"><highlight class="comment">LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,</highlight></codeline>
<codeline lineno="5064"><highlight class="comment">OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE</highlight></codeline>
<codeline lineno="5065"><highlight class="comment">SOFTWARE.</highlight></codeline>
<codeline lineno="5066"><highlight class="comment">------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="5067"><highlight class="comment">ALTERNATIVE<sp/>B<sp/>-<sp/>Public<sp/>Domain<sp/>(www.unlicense.org)</highlight></codeline>
<codeline lineno="5068"><highlight class="comment">This<sp/>is<sp/>free<sp/>and<sp/>unencumbered<sp/>software<sp/>released<sp/>into<sp/>the<sp/>public<sp/>domain.</highlight></codeline>
<codeline lineno="5069"><highlight class="comment">Anyone<sp/>is<sp/>free<sp/>to<sp/>copy,<sp/>modify,<sp/>publish,<sp/>use,<sp/>compile,<sp/>sell,<sp/>or<sp/>distribute<sp/>this</highlight></codeline>
<codeline lineno="5070"><highlight class="comment">software,<sp/>either<sp/>in<sp/>source<sp/>code<sp/>form<sp/>or<sp/>as<sp/>a<sp/>compiled<sp/>binary,<sp/>for<sp/>any<sp/>purpose,</highlight></codeline>
<codeline lineno="5071"><highlight class="comment">commercial<sp/>or<sp/>non-commercial,<sp/>and<sp/>by<sp/>any<sp/>means.</highlight></codeline>
<codeline lineno="5072"><highlight class="comment">In<sp/>jurisdictions<sp/>that<sp/>recognize<sp/>copyright<sp/>laws,<sp/>the<sp/>author<sp/>or<sp/>authors<sp/>of<sp/>this</highlight></codeline>
<codeline lineno="5073"><highlight class="comment">software<sp/>dedicate<sp/>any<sp/>and<sp/>all<sp/>copyright<sp/>interest<sp/>in<sp/>the<sp/>software<sp/>to<sp/>the<sp/>public</highlight></codeline>
<codeline lineno="5074"><highlight class="comment">domain.<sp/>We<sp/>make<sp/>this<sp/>dedication<sp/>for<sp/>the<sp/>benefit<sp/>of<sp/>the<sp/>public<sp/>at<sp/>large<sp/>and<sp/>to</highlight></codeline>
<codeline lineno="5075"><highlight class="comment">the<sp/>detriment<sp/>of<sp/>our<sp/>heirs<sp/>and<sp/>successors.<sp/>We<sp/>intend<sp/>this<sp/>dedication<sp/>to<sp/>be<sp/>an</highlight></codeline>
<codeline lineno="5076"><highlight class="comment">overt<sp/>act<sp/>of<sp/>relinquishment<sp/>in<sp/>perpetuity<sp/>of<sp/>all<sp/>present<sp/>and<sp/>future<sp/>rights<sp/>to</highlight></codeline>
<codeline lineno="5077"><highlight class="comment">this<sp/>software<sp/>under<sp/>copyright<sp/>law.</highlight></codeline>
<codeline lineno="5078"><highlight class="comment">THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,<sp/>EXPRESS<sp/>OR</highlight></codeline>
<codeline lineno="5079"><highlight class="comment">IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY,</highlight></codeline>
<codeline lineno="5080"><highlight class="comment">FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/>NONINFRINGEMENT.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE</highlight></codeline>
<codeline lineno="5081"><highlight class="comment">AUTHORS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN</highlight></codeline>
<codeline lineno="5082"><highlight class="comment">ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,<sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION</highlight></codeline>
<codeline lineno="5083"><highlight class="comment">WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="5084"><highlight class="comment">------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="5085"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="graphics/imgui/imstb_truetype.h"/>
  </compounddef>
</doxygen>
