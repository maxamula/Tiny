<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="imgui__draw_8cpp" kind="file" language="C++">
    <compoundname>imgui_draw.cpp</compoundname>
    <includes refid="imgui_8h" local="yes">imgui.h</includes>
    <includes refid="imgui__internal_8h" local="yes">imgui_internal.h</includes>
    <includes local="no">stdio.h</includes>
    <includes refid="imstb__rectpack_8h" local="yes">imstb_rectpack.h</includes>
    <includes refid="imstb__truetype_8h" local="yes">imstb_truetype.h</includes>
    <incdepgraph>
      <node id="3">
        <label>imconfig.h</label>
        <link refid="imconfig_8h"/>
      </node>
      <node id="2">
        <label>imgui.h</label>
        <link refid="imgui_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>graphics/imgui/imgui_draw.cpp</label>
        <link refid="imgui__draw_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>imgui_internal.h</label>
        <link refid="imgui__internal_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>imstb_rectpack.h</label>
        <link refid="imstb__rectpack_8h"/>
      </node>
      <node id="14">
        <label>imstb_textedit.h</label>
        <link refid="imstb__textedit_8h"/>
      </node>
      <node id="16">
        <label>imstb_truetype.h</label>
        <link refid="imstb__truetype_8h"/>
      </node>
      <node id="8">
        <label>assert.h</label>
      </node>
      <node id="4">
        <label>float.h</label>
      </node>
      <node id="13">
        <label>limits.h</label>
      </node>
      <node id="12">
        <label>math.h</label>
      </node>
      <node id="5">
        <label>stdarg.h</label>
      </node>
      <node id="6">
        <label>stddef.h</label>
      </node>
      <node id="10">
        <label>stdio.h</label>
      </node>
      <node id="11">
        <label>stdlib.h</label>
      </node>
      <node id="7">
        <label>string.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="struct_im_font_build_src_data" prot="public">ImFontBuildSrcData</innerclass>
    <innerclass refid="struct_im_font_build_dst_data" prot="public">ImFontBuildDstData</innerclass>
    <sectiondef kind="define">
      <memberdef kind="define" id="imgui__draw_8cpp_1adf4d73301961430d50d7edd96f92ce38" prot="public" static="no">
        <name>IMGUI_DEFINE_MATH_OPERATORS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imgui_draw.cpp" line="30" column="9" bodyfile="graphics/imgui/imgui_draw.cpp" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__draw_8cpp_1aebe589aefd15ba7289a47168e31b5e45" prot="public" static="no">
        <name>STBRP_STATIC</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imgui_draw.cpp" line="116" column="9" bodyfile="graphics/imgui/imgui_draw.cpp" bodystart="116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__draw_8cpp_1a9592e63d0df8b6f0712e8da3aea5db23" prot="public" static="no">
        <name>STBRP_ASSERT</name>
        <param><defname>x</defname></param>
        <initializer>do { <ref refid="imgui_8h_1acb09e7dc42e8e3cefb0ecaa197978920" kindref="member">IM_ASSERT</ref>(x); } while (0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imgui_draw.cpp" line="117" column="9" bodyfile="graphics/imgui/imgui_draw.cpp" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__draw_8cpp_1a152aa757fb023d39f16dd537e66b60f0" prot="public" static="no">
        <name>STBRP_SORT</name>
        <initializer>ImQsort</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imgui_draw.cpp" line="118" column="9" bodyfile="graphics/imgui/imgui_draw.cpp" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__draw_8cpp_1a0791e69f0dcd58efa795dd50eb8c6cd0" prot="public" static="no">
        <name>STB_RECT_PACK_IMPLEMENTATION</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imgui_draw.cpp" line="119" column="9" bodyfile="graphics/imgui/imgui_draw.cpp" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__draw_8cpp_1a8f6734fe0cb6d6aa09e494602afa96be" prot="public" static="no">
        <name>STBTT_malloc</name>
        <param><defname>x</defname></param>
        <param><defname>u</defname></param>
        <initializer>((void)(u), <ref refid="imgui_8h_1a40113fb128e7035c8d4aaeeed565e7aa" kindref="member">IM_ALLOC</ref>(x))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imgui_draw.cpp" line="131" column="9" bodyfile="graphics/imgui/imgui_draw.cpp" bodystart="131" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__draw_8cpp_1a357d3564409e68f1b694e06f7beeca7e" prot="public" static="no">
        <name>STBTT_free</name>
        <param><defname>x</defname></param>
        <param><defname>u</defname></param>
        <initializer>((void)(u), <ref refid="imgui_8h_1ac24040f4c2d54ba3216c829703498ebb" kindref="member">IM_FREE</ref>(x))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imgui_draw.cpp" line="132" column="9" bodyfile="graphics/imgui/imgui_draw.cpp" bodystart="132" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__draw_8cpp_1a1123d905f512c19c8d796a6d294a3a84" prot="public" static="no">
        <name>STBTT_assert</name>
        <param><defname>x</defname></param>
        <initializer>do { <ref refid="imgui_8h_1acb09e7dc42e8e3cefb0ecaa197978920" kindref="member">IM_ASSERT</ref>(x); } while(0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imgui_draw.cpp" line="133" column="9" bodyfile="graphics/imgui/imgui_draw.cpp" bodystart="133" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__draw_8cpp_1ab937f3c3c6d0c2c126c50bb32e379f02" prot="public" static="no">
        <name>STBTT_fmod</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer><ref refid="imgui__internal_8h_1ab31c49c24dd5d51dd629a56b5d11a85e" kindref="member">ImFmod</ref>(x,y)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imgui_draw.cpp" line="134" column="9" bodyfile="graphics/imgui/imgui_draw.cpp" bodystart="134" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__draw_8cpp_1ace1fcbebd394a5bed76bc9b97dbe8d5a" prot="public" static="no">
        <name>STBTT_sqrt</name>
        <param><defname>x</defname></param>
        <initializer><ref refid="imgui__internal_8h_1af45b12e2af4037adec57b0a9488b45c2" kindref="member">ImSqrt</ref>(x)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imgui_draw.cpp" line="135" column="9" bodyfile="graphics/imgui/imgui_draw.cpp" bodystart="135" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__draw_8cpp_1a20c159e8e6985b92a96497881709659a" prot="public" static="no">
        <name>STBTT_pow</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer>ImPow(x,y)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imgui_draw.cpp" line="136" column="9" bodyfile="graphics/imgui/imgui_draw.cpp" bodystart="136" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__draw_8cpp_1a2b639a5c1ed39bb9e223a78b743f3769" prot="public" static="no">
        <name>STBTT_fabs</name>
        <param><defname>x</defname></param>
        <initializer><ref refid="imgui__internal_8h_1aa886f20aead1a15ce961ac6fa361b044" kindref="member">ImFabs</ref>(x)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imgui_draw.cpp" line="137" column="9" bodyfile="graphics/imgui/imgui_draw.cpp" bodystart="137" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__draw_8cpp_1a37ec4d14918346d3451d4f44f24d4710" prot="public" static="no">
        <name>STBTT_ifloor</name>
        <param><defname>x</defname></param>
        <initializer>((int)ImFloor(x))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imgui_draw.cpp" line="138" column="9" bodyfile="graphics/imgui/imgui_draw.cpp" bodystart="138" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__draw_8cpp_1a284a26aeebf87bc1688d38b3b16c7248" prot="public" static="no">
        <name>STBTT_iceil</name>
        <param><defname>x</defname></param>
        <initializer>((int)<ref refid="imgui__internal_8h_1a09170e101a72d70544ae6edfe495ee8f" kindref="member">ImCeil</ref>(x))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imgui_draw.cpp" line="139" column="9" bodyfile="graphics/imgui/imgui_draw.cpp" bodystart="139" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__draw_8cpp_1adb252cc9576591994fdf2f89baddc630" prot="public" static="no">
        <name>STBTT_STATIC</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imgui_draw.cpp" line="140" column="9" bodyfile="graphics/imgui/imgui_draw.cpp" bodystart="140" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__draw_8cpp_1afaa2f2d0d9d6726cfae6da070e736347" prot="public" static="no">
        <name>STB_TRUETYPE_IMPLEMENTATION</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imgui_draw.cpp" line="141" column="9" bodyfile="graphics/imgui/imgui_draw.cpp" bodystart="141" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__draw_8cpp_1a36c70a3a9dfec20d02bbb18e00a42ee1" prot="public" static="no">
        <name>ImDrawCmd_HeaderSize</name>
        <initializer>(offsetof(<ref refid="struct_im_draw_cmd" kindref="compound">ImDrawCmd</ref>, VtxOffset) + sizeof(unsigned int))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imgui_draw.cpp" line="478" column="9" bodyfile="graphics/imgui/imgui_draw.cpp" bodystart="478" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__draw_8cpp_1ac140465795cda6fa747579fc0b1b29d0" prot="public" static="no">
        <name>ImDrawCmd_HeaderCompare</name>
        <param><defname>CMD_LHS</defname></param>
        <param><defname>CMD_RHS</defname></param>
        <initializer>(memcmp(CMD_LHS, CMD_RHS, <ref refid="imgui__draw_8cpp_1a36c70a3a9dfec20d02bbb18e00a42ee1" kindref="member">ImDrawCmd_HeaderSize</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imgui_draw.cpp" line="479" column="9" bodyfile="graphics/imgui/imgui_draw.cpp" bodystart="479" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__draw_8cpp_1a13d0eca12c1e2df442519a1a80d8cdaa" prot="public" static="no">
        <name>ImDrawCmd_HeaderCopy</name>
        <param><defname>CMD_DST</defname></param>
        <param><defname>CMD_SRC</defname></param>
        <initializer>(memcpy(CMD_DST, CMD_SRC, <ref refid="imgui__draw_8cpp_1a36c70a3a9dfec20d02bbb18e00a42ee1" kindref="member">ImDrawCmd_HeaderSize</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imgui_draw.cpp" line="480" column="9" bodyfile="graphics/imgui/imgui_draw.cpp" bodystart="480" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__draw_8cpp_1acbac18638b9456aa07cd48452f074eeb" prot="public" static="no">
        <name>ImDrawCmd_AreSequentialIdxOffset</name>
        <param><defname>CMD_0</defname></param>
        <param><defname>CMD_1</defname></param>
        <initializer>(CMD_0-&gt;IdxOffset + CMD_0-&gt;ElemCount == CMD_1-&gt;IdxOffset)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imgui_draw.cpp" line="481" column="9" bodyfile="graphics/imgui/imgui_draw.cpp" bodystart="481" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__draw_8cpp_1aa595f4d7f5dca6ca04e5b1648e84f0d6" prot="public" static="no">
        <name>IM_NORMALIZE2F_OVER_ZERO</name>
        <param><defname>VX</defname></param>
        <param><defname>VY</defname></param>
        <initializer>{ float d2 = VX*VX + VY*VY; if (d2 &gt; 0.0f) { float inv_len = ImRsqrt(d2); VX *= inv_len; VY *= inv_len; } } (void)0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imgui_draw.cpp" line="703" column="9" bodyfile="graphics/imgui/imgui_draw.cpp" bodystart="703" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__draw_8cpp_1ae801e54afba24c14221f81e1564615ef" prot="public" static="no">
        <name>IM_FIXNORMAL2F_MAX_INVLEN2</name>
        <initializer>100.0f</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imgui_draw.cpp" line="704" column="9" bodyfile="graphics/imgui/imgui_draw.cpp" bodystart="704" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__draw_8cpp_1a4df703825e073b91ea24956d6021ee59" prot="public" static="no">
        <name>IM_FIXNORMAL2F</name>
        <param><defname>VX</defname></param>
        <param><defname>VY</defname></param>
        <initializer>{ float d2 = VX*VX + VY*VY; if (d2 &gt; 0.000001f) { float inv_len2 = 1.0f / d2; if (inv_len2 &gt; <ref refid="imgui__draw_8cpp_1ae801e54afba24c14221f81e1564615ef" kindref="member">IM_FIXNORMAL2F_MAX_INVLEN2</ref>) inv_len2 = <ref refid="imgui__draw_8cpp_1ae801e54afba24c14221f81e1564615ef" kindref="member">IM_FIXNORMAL2F_MAX_INVLEN2</ref>; VX *= inv_len2; VY *= inv_len2; } } (void)0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imgui_draw.cpp" line="705" column="9" bodyfile="graphics/imgui/imgui_draw.cpp" bodystart="705" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__draw_8cpp_1a8abf98f5e58a4b3dbbdf35bb1d5ee872" prot="public" static="no">
        <name>stb__in2</name>
        <param><defname>x</defname></param>
        <initializer>((i[x] &lt;&lt; 8) + i[(x)+1])</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imgui_draw.cpp" line="4119" column="9" bodyfile="graphics/imgui/imgui_draw.cpp" bodystart="4119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__draw_8cpp_1acdc23c4b28788003d2841185775661ff" prot="public" static="no">
        <name>stb__in3</name>
        <param><defname>x</defname></param>
        <initializer>((i[x] &lt;&lt; 16) + <ref refid="imgui__draw_8cpp_1a8abf98f5e58a4b3dbbdf35bb1d5ee872" kindref="member">stb__in2</ref>((x)+1))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imgui_draw.cpp" line="4120" column="9" bodyfile="graphics/imgui/imgui_draw.cpp" bodystart="4120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__draw_8cpp_1a26702caa0fd7846cb92e8ba4d80446c3" prot="public" static="no">
        <name>stb__in4</name>
        <param><defname>x</defname></param>
        <initializer>((i[x] &lt;&lt; 24) + <ref refid="imgui__draw_8cpp_1acdc23c4b28788003d2841185775661ff" kindref="member">stb__in3</ref>((x)+1))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imgui_draw.cpp" line="4121" column="9" bodyfile="graphics/imgui/imgui_draw.cpp" bodystart="4121" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="var">
      <memberdef kind="variable" id="imgui__draw_8cpp_1adf518fea7357febbb14eeecb692a8d95" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int FONT_ATLAS_DEFAULT_TEX_DATA_W</definition>
        <argsstring></argsstring>
        <name>FONT_ATLAS_DEFAULT_TEX_DATA_W</name>
        <initializer>= 122</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imgui_draw.cpp" line="2023" column="11" bodyfile="graphics/imgui/imgui_draw.cpp" bodystart="2023" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="imgui__draw_8cpp_1a2c96fc3febbe9f4f6c042a2f975a5b1d" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int FONT_ATLAS_DEFAULT_TEX_DATA_H</definition>
        <argsstring></argsstring>
        <name>FONT_ATLAS_DEFAULT_TEX_DATA_H</name>
        <initializer>= 27</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imgui_draw.cpp" line="2024" column="11" bodyfile="graphics/imgui/imgui_draw.cpp" bodystart="2024" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="imgui__draw_8cpp_1a8fb14a4f88c1553e29260d6f43aada4b" prot="public" static="yes" mutable="no">
        <type>const char</type>
        <definition>const char FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS[FONT_ATLAS_DEFAULT_TEX_DATA_W *FONT_ATLAS_DEFAULT_TEX_DATA_H+1]</definition>
        <argsstring>[FONT_ATLAS_DEFAULT_TEX_DATA_W *FONT_ATLAS_DEFAULT_TEX_DATA_H+1]</argsstring>
        <name>FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS</name>
        <initializer>=
{
    &quot;..-         -XXXXXXX-    X    -           X           -XXXXXXX          -          XXXXXXX-     XX          - XX       XX &quot;
    &quot;..-         -X.....X-   X.X   -          X.X          -X.....X          -          X.....X-    X..X         -X..X     X..X&quot;
    &quot;---         -XXX.XXX-  X...X  -         X...X         -X....X           -           X....X-    X..X         -X...X   X...X&quot;
    &quot;X           -  X.X  - X.....X -        X.....X        -X...X            -            X...X-    X..X         - X...X X...X &quot;
    &quot;XX          -  X.X  -X.......X-       X.......X       -X..X.X           -           X.X..X-    X..X         -  X...X...X  &quot;
    &quot;X.X         -  X.X  -XXXX.XXXX-       XXXX.XXXX       -X.X X.X          -          X.X X.X-    X..XXX       -   X.....X   &quot;
    &quot;X..X        -  X.X  -   X.X   -          X.X          -XX   X.X         -         X.X   XX-    X..X..XXX    -    X...X    &quot;
    &quot;X...X       -  X.X  -   X.X   -    XX    X.X    XX    -      X.X        -        X.X      -    X..X..X..XX  -     X.X     &quot;
    &quot;X....X      -  X.X  -   X.X   -   X.X    X.X    X.X   -       X.X       -       X.X       -    X..X..X..X.X -    X...X    &quot;
    &quot;X.....X     -  X.X  -   X.X   -  X..X    X.X    X..X  -        X.X      -      X.X        -XXX X..X..X..X..X-   X.....X   &quot;
    &quot;X......X    -  X.X  -   X.X   - X...XXXXXX.XXXXXX...X -         X.X   XX-XX   X.X         -X..XX........X..X-  X...X...X  &quot;
    &quot;X.......X   -  X.X  -   X.X   -X.....................X-          X.X X.X-X.X X.X          -X...X...........X- X...X X...X &quot;
    &quot;X........X  -  X.X  -   X.X   - X...XXXXXX.XXXXXX...X -           X.X..X-X..X.X           - X..............X-X...X   X...X&quot;
    &quot;X.........X -XXX.XXX-   X.X   -  X..X    X.X    X..X  -            X...X-X...X            -  X.............X-X..X     X..X&quot;
    &quot;X..........X-X.....X-   X.X   -   X.X    X.X    X.X   -           X....X-X....X           -  X.............X- XX       XX &quot;
    &quot;X......XXXXX-XXXXXXX-   X.X   -    XX    X.X    XX    -          X.....X-X.....X          -   X............X--------------&quot;
    &quot;X...X..X    ---------   X.X   -          X.X          -          XXXXXXX-XXXXXXX          -   X...........X -             &quot;
    &quot;X..X X..X   -       -XXXX.XXXX-       XXXX.XXXX       -------------------------------------    X..........X -             &quot;
    &quot;X.X  X..X   -       -X.......X-       X.......X       -    XX           XX    -           -    X..........X -             &quot;
    &quot;XX    X..X  -       - X.....X -        X.....X        -   X.X           X.X   -           -     X........X  -             &quot;
    &quot;      X..X  -       -  X...X  -         X...X         -  X..X           X..X  -           -     X........X  -             &quot;
    &quot;       XX   -       -   X.X   -          X.X          - X...XXXXXXXXXXXXX...X -           -     XXXXXXXXXX  -             &quot;
    &quot;-------------       -    X    -           X           -X.....................X-           -------------------             &quot;
    &quot;                    ----------------------------------- X...XXXXXXXXXXXXX...X -                                           &quot;
    &quot;                                                      -  X..X           X..X  -                                           &quot;
    &quot;                                                      -   X.X           X.X   -                                           &quot;
    &quot;                                                      -    XX           XX    -                                           &quot;
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imgui_draw.cpp" line="2025" column="19" bodyfile="graphics/imgui/imgui_draw.cpp" bodystart="2025" bodyend="2054"/>
      </memberdef>
      <memberdef kind="variable" id="imgui__draw_8cpp_1a082105b7beb5c000f2db90529edf2f50" prot="public" static="yes" mutable="no">
        <type>const <ref refid="struct_im_vec2" kindref="compound">ImVec2</ref></type>
        <definition>const ImVec2 FONT_ATLAS_DEFAULT_TEX_CURSOR_DATA[ImGuiMouseCursor_COUNT][3]</definition>
        <argsstring>[ImGuiMouseCursor_COUNT][3]</argsstring>
        <name>FONT_ATLAS_DEFAULT_TEX_CURSOR_DATA</name>
        <initializer>=
{
    
    { <ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>( 0,3), <ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(12,19), <ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>( 0, 0) }, 
    { <ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(13,0), <ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>( 7,16), <ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>( 1, 8) }, 
    { <ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(31,0), <ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(23,23), <ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(11,11) }, 
    { <ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(21,0), <ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>( 9,23), <ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>( 4,11) }, 
    { <ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(55,18),<ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(23, 9), <ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(11, 4) }, 
    { <ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(73,0), <ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(17,17), <ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>( 8, 8) }, 
    { <ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(55,0), <ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(17,17), <ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>( 8, 8) }, 
    { <ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(91,0), <ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(17,22), <ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>( 5, 0) }, 
    { <ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(109,0),<ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(13,15), <ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>( 6, 7) }, 
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imgui_draw.cpp" line="2056" column="21" bodyfile="graphics/imgui/imgui_draw.cpp" bodystart="2056" bodyend="2068"/>
      </memberdef>
      <memberdef kind="variable" id="imgui__draw_8cpp_1a6d45e455062888f4f84c022dcb80575f" prot="public" static="yes" mutable="no">
        <type>unsigned char *</type>
        <definition>unsigned char* stb__barrier_out_e</definition>
        <argsstring></argsstring>
        <name>stb__barrier_out_e</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imgui_draw.cpp" line="4098" column="22" bodyfile="graphics/imgui/imgui_draw.cpp" bodystart="4098" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="imgui__draw_8cpp_1a78b497778dec25807f8ba5facab4732a" prot="public" static="yes" mutable="no">
        <type>unsigned char *</type>
        <definition>unsigned char * stb__barrier_out_b</definition>
        <argsstring></argsstring>
        <name>stb__barrier_out_b</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imgui_draw.cpp" line="4098" column="41" bodyfile="graphics/imgui/imgui_draw.cpp" bodystart="4098" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="imgui__draw_8cpp_1abdae0f70193ebadc01bddcd66dfcf743" prot="public" static="yes" mutable="no">
        <type>const unsigned char *</type>
        <definition>const unsigned char* stb__barrier_in_b</definition>
        <argsstring></argsstring>
        <name>stb__barrier_in_b</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imgui_draw.cpp" line="4099" column="28" bodyfile="graphics/imgui/imgui_draw.cpp" bodystart="4099" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="imgui__draw_8cpp_1a41c1b5025a92d93a30f72ba8f78c9910" prot="public" static="yes" mutable="no">
        <type>unsigned char *</type>
        <definition>unsigned char* stb__dout</definition>
        <argsstring></argsstring>
        <name>stb__dout</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imgui_draw.cpp" line="4100" column="22" bodyfile="graphics/imgui/imgui_draw.cpp" bodystart="4100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="imgui__draw_8cpp_1a7fcb9c29f786e1904c10a70f1385690a" prot="public" static="yes" mutable="no">
        <type>const char</type>
        <definition>const char proggy_clean_ttf_compressed_data_base85[11980+1]</definition>
        <argsstring>[11980+1]</argsstring>
        <name>proggy_clean_ttf_compressed_data_base85</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imgui_draw.cpp" line="4215" column="19" bodyfile="graphics/imgui/imgui_draw.cpp" bodystart="4215" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="imgui__draw_8cpp_1a313bb9d47244a5d27a5aeb4cd74f94a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref></type>
        <definition>ImVec2 ImBezierCubicCalc</definition>
        <argsstring>(const ImVec2 &amp;p1, const ImVec2 &amp;p2, const ImVec2 &amp;p3, const ImVec2 &amp;p4, float t)</argsstring>
        <name>ImBezierCubicCalc</name>
        <param>
          <type>const <ref refid="struct_im_vec2" kindref="compound">ImVec2</ref> &amp;</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>const <ref refid="struct_im_vec2" kindref="compound">ImVec2</ref> &amp;</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>const <ref refid="struct_im_vec2" kindref="compound">ImVec2</ref> &amp;</type>
          <declname>p3</declname>
        </param>
        <param>
          <type>const <ref refid="struct_im_vec2" kindref="compound">ImVec2</ref> &amp;</type>
          <declname>p4</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imgui_draw.cpp" line="1241" column="8" bodyfile="graphics/imgui/imgui_draw.cpp" bodystart="1241" bodyend="1249"/>
      </memberdef>
      <memberdef kind="function" id="imgui__draw_8cpp_1a9b3ec0353c3a10709ad21985942613da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref></type>
        <definition>ImVec2 ImBezierQuadraticCalc</definition>
        <argsstring>(const ImVec2 &amp;p1, const ImVec2 &amp;p2, const ImVec2 &amp;p3, float t)</argsstring>
        <name>ImBezierQuadraticCalc</name>
        <param>
          <type>const <ref refid="struct_im_vec2" kindref="compound">ImVec2</ref> &amp;</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>const <ref refid="struct_im_vec2" kindref="compound">ImVec2</ref> &amp;</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>const <ref refid="struct_im_vec2" kindref="compound">ImVec2</ref> &amp;</type>
          <declname>p3</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imgui_draw.cpp" line="1251" column="8" bodyfile="graphics/imgui/imgui_draw.cpp" bodystart="1251" bodyend="1258"/>
      </memberdef>
      <memberdef kind="function" id="imgui__draw_8cpp_1aa24ae0f6a91ae4f8e72ae1baa9296bd1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void PathBezierCubicCurveToCasteljau</definition>
        <argsstring>(ImVector&lt; ImVec2 &gt; *path, float x1, float y1, float x2, float y2, float x3, float y3, float x4, float y4, float tess_tol, int level)</argsstring>
        <name>PathBezierCubicCurveToCasteljau</name>
        <param>
          <type><ref refid="struct_im_vector" kindref="compound">ImVector</ref>&lt; <ref refid="struct_im_vec2" kindref="compound">ImVec2</ref> &gt; *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>float</type>
          <declname>x1</declname>
        </param>
        <param>
          <type>float</type>
          <declname>y1</declname>
        </param>
        <param>
          <type>float</type>
          <declname>x2</declname>
        </param>
        <param>
          <type>float</type>
          <declname>y2</declname>
        </param>
        <param>
          <type>float</type>
          <declname>x3</declname>
        </param>
        <param>
          <type>float</type>
          <declname>y3</declname>
        </param>
        <param>
          <type>float</type>
          <declname>x4</declname>
        </param>
        <param>
          <type>float</type>
          <declname>y4</declname>
        </param>
        <param>
          <type>float</type>
          <declname>tess_tol</declname>
        </param>
        <param>
          <type>int</type>
          <declname>level</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imgui_draw.cpp" line="1261" column="13" bodyfile="graphics/imgui/imgui_draw.cpp" bodystart="1261" bodyend="1284"/>
      </memberdef>
      <memberdef kind="function" id="imgui__draw_8cpp_1aee43e89d334baa328c6a456379edaccd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void PathBezierQuadraticCurveToCasteljau</definition>
        <argsstring>(ImVector&lt; ImVec2 &gt; *path, float x1, float y1, float x2, float y2, float x3, float y3, float tess_tol, int level)</argsstring>
        <name>PathBezierQuadraticCurveToCasteljau</name>
        <param>
          <type><ref refid="struct_im_vector" kindref="compound">ImVector</ref>&lt; <ref refid="struct_im_vec2" kindref="compound">ImVec2</ref> &gt; *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>float</type>
          <declname>x1</declname>
        </param>
        <param>
          <type>float</type>
          <declname>y1</declname>
        </param>
        <param>
          <type>float</type>
          <declname>x2</declname>
        </param>
        <param>
          <type>float</type>
          <declname>y2</declname>
        </param>
        <param>
          <type>float</type>
          <declname>x3</declname>
        </param>
        <param>
          <type>float</type>
          <declname>y3</declname>
        </param>
        <param>
          <type>float</type>
          <declname>tess_tol</declname>
        </param>
        <param>
          <type>int</type>
          <declname>level</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imgui_draw.cpp" line="1286" column="13" bodyfile="graphics/imgui/imgui_draw.cpp" bodystart="1286" bodyend="1302"/>
      </memberdef>
      <memberdef kind="function" id="imgui__draw_8cpp_1abc26563004ba48126f2e8b70ea0067af" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="imgui_8h_1af2ef7e1341558a1d39aa244c1257780a" kindref="member">ImDrawFlags</ref></type>
        <definition>static ImDrawFlags FixRectCornerFlags</definition>
        <argsstring>(ImDrawFlags flags)</argsstring>
        <name>FixRectCornerFlags</name>
        <param>
          <type><ref refid="imgui_8h_1af2ef7e1341558a1d39aa244c1257780a" kindref="member">ImDrawFlags</ref></type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imgui_draw.cpp" line="1336" column="27" bodyfile="graphics/imgui/imgui_draw.cpp" bodystart="1336" bodyend="1358"/>
      </memberdef>
      <memberdef kind="function" id="imgui__draw_8cpp_1a5a5301def23b33e2156ac79a8b65c69b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>static unsigned int stb_decompress_length</definition>
        <argsstring>(const unsigned char *input)</argsstring>
        <name>stb_decompress_length</name>
        <param>
          <type>const unsigned char *</type>
          <declname>input</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imgui_draw.cpp" line="4093" column="21" bodyfile="graphics/imgui/imgui_draw.cpp" bodystart="4093" bodyend="4096" declfile="graphics/imgui/imgui_draw.cpp" declline="2204" declcolumn="21"/>
      </memberdef>
      <memberdef kind="function" id="imgui__draw_8cpp_1a23f899d930c93d351569ee83cf920570" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>static unsigned int stb_decompress</definition>
        <argsstring>(unsigned char *output, const unsigned char *input, unsigned int length)</argsstring>
        <name>stb_decompress</name>
        <param>
          <type>unsigned char *</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const unsigned char *</type>
          <declname>input</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imgui_draw.cpp" line="4171" column="21" bodyfile="graphics/imgui/imgui_draw.cpp" bodystart="4171" bodyend="4201" declfile="graphics/imgui/imgui_draw.cpp" declline="2205" declcolumn="21"/>
      </memberdef>
      <memberdef kind="function" id="imgui__draw_8cpp_1a98e6aacbe39a5d2a5fa9d08e362e49ef" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>static const char * GetDefaultCompressedFontDataTTFBase85</definition>
        <argsstring>()</argsstring>
        <name>GetDefaultCompressedFontDataTTFBase85</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imgui_draw.cpp" line="4303" column="19" bodyfile="graphics/imgui/imgui_draw.cpp" bodystart="4303" bodyend="4306" declfile="graphics/imgui/imgui_draw.cpp" declline="2206" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="imgui__draw_8cpp_1a7e56fa5a582707008d3a598b8d6e81fd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>static unsigned int Decode85Byte</definition>
        <argsstring>(char c)</argsstring>
        <name>Decode85Byte</name>
        <param>
          <type>char</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imgui_draw.cpp" line="2207" column="21" bodyfile="graphics/imgui/imgui_draw.cpp" bodystart="2207" bodyend="2207"/>
      </memberdef>
      <memberdef kind="function" id="imgui__draw_8cpp_1a992fe244c130e7ec5a8aa7bc0889f9aa" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void Decode85</definition>
        <argsstring>(const unsigned char *src, unsigned char *dst)</argsstring>
        <name>Decode85</name>
        <param>
          <type>const unsigned char *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>dst</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imgui_draw.cpp" line="2208" column="21" bodyfile="graphics/imgui/imgui_draw.cpp" bodystart="2208" bodyend="2217"/>
      </memberdef>
      <memberdef kind="function" id="imgui__draw_8cpp_1a8d5f3a053aae34ac7b93e39cb9096d06" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ImFontAtlasBuildMultiplyCalcLookupTable</definition>
        <argsstring>(unsigned char out_table[256], float in_brighten_factor)</argsstring>
        <name>ImFontAtlasBuildMultiplyCalcLookupTable</name>
        <param>
          <type>unsigned char</type>
          <declname>out_table</declname>
          <array>[256]</array>
        </param>
        <param>
          <type>float</type>
          <declname>in_brighten_factor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imgui_draw.cpp" line="2387" column="9" bodyfile="graphics/imgui/imgui_draw.cpp" bodystart="2387" bodyend="2394"/>
      </memberdef>
      <memberdef kind="function" id="imgui__draw_8cpp_1a8dc3feae771599949b33712b520e9060" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ImFontAtlasBuildMultiplyRectAlpha8</definition>
        <argsstring>(const unsigned char table[256], unsigned char *pixels, int x, int y, int w, int h, int stride)</argsstring>
        <name>ImFontAtlasBuildMultiplyRectAlpha8</name>
        <param>
          <type>const unsigned char</type>
          <declname>table</declname>
          <array>[256]</array>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>pixels</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>w</declname>
        </param>
        <param>
          <type>int</type>
          <declname>h</declname>
        </param>
        <param>
          <type>int</type>
          <declname>stride</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imgui_draw.cpp" line="2396" column="9" bodyfile="graphics/imgui/imgui_draw.cpp" bodystart="2396" bodyend="2403"/>
      </memberdef>
      <memberdef kind="function" id="imgui__draw_8cpp_1a4fc5013fcaedd05f22060e0c97f18c83" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void UnpackBitVectorToFlatIndexList</definition>
        <argsstring>(const ImBitVector *in, ImVector&lt; int &gt; *out)</argsstring>
        <name>UnpackBitVectorToFlatIndexList</name>
        <param>
          <type>const <ref refid="struct_im_bit_vector" kindref="compound">ImBitVector</ref> *</type>
          <declname>in</declname>
        </param>
        <param>
          <type><ref refid="struct_im_vector" kindref="compound">ImVector</ref>&lt; int &gt; *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imgui_draw.cpp" line="2431" column="13" bodyfile="graphics/imgui/imgui_draw.cpp" bodystart="2431" bodyend="2441"/>
      </memberdef>
      <memberdef kind="function" id="imgui__draw_8cpp_1a2f785bd6dd330af7a832589fa24f303a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool ImFontAtlasBuildWithStbTruetype</definition>
        <argsstring>(ImFontAtlas *atlas)</argsstring>
        <name>ImFontAtlasBuildWithStbTruetype</name>
        <param>
          <type><ref refid="struct_im_font_atlas" kindref="compound">ImFontAtlas</ref> *</type>
          <declname>atlas</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imgui_draw.cpp" line="2443" column="13" bodyfile="graphics/imgui/imgui_draw.cpp" bodystart="2443" bodyend="2704"/>
      </memberdef>
      <memberdef kind="function" id="imgui__draw_8cpp_1a4c276d0224ef420d570c9485c4c76a19" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="struct_im_font_builder_i_o" kindref="compound">ImFontBuilderIO</ref> *</type>
        <definition>const ImFontBuilderIO * ImFontAtlasGetBuilderForStbTruetype</definition>
        <argsstring>()</argsstring>
        <name>ImFontAtlasGetBuilderForStbTruetype</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imgui_draw.cpp" line="2706" column="23" bodyfile="graphics/imgui/imgui_draw.cpp" bodystart="2706" bodyend="2711"/>
      </memberdef>
      <memberdef kind="function" id="imgui__draw_8cpp_1ab58975478a1fbc1735cf9b15e2db5be0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ImFontAtlasUpdateConfigDataPointers</definition>
        <argsstring>(ImFontAtlas *atlas)</argsstring>
        <name>ImFontAtlasUpdateConfigDataPointers</name>
        <param>
          <type><ref refid="struct_im_font_atlas" kindref="compound">ImFontAtlas</ref> *</type>
          <declname>atlas</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imgui_draw.cpp" line="2715" column="6" bodyfile="graphics/imgui/imgui_draw.cpp" bodystart="2715" bodyend="2727"/>
      </memberdef>
      <memberdef kind="function" id="imgui__draw_8cpp_1a4bea0932904c84de73237df3f1f76bdd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ImFontAtlasBuildSetupFont</definition>
        <argsstring>(ImFontAtlas *atlas, ImFont *font, ImFontConfig *font_config, float ascent, float descent)</argsstring>
        <name>ImFontAtlasBuildSetupFont</name>
        <param>
          <type><ref refid="struct_im_font_atlas" kindref="compound">ImFontAtlas</ref> *</type>
          <declname>atlas</declname>
        </param>
        <param>
          <type><ref refid="struct_im_font" kindref="compound">ImFont</ref> *</type>
          <declname>font</declname>
        </param>
        <param>
          <type><ref refid="struct_im_font_config" kindref="compound">ImFontConfig</ref> *</type>
          <declname>font_config</declname>
        </param>
        <param>
          <type>float</type>
          <declname>ascent</declname>
        </param>
        <param>
          <type>float</type>
          <declname>descent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imgui_draw.cpp" line="2729" column="6" bodyfile="graphics/imgui/imgui_draw.cpp" bodystart="2729" bodyend="2740"/>
      </memberdef>
      <memberdef kind="function" id="imgui__draw_8cpp_1add0fcd1708ca3540688d8277fc01bf3f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ImFontAtlasBuildPackCustomRects</definition>
        <argsstring>(ImFontAtlas *atlas, void *stbrp_context_opaque)</argsstring>
        <name>ImFontAtlasBuildPackCustomRects</name>
        <param>
          <type><ref refid="struct_im_font_atlas" kindref="compound">ImFontAtlas</ref> *</type>
          <declname>atlas</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>stbrp_context_opaque</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imgui_draw.cpp" line="2742" column="6" bodyfile="graphics/imgui/imgui_draw.cpp" bodystart="2742" bodyend="2770"/>
      </memberdef>
      <memberdef kind="function" id="imgui__draw_8cpp_1acc7928ba77e5e06a342720ccf0a95ece" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ImFontAtlasBuildRender8bppRectFromString</definition>
        <argsstring>(ImFontAtlas *atlas, int x, int y, int w, int h, const char *in_str, char in_marker_char, unsigned char in_marker_pixel_value)</argsstring>
        <name>ImFontAtlasBuildRender8bppRectFromString</name>
        <param>
          <type><ref refid="struct_im_font_atlas" kindref="compound">ImFontAtlas</ref> *</type>
          <declname>atlas</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>w</declname>
        </param>
        <param>
          <type>int</type>
          <declname>h</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>in_str</declname>
        </param>
        <param>
          <type>char</type>
          <declname>in_marker_char</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>in_marker_pixel_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imgui_draw.cpp" line="2772" column="6" bodyfile="graphics/imgui/imgui_draw.cpp" bodystart="2772" bodyend="2780"/>
      </memberdef>
      <memberdef kind="function" id="imgui__draw_8cpp_1a66ac51ad223da84c7167d4c9f4cfb2fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ImFontAtlasBuildRender32bppRectFromString</definition>
        <argsstring>(ImFontAtlas *atlas, int x, int y, int w, int h, const char *in_str, char in_marker_char, unsigned int in_marker_pixel_value)</argsstring>
        <name>ImFontAtlasBuildRender32bppRectFromString</name>
        <param>
          <type><ref refid="struct_im_font_atlas" kindref="compound">ImFontAtlas</ref> *</type>
          <declname>atlas</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>w</declname>
        </param>
        <param>
          <type>int</type>
          <declname>h</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>in_str</declname>
        </param>
        <param>
          <type>char</type>
          <declname>in_marker_char</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>in_marker_pixel_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imgui_draw.cpp" line="2782" column="6" bodyfile="graphics/imgui/imgui_draw.cpp" bodystart="2782" bodyend="2790"/>
      </memberdef>
      <memberdef kind="function" id="imgui__draw_8cpp_1a5c1e7dc4dbb8ef1787cc953b6156fb28" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ImFontAtlasBuildRenderDefaultTexData</definition>
        <argsstring>(ImFontAtlas *atlas)</argsstring>
        <name>ImFontAtlasBuildRenderDefaultTexData</name>
        <param>
          <type><ref refid="struct_im_font_atlas" kindref="compound">ImFontAtlas</ref> *</type>
          <declname>atlas</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imgui_draw.cpp" line="2792" column="13" bodyfile="graphics/imgui/imgui_draw.cpp" bodystart="2792" bodyend="2830"/>
      </memberdef>
      <memberdef kind="function" id="imgui__draw_8cpp_1ab634607914fd0dc9ed27d1dc65505adc" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ImFontAtlasBuildRenderLinesTexData</definition>
        <argsstring>(ImFontAtlas *atlas)</argsstring>
        <name>ImFontAtlasBuildRenderLinesTexData</name>
        <param>
          <type><ref refid="struct_im_font_atlas" kindref="compound">ImFontAtlas</ref> *</type>
          <declname>atlas</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imgui_draw.cpp" line="2832" column="13" bodyfile="graphics/imgui/imgui_draw.cpp" bodystart="2832" bodyend="2881"/>
      </memberdef>
      <memberdef kind="function" id="imgui__draw_8cpp_1ac050ff181df43cec0b63d834b6039c3f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ImFontAtlasBuildInit</definition>
        <argsstring>(ImFontAtlas *atlas)</argsstring>
        <name>ImFontAtlasBuildInit</name>
        <param>
          <type><ref refid="struct_im_font_atlas" kindref="compound">ImFontAtlas</ref> *</type>
          <declname>atlas</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imgui_draw.cpp" line="2884" column="6" bodyfile="graphics/imgui/imgui_draw.cpp" bodystart="2884" bodyend="2909"/>
      </memberdef>
      <memberdef kind="function" id="imgui__draw_8cpp_1adbf0ee92b3ac86e30b9e81f552d15d37" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ImFontAtlasBuildFinish</definition>
        <argsstring>(ImFontAtlas *atlas)</argsstring>
        <name>ImFontAtlasBuildFinish</name>
        <param>
          <type><ref refid="struct_im_font_atlas" kindref="compound">ImFontAtlas</ref> *</type>
          <declname>atlas</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imgui_draw.cpp" line="2912" column="6" bodyfile="graphics/imgui/imgui_draw.cpp" bodystart="2912" bodyend="2939"/>
      </memberdef>
      <memberdef kind="function" id="imgui__draw_8cpp_1ab5814a547146d0bc2c09e3b421abec63" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void UnpackAccumulativeOffsetsIntoRanges</definition>
        <argsstring>(int base_codepoint, const short *accumulative_offsets, int accumulative_offsets_count, ImWchar *out_ranges)</argsstring>
        <name>UnpackAccumulativeOffsetsIntoRanges</name>
        <param>
          <type>int</type>
          <declname>base_codepoint</declname>
        </param>
        <param>
          <type>const short *</type>
          <declname>accumulative_offsets</declname>
        </param>
        <param>
          <type>int</type>
          <declname>accumulative_offsets_count</declname>
        </param>
        <param>
          <type><ref refid="imgui_8h_1a1ecb49ee827c39a982f1e1467910d020" kindref="member">ImWchar</ref> *</type>
          <declname>out_ranges</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imgui_draw.cpp" line="2992" column="13" bodyfile="graphics/imgui/imgui_draw.cpp" bodystart="2992" bodyend="3000"/>
      </memberdef>
      <memberdef kind="function" id="imgui__draw_8cpp_1abbf9333048e69bc2c78377c540592f98" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="imgui_8h_1a1ecb49ee827c39a982f1e1467910d020" kindref="member">ImWchar</ref></type>
        <definition>static ImWchar FindFirstExistingGlyph</definition>
        <argsstring>(ImFont *font, const ImWchar *candidate_chars, int candidate_chars_count)</argsstring>
        <name>FindFirstExistingGlyph</name>
        <param>
          <type><ref refid="struct_im_font" kindref="compound">ImFont</ref> *</type>
          <declname>font</declname>
        </param>
        <param>
          <type>const <ref refid="imgui_8h_1a1ecb49ee827c39a982f1e1467910d020" kindref="member">ImWchar</ref> *</type>
          <declname>candidate_chars</declname>
        </param>
        <param>
          <type>int</type>
          <declname>candidate_chars_count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imgui_draw.cpp" line="3286" column="16" bodyfile="graphics/imgui/imgui_draw.cpp" bodystart="3286" bodyend="3292"/>
      </memberdef>
      <memberdef kind="function" id="imgui__draw_8cpp_1a9feb6cd3fa078effc2e7953a37426eb9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const char *</type>
        <definition>static const char * CalcWordWrapNextLineStartA</definition>
        <argsstring>(const char *text, const char *text_end)</argsstring>
        <name>CalcWordWrapNextLineStartA</name>
        <param>
          <type>const char *</type>
          <declname>text</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>text_end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imgui_draw.cpp" line="3489" column="26" bodyfile="graphics/imgui/imgui_draw.cpp" bodystart="3489" bodyend="3496"/>
      </memberdef>
      <memberdef kind="function" id="imgui__draw_8cpp_1ae358747474c006135921182132a578a6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>static float ImAcos01</definition>
        <argsstring>(float x)</argsstring>
        <name>ImAcos01</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imgui_draw.cpp" line="3958" column="21" bodyfile="graphics/imgui/imgui_draw.cpp" bodystart="3958" bodyend="3964"/>
      </memberdef>
      <memberdef kind="function" id="imgui__draw_8cpp_1a7369890717be8d014dc7a437dcdfb282" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void stb__match</definition>
        <argsstring>(const unsigned char *data, unsigned int length)</argsstring>
        <name>stb__match</name>
        <param>
          <type>const unsigned char *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imgui_draw.cpp" line="4101" column="13" bodyfile="graphics/imgui/imgui_draw.cpp" bodystart="4101" bodyend="4108"/>
      </memberdef>
      <memberdef kind="function" id="imgui__draw_8cpp_1a1e4edfcb0eca0c2f9b67338817342cc4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void stb__lit</definition>
        <argsstring>(const unsigned char *data, unsigned int length)</argsstring>
        <name>stb__lit</name>
        <param>
          <type>const unsigned char *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imgui_draw.cpp" line="4110" column="13" bodyfile="graphics/imgui/imgui_draw.cpp" bodystart="4110" bodyend="4117"/>
      </memberdef>
      <memberdef kind="function" id="imgui__draw_8cpp_1a7e482ab813b31838bc410914b3293a17" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const unsigned char *</type>
        <definition>static const unsigned char * stb_decompress_token</definition>
        <argsstring>(const unsigned char *i)</argsstring>
        <name>stb_decompress_token</name>
        <param>
          <type>const unsigned char *</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imgui_draw.cpp" line="4123" column="28" bodyfile="graphics/imgui/imgui_draw.cpp" bodystart="4123" bodyend="4138"/>
      </memberdef>
      <memberdef kind="function" id="imgui__draw_8cpp_1a13802610d242126f44f88bc9392e3bbc" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>static unsigned int stb_adler32</definition>
        <argsstring>(unsigned int adler32, unsigned char *buffer, unsigned int buflen)</argsstring>
        <name>stb_adler32</name>
        <param>
          <type>unsigned int</type>
          <declname>adler32</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>buflen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imgui_draw.cpp" line="4140" column="21" bodyfile="graphics/imgui/imgui_draw.cpp" bodystart="4140" bodyend="4169"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>dear<sp/>imgui,<sp/>v1.90.1<sp/>WIP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(drawing<sp/>and<sp/>font<sp/>code)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"></highlight></codeline>
<codeline lineno="6"><highlight class="comment">Index<sp/>of<sp/>this<sp/>file:</highlight></codeline>
<codeline lineno="7"><highlight class="comment"></highlight></codeline>
<codeline lineno="8"><highlight class="comment">//<sp/>[SECTION]<sp/>STB<sp/>libraries<sp/>implementation</highlight></codeline>
<codeline lineno="9"><highlight class="comment">//<sp/>[SECTION]<sp/>Style<sp/>functions</highlight></codeline>
<codeline lineno="10"><highlight class="comment">//<sp/>[SECTION]<sp/>ImDrawList</highlight></codeline>
<codeline lineno="11"><highlight class="comment">//<sp/>[SECTION]<sp/>ImDrawListSplitter</highlight></codeline>
<codeline lineno="12"><highlight class="comment">//<sp/>[SECTION]<sp/>ImDrawData</highlight></codeline>
<codeline lineno="13"><highlight class="comment">//<sp/>[SECTION]<sp/>Helpers<sp/>ShadeVertsXXX<sp/>functions</highlight></codeline>
<codeline lineno="14"><highlight class="comment">//<sp/>[SECTION]<sp/>ImFontConfig</highlight></codeline>
<codeline lineno="15"><highlight class="comment">//<sp/>[SECTION]<sp/>ImFontAtlas</highlight></codeline>
<codeline lineno="16"><highlight class="comment">//<sp/>[SECTION]<sp/>ImFontAtlas<sp/>glyph<sp/>ranges<sp/>helpers</highlight></codeline>
<codeline lineno="17"><highlight class="comment">//<sp/>[SECTION]<sp/>ImFontGlyphRangesBuilder</highlight></codeline>
<codeline lineno="18"><highlight class="comment">//<sp/>[SECTION]<sp/>ImFont</highlight></codeline>
<codeline lineno="19"><highlight class="comment">//<sp/>[SECTION]<sp/>ImGui<sp/>Internal<sp/>Render<sp/>Helpers</highlight></codeline>
<codeline lineno="20"><highlight class="comment">//<sp/>[SECTION]<sp/>Decompression<sp/>code</highlight></codeline>
<codeline lineno="21"><highlight class="comment">//<sp/>[SECTION]<sp/>Default<sp/>font<sp/>data<sp/>(ProggyClean.ttf)</highlight></codeline>
<codeline lineno="22"><highlight class="comment"></highlight></codeline>
<codeline lineno="23"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(_MSC_VER)<sp/>&amp;&amp;<sp/>!defined(_CRT_SECURE_NO_WARNINGS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_CRT_SECURE_NO_WARNINGS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>IMGUI_DEFINE_MATH_OPERATORS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IMGUI_DEFINE_MATH_OPERATORS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="imgui_8h" kindref="compound">imgui.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>IMGUI_DISABLE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="imgui__internal_8h" kindref="compound">imgui_internal.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>IMGUI_ENABLE_FREETYPE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;misc/freetype/imgui_freetype.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>vsnprintf,<sp/>sscanf,<sp/>printf</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Visual<sp/>Studio<sp/>warnings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_MSC_VER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>warning<sp/>(disable:<sp/>4127)<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>condition<sp/>expression<sp/>is<sp/>constant</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>warning<sp/>(disable:<sp/>4505)<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>unreferenced<sp/>local<sp/>function<sp/>has<sp/>been<sp/>removed<sp/>(stb<sp/>stuff)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>warning<sp/>(disable:<sp/>4996)<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&apos;This<sp/>function<sp/>or<sp/>variable<sp/>may<sp/>be<sp/>unsafe&apos;:<sp/>strcpy,<sp/>strdup,<sp/>sprintf,<sp/>vsnprintf,<sp/>sscanf,<sp/>fopen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>warning<sp/>(disable:<sp/>26451)<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>[Static<sp/>Analyzer]<sp/>Arithmetic<sp/>overflow<sp/>:<sp/>Using<sp/>operator<sp/>&apos;xxx&apos;<sp/>on<sp/>a<sp/>4<sp/>byte<sp/>value<sp/>and<sp/>then<sp/>casting<sp/>the<sp/>result<sp/>to<sp/>a<sp/>8<sp/>byte<sp/>value.<sp/>Cast<sp/>the<sp/>value<sp/>to<sp/>the<sp/>wider<sp/>type<sp/>before<sp/>calling<sp/>operator<sp/>&apos;xxx&apos;<sp/>to<sp/>avoid<sp/>overflow(io.2).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>warning<sp/>(disable:<sp/>26812)<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>[Static<sp/>Analyzer]<sp/>The<sp/>enum<sp/>type<sp/>&apos;xxx&apos;<sp/>is<sp/>unscoped.<sp/>Prefer<sp/>&apos;enum<sp/>class&apos;<sp/>over<sp/>&apos;enum&apos;<sp/>(Enum.3).<sp/>[MSVC<sp/>Static<sp/>Analyzer)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Clang/GCC<sp/>warnings<sp/>with<sp/>-Weverything</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__clang__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__has_warning(&quot;-Wunknown-warning-option&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>clang<sp/>diagnostic<sp/>ignored<sp/>&quot;-Wunknown-warning-option&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>warning:<sp/>unknown<sp/>warning<sp/>group<sp/>&apos;xxx&apos;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>not<sp/>all<sp/>warnings<sp/>are<sp/>known<sp/>by<sp/>all<sp/>Clang<sp/>versions<sp/>and<sp/>they<sp/>tend<sp/>to<sp/>be<sp/>rename-happy..<sp/>so<sp/>ignoring<sp/>warnings<sp/>triggers<sp/>new<sp/>warnings<sp/>on<sp/>some<sp/>configuration.<sp/>Great!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>clang<sp/>diagnostic<sp/>ignored<sp/>&quot;-Wunknown-pragmas&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>warning:<sp/>unknown<sp/>warning<sp/>group<sp/>&apos;xxx&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>clang<sp/>diagnostic<sp/>ignored<sp/>&quot;-Wold-style-cast&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>warning:<sp/>use<sp/>of<sp/>old-style<sp/>cast<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>yes,<sp/>they<sp/>are<sp/>more<sp/>terse.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>clang<sp/>diagnostic<sp/>ignored<sp/>&quot;-Wfloat-equal&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>warning:<sp/>comparing<sp/>floating<sp/>point<sp/>with<sp/>==<sp/>or<sp/>!=<sp/>is<sp/>unsafe<sp/>//<sp/>storing<sp/>and<sp/>comparing<sp/>against<sp/>same<sp/>constants<sp/>ok.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>clang<sp/>diagnostic<sp/>ignored<sp/>&quot;-Wglobal-constructors&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>warning:<sp/>declaration<sp/>requires<sp/>a<sp/>global<sp/>destructor<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>similar<sp/>to<sp/>above,<sp/>not<sp/>sure<sp/>what<sp/>the<sp/>exact<sp/>difference<sp/>is.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>clang<sp/>diagnostic<sp/>ignored<sp/>&quot;-Wsign-conversion&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>warning:<sp/>implicit<sp/>conversion<sp/>changes<sp/>signedness</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>clang<sp/>diagnostic<sp/>ignored<sp/>&quot;-Wzero-as-null-pointer-constant&quot;<sp/><sp/></highlight><highlight class="comment">//<sp/>warning:<sp/>zero<sp/>as<sp/>null<sp/>pointer<sp/>constant<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>some<sp/>standard<sp/>header<sp/>variations<sp/>use<sp/>#define<sp/>NULL<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>clang<sp/>diagnostic<sp/>ignored<sp/>&quot;-Wcomma&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>warning:<sp/>possible<sp/>misuse<sp/>of<sp/>comma<sp/>operator<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>clang<sp/>diagnostic<sp/>ignored<sp/>&quot;-Wreserved-id-macro&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>warning:<sp/>macro<sp/>name<sp/>is<sp/>a<sp/>reserved<sp/>identifier</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>clang<sp/>diagnostic<sp/>ignored<sp/>&quot;-Wdouble-promotion&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>warning:<sp/>implicit<sp/>conversion<sp/>from<sp/>&apos;float&apos;<sp/>to<sp/>&apos;double&apos;<sp/>when<sp/>passing<sp/>argument<sp/>to<sp/>function<sp/><sp/>//<sp/>using<sp/>printf()<sp/>is<sp/>a<sp/>misery<sp/>with<sp/>this<sp/>as<sp/>C++<sp/>va_arg<sp/>ellipsis<sp/>changes<sp/>float<sp/>to<sp/>double.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>clang<sp/>diagnostic<sp/>ignored<sp/>&quot;-Wimplicit-int-float-conversion&quot;<sp/><sp/></highlight><highlight class="comment">//<sp/>warning:<sp/>implicit<sp/>conversion<sp/>from<sp/>&apos;xxx&apos;<sp/>to<sp/>&apos;float&apos;<sp/>may<sp/>lose<sp/>precision</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>clang<sp/>diagnostic<sp/>ignored<sp/>&quot;-Wreserved-identifier&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>warning:<sp/>identifier<sp/>&apos;_Xxx&apos;<sp/>is<sp/>reserved<sp/>because<sp/>it<sp/>starts<sp/>with<sp/>&apos;_&apos;<sp/>followed<sp/>by<sp/>a<sp/>capital<sp/>letter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(__GNUC__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>GCC<sp/>diagnostic<sp/>ignored<sp/>&quot;-Wpragmas&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>warning:<sp/>unknown<sp/>option<sp/>after<sp/>&apos;#pragma<sp/>GCC<sp/>diagnostic&apos;<sp/>kind</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>GCC<sp/>diagnostic<sp/>ignored<sp/>&quot;-Wunused-function&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>warning:<sp/>&apos;xxxx&apos;<sp/>defined<sp/>but<sp/>not<sp/>used</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>GCC<sp/>diagnostic<sp/>ignored<sp/>&quot;-Wdouble-promotion&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>warning:<sp/>implicit<sp/>conversion<sp/>from<sp/>&apos;float&apos;<sp/>to<sp/>&apos;double&apos;<sp/>when<sp/>passing<sp/>argument<sp/>to<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>GCC<sp/>diagnostic<sp/>ignored<sp/>&quot;-Wconversion&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>warning:<sp/>conversion<sp/>to<sp/>&apos;xxxx&apos;<sp/>from<sp/>&apos;xxxx&apos;<sp/>may<sp/>alter<sp/>its<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>GCC<sp/>diagnostic<sp/>ignored<sp/>&quot;-Wstack-protector&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>warning:<sp/>stack<sp/>protector<sp/>not<sp/>protecting<sp/>local<sp/>variables:<sp/>variable<sp/>length<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>GCC<sp/>diagnostic<sp/>ignored<sp/>&quot;-Wclass-memaccess&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>[__GNUC__<sp/>&gt;=<sp/>8]<sp/>warning:<sp/>&apos;memset/memcpy&apos;<sp/>clearing/writing<sp/>an<sp/>object<sp/>of<sp/>type<sp/>&apos;xxxx&apos;<sp/>with<sp/>no<sp/>trivial<sp/>copy-assignment;<sp/>use<sp/>assignment<sp/>or<sp/>value-initialization<sp/>instead</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="comment">//-------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="comment">//<sp/>[SECTION]<sp/>STB<sp/>libraries<sp/>implementation<sp/>(for<sp/>stb_truetype<sp/>and<sp/>stb_rect_pack)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="comment">//-------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Compile<sp/>time<sp/>options:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>IMGUI_STB_NAMESPACE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImStb</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>IMGUI_STB_TRUETYPE_FILENAME<sp/><sp/><sp/>&quot;my_folder/stb_truetype.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>IMGUI_STB_RECT_PACK_FILENAME<sp/><sp/>&quot;my_folder/stb_rect_pack.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>IMGUI_DISABLE_STB_TRUETYPE_IMPLEMENTATION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>IMGUI_DISABLE_STB_RECT_PACK_IMPLEMENTATION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>IMGUI_STB_NAMESPACE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">IMGUI_STB_NAMESPACE</highlight></codeline>
<codeline lineno="89"><highlight class="normal">{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_MSC_VER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>warning<sp/>(push)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>warning<sp/>(disable:<sp/>4456)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>declaration<sp/>of<sp/>&apos;xx&apos;<sp/>hides<sp/>previous<sp/>local<sp/>declaration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>warning<sp/>(disable:<sp/>6011)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(stb_rectpack)<sp/>Dereferencing<sp/>NULL<sp/>pointer<sp/>&apos;cur-&gt;next&apos;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>warning<sp/>(disable:<sp/>6385)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(stb_truetype)<sp/>Reading<sp/>invalid<sp/>data<sp/>from<sp/>&apos;buffer&apos;:<sp/><sp/>the<sp/>readable<sp/>size<sp/>is<sp/>&apos;_Old_3`kernel_width&apos;<sp/>bytes,<sp/>but<sp/>&apos;3&apos;<sp/>bytes<sp/>may<sp/>be<sp/>read.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>warning<sp/>(disable:<sp/>28182)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(stb_rectpack)<sp/>Dereferencing<sp/>NULL<sp/>pointer.<sp/>&apos;cur&apos;<sp/>contains<sp/>the<sp/>same<sp/>NULL<sp/>value<sp/>as<sp/>&apos;cur-&gt;next&apos;<sp/>did.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__clang__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>clang<sp/>diagnostic<sp/>push</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>clang<sp/>diagnostic<sp/>ignored<sp/>&quot;-Wunused-function&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>clang<sp/>diagnostic<sp/>ignored<sp/>&quot;-Wmissing-prototypes&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>clang<sp/>diagnostic<sp/>ignored<sp/>&quot;-Wimplicit-fallthrough&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>clang<sp/>diagnostic<sp/>ignored<sp/>&quot;-Wcast-qual&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>warning:<sp/>cast<sp/>from<sp/>&apos;const<sp/>xxxx<sp/>*&apos;<sp/>to<sp/>&apos;xxx<sp/>*&apos;<sp/>drops<sp/>const<sp/>qualifier</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__GNUC__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>GCC<sp/>diagnostic<sp/>push</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>GCC<sp/>diagnostic<sp/>ignored<sp/>&quot;-Wtype-limits&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>warning:<sp/>comparison<sp/>is<sp/>always<sp/>true<sp/>due<sp/>to<sp/>limited<sp/>range<sp/>of<sp/>data<sp/>type<sp/>[-Wtype-limits]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>GCC<sp/>diagnostic<sp/>ignored<sp/>&quot;-Wcast-qual&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>warning:<sp/>cast<sp/>from<sp/>type<sp/>&apos;const<sp/>xxxx<sp/>*&apos;<sp/>to<sp/>type<sp/>&apos;xxxx<sp/>*&apos;<sp/>casts<sp/>away<sp/>qualifiers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>STB_RECT_PACK_IMPLEMENTATION<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>case<sp/>the<sp/>user<sp/>already<sp/>have<sp/>an<sp/>implementation<sp/>in<sp/>the<sp/>_same_<sp/>compilation<sp/>unit<sp/>(e.g.<sp/>unity<sp/>builds)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>IMGUI_DISABLE_STB_RECT_PACK_IMPLEMENTATION<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>case<sp/>the<sp/>user<sp/>already<sp/>have<sp/>an<sp/>implementation<sp/>in<sp/>another<sp/>compilation<sp/>unit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBRP_STATIC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBRP_ASSERT(x)<sp/><sp/><sp/><sp/><sp/>do<sp/>{<sp/>IM_ASSERT(x);<sp/>}<sp/>while<sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBRP_SORT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImQsort</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STB_RECT_PACK_IMPLEMENTATION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>IMGUI_STB_RECT_PACK_FILENAME</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>IMGUI_STB_RECT_PACK_FILENAME</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="imstb__rectpack_8h" kindref="compound">imstb_rectpack.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/><sp/>IMGUI_ENABLE_STB_TRUETYPE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>STB_TRUETYPE_IMPLEMENTATION<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>case<sp/>the<sp/>user<sp/>already<sp/>have<sp/>an<sp/>implementation<sp/>in<sp/>the<sp/>_same_<sp/>compilation<sp/>unit<sp/>(e.g.<sp/>unity<sp/>builds)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>IMGUI_DISABLE_STB_TRUETYPE_IMPLEMENTATION<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>case<sp/>the<sp/>user<sp/>already<sp/>have<sp/>an<sp/>implementation<sp/>in<sp/>another<sp/>compilation<sp/>unit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBTT_malloc(x,u)<sp/><sp/><sp/>((void)(u),<sp/>IM_ALLOC(x))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBTT_free(x,u)<sp/><sp/><sp/><sp/><sp/>((void)(u),<sp/>IM_FREE(x))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBTT_assert(x)<sp/><sp/><sp/><sp/><sp/>do<sp/>{<sp/>IM_ASSERT(x);<sp/>}<sp/>while(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBTT_fmod(x,y)<sp/><sp/><sp/><sp/><sp/>ImFmod(x,y)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBTT_sqrt(x)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImSqrt(x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBTT_pow(x,y)<sp/><sp/><sp/><sp/><sp/><sp/>ImPow(x,y)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBTT_fabs(x)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImFabs(x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBTT_ifloor(x)<sp/><sp/><sp/><sp/><sp/>((int)ImFloor(x))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBTT_iceil(x)<sp/><sp/><sp/><sp/><sp/><sp/>((int)ImCeil(x))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBTT_STATIC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STB_TRUETYPE_IMPLEMENTATION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBTT_DEF<sp/>extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>IMGUI_STB_TRUETYPE_FILENAME</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>IMGUI_STB_TRUETYPE_FILENAME</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="imstb__truetype_8h" kindref="compound">imstb_truetype.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>IMGUI_ENABLE_STB_TRUETYPE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__GNUC__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>GCC<sp/>diagnostic<sp/>pop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__clang__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>clang<sp/>diagnostic<sp/>pop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(_MSC_VER)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>warning<sp/>(pop)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>IMGUI_STB_NAMESPACE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>ImStb</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">IMGUI_STB_NAMESPACE;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="comment">//<sp/>[SECTION]<sp/>Style<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespace_im_gui_1ae50948567cc4cb4597a05dd9c0611d2d" kindref="member">ImGui::StyleColorsDark</ref>(<ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>*<sp/>ctx,<sp/><ref refid="struct_im_gui_style" kindref="compound">ImGuiStyle</ref>*<sp/>dst)</highlight></codeline>
<codeline lineno="175"><highlight class="normal">{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_style" kindref="compound">ImGuiStyle</ref>*<sp/>style<sp/>=<sp/>dst<sp/>?<sp/>dst<sp/>:<sp/>&amp;<ref refid="namespace_im_gui_1a298ce71283349813bf96793446c956ad" kindref="member">ImGui::GetStyle</ref>(ctx);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>*<sp/>colors<sp/>=<sp/>style-&gt;<ref refid="struct_im_gui_style_1a2b4941240a38d1300c39a7fa4f03d0a3" kindref="member">Colors</ref>;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a7c9f965e31cf87da7d1eeb2b8b33b924" kindref="member">ImGuiCol_Text</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(1.00f,<sp/>1.00f,<sp/>1.00f,<sp/>1.00f);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a063ce83082ca37337190f0a1adc12789" kindref="member">ImGuiCol_TextDisabled</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.50f,<sp/>0.50f,<sp/>0.50f,<sp/>1.00f);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a67bc63c71dc1ba1fa82afaa49bf9e6c5" kindref="member">ImGuiCol_WindowBg</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.06f,<sp/>0.06f,<sp/>0.06f,<sp/>0.94f);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a928dc01b5267cb7122acc554ccc37bb8" kindref="member">ImGuiCol_ChildBg</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.00f,<sp/>0.00f,<sp/>0.00f,<sp/>0.00f);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a92ff275c734a7c9654eb39c318c241d5" kindref="member">ImGuiCol_PopupBg</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.08f,<sp/>0.08f,<sp/>0.08f,<sp/>0.94f);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a60620ac1fe0028029737b2fd488932ff" kindref="member">ImGuiCol_Border</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.43f,<sp/>0.43f,<sp/>0.50f,<sp/>0.50f);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a04867cdffde5c3f44abca75543b296bc" kindref="member">ImGuiCol_BorderShadow</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.00f,<sp/>0.00f,<sp/>0.00f,<sp/>0.00f);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a2d57aae23dd92796e6386961d25f7830" kindref="member">ImGuiCol_FrameBg</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.16f,<sp/>0.29f,<sp/>0.48f,<sp/>0.54f);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a0f2cb3d1c096ce52180207fcee8e26a5" kindref="member">ImGuiCol_FrameBgHovered</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.26f,<sp/>0.59f,<sp/>0.98f,<sp/>0.40f);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a6256984665f14d54cd94cb7941bec67a" kindref="member">ImGuiCol_FrameBgActive</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.26f,<sp/>0.59f,<sp/>0.98f,<sp/>0.67f);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7ac9780d2e5163bd87a3fd7214e448e83e" kindref="member">ImGuiCol_TitleBg</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.04f,<sp/>0.04f,<sp/>0.04f,<sp/>1.00f);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a7b6daf21c5d4cf4197c2152bbdeca55b" kindref="member">ImGuiCol_TitleBgActive</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.16f,<sp/>0.29f,<sp/>0.48f,<sp/>1.00f);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a12788d8d15c35cb53144557a33a1badc" kindref="member">ImGuiCol_TitleBgCollapsed</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.00f,<sp/>0.00f,<sp/>0.00f,<sp/>0.51f);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a225bbe322a2cb106a67e4b052cbe400b" kindref="member">ImGuiCol_MenuBarBg</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.14f,<sp/>0.14f,<sp/>0.14f,<sp/>1.00f);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a99b0a254f143960b1cb9b151f9365d0d" kindref="member">ImGuiCol_ScrollbarBg</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.02f,<sp/>0.02f,<sp/>0.02f,<sp/>0.53f);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a1c98e3895771abae3c15c21fca1da208" kindref="member">ImGuiCol_ScrollbarGrab</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.31f,<sp/>0.31f,<sp/>0.31f,<sp/>1.00f);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7ac5400c694369bb19fdb1ff4555e4d338" kindref="member">ImGuiCol_ScrollbarGrabHovered</ref>]<sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.41f,<sp/>0.41f,<sp/>0.41f,<sp/>1.00f);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a65072e5ebc1854f38ed402a4ed7c9be0" kindref="member">ImGuiCol_ScrollbarGrabActive</ref>]<sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.51f,<sp/>0.51f,<sp/>0.51f,<sp/>1.00f);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7aa4659ae217ea3f76d9da1605b768a628" kindref="member">ImGuiCol_CheckMark</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.26f,<sp/>0.59f,<sp/>0.98f,<sp/>1.00f);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7adff4ffcdd7bc521d3574a50cf3fe01d5" kindref="member">ImGuiCol_SliderGrab</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.24f,<sp/>0.52f,<sp/>0.88f,<sp/>1.00f);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7adf21e883d2937a7b764270470e5c91be" kindref="member">ImGuiCol_SliderGrabActive</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.26f,<sp/>0.59f,<sp/>0.98f,<sp/>1.00f);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a49d6b485df056e21d09c380200e0dbb2" kindref="member">ImGuiCol_Button</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.26f,<sp/>0.59f,<sp/>0.98f,<sp/>0.40f);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a4d59c00cebb66c2a0b4169f99a244fee" kindref="member">ImGuiCol_ButtonHovered</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.26f,<sp/>0.59f,<sp/>0.98f,<sp/>1.00f);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a4f0d114c72db8fc80b026bf665a99428" kindref="member">ImGuiCol_ButtonActive</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.06f,<sp/>0.53f,<sp/>0.98f,<sp/>1.00f);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a2889591fd7b20a6df31df8596c9f6088" kindref="member">ImGuiCol_Header</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.26f,<sp/>0.59f,<sp/>0.98f,<sp/>0.31f);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a2abbaa3fe909c94d69ce7027d4d2b867" kindref="member">ImGuiCol_HeaderHovered</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.26f,<sp/>0.59f,<sp/>0.98f,<sp/>0.80f);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a116e2becfe2e23b1dc8ca61f31e953a9" kindref="member">ImGuiCol_HeaderActive</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.26f,<sp/>0.59f,<sp/>0.98f,<sp/>1.00f);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7ae8327e464961f855dd198202d17dfdcb" kindref="member">ImGuiCol_Separator</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a60620ac1fe0028029737b2fd488932ff" kindref="member">ImGuiCol_Border</ref>];</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7ae1d45fb6192c6d690bf7483014bcd730" kindref="member">ImGuiCol_SeparatorHovered</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.10f,<sp/>0.40f,<sp/>0.75f,<sp/>0.78f);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a54eef76e3369d1a0d281c80d481d914c" kindref="member">ImGuiCol_SeparatorActive</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.10f,<sp/>0.40f,<sp/>0.75f,<sp/>1.00f);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7ae7a3d0469ba8a30a295f70e0c081cb93" kindref="member">ImGuiCol_ResizeGrip</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.26f,<sp/>0.59f,<sp/>0.98f,<sp/>0.20f);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7acfbc57687f71e1b43c603149234972c7" kindref="member">ImGuiCol_ResizeGripHovered</ref>]<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.26f,<sp/>0.59f,<sp/>0.98f,<sp/>0.67f);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a80eeaae0f6ec516a02ef9bb201e13f2f" kindref="member">ImGuiCol_ResizeGripActive</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.26f,<sp/>0.59f,<sp/>0.98f,<sp/>0.95f);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a94ec181ed499cb61f69650f17279204e" kindref="member">ImGuiCol_Tab</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>ImLerp(colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a2889591fd7b20a6df31df8596c9f6088" kindref="member">ImGuiCol_Header</ref>],<sp/><sp/><sp/><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a7b6daf21c5d4cf4197c2152bbdeca55b" kindref="member">ImGuiCol_TitleBgActive</ref>],<sp/>0.80f);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a2a701b9037d1b5d63d5fc3c704206fdf" kindref="member">ImGuiCol_TabHovered</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a2abbaa3fe909c94d69ce7027d4d2b867" kindref="member">ImGuiCol_HeaderHovered</ref>];</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7ab184276f1593c0bc2753b55e9e68d879" kindref="member">ImGuiCol_TabActive</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>ImLerp(colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a116e2becfe2e23b1dc8ca61f31e953a9" kindref="member">ImGuiCol_HeaderActive</ref>],<sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a7b6daf21c5d4cf4197c2152bbdeca55b" kindref="member">ImGuiCol_TitleBgActive</ref>],<sp/>0.60f);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a35c7fadbaa3d5edbbd2cc1e0dfaa7fe3" kindref="member">ImGuiCol_TabUnfocused</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>ImLerp(colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a94ec181ed499cb61f69650f17279204e" kindref="member">ImGuiCol_Tab</ref>],<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7ac9780d2e5163bd87a3fd7214e448e83e" kindref="member">ImGuiCol_TitleBg</ref>],<sp/>0.80f);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a4c6b93a3c0d9c1d9f2ebc7cc75b35b6c" kindref="member">ImGuiCol_TabUnfocusedActive</ref>]<sp/><sp/><sp/><sp/><sp/>=<sp/>ImLerp(colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7ab184276f1593c0bc2753b55e9e68d879" kindref="member">ImGuiCol_TabActive</ref>],<sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7ac9780d2e5163bd87a3fd7214e448e83e" kindref="member">ImGuiCol_TitleBg</ref>],<sp/>0.40f);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7acc9761ac5c77f4efd063b63b21d79a26" kindref="member">ImGuiCol_PlotLines</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.61f,<sp/>0.61f,<sp/>0.61f,<sp/>1.00f);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7af9083e56301415cd001cb1087accfe1f" kindref="member">ImGuiCol_PlotLinesHovered</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(1.00f,<sp/>0.43f,<sp/>0.35f,<sp/>1.00f);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a262fa78a150f5eb392d3b8ca0261ce15" kindref="member">ImGuiCol_PlotHistogram</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.90f,<sp/>0.70f,<sp/>0.00f,<sp/>1.00f);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a1834bb5eac2124550e06606f271a90a5" kindref="member">ImGuiCol_PlotHistogramHovered</ref>]<sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(1.00f,<sp/>0.60f,<sp/>0.00f,<sp/>1.00f);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a6bb7e5bce250134b056f1d7e26419c01" kindref="member">ImGuiCol_TableHeaderBg</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.19f,<sp/>0.19f,<sp/>0.20f,<sp/>1.00f);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7adacb68c8b98fb277903d5efd039d80fa" kindref="member">ImGuiCol_TableBorderStrong</ref>]<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.31f,<sp/>0.31f,<sp/>0.35f,<sp/>1.00f);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Prefer<sp/>using<sp/>Alpha=1.0<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7ac1957eed48cf73d9e6c8dae506e64c5e" kindref="member">ImGuiCol_TableBorderLight</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.23f,<sp/>0.23f,<sp/>0.25f,<sp/>1.00f);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Prefer<sp/>using<sp/>Alpha=1.0<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a55d486229514b1904dd709efd97a6ffe" kindref="member">ImGuiCol_TableRowBg</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.00f,<sp/>0.00f,<sp/>0.00f,<sp/>0.00f);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a921922a9affec95491c9f8cc7b128d04" kindref="member">ImGuiCol_TableRowBgAlt</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(1.00f,<sp/>1.00f,<sp/>1.00f,<sp/>0.06f);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a1ce38172d21349195e2b1b8df8564ccc" kindref="member">ImGuiCol_TextSelectedBg</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.26f,<sp/>0.59f,<sp/>0.98f,<sp/>0.35f);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a483ca18cb8aed3c36288981c409a9239" kindref="member">ImGuiCol_DragDropTarget</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(1.00f,<sp/>1.00f,<sp/>0.00f,<sp/>0.90f);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7aeb7ff65ee7065d6c70cca9abf98cd858" kindref="member">ImGuiCol_NavHighlight</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.26f,<sp/>0.59f,<sp/>0.98f,<sp/>1.00f);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7ad247027d7dd991fc0b30bfcfb8351382" kindref="member">ImGuiCol_NavWindowingHighlight</ref>]<sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(1.00f,<sp/>1.00f,<sp/>1.00f,<sp/>0.70f);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7af6aa761a0e9565bbf981721b84b22847" kindref="member">ImGuiCol_NavWindowingDimBg</ref>]<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.80f,<sp/>0.80f,<sp/>0.80f,<sp/>0.20f);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a3ce6ab111a22a0518d382a07b949b9e9" kindref="member">ImGuiCol_ModalWindowDimBg</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.80f,<sp/>0.80f,<sp/>0.80f,<sp/>0.35f);</highlight></codeline>
<codeline lineno="232"><highlight class="normal">}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespace_im_gui_1ac1779ae6f3e499494b65869550f9087d" kindref="member">ImGui::StyleColorsClassic</ref>(<ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>*<sp/>ctx,<sp/><ref refid="struct_im_gui_style" kindref="compound">ImGuiStyle</ref>*<sp/>dst)</highlight></codeline>
<codeline lineno="235"><highlight class="normal">{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_style" kindref="compound">ImGuiStyle</ref>*<sp/>style<sp/>=<sp/>dst<sp/>?<sp/>dst<sp/>:<sp/>&amp;<ref refid="namespace_im_gui_1a298ce71283349813bf96793446c956ad" kindref="member">ImGui::GetStyle</ref>(ctx);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>*<sp/>colors<sp/>=<sp/>style-&gt;<ref refid="struct_im_gui_style_1a2b4941240a38d1300c39a7fa4f03d0a3" kindref="member">Colors</ref>;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a7c9f965e31cf87da7d1eeb2b8b33b924" kindref="member">ImGuiCol_Text</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.90f,<sp/>0.90f,<sp/>0.90f,<sp/>1.00f);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a063ce83082ca37337190f0a1adc12789" kindref="member">ImGuiCol_TextDisabled</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.60f,<sp/>0.60f,<sp/>0.60f,<sp/>1.00f);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a67bc63c71dc1ba1fa82afaa49bf9e6c5" kindref="member">ImGuiCol_WindowBg</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.00f,<sp/>0.00f,<sp/>0.00f,<sp/>0.85f);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a928dc01b5267cb7122acc554ccc37bb8" kindref="member">ImGuiCol_ChildBg</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.00f,<sp/>0.00f,<sp/>0.00f,<sp/>0.00f);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a92ff275c734a7c9654eb39c318c241d5" kindref="member">ImGuiCol_PopupBg</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.11f,<sp/>0.11f,<sp/>0.14f,<sp/>0.92f);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a60620ac1fe0028029737b2fd488932ff" kindref="member">ImGuiCol_Border</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.50f,<sp/>0.50f,<sp/>0.50f,<sp/>0.50f);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a04867cdffde5c3f44abca75543b296bc" kindref="member">ImGuiCol_BorderShadow</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.00f,<sp/>0.00f,<sp/>0.00f,<sp/>0.00f);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a2d57aae23dd92796e6386961d25f7830" kindref="member">ImGuiCol_FrameBg</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.43f,<sp/>0.43f,<sp/>0.43f,<sp/>0.39f);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a0f2cb3d1c096ce52180207fcee8e26a5" kindref="member">ImGuiCol_FrameBgHovered</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.47f,<sp/>0.47f,<sp/>0.69f,<sp/>0.40f);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a6256984665f14d54cd94cb7941bec67a" kindref="member">ImGuiCol_FrameBgActive</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.42f,<sp/>0.41f,<sp/>0.64f,<sp/>0.69f);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7ac9780d2e5163bd87a3fd7214e448e83e" kindref="member">ImGuiCol_TitleBg</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.27f,<sp/>0.27f,<sp/>0.54f,<sp/>0.83f);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a7b6daf21c5d4cf4197c2152bbdeca55b" kindref="member">ImGuiCol_TitleBgActive</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.32f,<sp/>0.32f,<sp/>0.63f,<sp/>0.87f);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a12788d8d15c35cb53144557a33a1badc" kindref="member">ImGuiCol_TitleBgCollapsed</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.40f,<sp/>0.40f,<sp/>0.80f,<sp/>0.20f);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a225bbe322a2cb106a67e4b052cbe400b" kindref="member">ImGuiCol_MenuBarBg</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.40f,<sp/>0.40f,<sp/>0.55f,<sp/>0.80f);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a99b0a254f143960b1cb9b151f9365d0d" kindref="member">ImGuiCol_ScrollbarBg</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.20f,<sp/>0.25f,<sp/>0.30f,<sp/>0.60f);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a1c98e3895771abae3c15c21fca1da208" kindref="member">ImGuiCol_ScrollbarGrab</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.40f,<sp/>0.40f,<sp/>0.80f,<sp/>0.30f);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7ac5400c694369bb19fdb1ff4555e4d338" kindref="member">ImGuiCol_ScrollbarGrabHovered</ref>]<sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.40f,<sp/>0.40f,<sp/>0.80f,<sp/>0.40f);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a65072e5ebc1854f38ed402a4ed7c9be0" kindref="member">ImGuiCol_ScrollbarGrabActive</ref>]<sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.41f,<sp/>0.39f,<sp/>0.80f,<sp/>0.60f);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7aa4659ae217ea3f76d9da1605b768a628" kindref="member">ImGuiCol_CheckMark</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.90f,<sp/>0.90f,<sp/>0.90f,<sp/>0.50f);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7adff4ffcdd7bc521d3574a50cf3fe01d5" kindref="member">ImGuiCol_SliderGrab</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(1.00f,<sp/>1.00f,<sp/>1.00f,<sp/>0.30f);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7adf21e883d2937a7b764270470e5c91be" kindref="member">ImGuiCol_SliderGrabActive</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.41f,<sp/>0.39f,<sp/>0.80f,<sp/>0.60f);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a49d6b485df056e21d09c380200e0dbb2" kindref="member">ImGuiCol_Button</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.35f,<sp/>0.40f,<sp/>0.61f,<sp/>0.62f);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a4d59c00cebb66c2a0b4169f99a244fee" kindref="member">ImGuiCol_ButtonHovered</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.40f,<sp/>0.48f,<sp/>0.71f,<sp/>0.79f);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a4f0d114c72db8fc80b026bf665a99428" kindref="member">ImGuiCol_ButtonActive</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.46f,<sp/>0.54f,<sp/>0.80f,<sp/>1.00f);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a2889591fd7b20a6df31df8596c9f6088" kindref="member">ImGuiCol_Header</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.40f,<sp/>0.40f,<sp/>0.90f,<sp/>0.45f);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a2abbaa3fe909c94d69ce7027d4d2b867" kindref="member">ImGuiCol_HeaderHovered</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.45f,<sp/>0.45f,<sp/>0.90f,<sp/>0.80f);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a116e2becfe2e23b1dc8ca61f31e953a9" kindref="member">ImGuiCol_HeaderActive</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.53f,<sp/>0.53f,<sp/>0.87f,<sp/>0.80f);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7ae8327e464961f855dd198202d17dfdcb" kindref="member">ImGuiCol_Separator</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.50f,<sp/>0.50f,<sp/>0.50f,<sp/>0.60f);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7ae1d45fb6192c6d690bf7483014bcd730" kindref="member">ImGuiCol_SeparatorHovered</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.60f,<sp/>0.60f,<sp/>0.70f,<sp/>1.00f);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a54eef76e3369d1a0d281c80d481d914c" kindref="member">ImGuiCol_SeparatorActive</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.70f,<sp/>0.70f,<sp/>0.90f,<sp/>1.00f);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7ae7a3d0469ba8a30a295f70e0c081cb93" kindref="member">ImGuiCol_ResizeGrip</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(1.00f,<sp/>1.00f,<sp/>1.00f,<sp/>0.10f);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7acfbc57687f71e1b43c603149234972c7" kindref="member">ImGuiCol_ResizeGripHovered</ref>]<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.78f,<sp/>0.82f,<sp/>1.00f,<sp/>0.60f);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a80eeaae0f6ec516a02ef9bb201e13f2f" kindref="member">ImGuiCol_ResizeGripActive</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.78f,<sp/>0.82f,<sp/>1.00f,<sp/>0.90f);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a94ec181ed499cb61f69650f17279204e" kindref="member">ImGuiCol_Tab</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>ImLerp(colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a2889591fd7b20a6df31df8596c9f6088" kindref="member">ImGuiCol_Header</ref>],<sp/><sp/><sp/><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a7b6daf21c5d4cf4197c2152bbdeca55b" kindref="member">ImGuiCol_TitleBgActive</ref>],<sp/>0.80f);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a2a701b9037d1b5d63d5fc3c704206fdf" kindref="member">ImGuiCol_TabHovered</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a2abbaa3fe909c94d69ce7027d4d2b867" kindref="member">ImGuiCol_HeaderHovered</ref>];</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7ab184276f1593c0bc2753b55e9e68d879" kindref="member">ImGuiCol_TabActive</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>ImLerp(colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a116e2becfe2e23b1dc8ca61f31e953a9" kindref="member">ImGuiCol_HeaderActive</ref>],<sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a7b6daf21c5d4cf4197c2152bbdeca55b" kindref="member">ImGuiCol_TitleBgActive</ref>],<sp/>0.60f);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a35c7fadbaa3d5edbbd2cc1e0dfaa7fe3" kindref="member">ImGuiCol_TabUnfocused</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>ImLerp(colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a94ec181ed499cb61f69650f17279204e" kindref="member">ImGuiCol_Tab</ref>],<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7ac9780d2e5163bd87a3fd7214e448e83e" kindref="member">ImGuiCol_TitleBg</ref>],<sp/>0.80f);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a4c6b93a3c0d9c1d9f2ebc7cc75b35b6c" kindref="member">ImGuiCol_TabUnfocusedActive</ref>]<sp/><sp/><sp/><sp/><sp/>=<sp/>ImLerp(colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7ab184276f1593c0bc2753b55e9e68d879" kindref="member">ImGuiCol_TabActive</ref>],<sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7ac9780d2e5163bd87a3fd7214e448e83e" kindref="member">ImGuiCol_TitleBg</ref>],<sp/>0.40f);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7acc9761ac5c77f4efd063b63b21d79a26" kindref="member">ImGuiCol_PlotLines</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(1.00f,<sp/>1.00f,<sp/>1.00f,<sp/>1.00f);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7af9083e56301415cd001cb1087accfe1f" kindref="member">ImGuiCol_PlotLinesHovered</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.90f,<sp/>0.70f,<sp/>0.00f,<sp/>1.00f);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a262fa78a150f5eb392d3b8ca0261ce15" kindref="member">ImGuiCol_PlotHistogram</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.90f,<sp/>0.70f,<sp/>0.00f,<sp/>1.00f);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a1834bb5eac2124550e06606f271a90a5" kindref="member">ImGuiCol_PlotHistogramHovered</ref>]<sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(1.00f,<sp/>0.60f,<sp/>0.00f,<sp/>1.00f);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a6bb7e5bce250134b056f1d7e26419c01" kindref="member">ImGuiCol_TableHeaderBg</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.27f,<sp/>0.27f,<sp/>0.38f,<sp/>1.00f);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7adacb68c8b98fb277903d5efd039d80fa" kindref="member">ImGuiCol_TableBorderStrong</ref>]<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.31f,<sp/>0.31f,<sp/>0.45f,<sp/>1.00f);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Prefer<sp/>using<sp/>Alpha=1.0<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7ac1957eed48cf73d9e6c8dae506e64c5e" kindref="member">ImGuiCol_TableBorderLight</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.26f,<sp/>0.26f,<sp/>0.28f,<sp/>1.00f);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Prefer<sp/>using<sp/>Alpha=1.0<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a55d486229514b1904dd709efd97a6ffe" kindref="member">ImGuiCol_TableRowBg</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.00f,<sp/>0.00f,<sp/>0.00f,<sp/>0.00f);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a921922a9affec95491c9f8cc7b128d04" kindref="member">ImGuiCol_TableRowBgAlt</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(1.00f,<sp/>1.00f,<sp/>1.00f,<sp/>0.07f);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a1ce38172d21349195e2b1b8df8564ccc" kindref="member">ImGuiCol_TextSelectedBg</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.00f,<sp/>0.00f,<sp/>1.00f,<sp/>0.35f);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a483ca18cb8aed3c36288981c409a9239" kindref="member">ImGuiCol_DragDropTarget</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(1.00f,<sp/>1.00f,<sp/>0.00f,<sp/>0.90f);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7aeb7ff65ee7065d6c70cca9abf98cd858" kindref="member">ImGuiCol_NavHighlight</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a2abbaa3fe909c94d69ce7027d4d2b867" kindref="member">ImGuiCol_HeaderHovered</ref>];</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7ad247027d7dd991fc0b30bfcfb8351382" kindref="member">ImGuiCol_NavWindowingHighlight</ref>]<sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(1.00f,<sp/>1.00f,<sp/>1.00f,<sp/>0.70f);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7af6aa761a0e9565bbf981721b84b22847" kindref="member">ImGuiCol_NavWindowingDimBg</ref>]<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.80f,<sp/>0.80f,<sp/>0.80f,<sp/>0.20f);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a3ce6ab111a22a0518d382a07b949b9e9" kindref="member">ImGuiCol_ModalWindowDimBg</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.20f,<sp/>0.20f,<sp/>0.20f,<sp/>0.35f);</highlight></codeline>
<codeline lineno="292"><highlight class="normal">}</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Those<sp/>light<sp/>colors<sp/>are<sp/>better<sp/>suited<sp/>with<sp/>a<sp/>thicker<sp/>font<sp/>than<sp/>the<sp/>default<sp/>one<sp/>+<sp/>FrameBorder</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespace_im_gui_1a02661a8546b4fed2e5e866a720750317" kindref="member">ImGui::StyleColorsLight</ref>(<ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>*<sp/>ctx,<sp/><ref refid="struct_im_gui_style" kindref="compound">ImGuiStyle</ref>*<sp/>dst)</highlight></codeline>
<codeline lineno="296"><highlight class="normal">{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_style" kindref="compound">ImGuiStyle</ref>*<sp/>style<sp/>=<sp/>dst<sp/>?<sp/>dst<sp/>:<sp/>&amp;<ref refid="namespace_im_gui_1a298ce71283349813bf96793446c956ad" kindref="member">ImGui::GetStyle</ref>(ctx);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>*<sp/>colors<sp/>=<sp/>style-&gt;<ref refid="struct_im_gui_style_1a2b4941240a38d1300c39a7fa4f03d0a3" kindref="member">Colors</ref>;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a7c9f965e31cf87da7d1eeb2b8b33b924" kindref="member">ImGuiCol_Text</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.00f,<sp/>0.00f,<sp/>0.00f,<sp/>1.00f);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a063ce83082ca37337190f0a1adc12789" kindref="member">ImGuiCol_TextDisabled</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.60f,<sp/>0.60f,<sp/>0.60f,<sp/>1.00f);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a67bc63c71dc1ba1fa82afaa49bf9e6c5" kindref="member">ImGuiCol_WindowBg</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.94f,<sp/>0.94f,<sp/>0.94f,<sp/>1.00f);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a928dc01b5267cb7122acc554ccc37bb8" kindref="member">ImGuiCol_ChildBg</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.00f,<sp/>0.00f,<sp/>0.00f,<sp/>0.00f);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a92ff275c734a7c9654eb39c318c241d5" kindref="member">ImGuiCol_PopupBg</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(1.00f,<sp/>1.00f,<sp/>1.00f,<sp/>0.98f);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a60620ac1fe0028029737b2fd488932ff" kindref="member">ImGuiCol_Border</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.00f,<sp/>0.00f,<sp/>0.00f,<sp/>0.30f);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a04867cdffde5c3f44abca75543b296bc" kindref="member">ImGuiCol_BorderShadow</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.00f,<sp/>0.00f,<sp/>0.00f,<sp/>0.00f);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a2d57aae23dd92796e6386961d25f7830" kindref="member">ImGuiCol_FrameBg</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(1.00f,<sp/>1.00f,<sp/>1.00f,<sp/>1.00f);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a0f2cb3d1c096ce52180207fcee8e26a5" kindref="member">ImGuiCol_FrameBgHovered</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.26f,<sp/>0.59f,<sp/>0.98f,<sp/>0.40f);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a6256984665f14d54cd94cb7941bec67a" kindref="member">ImGuiCol_FrameBgActive</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.26f,<sp/>0.59f,<sp/>0.98f,<sp/>0.67f);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7ac9780d2e5163bd87a3fd7214e448e83e" kindref="member">ImGuiCol_TitleBg</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.96f,<sp/>0.96f,<sp/>0.96f,<sp/>1.00f);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a7b6daf21c5d4cf4197c2152bbdeca55b" kindref="member">ImGuiCol_TitleBgActive</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.82f,<sp/>0.82f,<sp/>0.82f,<sp/>1.00f);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a12788d8d15c35cb53144557a33a1badc" kindref="member">ImGuiCol_TitleBgCollapsed</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(1.00f,<sp/>1.00f,<sp/>1.00f,<sp/>0.51f);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a225bbe322a2cb106a67e4b052cbe400b" kindref="member">ImGuiCol_MenuBarBg</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.86f,<sp/>0.86f,<sp/>0.86f,<sp/>1.00f);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a99b0a254f143960b1cb9b151f9365d0d" kindref="member">ImGuiCol_ScrollbarBg</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.98f,<sp/>0.98f,<sp/>0.98f,<sp/>0.53f);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a1c98e3895771abae3c15c21fca1da208" kindref="member">ImGuiCol_ScrollbarGrab</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.69f,<sp/>0.69f,<sp/>0.69f,<sp/>0.80f);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7ac5400c694369bb19fdb1ff4555e4d338" kindref="member">ImGuiCol_ScrollbarGrabHovered</ref>]<sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.49f,<sp/>0.49f,<sp/>0.49f,<sp/>0.80f);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a65072e5ebc1854f38ed402a4ed7c9be0" kindref="member">ImGuiCol_ScrollbarGrabActive</ref>]<sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.49f,<sp/>0.49f,<sp/>0.49f,<sp/>1.00f);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7aa4659ae217ea3f76d9da1605b768a628" kindref="member">ImGuiCol_CheckMark</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.26f,<sp/>0.59f,<sp/>0.98f,<sp/>1.00f);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7adff4ffcdd7bc521d3574a50cf3fe01d5" kindref="member">ImGuiCol_SliderGrab</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.26f,<sp/>0.59f,<sp/>0.98f,<sp/>0.78f);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7adf21e883d2937a7b764270470e5c91be" kindref="member">ImGuiCol_SliderGrabActive</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.46f,<sp/>0.54f,<sp/>0.80f,<sp/>0.60f);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a49d6b485df056e21d09c380200e0dbb2" kindref="member">ImGuiCol_Button</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.26f,<sp/>0.59f,<sp/>0.98f,<sp/>0.40f);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a4d59c00cebb66c2a0b4169f99a244fee" kindref="member">ImGuiCol_ButtonHovered</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.26f,<sp/>0.59f,<sp/>0.98f,<sp/>1.00f);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a4f0d114c72db8fc80b026bf665a99428" kindref="member">ImGuiCol_ButtonActive</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.06f,<sp/>0.53f,<sp/>0.98f,<sp/>1.00f);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a2889591fd7b20a6df31df8596c9f6088" kindref="member">ImGuiCol_Header</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.26f,<sp/>0.59f,<sp/>0.98f,<sp/>0.31f);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a2abbaa3fe909c94d69ce7027d4d2b867" kindref="member">ImGuiCol_HeaderHovered</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.26f,<sp/>0.59f,<sp/>0.98f,<sp/>0.80f);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a116e2becfe2e23b1dc8ca61f31e953a9" kindref="member">ImGuiCol_HeaderActive</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.26f,<sp/>0.59f,<sp/>0.98f,<sp/>1.00f);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7ae8327e464961f855dd198202d17dfdcb" kindref="member">ImGuiCol_Separator</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.39f,<sp/>0.39f,<sp/>0.39f,<sp/>0.62f);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7ae1d45fb6192c6d690bf7483014bcd730" kindref="member">ImGuiCol_SeparatorHovered</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.14f,<sp/>0.44f,<sp/>0.80f,<sp/>0.78f);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a54eef76e3369d1a0d281c80d481d914c" kindref="member">ImGuiCol_SeparatorActive</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.14f,<sp/>0.44f,<sp/>0.80f,<sp/>1.00f);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7ae7a3d0469ba8a30a295f70e0c081cb93" kindref="member">ImGuiCol_ResizeGrip</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.35f,<sp/>0.35f,<sp/>0.35f,<sp/>0.17f);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7acfbc57687f71e1b43c603149234972c7" kindref="member">ImGuiCol_ResizeGripHovered</ref>]<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.26f,<sp/>0.59f,<sp/>0.98f,<sp/>0.67f);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a80eeaae0f6ec516a02ef9bb201e13f2f" kindref="member">ImGuiCol_ResizeGripActive</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.26f,<sp/>0.59f,<sp/>0.98f,<sp/>0.95f);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a94ec181ed499cb61f69650f17279204e" kindref="member">ImGuiCol_Tab</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>ImLerp(colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a2889591fd7b20a6df31df8596c9f6088" kindref="member">ImGuiCol_Header</ref>],<sp/><sp/><sp/><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a7b6daf21c5d4cf4197c2152bbdeca55b" kindref="member">ImGuiCol_TitleBgActive</ref>],<sp/>0.90f);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a2a701b9037d1b5d63d5fc3c704206fdf" kindref="member">ImGuiCol_TabHovered</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a2abbaa3fe909c94d69ce7027d4d2b867" kindref="member">ImGuiCol_HeaderHovered</ref>];</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7ab184276f1593c0bc2753b55e9e68d879" kindref="member">ImGuiCol_TabActive</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>ImLerp(colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a116e2becfe2e23b1dc8ca61f31e953a9" kindref="member">ImGuiCol_HeaderActive</ref>],<sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a7b6daf21c5d4cf4197c2152bbdeca55b" kindref="member">ImGuiCol_TitleBgActive</ref>],<sp/>0.60f);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a35c7fadbaa3d5edbbd2cc1e0dfaa7fe3" kindref="member">ImGuiCol_TabUnfocused</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>ImLerp(colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a94ec181ed499cb61f69650f17279204e" kindref="member">ImGuiCol_Tab</ref>],<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7ac9780d2e5163bd87a3fd7214e448e83e" kindref="member">ImGuiCol_TitleBg</ref>],<sp/>0.80f);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a4c6b93a3c0d9c1d9f2ebc7cc75b35b6c" kindref="member">ImGuiCol_TabUnfocusedActive</ref>]<sp/><sp/><sp/><sp/><sp/>=<sp/>ImLerp(colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7ab184276f1593c0bc2753b55e9e68d879" kindref="member">ImGuiCol_TabActive</ref>],<sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7ac9780d2e5163bd87a3fd7214e448e83e" kindref="member">ImGuiCol_TitleBg</ref>],<sp/>0.40f);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7acc9761ac5c77f4efd063b63b21d79a26" kindref="member">ImGuiCol_PlotLines</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.39f,<sp/>0.39f,<sp/>0.39f,<sp/>1.00f);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7af9083e56301415cd001cb1087accfe1f" kindref="member">ImGuiCol_PlotLinesHovered</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(1.00f,<sp/>0.43f,<sp/>0.35f,<sp/>1.00f);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a262fa78a150f5eb392d3b8ca0261ce15" kindref="member">ImGuiCol_PlotHistogram</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.90f,<sp/>0.70f,<sp/>0.00f,<sp/>1.00f);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a1834bb5eac2124550e06606f271a90a5" kindref="member">ImGuiCol_PlotHistogramHovered</ref>]<sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(1.00f,<sp/>0.45f,<sp/>0.00f,<sp/>1.00f);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a6bb7e5bce250134b056f1d7e26419c01" kindref="member">ImGuiCol_TableHeaderBg</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.78f,<sp/>0.87f,<sp/>0.98f,<sp/>1.00f);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7adacb68c8b98fb277903d5efd039d80fa" kindref="member">ImGuiCol_TableBorderStrong</ref>]<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.57f,<sp/>0.57f,<sp/>0.64f,<sp/>1.00f);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Prefer<sp/>using<sp/>Alpha=1.0<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7ac1957eed48cf73d9e6c8dae506e64c5e" kindref="member">ImGuiCol_TableBorderLight</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.68f,<sp/>0.68f,<sp/>0.74f,<sp/>1.00f);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Prefer<sp/>using<sp/>Alpha=1.0<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a55d486229514b1904dd709efd97a6ffe" kindref="member">ImGuiCol_TableRowBg</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.00f,<sp/>0.00f,<sp/>0.00f,<sp/>0.00f);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a921922a9affec95491c9f8cc7b128d04" kindref="member">ImGuiCol_TableRowBgAlt</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.30f,<sp/>0.30f,<sp/>0.30f,<sp/>0.09f);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a1ce38172d21349195e2b1b8df8564ccc" kindref="member">ImGuiCol_TextSelectedBg</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.26f,<sp/>0.59f,<sp/>0.98f,<sp/>0.35f);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a483ca18cb8aed3c36288981c409a9239" kindref="member">ImGuiCol_DragDropTarget</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.26f,<sp/>0.59f,<sp/>0.98f,<sp/>0.95f);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7aeb7ff65ee7065d6c70cca9abf98cd858" kindref="member">ImGuiCol_NavHighlight</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a2abbaa3fe909c94d69ce7027d4d2b867" kindref="member">ImGuiCol_HeaderHovered</ref>];</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7ad247027d7dd991fc0b30bfcfb8351382" kindref="member">ImGuiCol_NavWindowingHighlight</ref>]<sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.70f,<sp/>0.70f,<sp/>0.70f,<sp/>0.70f);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7af6aa761a0e9565bbf981721b84b22847" kindref="member">ImGuiCol_NavWindowingDimBg</ref>]<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.20f,<sp/>0.20f,<sp/>0.20f,<sp/>0.20f);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[<ref refid="imgui_8h_1a8e46ef7d0c76fbb1916171edfa4ae9e7a3ce6ab111a22a0518d382a07b949b9e9" kindref="member">ImGuiCol_ModalWindowDimBg</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(0.20f,<sp/>0.20f,<sp/>0.20f,<sp/>0.35f);</highlight></codeline>
<codeline lineno="353"><highlight class="normal">}</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight><highlight class="comment">//<sp/>[SECTION]<sp/>ImDrawList</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><ref refid="struct_im_draw_list_shared_data_1a3fe9d30c0df68cce4db9d2033ba9a589" kindref="member">ImDrawListSharedData::ImDrawListSharedData</ref>()</highlight></codeline>
<codeline lineno="360"><highlight class="normal">{</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="imgui_8h_1aeabe36f60fe45cf64cbc9641bcd58cca" kindref="member">IM_ARRAYSIZE</ref>(<ref refid="struct_im_draw_list_shared_data_1ab0c46ef010a2a9d20c0995def13abfe8" kindref="member">ArcFastVtx</ref>);<sp/>i++)</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref><sp/>=<sp/>((float)i<sp/>*<sp/>2<sp/>*<sp/><ref refid="imgui__internal_8h_1ab8de43e3f17a4f0081fa6c2def6af1c1" kindref="member">IM_PI</ref>)<sp/>/<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)<ref refid="imgui_8h_1aeabe36f60fe45cf64cbc9641bcd58cca" kindref="member">IM_ARRAYSIZE</ref>(<ref refid="struct_im_draw_list_shared_data_1ab0c46ef010a2a9d20c0995def13abfe8" kindref="member">ArcFastVtx</ref>);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_shared_data_1ab0c46ef010a2a9d20c0995def13abfe8" kindref="member">ArcFastVtx</ref>[i]<sp/>=<sp/>ImVec2(<ref refid="imgui__internal_8h_1a29665878048d6614ab3753e9b3b7b436" kindref="member">ImCos</ref>(<ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>),<sp/><ref refid="imgui__internal_8h_1a6f4d18e137599dbd4b1bde0d2a4b065f" kindref="member">ImSin</ref>(<ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>));</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_shared_data_1aef9a6fbf913823bd0b22aafb7f797c05" kindref="member">ArcFastRadiusCutoff</ref><sp/>=<sp/><ref refid="imgui__internal_8h_1a2710a795e254cfa72314040661e5a1e5" kindref="member">IM_DRAWLIST_CIRCLE_AUTO_SEGMENT_CALC_R</ref>(<ref refid="imgui__internal_8h_1aefbde2925c5c52ea5d210149f53abb49" kindref="member">IM_DRAWLIST_ARCFAST_SAMPLE_MAX</ref>,<sp/><ref refid="struct_im_draw_list_shared_data_1a2343a659b6e750ab09401615b967df10" kindref="member">CircleSegmentMaxError</ref>);</highlight></codeline>
<codeline lineno="368"><highlight class="normal">}</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_im_draw_list_shared_data_1adc947304370a6d5ee55a44190e923c8d" kindref="member">ImDrawListSharedData::SetCircleTessellationMaxError</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>max_error)</highlight></codeline>
<codeline lineno="371"><highlight class="normal">{</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="struct_im_draw_list_shared_data_1a2343a659b6e750ab09401615b967df10" kindref="member">CircleSegmentMaxError</ref><sp/>==<sp/>max_error)</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui_8h_1acb09e7dc42e8e3cefb0ecaa197978920" kindref="member">IM_ASSERT</ref>(max_error<sp/>&gt;<sp/>0.0f);</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_shared_data_1a2343a659b6e750ab09401615b967df10" kindref="member">CircleSegmentMaxError</ref><sp/>=<sp/>max_error;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="imgui_8h_1aeabe36f60fe45cf64cbc9641bcd58cca" kindref="member">IM_ARRAYSIZE</ref>(<ref refid="struct_im_draw_list_shared_data_1addb4f657df1c707b878e90e86ac776e0" kindref="member">CircleSegmentCounts</ref>);<sp/>i++)</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>radius<sp/>=<sp/>(float)i;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_shared_data_1addb4f657df1c707b878e90e86ac776e0" kindref="member">CircleSegmentCounts</ref>[i]<sp/>=<sp/>(<ref refid="imgui_8h_1a3834dc55ff790956b09b4baf387e2fe5" kindref="member">ImU8</ref>)((i<sp/>&gt;<sp/>0)<sp/>?<sp/><ref refid="imgui__internal_8h_1a2f55b4cb9fd50652e56a623ab4ecc5ad" kindref="member">IM_DRAWLIST_CIRCLE_AUTO_SEGMENT_CALC</ref>(radius,<sp/><ref refid="struct_im_draw_list_shared_data_1a2343a659b6e750ab09401615b967df10" kindref="member">CircleSegmentMaxError</ref>)<sp/>:<sp/><ref refid="imgui__internal_8h_1aefbde2925c5c52ea5d210149f53abb49" kindref="member">IM_DRAWLIST_ARCFAST_SAMPLE_MAX</ref>);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_shared_data_1aef9a6fbf913823bd0b22aafb7f797c05" kindref="member">ArcFastRadiusCutoff</ref><sp/>=<sp/><ref refid="imgui__internal_8h_1a2710a795e254cfa72314040661e5a1e5" kindref="member">IM_DRAWLIST_CIRCLE_AUTO_SEGMENT_CALC_R</ref>(<ref refid="imgui__internal_8h_1aefbde2925c5c52ea5d210149f53abb49" kindref="member">IM_DRAWLIST_ARCFAST_SAMPLE_MAX</ref>,<sp/><ref refid="struct_im_draw_list_shared_data_1a2343a659b6e750ab09401615b967df10" kindref="member">CircleSegmentMaxError</ref>);</highlight></codeline>
<codeline lineno="383"><highlight class="normal">}</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Initialize<sp/>before<sp/>use<sp/>in<sp/>a<sp/>new<sp/>frame.<sp/>We<sp/>always<sp/>have<sp/>a<sp/>command<sp/>ready<sp/>in<sp/>the<sp/>buffer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_im_draw_list_1a5f78fe195b2507e5926560f591141ff3" kindref="member">ImDrawList::_ResetForNewFrame</ref>()</highlight></codeline>
<codeline lineno="387"><highlight class="normal">{</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Verify<sp/>that<sp/>the<sp/>ImDrawCmd<sp/>fields<sp/>we<sp/>want<sp/>to<sp/>memcmp()<sp/>are<sp/>contiguous<sp/>in<sp/>memory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui__internal_8h_1ab48aaa96aa99bc25d19384ec3492a6d3" kindref="member">IM_STATIC_ASSERT</ref>(offsetof(ImDrawCmd,<sp/>ClipRect)<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui__internal_8h_1ab48aaa96aa99bc25d19384ec3492a6d3" kindref="member">IM_STATIC_ASSERT</ref>(offsetof(ImDrawCmd,<sp/>TextureId)<sp/>==<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(ImVec4));</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui__internal_8h_1ab48aaa96aa99bc25d19384ec3492a6d3" kindref="member">IM_STATIC_ASSERT</ref>(offsetof(ImDrawCmd,<sp/>VtxOffset)<sp/>==<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(ImVec4)<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="imgui_8h_1a364f4447ecbc4ca176145ccff9db6286" kindref="member">ImTextureID</ref>));</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="struct_im_draw_list_1a2893207705100e8a5da8122da56bd162" kindref="member">_Splitter</ref>._Count<sp/>&gt;<sp/>1)</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a2893207705100e8a5da8122da56bd162" kindref="member">_Splitter</ref>.Merge(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a67a4b5cc4c83bc3b81d96c46cbd38a07" kindref="member">CmdBuffer</ref>.resize(0);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1adf292ff70a954d82daf061c609e75dfc" kindref="member">IdxBuffer</ref>.resize(0);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1aa8ff4aee39cf3c3791b7e29a7b4264be" kindref="member">VtxBuffer</ref>.resize(0);</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1ada2c004661663ef875f4d4c7ec0b4557" kindref="member">Flags</ref><sp/>=<sp/><ref refid="struct_im_draw_list_1ad5a67c6f1487a812410e9979d1cf4a02" kindref="member">_Data</ref>-&gt;InitialFlags;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(&amp;<ref refid="struct_im_draw_list_1a87d1ec89ec6a742fd4d097d2b924e92b" kindref="member">_CmdHeader</ref>,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_im_draw_list_1a87d1ec89ec6a742fd4d097d2b924e92b" kindref="member">_CmdHeader</ref>));</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a2228793183665bc3d8612795555fe505" kindref="member">_VtxCurrentIdx</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a67f870f5140bf1cab14b8515b7386073" kindref="member">_VtxWritePtr</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a771f4c7f71873852fe030c3e498e5843" kindref="member">_IdxWritePtr</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1ae950024f053f3c94dc2c763d20be609d" kindref="member">_ClipRectStack</ref>.resize(0);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a848faddd121da050214b8d8159e5e704" kindref="member">_TextureIdStack</ref>.resize(0);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a5bdc39abf351360500048628b8dc1b07" kindref="member">_Path</ref>.resize(0);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a2893207705100e8a5da8122da56bd162" kindref="member">_Splitter</ref>.Clear();</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a67a4b5cc4c83bc3b81d96c46cbd38a07" kindref="member">CmdBuffer</ref>.push_back(ImDrawCmd());</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1aa667eca45099e5679b161c17ac6ec7e0" kindref="member">_FringeScale</ref><sp/>=<sp/>1.0f;</highlight></codeline>
<codeline lineno="409"><highlight class="normal">}</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_im_draw_list_1a61a886a16655c810e04c0ccebb228f9a" kindref="member">ImDrawList::_ClearFreeMemory</ref>()</highlight></codeline>
<codeline lineno="412"><highlight class="normal">{</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a67a4b5cc4c83bc3b81d96c46cbd38a07" kindref="member">CmdBuffer</ref>.clear();</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1adf292ff70a954d82daf061c609e75dfc" kindref="member">IdxBuffer</ref>.clear();</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1aa8ff4aee39cf3c3791b7e29a7b4264be" kindref="member">VtxBuffer</ref>.clear();</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1ada2c004661663ef875f4d4c7ec0b4557" kindref="member">Flags</ref><sp/>=<sp/><ref refid="imgui_8h_1a2211278f8a7129d585362b8e013258b2a383278ae1cf4533d618a7206e719adbd" kindref="member">ImDrawListFlags_None</ref>;</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a2228793183665bc3d8612795555fe505" kindref="member">_VtxCurrentIdx</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a67f870f5140bf1cab14b8515b7386073" kindref="member">_VtxWritePtr</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a771f4c7f71873852fe030c3e498e5843" kindref="member">_IdxWritePtr</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1ae950024f053f3c94dc2c763d20be609d" kindref="member">_ClipRectStack</ref>.clear();</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a848faddd121da050214b8d8159e5e704" kindref="member">_TextureIdStack</ref>.clear();</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a5bdc39abf351360500048628b8dc1b07" kindref="member">_Path</ref>.clear();</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a2893207705100e8a5da8122da56bd162" kindref="member">_Splitter</ref>.ClearFreeMemory();</highlight></codeline>
<codeline lineno="424"><highlight class="normal">}</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><ref refid="struct_im_draw_list" kindref="compound">ImDrawList</ref>*<sp/><ref refid="struct_im_draw_list_1a24c853c3976c77e7b361fab39adde686" kindref="member">ImDrawList::CloneOutput</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="427"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a6360ccc7ce978f1497d6291a4a6f87eb" kindref="member">ImDrawList</ref>*<sp/>dst<sp/>=<sp/><ref refid="imgui_8h_1a5e3b2a8968432747cd4932c539d76723" kindref="member">IM_NEW</ref>(<ref refid="struct_im_draw_list_1a6360ccc7ce978f1497d6291a4a6f87eb" kindref="member">ImDrawList</ref>(<ref refid="struct_im_draw_list_1ad5a67c6f1487a812410e9979d1cf4a02" kindref="member">_Data</ref>));</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>dst-&gt;<ref refid="struct_im_draw_list_1a67a4b5cc4c83bc3b81d96c46cbd38a07" kindref="member">CmdBuffer</ref><sp/>=<sp/><ref refid="struct_im_draw_list_1a67a4b5cc4c83bc3b81d96c46cbd38a07" kindref="member">CmdBuffer</ref>;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/>dst-&gt;<ref refid="struct_im_draw_list_1adf292ff70a954d82daf061c609e75dfc" kindref="member">IdxBuffer</ref><sp/>=<sp/><ref refid="struct_im_draw_list_1adf292ff70a954d82daf061c609e75dfc" kindref="member">IdxBuffer</ref>;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/>dst-&gt;<ref refid="struct_im_draw_list_1aa8ff4aee39cf3c3791b7e29a7b4264be" kindref="member">VtxBuffer</ref><sp/>=<sp/><ref refid="struct_im_draw_list_1aa8ff4aee39cf3c3791b7e29a7b4264be" kindref="member">VtxBuffer</ref>;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/>dst-&gt;<ref refid="struct_im_draw_list_1ada2c004661663ef875f4d4c7ec0b4557" kindref="member">Flags</ref><sp/>=<sp/><ref refid="struct_im_draw_list_1ada2c004661663ef875f4d4c7ec0b4557" kindref="member">Flags</ref>;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dst;</highlight></codeline>
<codeline lineno="434"><highlight class="normal">}</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_im_draw_list_1a846714bb0321c6f1f908767abc8559e6" kindref="member">ImDrawList::AddDrawCmd</ref>()</highlight></codeline>
<codeline lineno="437"><highlight class="normal">{</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/>ImDrawCmd<sp/>draw_cmd;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/>draw_cmd.<ref refid="struct_im_draw_cmd_1a838918f420ff81cb8dc7265077592daa" kindref="member">ClipRect</ref><sp/>=<sp/><ref refid="struct_im_draw_list_1a87d1ec89ec6a742fd4d097d2b924e92b" kindref="member">_CmdHeader</ref>.ClipRect;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Same<sp/>as<sp/>calling<sp/>ImDrawCmd_HeaderCopy()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/>draw_cmd.<ref refid="struct_im_draw_cmd_1a4f3b5985ece9ca6b71e7a8e7d85a82e5" kindref="member">TextureId</ref><sp/>=<sp/><ref refid="struct_im_draw_list_1a87d1ec89ec6a742fd4d097d2b924e92b" kindref="member">_CmdHeader</ref>.TextureId;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/>draw_cmd.<ref refid="struct_im_draw_cmd_1a604086d3c94a18b3a79f171ee37edabb" kindref="member">VtxOffset</ref><sp/>=<sp/><ref refid="struct_im_draw_list_1a87d1ec89ec6a742fd4d097d2b924e92b" kindref="member">_CmdHeader</ref>.VtxOffset;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/>draw_cmd.<ref refid="struct_im_draw_cmd_1adec5adcd0cc6cf0da193bf0437fbba47" kindref="member">IdxOffset</ref><sp/>=<sp/><ref refid="struct_im_draw_list_1adf292ff70a954d82daf061c609e75dfc" kindref="member">IdxBuffer</ref>.Size;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui_8h_1acb09e7dc42e8e3cefb0ecaa197978920" kindref="member">IM_ASSERT</ref>(draw_cmd.<ref refid="struct_im_draw_cmd_1a838918f420ff81cb8dc7265077592daa" kindref="member">ClipRect</ref>.<ref refid="struct_im_vec4_1a2090f651f5e5b78fedae8dab87343db6" kindref="member">x</ref><sp/>&lt;=<sp/>draw_cmd.<ref refid="struct_im_draw_cmd_1a838918f420ff81cb8dc7265077592daa" kindref="member">ClipRect</ref>.<ref refid="struct_im_vec4_1aba6a75356917a28c967954bb29133a1a" kindref="member">z</ref><sp/>&amp;&amp;<sp/>draw_cmd.<ref refid="struct_im_draw_cmd_1a838918f420ff81cb8dc7265077592daa" kindref="member">ClipRect</ref>.<ref refid="struct_im_vec4_1a6b4d00ae261be4fe54353c759c561fe7" kindref="member">y</ref><sp/>&lt;=<sp/>draw_cmd.<ref refid="struct_im_draw_cmd_1a838918f420ff81cb8dc7265077592daa" kindref="member">ClipRect</ref>.<ref refid="struct_im_vec4_1afeed5acd9f0d2043175f4da229d12a38" kindref="member">w</ref>);</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a67a4b5cc4c83bc3b81d96c46cbd38a07" kindref="member">CmdBuffer</ref>.push_back(draw_cmd);</highlight></codeline>
<codeline lineno="446"><highlight class="normal">}</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Pop<sp/>trailing<sp/>draw<sp/>command<sp/>(used<sp/>before<sp/>merging<sp/>or<sp/>presenting<sp/>to<sp/>user)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>this<sp/>leaves<sp/>the<sp/>ImDrawList<sp/>in<sp/>a<sp/>state<sp/>unfit<sp/>for<sp/>further<sp/>commands,<sp/>as<sp/>most<sp/>code<sp/>assume<sp/>that<sp/>CmdBuffer.Size<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>CmdBuffer.back().UserCallback<sp/>==<sp/>NULL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_im_draw_list_1a2cb0295fcd3062bfedbebbad55865455" kindref="member">ImDrawList::_PopUnusedDrawCmd</ref>()</highlight></codeline>
<codeline lineno="451"><highlight class="normal">{</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="struct_im_draw_list_1a67a4b5cc4c83bc3b81d96c46cbd38a07" kindref="member">CmdBuffer</ref>.Size<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImDrawCmd*<sp/>curr_cmd<sp/>=<sp/>&amp;<ref refid="struct_im_draw_list_1a67a4b5cc4c83bc3b81d96c46cbd38a07" kindref="member">CmdBuffer</ref>.Data[<ref refid="struct_im_draw_list_1a67a4b5cc4c83bc3b81d96c46cbd38a07" kindref="member">CmdBuffer</ref>.Size<sp/>-<sp/>1];</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(curr_cmd-&gt;<ref refid="struct_im_draw_cmd_1aafe2532964fb1f6905d67d84dd3e8730" kindref="member">ElemCount</ref><sp/>!=<sp/>0<sp/>||<sp/>curr_cmd-&gt;<ref refid="struct_im_draw_cmd_1ad26dac4e939f5c4bb892cbca0f9e3af8" kindref="member">UserCallback</ref><sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight><highlight class="comment">//<sp/>break;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a67a4b5cc4c83bc3b81d96c46cbd38a07" kindref="member">CmdBuffer</ref>.pop_back();</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="459"><highlight class="normal">}</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_im_draw_list_1a14073d60ef9db9dc663dc7717a4893a5" kindref="member">ImDrawList::AddCallback</ref>(<ref refid="imgui_8h_1a232a477233f9e3ab7640720bf94674de" kindref="member">ImDrawCallback</ref><sp/>callback,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>callback_data)</highlight></codeline>
<codeline lineno="462"><highlight class="normal">{</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui__internal_8h_1aa6119f4859929e4a37720676c5765f73" kindref="member">IM_ASSERT_PARANOID</ref>(<ref refid="struct_im_draw_list_1a67a4b5cc4c83bc3b81d96c46cbd38a07" kindref="member">CmdBuffer</ref>.Size<sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/>ImDrawCmd*<sp/>curr_cmd<sp/>=<sp/>&amp;<ref refid="struct_im_draw_list_1a67a4b5cc4c83bc3b81d96c46cbd38a07" kindref="member">CmdBuffer</ref>.Data[<ref refid="struct_im_draw_list_1a67a4b5cc4c83bc3b81d96c46cbd38a07" kindref="member">CmdBuffer</ref>.Size<sp/>-<sp/>1];</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui_8h_1acb09e7dc42e8e3cefb0ecaa197978920" kindref="member">IM_ASSERT</ref>(curr_cmd-&gt;<ref refid="struct_im_draw_cmd_1ad26dac4e939f5c4bb892cbca0f9e3af8" kindref="member">UserCallback</ref><sp/>==<sp/>NULL);</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(curr_cmd-&gt;<ref refid="struct_im_draw_cmd_1aafe2532964fb1f6905d67d84dd3e8730" kindref="member">ElemCount</ref><sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a846714bb0321c6f1f908767abc8559e6" kindref="member">AddDrawCmd</ref>();</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>curr_cmd<sp/>=<sp/>&amp;<ref refid="struct_im_draw_list_1a67a4b5cc4c83bc3b81d96c46cbd38a07" kindref="member">CmdBuffer</ref>.Data[<ref refid="struct_im_draw_list_1a67a4b5cc4c83bc3b81d96c46cbd38a07" kindref="member">CmdBuffer</ref>.Size<sp/>-<sp/>1];</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/>curr_cmd-&gt;<ref refid="struct_im_draw_cmd_1ad26dac4e939f5c4bb892cbca0f9e3af8" kindref="member">UserCallback</ref><sp/>=<sp/>callback;</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/>curr_cmd-&gt;<ref refid="struct_im_draw_cmd_1ae2f5a0baf4a0b25942237b8ce6adb42d" kindref="member">UserCallbackData</ref><sp/>=<sp/>callback_data;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a846714bb0321c6f1f908767abc8559e6" kindref="member">AddDrawCmd</ref>();<sp/></highlight><highlight class="comment">//<sp/>Force<sp/>a<sp/>new<sp/>command<sp/>after<sp/>us<sp/>(see<sp/>comment<sp/>below)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal">}</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Compare<sp/>ClipRect,<sp/>TextureId<sp/>and<sp/>VtxOffset<sp/>with<sp/>a<sp/>single<sp/>memcmp()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ImDrawCmd_HeaderSize<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(offsetof(ImDrawCmd,<sp/>VtxOffset)<sp/>+<sp/>sizeof(unsigned<sp/>int))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ImDrawCmd_HeaderCompare(CMD_LHS,<sp/>CMD_RHS)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(memcmp(CMD_LHS,<sp/>CMD_RHS,<sp/>ImDrawCmd_HeaderSize))<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compare<sp/>ClipRect,<sp/>TextureId,<sp/>VtxOffset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ImDrawCmd_HeaderCopy(CMD_DST,<sp/>CMD_SRC)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(memcpy(CMD_DST,<sp/>CMD_SRC,<sp/>ImDrawCmd_HeaderSize))<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>ClipRect,<sp/>TextureId,<sp/>VtxOffset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ImDrawCmd_AreSequentialIdxOffset(CMD_0,<sp/>CMD_1)<sp/><sp/>(CMD_0-&gt;IdxOffset<sp/>+<sp/>CMD_0-&gt;ElemCount<sp/>==<sp/>CMD_1-&gt;IdxOffset)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Try<sp/>to<sp/>merge<sp/>two<sp/>last<sp/>draw<sp/>commands</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_im_draw_list_1abdba85bbdc26a98eac56ed04683d5fc7" kindref="member">ImDrawList::_TryMergeDrawCmds</ref>()</highlight></codeline>
<codeline lineno="485"><highlight class="normal">{</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui__internal_8h_1aa6119f4859929e4a37720676c5765f73" kindref="member">IM_ASSERT_PARANOID</ref>(<ref refid="struct_im_draw_list_1a67a4b5cc4c83bc3b81d96c46cbd38a07" kindref="member">CmdBuffer</ref>.Size<sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/>ImDrawCmd*<sp/>curr_cmd<sp/>=<sp/>&amp;<ref refid="struct_im_draw_list_1a67a4b5cc4c83bc3b81d96c46cbd38a07" kindref="member">CmdBuffer</ref>.Data[<ref refid="struct_im_draw_list_1a67a4b5cc4c83bc3b81d96c46cbd38a07" kindref="member">CmdBuffer</ref>.Size<sp/>-<sp/>1];</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/>ImDrawCmd*<sp/>prev_cmd<sp/>=<sp/>curr_cmd<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="imgui__draw_8cpp_1ac140465795cda6fa747579fc0b1b29d0" kindref="member">ImDrawCmd_HeaderCompare</ref>(curr_cmd,<sp/>prev_cmd)<sp/>==<sp/>0<sp/>&amp;&amp;<sp/><ref refid="imgui__draw_8cpp_1acbac18638b9456aa07cd48452f074eeb" kindref="member">ImDrawCmd_AreSequentialIdxOffset</ref>(prev_cmd,<sp/>curr_cmd)<sp/>&amp;&amp;<sp/>curr_cmd-&gt;<ref refid="struct_im_draw_cmd_1ad26dac4e939f5c4bb892cbca0f9e3af8" kindref="member">UserCallback</ref><sp/>==<sp/>NULL<sp/>&amp;&amp;<sp/>prev_cmd-&gt;<ref refid="struct_im_draw_cmd_1ad26dac4e939f5c4bb892cbca0f9e3af8" kindref="member">UserCallback</ref><sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prev_cmd-&gt;<ref refid="struct_im_draw_cmd_1aafe2532964fb1f6905d67d84dd3e8730" kindref="member">ElemCount</ref><sp/>+=<sp/>curr_cmd-&gt;<ref refid="struct_im_draw_cmd_1aafe2532964fb1f6905d67d84dd3e8730" kindref="member">ElemCount</ref>;</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a67a4b5cc4c83bc3b81d96c46cbd38a07" kindref="member">CmdBuffer</ref>.pop_back();</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="494"><highlight class="normal">}</highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Our<sp/>scheme<sp/>may<sp/>appears<sp/>a<sp/>bit<sp/>unusual,<sp/>basically<sp/>we<sp/>want<sp/>the<sp/>most-common<sp/>calls<sp/>AddLine<sp/>AddRect<sp/>etc.<sp/>to<sp/>not<sp/>have<sp/>to<sp/>perform<sp/>any<sp/>check<sp/>so<sp/>we<sp/>always<sp/>have<sp/>a<sp/>command<sp/>ready<sp/>in<sp/>the<sp/>stack.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>cost<sp/>of<sp/>figuring<sp/>out<sp/>if<sp/>a<sp/>new<sp/>command<sp/>has<sp/>to<sp/>be<sp/>added<sp/>or<sp/>if<sp/>we<sp/>can<sp/>merge<sp/>is<sp/>paid<sp/>in<sp/>those<sp/>Update**<sp/>functions<sp/>only.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_im_draw_list_1a8e51ddbe1f9732bc271ce807bec23f54" kindref="member">ImDrawList::_OnChangedClipRect</ref>()</highlight></codeline>
<codeline lineno="499"><highlight class="normal">{</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>current<sp/>command<sp/>is<sp/>used<sp/>with<sp/>different<sp/>settings<sp/>we<sp/>need<sp/>to<sp/>add<sp/>a<sp/>new<sp/>command</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui__internal_8h_1aa6119f4859929e4a37720676c5765f73" kindref="member">IM_ASSERT_PARANOID</ref>(<ref refid="struct_im_draw_list_1a67a4b5cc4c83bc3b81d96c46cbd38a07" kindref="member">CmdBuffer</ref>.Size<sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/>ImDrawCmd*<sp/>curr_cmd<sp/>=<sp/>&amp;<ref refid="struct_im_draw_list_1a67a4b5cc4c83bc3b81d96c46cbd38a07" kindref="member">CmdBuffer</ref>.Data[<ref refid="struct_im_draw_list_1a67a4b5cc4c83bc3b81d96c46cbd38a07" kindref="member">CmdBuffer</ref>.Size<sp/>-<sp/>1];</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(curr_cmd-&gt;<ref refid="struct_im_draw_cmd_1aafe2532964fb1f6905d67d84dd3e8730" kindref="member">ElemCount</ref><sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>memcmp(&amp;curr_cmd-&gt;<ref refid="struct_im_draw_cmd_1a838918f420ff81cb8dc7265077592daa" kindref="member">ClipRect</ref>,<sp/>&amp;<ref refid="struct_im_draw_list_1a87d1ec89ec6a742fd4d097d2b924e92b" kindref="member">_CmdHeader</ref>.ClipRect,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(ImVec4))<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a846714bb0321c6f1f908767abc8559e6" kindref="member">AddDrawCmd</ref>();</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui_8h_1acb09e7dc42e8e3cefb0ecaa197978920" kindref="member">IM_ASSERT</ref>(curr_cmd-&gt;<ref refid="struct_im_draw_cmd_1ad26dac4e939f5c4bb892cbca0f9e3af8" kindref="member">UserCallback</ref><sp/>==<sp/>NULL);</highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Try<sp/>to<sp/>merge<sp/>with<sp/>previous<sp/>command<sp/>if<sp/>it<sp/>matches,<sp/>else<sp/>use<sp/>current<sp/>command</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/>ImDrawCmd*<sp/>prev_cmd<sp/>=<sp/>curr_cmd<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(curr_cmd-&gt;<ref refid="struct_im_draw_cmd_1aafe2532964fb1f6905d67d84dd3e8730" kindref="member">ElemCount</ref><sp/>==<sp/>0<sp/>&amp;&amp;<sp/><ref refid="struct_im_draw_list_1a67a4b5cc4c83bc3b81d96c46cbd38a07" kindref="member">CmdBuffer</ref>.Size<sp/>&gt;<sp/>1<sp/>&amp;&amp;<sp/><ref refid="imgui__draw_8cpp_1ac140465795cda6fa747579fc0b1b29d0" kindref="member">ImDrawCmd_HeaderCompare</ref>(&amp;<ref refid="struct_im_draw_list_1a87d1ec89ec6a742fd4d097d2b924e92b" kindref="member">_CmdHeader</ref>,<sp/>prev_cmd)<sp/>==<sp/>0<sp/>&amp;&amp;<sp/><ref refid="imgui__draw_8cpp_1acbac18638b9456aa07cd48452f074eeb" kindref="member">ImDrawCmd_AreSequentialIdxOffset</ref>(prev_cmd,<sp/>curr_cmd)<sp/>&amp;&amp;<sp/>prev_cmd-&gt;<ref refid="struct_im_draw_cmd_1ad26dac4e939f5c4bb892cbca0f9e3af8" kindref="member">UserCallback</ref><sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a67a4b5cc4c83bc3b81d96c46cbd38a07" kindref="member">CmdBuffer</ref>.pop_back();</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/>curr_cmd-&gt;<ref refid="struct_im_draw_cmd_1a838918f420ff81cb8dc7265077592daa" kindref="member">ClipRect</ref><sp/>=<sp/><ref refid="struct_im_draw_list_1a87d1ec89ec6a742fd4d097d2b924e92b" kindref="member">_CmdHeader</ref>.ClipRect;</highlight></codeline>
<codeline lineno="519"><highlight class="normal">}</highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_im_draw_list_1a7c14ae666a0df75214ecb97cdb9bd8f4" kindref="member">ImDrawList::_OnChangedTextureID</ref>()</highlight></codeline>
<codeline lineno="522"><highlight class="normal">{</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>current<sp/>command<sp/>is<sp/>used<sp/>with<sp/>different<sp/>settings<sp/>we<sp/>need<sp/>to<sp/>add<sp/>a<sp/>new<sp/>command</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui__internal_8h_1aa6119f4859929e4a37720676c5765f73" kindref="member">IM_ASSERT_PARANOID</ref>(<ref refid="struct_im_draw_list_1a67a4b5cc4c83bc3b81d96c46cbd38a07" kindref="member">CmdBuffer</ref>.Size<sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/>ImDrawCmd*<sp/>curr_cmd<sp/>=<sp/>&amp;<ref refid="struct_im_draw_list_1a67a4b5cc4c83bc3b81d96c46cbd38a07" kindref="member">CmdBuffer</ref>.Data[<ref refid="struct_im_draw_list_1a67a4b5cc4c83bc3b81d96c46cbd38a07" kindref="member">CmdBuffer</ref>.Size<sp/>-<sp/>1];</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(curr_cmd-&gt;<ref refid="struct_im_draw_cmd_1aafe2532964fb1f6905d67d84dd3e8730" kindref="member">ElemCount</ref><sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>curr_cmd-&gt;<ref refid="struct_im_draw_cmd_1a4f3b5985ece9ca6b71e7a8e7d85a82e5" kindref="member">TextureId</ref><sp/>!=<sp/><ref refid="struct_im_draw_list_1a87d1ec89ec6a742fd4d097d2b924e92b" kindref="member">_CmdHeader</ref>.TextureId)</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a846714bb0321c6f1f908767abc8559e6" kindref="member">AddDrawCmd</ref>();</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui_8h_1acb09e7dc42e8e3cefb0ecaa197978920" kindref="member">IM_ASSERT</ref>(curr_cmd-&gt;<ref refid="struct_im_draw_cmd_1ad26dac4e939f5c4bb892cbca0f9e3af8" kindref="member">UserCallback</ref><sp/>==<sp/>NULL);</highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Try<sp/>to<sp/>merge<sp/>with<sp/>previous<sp/>command<sp/>if<sp/>it<sp/>matches,<sp/>else<sp/>use<sp/>current<sp/>command</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/>ImDrawCmd*<sp/>prev_cmd<sp/>=<sp/>curr_cmd<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(curr_cmd-&gt;<ref refid="struct_im_draw_cmd_1aafe2532964fb1f6905d67d84dd3e8730" kindref="member">ElemCount</ref><sp/>==<sp/>0<sp/>&amp;&amp;<sp/><ref refid="struct_im_draw_list_1a67a4b5cc4c83bc3b81d96c46cbd38a07" kindref="member">CmdBuffer</ref>.Size<sp/>&gt;<sp/>1<sp/>&amp;&amp;<sp/><ref refid="imgui__draw_8cpp_1ac140465795cda6fa747579fc0b1b29d0" kindref="member">ImDrawCmd_HeaderCompare</ref>(&amp;<ref refid="struct_im_draw_list_1a87d1ec89ec6a742fd4d097d2b924e92b" kindref="member">_CmdHeader</ref>,<sp/>prev_cmd)<sp/>==<sp/>0<sp/>&amp;&amp;<sp/><ref refid="imgui__draw_8cpp_1acbac18638b9456aa07cd48452f074eeb" kindref="member">ImDrawCmd_AreSequentialIdxOffset</ref>(prev_cmd,<sp/>curr_cmd)<sp/>&amp;&amp;<sp/>prev_cmd-&gt;<ref refid="struct_im_draw_cmd_1ad26dac4e939f5c4bb892cbca0f9e3af8" kindref="member">UserCallback</ref><sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a67a4b5cc4c83bc3b81d96c46cbd38a07" kindref="member">CmdBuffer</ref>.pop_back();</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/>curr_cmd-&gt;<ref refid="struct_im_draw_cmd_1a4f3b5985ece9ca6b71e7a8e7d85a82e5" kindref="member">TextureId</ref><sp/>=<sp/><ref refid="struct_im_draw_list_1a87d1ec89ec6a742fd4d097d2b924e92b" kindref="member">_CmdHeader</ref>.TextureId;</highlight></codeline>
<codeline lineno="542"><highlight class="normal">}</highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_im_draw_list_1a7f2e315f147acd8b555d86d1557659cc" kindref="member">ImDrawList::_OnChangedVtxOffset</ref>()</highlight></codeline>
<codeline lineno="545"><highlight class="normal">{</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>don&apos;t<sp/>need<sp/>to<sp/>compare<sp/>curr_cmd-&gt;VtxOffset<sp/>!=<sp/>_CmdHeader.VtxOffset<sp/>because<sp/>we<sp/>know<sp/>it&apos;ll<sp/>be<sp/>different<sp/>at<sp/>the<sp/>time<sp/>we<sp/>call<sp/>this.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a2228793183665bc3d8612795555fe505" kindref="member">_VtxCurrentIdx</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui__internal_8h_1aa6119f4859929e4a37720676c5765f73" kindref="member">IM_ASSERT_PARANOID</ref>(<ref refid="struct_im_draw_list_1a67a4b5cc4c83bc3b81d96c46cbd38a07" kindref="member">CmdBuffer</ref>.Size<sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/>ImDrawCmd*<sp/>curr_cmd<sp/>=<sp/>&amp;<ref refid="struct_im_draw_list_1a67a4b5cc4c83bc3b81d96c46cbd38a07" kindref="member">CmdBuffer</ref>.Data[<ref refid="struct_im_draw_list_1a67a4b5cc4c83bc3b81d96c46cbd38a07" kindref="member">CmdBuffer</ref>.Size<sp/>-<sp/>1];</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//IM_ASSERT(curr_cmd-&gt;VtxOffset<sp/>!=<sp/>_CmdHeader.VtxOffset);<sp/>//<sp/>See<sp/>#3349</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(curr_cmd-&gt;<ref refid="struct_im_draw_cmd_1aafe2532964fb1f6905d67d84dd3e8730" kindref="member">ElemCount</ref><sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a846714bb0321c6f1f908767abc8559e6" kindref="member">AddDrawCmd</ref>();</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui_8h_1acb09e7dc42e8e3cefb0ecaa197978920" kindref="member">IM_ASSERT</ref>(curr_cmd-&gt;<ref refid="struct_im_draw_cmd_1ad26dac4e939f5c4bb892cbca0f9e3af8" kindref="member">UserCallback</ref><sp/>==<sp/>NULL);</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/>curr_cmd-&gt;<ref refid="struct_im_draw_cmd_1a604086d3c94a18b3a79f171ee37edabb" kindref="member">VtxOffset</ref><sp/>=<sp/><ref refid="struct_im_draw_list_1a87d1ec89ec6a742fd4d097d2b924e92b" kindref="member">_CmdHeader</ref>.VtxOffset;</highlight></codeline>
<codeline lineno="558"><highlight class="normal">}</highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_im_draw_list_1a52afa32aaab6d581cda90dc5d8726ed6" kindref="member">ImDrawList::_CalcCircleAutoSegmentCount</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>radius)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="561"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Automatic<sp/>segment<sp/>count</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>radius_idx<sp/>=<sp/>(int)(radius<sp/>+<sp/>0.999999f);<sp/></highlight><highlight class="comment">//<sp/>ceil<sp/>to<sp/>never<sp/>reduce<sp/>accuracy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(radius_idx<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>radius_idx<sp/>&lt;<sp/><ref refid="imgui_8h_1aeabe36f60fe45cf64cbc9641bcd58cca" kindref="member">IM_ARRAYSIZE</ref>(<ref refid="struct_im_draw_list_1ad5a67c6f1487a812410e9979d1cf4a02" kindref="member">_Data</ref>-&gt;CircleSegmentCounts))</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_im_draw_list_1ad5a67c6f1487a812410e9979d1cf4a02" kindref="member">_Data</ref>-&gt;CircleSegmentCounts[radius_idx];<sp/></highlight><highlight class="comment">//<sp/>Use<sp/>cached<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui__internal_8h_1a2f55b4cb9fd50652e56a623ab4ecc5ad" kindref="member">IM_DRAWLIST_CIRCLE_AUTO_SEGMENT_CALC</ref>(radius,<sp/><ref refid="struct_im_draw_list_1ad5a67c6f1487a812410e9979d1cf4a02" kindref="member">_Data</ref>-&gt;CircleSegmentMaxError);</highlight></codeline>
<codeline lineno="568"><highlight class="normal">}</highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Render-level<sp/>scissoring.<sp/>This<sp/>is<sp/>passed<sp/>down<sp/>to<sp/>your<sp/>render<sp/>function<sp/>but<sp/>not<sp/>used<sp/>for<sp/>CPU-side<sp/>coarse<sp/>clipping.<sp/>Prefer<sp/>using<sp/>higher-level<sp/>ImGui::PushClipRect()<sp/>to<sp/>affect<sp/>logic<sp/>(hit-testing<sp/>and<sp/>widget<sp/>culling)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_im_draw_list_1a608a9d9a83715ba87dced8321ed64329" kindref="member">ImDrawList::PushClipRect</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>cr_min,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>cr_max,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>intersect_with_current_clip_rect)</highlight></codeline>
<codeline lineno="572"><highlight class="normal">{</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/>ImVec4<sp/>cr(cr_min.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref>,<sp/>cr_min.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref>,<sp/>cr_max.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref>,<sp/>cr_max.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(intersect_with_current_clip_rect)</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImVec4<sp/>current<sp/>=<sp/><ref refid="struct_im_draw_list_1a87d1ec89ec6a742fd4d097d2b924e92b" kindref="member">_CmdHeader</ref>.ClipRect;</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cr.x<sp/>&lt;<sp/>current.<ref refid="struct_im_vec4_1a2090f651f5e5b78fedae8dab87343db6" kindref="member">x</ref>)<sp/>cr.x<sp/>=<sp/>current.<ref refid="struct_im_vec4_1a2090f651f5e5b78fedae8dab87343db6" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cr.y<sp/>&lt;<sp/>current.<ref refid="struct_im_vec4_1a6b4d00ae261be4fe54353c759c561fe7" kindref="member">y</ref>)<sp/>cr.y<sp/>=<sp/>current.<ref refid="struct_im_vec4_1a6b4d00ae261be4fe54353c759c561fe7" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cr.z<sp/>&gt;<sp/>current.<ref refid="struct_im_vec4_1aba6a75356917a28c967954bb29133a1a" kindref="member">z</ref>)<sp/>cr.z<sp/>=<sp/>current.<ref refid="struct_im_vec4_1aba6a75356917a28c967954bb29133a1a" kindref="member">z</ref>;</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cr.w<sp/>&gt;<sp/>current.<ref refid="struct_im_vec4_1afeed5acd9f0d2043175f4da229d12a38" kindref="member">w</ref>)<sp/>cr.w<sp/>=<sp/>current.<ref refid="struct_im_vec4_1afeed5acd9f0d2043175f4da229d12a38" kindref="member">w</ref>;</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/>cr.z<sp/>=<sp/>ImMax(cr.x,<sp/>cr.z);</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/>cr.w<sp/>=<sp/>ImMax(cr.y,<sp/>cr.w);</highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1ae950024f053f3c94dc2c763d20be609d" kindref="member">_ClipRectStack</ref>.push_back(cr);</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a87d1ec89ec6a742fd4d097d2b924e92b" kindref="member">_CmdHeader</ref>.ClipRect<sp/>=<sp/>cr;</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a8e51ddbe1f9732bc271ce807bec23f54" kindref="member">_OnChangedClipRect</ref>();</highlight></codeline>
<codeline lineno="588"><highlight class="normal">}</highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_im_draw_list_1a0ab1ab409f0e269755e50a77901bae39" kindref="member">ImDrawList::PushClipRectFullScreen</ref>()</highlight></codeline>
<codeline lineno="591"><highlight class="normal">{</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a608a9d9a83715ba87dced8321ed64329" kindref="member">PushClipRect</ref>(ImVec2(<ref refid="struct_im_draw_list_1ad5a67c6f1487a812410e9979d1cf4a02" kindref="member">_Data</ref>-&gt;ClipRectFullscreen.x,<sp/><ref refid="struct_im_draw_list_1ad5a67c6f1487a812410e9979d1cf4a02" kindref="member">_Data</ref>-&gt;ClipRectFullscreen.y),<sp/>ImVec2(<ref refid="struct_im_draw_list_1ad5a67c6f1487a812410e9979d1cf4a02" kindref="member">_Data</ref>-&gt;ClipRectFullscreen.z,<sp/><ref refid="struct_im_draw_list_1ad5a67c6f1487a812410e9979d1cf4a02" kindref="member">_Data</ref>-&gt;ClipRectFullscreen.w));</highlight></codeline>
<codeline lineno="593"><highlight class="normal">}</highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_im_draw_list_1a44f40c59ca755f559020f5a7fa81103a" kindref="member">ImDrawList::PopClipRect</ref>()</highlight></codeline>
<codeline lineno="596"><highlight class="normal">{</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1ae950024f053f3c94dc2c763d20be609d" kindref="member">_ClipRectStack</ref>.pop_back();</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a87d1ec89ec6a742fd4d097d2b924e92b" kindref="member">_CmdHeader</ref>.ClipRect<sp/>=<sp/>(<ref refid="struct_im_draw_list_1ae950024f053f3c94dc2c763d20be609d" kindref="member">_ClipRectStack</ref>.Size<sp/>==<sp/>0)<sp/>?<sp/><ref refid="struct_im_draw_list_1ad5a67c6f1487a812410e9979d1cf4a02" kindref="member">_Data</ref>-&gt;ClipRectFullscreen<sp/>:<sp/><ref refid="struct_im_draw_list_1ae950024f053f3c94dc2c763d20be609d" kindref="member">_ClipRectStack</ref>.Data[<ref refid="struct_im_draw_list_1ae950024f053f3c94dc2c763d20be609d" kindref="member">_ClipRectStack</ref>.Size<sp/>-<sp/>1];</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a8e51ddbe1f9732bc271ce807bec23f54" kindref="member">_OnChangedClipRect</ref>();</highlight></codeline>
<codeline lineno="600"><highlight class="normal">}</highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_im_draw_list_1a7ac41e329a9df911b4823ef0150cee16" kindref="member">ImDrawList::PushTextureID</ref>(<ref refid="imgui_8h_1a364f4447ecbc4ca176145ccff9db6286" kindref="member">ImTextureID</ref><sp/>texture_id)</highlight></codeline>
<codeline lineno="603"><highlight class="normal">{</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a848faddd121da050214b8d8159e5e704" kindref="member">_TextureIdStack</ref>.push_back(texture_id);</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a87d1ec89ec6a742fd4d097d2b924e92b" kindref="member">_CmdHeader</ref>.TextureId<sp/>=<sp/>texture_id;</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a7c14ae666a0df75214ecb97cdb9bd8f4" kindref="member">_OnChangedTextureID</ref>();</highlight></codeline>
<codeline lineno="607"><highlight class="normal">}</highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_im_draw_list_1ade9286c5ca58753f7bd571b30e2ff76c" kindref="member">ImDrawList::PopTextureID</ref>()</highlight></codeline>
<codeline lineno="610"><highlight class="normal">{</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a848faddd121da050214b8d8159e5e704" kindref="member">_TextureIdStack</ref>.pop_back();</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a87d1ec89ec6a742fd4d097d2b924e92b" kindref="member">_CmdHeader</ref>.TextureId<sp/>=<sp/>(<ref refid="struct_im_draw_list_1a848faddd121da050214b8d8159e5e704" kindref="member">_TextureIdStack</ref>.Size<sp/>==<sp/>0)<sp/>?<sp/>(<ref refid="imgui_8h_1a364f4447ecbc4ca176145ccff9db6286" kindref="member">ImTextureID</ref>)NULL<sp/>:<sp/><ref refid="struct_im_draw_list_1a848faddd121da050214b8d8159e5e704" kindref="member">_TextureIdStack</ref>.Data[<ref refid="struct_im_draw_list_1a848faddd121da050214b8d8159e5e704" kindref="member">_TextureIdStack</ref>.Size<sp/>-<sp/>1];</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a7c14ae666a0df75214ecb97cdb9bd8f4" kindref="member">_OnChangedTextureID</ref>();</highlight></codeline>
<codeline lineno="614"><highlight class="normal">}</highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Reserve<sp/>space<sp/>for<sp/>a<sp/>number<sp/>of<sp/>vertices<sp/>and<sp/>indices.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>must<sp/>finish<sp/>filling<sp/>your<sp/>reserved<sp/>data<sp/>before<sp/>calling<sp/>PrimReserve()<sp/>again,<sp/>as<sp/>it<sp/>may<sp/>reallocate<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight><highlight class="comment">//<sp/>submit<sp/>the<sp/>intermediate<sp/>results.<sp/>PrimUnreserve()<sp/>can<sp/>be<sp/>used<sp/>to<sp/>release<sp/>unused<sp/>allocations.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_im_draw_list_1a879aa38dbfb0344e3e023d65c002c7d7" kindref="member">ImDrawList::PrimReserve</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx_count,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vtx_count)</highlight></codeline>
<codeline lineno="620"><highlight class="normal">{</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Large<sp/>mesh<sp/>support<sp/>(when<sp/>enabled)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui__internal_8h_1aa6119f4859929e4a37720676c5765f73" kindref="member">IM_ASSERT_PARANOID</ref>(idx_count<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>vtx_count<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="imgui_8h_1afdc8744a5ac1a968b1ddfa47e13b2fa1" kindref="member">ImDrawIdx</ref>)<sp/>==<sp/>2<sp/>&amp;&amp;<sp/>(<ref refid="struct_im_draw_list_1a2228793183665bc3d8612795555fe505" kindref="member">_VtxCurrentIdx</ref><sp/>+<sp/>vtx_count<sp/>&gt;=<sp/>(1<sp/>&lt;&lt;<sp/>16))<sp/>&amp;&amp;<sp/>(<ref refid="struct_im_draw_list_1ada2c004661663ef875f4d4c7ec0b4557" kindref="member">Flags</ref><sp/>&amp;<sp/><ref refid="imgui_8h_1a2211278f8a7129d585362b8e013258b2a9619691b2f426ddce2277019b6707820" kindref="member">ImDrawListFlags_AllowVtxOffset</ref>))</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME:<sp/>In<sp/>theory<sp/>we<sp/>should<sp/>be<sp/>testing<sp/>that<sp/>vtx_count<sp/>&lt;64k<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>practice,<sp/>RenderText()<sp/>relies<sp/>on<sp/>reserving<sp/>ahead<sp/>for<sp/>a<sp/>worst<sp/>case<sp/>scenario<sp/>so<sp/>it<sp/>is<sp/>currently<sp/>useful<sp/>for<sp/>us</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>not<sp/>make<sp/>that<sp/>check<sp/>until<sp/>we<sp/>rework<sp/>the<sp/>text<sp/>functions<sp/>to<sp/>handle<sp/>clipping<sp/>and<sp/>large<sp/>horizontal<sp/>lines<sp/>better.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a87d1ec89ec6a742fd4d097d2b924e92b" kindref="member">_CmdHeader</ref>.VtxOffset<sp/>=<sp/><ref refid="struct_im_draw_list_1aa8ff4aee39cf3c3791b7e29a7b4264be" kindref="member">VtxBuffer</ref>.Size;</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a7f2e315f147acd8b555d86d1557659cc" kindref="member">_OnChangedVtxOffset</ref>();</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/>ImDrawCmd*<sp/>draw_cmd<sp/>=<sp/>&amp;<ref refid="struct_im_draw_list_1a67a4b5cc4c83bc3b81d96c46cbd38a07" kindref="member">CmdBuffer</ref>.Data[<ref refid="struct_im_draw_list_1a67a4b5cc4c83bc3b81d96c46cbd38a07" kindref="member">CmdBuffer</ref>.Size<sp/>-<sp/>1];</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/>draw_cmd-&gt;<ref refid="struct_im_draw_cmd_1aafe2532964fb1f6905d67d84dd3e8730" kindref="member">ElemCount</ref><sp/>+=<sp/>idx_count;</highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vtx_buffer_old_size<sp/>=<sp/><ref refid="struct_im_draw_list_1aa8ff4aee39cf3c3791b7e29a7b4264be" kindref="member">VtxBuffer</ref>.Size;</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1aa8ff4aee39cf3c3791b7e29a7b4264be" kindref="member">VtxBuffer</ref>.resize(vtx_buffer_old_size<sp/>+<sp/>vtx_count);</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a67f870f5140bf1cab14b8515b7386073" kindref="member">_VtxWritePtr</ref><sp/>=<sp/><ref refid="struct_im_draw_list_1aa8ff4aee39cf3c3791b7e29a7b4264be" kindref="member">VtxBuffer</ref>.Data<sp/>+<sp/>vtx_buffer_old_size;</highlight></codeline>
<codeline lineno="638"><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx_buffer_old_size<sp/>=<sp/><ref refid="struct_im_draw_list_1adf292ff70a954d82daf061c609e75dfc" kindref="member">IdxBuffer</ref>.Size;</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1adf292ff70a954d82daf061c609e75dfc" kindref="member">IdxBuffer</ref>.resize(idx_buffer_old_size<sp/>+<sp/>idx_count);</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a771f4c7f71873852fe030c3e498e5843" kindref="member">_IdxWritePtr</ref><sp/>=<sp/><ref refid="struct_im_draw_list_1adf292ff70a954d82daf061c609e75dfc" kindref="member">IdxBuffer</ref>.Data<sp/>+<sp/>idx_buffer_old_size;</highlight></codeline>
<codeline lineno="642"><highlight class="normal">}</highlight></codeline>
<codeline lineno="643"><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Release<sp/>the<sp/>a<sp/>number<sp/>of<sp/>reserved<sp/>vertices/indices<sp/>from<sp/>the<sp/>end<sp/>of<sp/>the<sp/>last<sp/>reservation<sp/>made<sp/>with<sp/>PrimReserve().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_im_draw_list_1a618a5e0efdefce08daa888b45bf8a1d1" kindref="member">ImDrawList::PrimUnreserve</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx_count,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vtx_count)</highlight></codeline>
<codeline lineno="646"><highlight class="normal">{</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui__internal_8h_1aa6119f4859929e4a37720676c5765f73" kindref="member">IM_ASSERT_PARANOID</ref>(idx_count<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>vtx_count<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/>ImDrawCmd*<sp/>draw_cmd<sp/>=<sp/>&amp;<ref refid="struct_im_draw_list_1a67a4b5cc4c83bc3b81d96c46cbd38a07" kindref="member">CmdBuffer</ref>.Data[<ref refid="struct_im_draw_list_1a67a4b5cc4c83bc3b81d96c46cbd38a07" kindref="member">CmdBuffer</ref>.Size<sp/>-<sp/>1];</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/>draw_cmd-&gt;<ref refid="struct_im_draw_cmd_1aafe2532964fb1f6905d67d84dd3e8730" kindref="member">ElemCount</ref><sp/>-=<sp/>idx_count;</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1aa8ff4aee39cf3c3791b7e29a7b4264be" kindref="member">VtxBuffer</ref>.shrink(<ref refid="struct_im_draw_list_1aa8ff4aee39cf3c3791b7e29a7b4264be" kindref="member">VtxBuffer</ref>.Size<sp/>-<sp/>vtx_count);</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1adf292ff70a954d82daf061c609e75dfc" kindref="member">IdxBuffer</ref>.shrink(<ref refid="struct_im_draw_list_1adf292ff70a954d82daf061c609e75dfc" kindref="member">IdxBuffer</ref>.Size<sp/>-<sp/>idx_count);</highlight></codeline>
<codeline lineno="653"><highlight class="normal">}</highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Fully<sp/>unrolled<sp/>with<sp/>inline<sp/>call<sp/>to<sp/>keep<sp/>our<sp/>debug<sp/>builds<sp/>decently<sp/>fast.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_im_draw_list_1ae2be093563f1d20b8190b7c423113925" kindref="member">ImDrawList::PrimRect</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>c,<sp/><ref refid="imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36" kindref="member">ImU32</ref><sp/>col)</highlight></codeline>
<codeline lineno="657"><highlight class="normal">{</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/>ImVec2<sp/>b(c.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref>,<sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>.y),<sp/>d(<ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>.x,<sp/>c.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref>),<sp/>uv(<ref refid="struct_im_draw_list_1ad5a67c6f1487a812410e9979d1cf4a02" kindref="member">_Data</ref>-&gt;TexUvWhitePixel);</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui_8h_1afdc8744a5ac1a968b1ddfa47e13b2fa1" kindref="member">ImDrawIdx</ref><sp/>idx<sp/>=<sp/>(<ref refid="imgui_8h_1afdc8744a5ac1a968b1ddfa47e13b2fa1" kindref="member">ImDrawIdx</ref>)<ref refid="struct_im_draw_list_1a2228793183665bc3d8612795555fe505" kindref="member">_VtxCurrentIdx</ref>;</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a771f4c7f71873852fe030c3e498e5843" kindref="member">_IdxWritePtr</ref>[0]<sp/>=<sp/>idx;<sp/><ref refid="struct_im_draw_list_1a771f4c7f71873852fe030c3e498e5843" kindref="member">_IdxWritePtr</ref>[1]<sp/>=<sp/>(<ref refid="imgui_8h_1afdc8744a5ac1a968b1ddfa47e13b2fa1" kindref="member">ImDrawIdx</ref>)(idx+1);<sp/><ref refid="struct_im_draw_list_1a771f4c7f71873852fe030c3e498e5843" kindref="member">_IdxWritePtr</ref>[2]<sp/>=<sp/>(<ref refid="imgui_8h_1afdc8744a5ac1a968b1ddfa47e13b2fa1" kindref="member">ImDrawIdx</ref>)(idx+2);</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a771f4c7f71873852fe030c3e498e5843" kindref="member">_IdxWritePtr</ref>[3]<sp/>=<sp/>idx;<sp/><ref refid="struct_im_draw_list_1a771f4c7f71873852fe030c3e498e5843" kindref="member">_IdxWritePtr</ref>[4]<sp/>=<sp/>(<ref refid="imgui_8h_1afdc8744a5ac1a968b1ddfa47e13b2fa1" kindref="member">ImDrawIdx</ref>)(idx+2);<sp/><ref refid="struct_im_draw_list_1a771f4c7f71873852fe030c3e498e5843" kindref="member">_IdxWritePtr</ref>[5]<sp/>=<sp/>(<ref refid="imgui_8h_1afdc8744a5ac1a968b1ddfa47e13b2fa1" kindref="member">ImDrawIdx</ref>)(idx+3);</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a67f870f5140bf1cab14b8515b7386073" kindref="member">_VtxWritePtr</ref>[0].pos<sp/>=<sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>;<sp/><ref refid="struct_im_draw_list_1a67f870f5140bf1cab14b8515b7386073" kindref="member">_VtxWritePtr</ref>[0].uv<sp/>=<sp/>uv;<sp/><ref refid="struct_im_draw_list_1a67f870f5140bf1cab14b8515b7386073" kindref="member">_VtxWritePtr</ref>[0].col<sp/>=<sp/>col;</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a67f870f5140bf1cab14b8515b7386073" kindref="member">_VtxWritePtr</ref>[1].pos<sp/>=<sp/>b;<sp/><ref refid="struct_im_draw_list_1a67f870f5140bf1cab14b8515b7386073" kindref="member">_VtxWritePtr</ref>[1].uv<sp/>=<sp/>uv;<sp/><ref refid="struct_im_draw_list_1a67f870f5140bf1cab14b8515b7386073" kindref="member">_VtxWritePtr</ref>[1].col<sp/>=<sp/>col;</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a67f870f5140bf1cab14b8515b7386073" kindref="member">_VtxWritePtr</ref>[2].pos<sp/>=<sp/>c;<sp/><ref refid="struct_im_draw_list_1a67f870f5140bf1cab14b8515b7386073" kindref="member">_VtxWritePtr</ref>[2].uv<sp/>=<sp/>uv;<sp/><ref refid="struct_im_draw_list_1a67f870f5140bf1cab14b8515b7386073" kindref="member">_VtxWritePtr</ref>[2].col<sp/>=<sp/>col;</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a67f870f5140bf1cab14b8515b7386073" kindref="member">_VtxWritePtr</ref>[3].pos<sp/>=<sp/>d;<sp/><ref refid="struct_im_draw_list_1a67f870f5140bf1cab14b8515b7386073" kindref="member">_VtxWritePtr</ref>[3].uv<sp/>=<sp/>uv;<sp/><ref refid="struct_im_draw_list_1a67f870f5140bf1cab14b8515b7386073" kindref="member">_VtxWritePtr</ref>[3].col<sp/>=<sp/>col;</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a67f870f5140bf1cab14b8515b7386073" kindref="member">_VtxWritePtr</ref><sp/>+=<sp/>4;</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a2228793183665bc3d8612795555fe505" kindref="member">_VtxCurrentIdx</ref><sp/>+=<sp/>4;</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a771f4c7f71873852fe030c3e498e5843" kindref="member">_IdxWritePtr</ref><sp/>+=<sp/>6;</highlight></codeline>
<codeline lineno="669"><highlight class="normal">}</highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_im_draw_list_1a77d48ed5b33ccdd908824c0a3bebfff8" kindref="member">ImDrawList::PrimRectUV</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>c,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>uv_a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>uv_c,<sp/><ref refid="imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36" kindref="member">ImU32</ref><sp/>col)</highlight></codeline>
<codeline lineno="672"><highlight class="normal">{</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/>ImVec2<sp/>b(c.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref>,<sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>.y),<sp/>d(<ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>.x,<sp/>c.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref>),<sp/>uv_b(uv_c.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref>,<sp/>uv_a.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref>),<sp/>uv_d(uv_a.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref>,<sp/>uv_c.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui_8h_1afdc8744a5ac1a968b1ddfa47e13b2fa1" kindref="member">ImDrawIdx</ref><sp/>idx<sp/>=<sp/>(<ref refid="imgui_8h_1afdc8744a5ac1a968b1ddfa47e13b2fa1" kindref="member">ImDrawIdx</ref>)<ref refid="struct_im_draw_list_1a2228793183665bc3d8612795555fe505" kindref="member">_VtxCurrentIdx</ref>;</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a771f4c7f71873852fe030c3e498e5843" kindref="member">_IdxWritePtr</ref>[0]<sp/>=<sp/>idx;<sp/><ref refid="struct_im_draw_list_1a771f4c7f71873852fe030c3e498e5843" kindref="member">_IdxWritePtr</ref>[1]<sp/>=<sp/>(<ref refid="imgui_8h_1afdc8744a5ac1a968b1ddfa47e13b2fa1" kindref="member">ImDrawIdx</ref>)(idx+1);<sp/><ref refid="struct_im_draw_list_1a771f4c7f71873852fe030c3e498e5843" kindref="member">_IdxWritePtr</ref>[2]<sp/>=<sp/>(<ref refid="imgui_8h_1afdc8744a5ac1a968b1ddfa47e13b2fa1" kindref="member">ImDrawIdx</ref>)(idx+2);</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a771f4c7f71873852fe030c3e498e5843" kindref="member">_IdxWritePtr</ref>[3]<sp/>=<sp/>idx;<sp/><ref refid="struct_im_draw_list_1a771f4c7f71873852fe030c3e498e5843" kindref="member">_IdxWritePtr</ref>[4]<sp/>=<sp/>(<ref refid="imgui_8h_1afdc8744a5ac1a968b1ddfa47e13b2fa1" kindref="member">ImDrawIdx</ref>)(idx+2);<sp/><ref refid="struct_im_draw_list_1a771f4c7f71873852fe030c3e498e5843" kindref="member">_IdxWritePtr</ref>[5]<sp/>=<sp/>(<ref refid="imgui_8h_1afdc8744a5ac1a968b1ddfa47e13b2fa1" kindref="member">ImDrawIdx</ref>)(idx+3);</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a67f870f5140bf1cab14b8515b7386073" kindref="member">_VtxWritePtr</ref>[0].pos<sp/>=<sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>;<sp/><ref refid="struct_im_draw_list_1a67f870f5140bf1cab14b8515b7386073" kindref="member">_VtxWritePtr</ref>[0].uv<sp/>=<sp/>uv_a;<sp/><ref refid="struct_im_draw_list_1a67f870f5140bf1cab14b8515b7386073" kindref="member">_VtxWritePtr</ref>[0].col<sp/>=<sp/>col;</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a67f870f5140bf1cab14b8515b7386073" kindref="member">_VtxWritePtr</ref>[1].pos<sp/>=<sp/>b;<sp/><ref refid="struct_im_draw_list_1a67f870f5140bf1cab14b8515b7386073" kindref="member">_VtxWritePtr</ref>[1].uv<sp/>=<sp/>uv_b;<sp/><ref refid="struct_im_draw_list_1a67f870f5140bf1cab14b8515b7386073" kindref="member">_VtxWritePtr</ref>[1].col<sp/>=<sp/>col;</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a67f870f5140bf1cab14b8515b7386073" kindref="member">_VtxWritePtr</ref>[2].pos<sp/>=<sp/>c;<sp/><ref refid="struct_im_draw_list_1a67f870f5140bf1cab14b8515b7386073" kindref="member">_VtxWritePtr</ref>[2].uv<sp/>=<sp/>uv_c;<sp/><ref refid="struct_im_draw_list_1a67f870f5140bf1cab14b8515b7386073" kindref="member">_VtxWritePtr</ref>[2].col<sp/>=<sp/>col;</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a67f870f5140bf1cab14b8515b7386073" kindref="member">_VtxWritePtr</ref>[3].pos<sp/>=<sp/>d;<sp/><ref refid="struct_im_draw_list_1a67f870f5140bf1cab14b8515b7386073" kindref="member">_VtxWritePtr</ref>[3].uv<sp/>=<sp/>uv_d;<sp/><ref refid="struct_im_draw_list_1a67f870f5140bf1cab14b8515b7386073" kindref="member">_VtxWritePtr</ref>[3].col<sp/>=<sp/>col;</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a67f870f5140bf1cab14b8515b7386073" kindref="member">_VtxWritePtr</ref><sp/>+=<sp/>4;</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a2228793183665bc3d8612795555fe505" kindref="member">_VtxCurrentIdx</ref><sp/>+=<sp/>4;</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a771f4c7f71873852fe030c3e498e5843" kindref="member">_IdxWritePtr</ref><sp/>+=<sp/>6;</highlight></codeline>
<codeline lineno="684"><highlight class="normal">}</highlight></codeline>
<codeline lineno="685"><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_im_draw_list_1a9df27414aaca5f34ac3664a8b82582b5" kindref="member">ImDrawList::PrimQuadUV</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>b,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>c,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>d,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>uv_a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>uv_b,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>uv_c,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>uv_d,<sp/><ref refid="imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36" kindref="member">ImU32</ref><sp/>col)</highlight></codeline>
<codeline lineno="687"><highlight class="normal">{</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui_8h_1afdc8744a5ac1a968b1ddfa47e13b2fa1" kindref="member">ImDrawIdx</ref><sp/>idx<sp/>=<sp/>(<ref refid="imgui_8h_1afdc8744a5ac1a968b1ddfa47e13b2fa1" kindref="member">ImDrawIdx</ref>)<ref refid="struct_im_draw_list_1a2228793183665bc3d8612795555fe505" kindref="member">_VtxCurrentIdx</ref>;</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a771f4c7f71873852fe030c3e498e5843" kindref="member">_IdxWritePtr</ref>[0]<sp/>=<sp/>idx;<sp/><ref refid="struct_im_draw_list_1a771f4c7f71873852fe030c3e498e5843" kindref="member">_IdxWritePtr</ref>[1]<sp/>=<sp/>(<ref refid="imgui_8h_1afdc8744a5ac1a968b1ddfa47e13b2fa1" kindref="member">ImDrawIdx</ref>)(idx+1);<sp/><ref refid="struct_im_draw_list_1a771f4c7f71873852fe030c3e498e5843" kindref="member">_IdxWritePtr</ref>[2]<sp/>=<sp/>(<ref refid="imgui_8h_1afdc8744a5ac1a968b1ddfa47e13b2fa1" kindref="member">ImDrawIdx</ref>)(idx+2);</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a771f4c7f71873852fe030c3e498e5843" kindref="member">_IdxWritePtr</ref>[3]<sp/>=<sp/>idx;<sp/><ref refid="struct_im_draw_list_1a771f4c7f71873852fe030c3e498e5843" kindref="member">_IdxWritePtr</ref>[4]<sp/>=<sp/>(<ref refid="imgui_8h_1afdc8744a5ac1a968b1ddfa47e13b2fa1" kindref="member">ImDrawIdx</ref>)(idx+2);<sp/><ref refid="struct_im_draw_list_1a771f4c7f71873852fe030c3e498e5843" kindref="member">_IdxWritePtr</ref>[5]<sp/>=<sp/>(<ref refid="imgui_8h_1afdc8744a5ac1a968b1ddfa47e13b2fa1" kindref="member">ImDrawIdx</ref>)(idx+3);</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a67f870f5140bf1cab14b8515b7386073" kindref="member">_VtxWritePtr</ref>[0].pos<sp/>=<sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>;<sp/><ref refid="struct_im_draw_list_1a67f870f5140bf1cab14b8515b7386073" kindref="member">_VtxWritePtr</ref>[0].uv<sp/>=<sp/>uv_a;<sp/><ref refid="struct_im_draw_list_1a67f870f5140bf1cab14b8515b7386073" kindref="member">_VtxWritePtr</ref>[0].col<sp/>=<sp/>col;</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a67f870f5140bf1cab14b8515b7386073" kindref="member">_VtxWritePtr</ref>[1].pos<sp/>=<sp/>b;<sp/><ref refid="struct_im_draw_list_1a67f870f5140bf1cab14b8515b7386073" kindref="member">_VtxWritePtr</ref>[1].uv<sp/>=<sp/>uv_b;<sp/><ref refid="struct_im_draw_list_1a67f870f5140bf1cab14b8515b7386073" kindref="member">_VtxWritePtr</ref>[1].col<sp/>=<sp/>col;</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a67f870f5140bf1cab14b8515b7386073" kindref="member">_VtxWritePtr</ref>[2].pos<sp/>=<sp/>c;<sp/><ref refid="struct_im_draw_list_1a67f870f5140bf1cab14b8515b7386073" kindref="member">_VtxWritePtr</ref>[2].uv<sp/>=<sp/>uv_c;<sp/><ref refid="struct_im_draw_list_1a67f870f5140bf1cab14b8515b7386073" kindref="member">_VtxWritePtr</ref>[2].col<sp/>=<sp/>col;</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a67f870f5140bf1cab14b8515b7386073" kindref="member">_VtxWritePtr</ref>[3].pos<sp/>=<sp/>d;<sp/><ref refid="struct_im_draw_list_1a67f870f5140bf1cab14b8515b7386073" kindref="member">_VtxWritePtr</ref>[3].uv<sp/>=<sp/>uv_d;<sp/><ref refid="struct_im_draw_list_1a67f870f5140bf1cab14b8515b7386073" kindref="member">_VtxWritePtr</ref>[3].col<sp/>=<sp/>col;</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a67f870f5140bf1cab14b8515b7386073" kindref="member">_VtxWritePtr</ref><sp/>+=<sp/>4;</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a2228793183665bc3d8612795555fe505" kindref="member">_VtxCurrentIdx</ref><sp/>+=<sp/>4;</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a771f4c7f71873852fe030c3e498e5843" kindref="member">_IdxWritePtr</ref><sp/>+=<sp/>6;</highlight></codeline>
<codeline lineno="698"><highlight class="normal">}</highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight><highlight class="comment">//<sp/>On<sp/>AddPolyline()<sp/>and<sp/>AddConvexPolyFilled()<sp/>we<sp/>intentionally<sp/>avoid<sp/>using<sp/>ImVec2<sp/>and<sp/>superfluous<sp/>function<sp/>calls<sp/>to<sp/>optimize<sp/>debug/non-inlined<sp/>builds.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>Those<sp/>macros<sp/>expects<sp/>l-values<sp/>and<sp/>need<sp/>to<sp/>be<sp/>used<sp/>as<sp/>their<sp/>own<sp/>statement.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>Those<sp/>macros<sp/>are<sp/>intentionally<sp/>not<sp/>surrounded<sp/>by<sp/>the<sp/>&apos;do<sp/>{}<sp/>while<sp/>(0)&apos;<sp/>idiom<sp/>because<sp/>even<sp/>that<sp/>translates<sp/>to<sp/>runtime<sp/>with<sp/>debug<sp/>compilers.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IM_NORMALIZE2F_OVER_ZERO(VX,VY)<sp/><sp/><sp/><sp/><sp/>{<sp/>float<sp/>d2<sp/>=<sp/>VX*VX<sp/>+<sp/>VY*VY;<sp/>if<sp/>(d2<sp/>&gt;<sp/>0.0f)<sp/>{<sp/>float<sp/>inv_len<sp/>=<sp/>ImRsqrt(d2);<sp/>VX<sp/>*=<sp/>inv_len;<sp/>VY<sp/>*=<sp/>inv_len;<sp/>}<sp/>}<sp/>(void)0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="704"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IM_FIXNORMAL2F_MAX_INVLEN2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>100.0f<sp/></highlight><highlight class="comment">//<sp/>500.0f<sp/>(see<sp/>#4053,<sp/>#3366)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IM_FIXNORMAL2F(VX,VY)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>float<sp/>d2<sp/>=<sp/>VX*VX<sp/>+<sp/>VY*VY;<sp/>if<sp/>(d2<sp/>&gt;<sp/>0.000001f)<sp/>{<sp/>float<sp/>inv_len2<sp/>=<sp/>1.0f<sp/>/<sp/>d2;<sp/>if<sp/>(inv_len2<sp/>&gt;<sp/>IM_FIXNORMAL2F_MAX_INVLEN2)<sp/>inv_len2<sp/>=<sp/>IM_FIXNORMAL2F_MAX_INVLEN2;<sp/>VX<sp/>*=<sp/>inv_len2;<sp/>VY<sp/>*=<sp/>inv_len2;<sp/>}<sp/>}<sp/>(void)0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TODO:<sp/>Thickness<sp/>anti-aliased<sp/>lines<sp/>cap<sp/>are<sp/>missing<sp/>their<sp/>AA<sp/>fringe.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>avoid<sp/>using<sp/>the<sp/>ImVec2<sp/>math<sp/>operators<sp/>here<sp/>to<sp/>reduce<sp/>cost<sp/>to<sp/>a<sp/>minimum<sp/>for<sp/>debug/non-inlined<sp/>builds.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="709"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_im_draw_list_1abc568847b1113e624456436bfab1b307" kindref="member">ImDrawList::AddPolyline</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>*<sp/>points,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>points_count,<sp/><ref refid="imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36" kindref="member">ImU32</ref><sp/>col,<sp/><ref refid="imgui_8h_1af2ef7e1341558a1d39aa244c1257780a" kindref="member">ImDrawFlags</ref><sp/>flags,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>thickness)</highlight></codeline>
<codeline lineno="710"><highlight class="normal">{</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(points_count<sp/>&lt;<sp/>2<sp/>||<sp/>(col<sp/>&amp;<sp/><ref refid="imgui_8h_1a870161cddae56908e81835588fcf35cd" kindref="member">IM_COL32_A_MASK</ref>)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="713"><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>closed<sp/>=<sp/>(flags<sp/>&amp;<sp/><ref refid="imgui_8h_1af42aea565fd5eb55fdb4c85c24e3c582a807e8779a6747675272b4337300d18a1" kindref="member">ImDrawFlags_Closed</ref>)<sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImVec2<sp/>opaque_uv<sp/>=<sp/><ref refid="struct_im_draw_list_1ad5a67c6f1487a812410e9979d1cf4a02" kindref="member">_Data</ref>-&gt;TexUvWhitePixel;</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count<sp/>=<sp/>closed<sp/>?<sp/>points_count<sp/>:<sp/>points_count<sp/>-<sp/>1;<sp/></highlight><highlight class="comment">//<sp/>The<sp/>number<sp/>of<sp/>line<sp/>segments<sp/>we<sp/>need<sp/>to<sp/>draw</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>thick_line<sp/>=<sp/>(thickness<sp/>&gt;<sp/><ref refid="struct_im_draw_list_1aa667eca45099e5679b161c17ac6ec7e0" kindref="member">_FringeScale</ref>);</highlight></codeline>
<codeline lineno="718"><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="struct_im_draw_list_1ada2c004661663ef875f4d4c7ec0b4557" kindref="member">Flags</ref><sp/>&amp;<sp/><ref refid="imgui_8h_1a2211278f8a7129d585362b8e013258b2a8bb409471d4cb95eeac3856976206a5f" kindref="member">ImDrawListFlags_AntiAliasedLines</ref>)</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Anti-aliased<sp/>stroke</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>AA_SIZE<sp/>=<sp/><ref refid="struct_im_draw_list_1aa667eca45099e5679b161c17ac6ec7e0" kindref="member">_FringeScale</ref>;</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36" kindref="member">ImU32</ref><sp/>col_trans<sp/>=<sp/>col<sp/>&amp;<sp/>~IM_COL32_A_MASK;</highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Thicknesses<sp/>&lt;1.0<sp/>should<sp/>behave<sp/>like<sp/>thickness<sp/>1.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thickness<sp/>=<sp/>ImMax(thickness,<sp/>1.0f);</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>integer_thickness<sp/>=<sp/>(int)thickness;</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fractional_thickness<sp/>=<sp/>thickness<sp/>-<sp/>integer_thickness;</highlight></codeline>
<codeline lineno="729"><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>we<sp/>want<sp/>to<sp/>draw<sp/>this<sp/>line<sp/>using<sp/>a<sp/>texture?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>For<sp/>now,<sp/>only<sp/>draw<sp/>integer-width<sp/>lines<sp/>using<sp/>textures<sp/>to<sp/>avoid<sp/>issues<sp/>with<sp/>the<sp/>way<sp/>scaling<sp/>occurs,<sp/>could<sp/>be<sp/>improved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>If<sp/>AA_SIZE<sp/>is<sp/>not<sp/>1.0f<sp/>we<sp/>cannot<sp/>use<sp/>the<sp/>texture<sp/>path.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>use_texture<sp/>=<sp/>(<ref refid="struct_im_draw_list_1ada2c004661663ef875f4d4c7ec0b4557" kindref="member">Flags</ref><sp/>&amp;<sp/><ref refid="imgui_8h_1a2211278f8a7129d585362b8e013258b2a4e513efa4b604ee81bf059e21ca3eef0" kindref="member">ImDrawListFlags_AntiAliasedLinesUseTex</ref>)<sp/>&amp;&amp;<sp/>(integer_thickness<sp/>&lt;<sp/><ref refid="imgui_8h_1a2e0fd3c4182b90dfde08210254eaeccf" kindref="member">IM_DRAWLIST_TEX_LINES_WIDTH_MAX</ref>)<sp/>&amp;&amp;<sp/>(fractional_thickness<sp/>&lt;=<sp/>0.00001f)<sp/>&amp;&amp;<sp/>(AA_SIZE<sp/>==<sp/>1.0f);</highlight></codeline>
<codeline lineno="734"><highlight class="normal"></highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>should<sp/>never<sp/>hit<sp/>this,<sp/>because<sp/>NewFrame()<sp/>doesn&apos;t<sp/>set<sp/>ImDrawListFlags_AntiAliasedLinesUseTex<sp/>unless<sp/>ImFontAtlasFlags_NoBakedLines<sp/>is<sp/>off</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imgui__internal_8h_1aa6119f4859929e4a37720676c5765f73" kindref="member">IM_ASSERT_PARANOID</ref>(!use_texture<sp/>||<sp/>!(<ref refid="struct_im_draw_list_1ad5a67c6f1487a812410e9979d1cf4a02" kindref="member">_Data</ref>-&gt;Font-&gt;ContainerAtlas-&gt;Flags<sp/>&amp;<sp/><ref refid="imgui_8h_1a80e2e7eb7dc9a76ac5384b9ce6786563a69694e359b87dc62b8cad71258b9d976" kindref="member">ImFontAtlasFlags_NoBakedLines</ref>));</highlight></codeline>
<codeline lineno="737"><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx_count<sp/>=<sp/>use_texture<sp/>?<sp/>(count<sp/>*<sp/>6)<sp/>:<sp/>(thick_line<sp/>?<sp/>count<sp/>*<sp/>18<sp/>:<sp/>count<sp/>*<sp/>12);</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vtx_count<sp/>=<sp/>use_texture<sp/>?<sp/>(points_count<sp/>*<sp/>2)<sp/>:<sp/>(thick_line<sp/>?<sp/>points_count<sp/>*<sp/>4<sp/>:<sp/>points_count<sp/>*<sp/>3);</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a879aa38dbfb0344e3e023d65c002c7d7" kindref="member">PrimReserve</ref>(idx_count,<sp/>vtx_count);</highlight></codeline>
<codeline lineno="741"><highlight class="normal"></highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Temporary<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>first<sp/>&lt;points_count&gt;<sp/>items<sp/>are<sp/>normals<sp/>at<sp/>each<sp/>line<sp/>point,<sp/>then<sp/>after<sp/>that<sp/>there<sp/>are<sp/>either<sp/>2<sp/>or<sp/>4<sp/>temp<sp/>points<sp/>for<sp/>each<sp/>line<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1ad5a67c6f1487a812410e9979d1cf4a02" kindref="member">_Data</ref>-&gt;TempBuffer.reserve_discard(points_count<sp/>*<sp/>((use_texture<sp/>||<sp/>!thick_line)<sp/>?<sp/>3<sp/>:<sp/>5));</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImVec2*<sp/>temp_normals<sp/>=<sp/><ref refid="struct_im_draw_list_1ad5a67c6f1487a812410e9979d1cf4a02" kindref="member">_Data</ref>-&gt;TempBuffer.Data;</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImVec2*<sp/>temp_points<sp/>=<sp/>temp_normals<sp/>+<sp/>points_count;</highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>normals<sp/>(tangents)<sp/>for<sp/>each<sp/>line<sp/>segment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i1<sp/>=<sp/>0;<sp/>i1<sp/>&lt;<sp/>count;<sp/>i1++)</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i2<sp/>=<sp/>(i1<sp/>+<sp/>1)<sp/>==<sp/>points_count<sp/>?<sp/>0<sp/>:<sp/>i1<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dx<sp/>=<sp/>points[i2].<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref><sp/>-<sp/>points[i1].<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dy<sp/>=<sp/>points[i2].<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref><sp/>-<sp/>points[i1].<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imgui__draw_8cpp_1aa595f4d7f5dca6ca04e5b1648e84f0d6" kindref="member">IM_NORMALIZE2F_OVER_ZERO</ref>(dx,<sp/>dy);</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp_normals[i1].<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref><sp/>=<sp/>dy;</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp_normals[i1].<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref><sp/>=<sp/>-dx;</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!closed)</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp_normals[points_count<sp/>-<sp/>1]<sp/>=<sp/>temp_normals[points_count<sp/>-<sp/>2];</highlight></codeline>
<codeline lineno="760"><highlight class="normal"></highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>are<sp/>drawing<sp/>a<sp/>one-pixel-wide<sp/>line<sp/>without<sp/>a<sp/>texture,<sp/>or<sp/>a<sp/>textured<sp/>line<sp/>of<sp/>any<sp/>width,<sp/>we<sp/>only<sp/>need<sp/>2<sp/>or<sp/>3<sp/>vertices<sp/>per<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(use_texture<sp/>||<sp/>!thick_line)</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>[PATH<sp/>1]<sp/>Texture-based<sp/>lines<sp/>(thick<sp/>or<sp/>non-thick)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>[PATH<sp/>2]<sp/>Non<sp/>texture-based<sp/>lines<sp/>(non-thick)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="766"><highlight class="normal"></highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>width<sp/>of<sp/>the<sp/>geometry<sp/>we<sp/>need<sp/>to<sp/>draw<sp/>-<sp/>this<sp/>is<sp/>essentially<sp/>&lt;thickness&gt;<sp/>pixels<sp/>for<sp/>the<sp/>line<sp/>itself,<sp/>plus<sp/>&quot;one<sp/>pixel&quot;<sp/>for<sp/>AA.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>In<sp/>the<sp/>texture-based<sp/>path,<sp/>we<sp/>don&apos;t<sp/>use<sp/>AA_SIZE<sp/>here<sp/>because<sp/>the<sp/>+1<sp/>is<sp/>tied<sp/>to<sp/>the<sp/>generated<sp/>texture</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>(see<sp/>ImFontAtlasBuildRenderLinesTexData()<sp/>function),<sp/>and<sp/>so<sp/>alternate<sp/>values<sp/>won&apos;t<sp/>work<sp/>without<sp/>changes<sp/>to<sp/>that<sp/>code.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>In<sp/>the<sp/>non<sp/>texture-based<sp/>paths,<sp/>we<sp/>would<sp/>allow<sp/>AA_SIZE<sp/>to<sp/>potentially<sp/>be<sp/>!=<sp/>1.0f<sp/>with<sp/>a<sp/>patch<sp/>(e.g.<sp/>fringe_scale<sp/>patch<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>allow<sp/>scaling<sp/>geometry<sp/>while<sp/>preserving<sp/>one-screen-pixel<sp/>AA<sp/>fringe).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>half_draw_size<sp/>=<sp/>use_texture<sp/>?<sp/>((thickness<sp/>*<sp/>0.5f)<sp/>+<sp/>1)<sp/>:<sp/>AA_SIZE;</highlight></codeline>
<codeline lineno="773"><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>line<sp/>is<sp/>not<sp/>closed,<sp/>the<sp/>first<sp/>and<sp/>last<sp/>points<sp/>need<sp/>to<sp/>be<sp/>generated<sp/>differently<sp/>as<sp/>there<sp/>are<sp/>no<sp/>normals<sp/>to<sp/>blend</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!closed)</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp_points[0]<sp/>=<sp/>points[0]<sp/>+<sp/>temp_normals[0]<sp/>*<sp/>half_draw_size;</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp_points[1]<sp/>=<sp/>points[0]<sp/>-<sp/>temp_normals[0]<sp/>*<sp/>half_draw_size;</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp_points[(points_count-1)*2+0]<sp/>=<sp/>points[points_count-1]<sp/>+<sp/>temp_normals[points_count-1]<sp/>*<sp/>half_draw_size;</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp_points[(points_count-1)*2+1]<sp/>=<sp/>points[points_count-1]<sp/>-<sp/>temp_normals[points_count-1]<sp/>*<sp/>half_draw_size;</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="782"><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Generate<sp/>the<sp/>indices<sp/>to<sp/>form<sp/>a<sp/>number<sp/>of<sp/>triangles<sp/>for<sp/>each<sp/>line<sp/>segment,<sp/>and<sp/>the<sp/>vertices<sp/>for<sp/>the<sp/>line<sp/>edges</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>takes<sp/>points<sp/>n<sp/>and<sp/>n+1<sp/>and<sp/>writes<sp/>into<sp/>n+1,<sp/>with<sp/>the<sp/>first<sp/>point<sp/>in<sp/>a<sp/>closed<sp/>line<sp/>being<sp/>generated<sp/>from<sp/>the<sp/>final<sp/>one<sp/>(as<sp/>n+1<sp/>wraps)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME-OPT:<sp/>Merge<sp/>the<sp/>different<sp/>loops,<sp/>possibly<sp/>remove<sp/>the<sp/>temporary<sp/>buffer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx1<sp/>=<sp/><ref refid="struct_im_draw_list_1a2228793183665bc3d8612795555fe505" kindref="member">_VtxCurrentIdx</ref>;<sp/></highlight><highlight class="comment">//<sp/>Vertex<sp/>index<sp/>for<sp/>start<sp/>of<sp/>line<sp/>segment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i1<sp/>=<sp/>0;<sp/>i1<sp/>&lt;<sp/>count;<sp/>i1++)<sp/></highlight><highlight class="comment">//<sp/>i1<sp/>is<sp/>the<sp/>first<sp/>point<sp/>of<sp/>the<sp/>line<sp/>segment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i2<sp/>=<sp/>(i1<sp/>+<sp/>1)<sp/>==<sp/>points_count<sp/>?<sp/>0<sp/>:<sp/>i1<sp/>+<sp/>1;<sp/></highlight><highlight class="comment">//<sp/>i2<sp/>is<sp/>the<sp/>second<sp/>point<sp/>of<sp/>the<sp/>line<sp/>segment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx2<sp/>=<sp/>((i1<sp/>+<sp/>1)<sp/>==<sp/>points_count)<sp/>?<sp/><ref refid="struct_im_draw_list_1a2228793183665bc3d8612795555fe505" kindref="member">_VtxCurrentIdx</ref><sp/>:<sp/>(idx1<sp/>+<sp/>(use_texture<sp/>?<sp/>2<sp/>:<sp/>3));<sp/></highlight><highlight class="comment">//<sp/>Vertex<sp/>index<sp/>for<sp/>end<sp/>of<sp/>segment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="791"><highlight class="normal"></highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Average<sp/>normals</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dm_x<sp/>=<sp/>(temp_normals[i1].<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref><sp/>+<sp/>temp_normals[i2].<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref>)<sp/>*<sp/>0.5f;</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dm_y<sp/>=<sp/>(temp_normals[i1].<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref><sp/>+<sp/>temp_normals[i2].<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref>)<sp/>*<sp/>0.5f;</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imgui__draw_8cpp_1a4df703825e073b91ea24956d6021ee59" kindref="member">IM_FIXNORMAL2F</ref>(dm_x,<sp/>dm_y);</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dm_x<sp/>*=<sp/>half_draw_size;<sp/></highlight><highlight class="comment">//<sp/>dm_x,<sp/>dm_y<sp/>are<sp/>offset<sp/>to<sp/>the<sp/>outer<sp/>edge<sp/>of<sp/>the<sp/>AA<sp/>area</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dm_y<sp/>*=<sp/>half_draw_size;</highlight></codeline>
<codeline lineno="798"><highlight class="normal"></highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>temporary<sp/>vertexes<sp/>for<sp/>the<sp/>outer<sp/>edges</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImVec2*<sp/>out_vtx<sp/>=<sp/>&amp;temp_points[i2<sp/>*<sp/>2];</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_vtx[0].<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref><sp/>=<sp/>points[i2].<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref><sp/>+<sp/>dm_x;</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_vtx[0].<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref><sp/>=<sp/>points[i2].<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref><sp/>+<sp/>dm_y;</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_vtx[1].<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref><sp/>=<sp/>points[i2].<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref><sp/>-<sp/>dm_x;</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_vtx[1].<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref><sp/>=<sp/>points[i2].<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref><sp/>-<sp/>dm_y;</highlight></codeline>
<codeline lineno="805"><highlight class="normal"></highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(use_texture)</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>indices<sp/>for<sp/>two<sp/>triangles</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a771f4c7f71873852fe030c3e498e5843" kindref="member">_IdxWritePtr</ref>[0]<sp/>=<sp/>(<ref refid="imgui_8h_1afdc8744a5ac1a968b1ddfa47e13b2fa1" kindref="member">ImDrawIdx</ref>)(idx2<sp/>+<sp/>0);<sp/><ref refid="struct_im_draw_list_1a771f4c7f71873852fe030c3e498e5843" kindref="member">_IdxWritePtr</ref>[1]<sp/>=<sp/>(<ref refid="imgui_8h_1afdc8744a5ac1a968b1ddfa47e13b2fa1" kindref="member">ImDrawIdx</ref>)(idx1<sp/>+<sp/>0);<sp/><ref refid="struct_im_draw_list_1a771f4c7f71873852fe030c3e498e5843" kindref="member">_IdxWritePtr</ref>[2]<sp/>=<sp/>(<ref refid="imgui_8h_1afdc8744a5ac1a968b1ddfa47e13b2fa1" kindref="member">ImDrawIdx</ref>)(idx1<sp/>+<sp/>1);<sp/></highlight><highlight class="comment">//<sp/>Right<sp/>tri</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a771f4c7f71873852fe030c3e498e5843" kindref="member">_IdxWritePtr</ref>[3]<sp/>=<sp/>(<ref refid="imgui_8h_1afdc8744a5ac1a968b1ddfa47e13b2fa1" kindref="member">ImDrawIdx</ref>)(idx2<sp/>+<sp/>1);<sp/><ref refid="struct_im_draw_list_1a771f4c7f71873852fe030c3e498e5843" kindref="member">_IdxWritePtr</ref>[4]<sp/>=<sp/>(<ref refid="imgui_8h_1afdc8744a5ac1a968b1ddfa47e13b2fa1" kindref="member">ImDrawIdx</ref>)(idx1<sp/>+<sp/>1);<sp/><ref refid="struct_im_draw_list_1a771f4c7f71873852fe030c3e498e5843" kindref="member">_IdxWritePtr</ref>[5]<sp/>=<sp/>(<ref refid="imgui_8h_1afdc8744a5ac1a968b1ddfa47e13b2fa1" kindref="member">ImDrawIdx</ref>)(idx2<sp/>+<sp/>0);<sp/></highlight><highlight class="comment">//<sp/>Left<sp/>tri</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a771f4c7f71873852fe030c3e498e5843" kindref="member">_IdxWritePtr</ref><sp/>+=<sp/>6;</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>indexes<sp/>for<sp/>four<sp/>triangles</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a771f4c7f71873852fe030c3e498e5843" kindref="member">_IdxWritePtr</ref>[0]<sp/>=<sp/>(<ref refid="imgui_8h_1afdc8744a5ac1a968b1ddfa47e13b2fa1" kindref="member">ImDrawIdx</ref>)(idx2<sp/>+<sp/>0);<sp/><ref refid="struct_im_draw_list_1a771f4c7f71873852fe030c3e498e5843" kindref="member">_IdxWritePtr</ref>[1]<sp/>=<sp/>(<ref refid="imgui_8h_1afdc8744a5ac1a968b1ddfa47e13b2fa1" kindref="member">ImDrawIdx</ref>)(idx1<sp/>+<sp/>0);<sp/><ref refid="struct_im_draw_list_1a771f4c7f71873852fe030c3e498e5843" kindref="member">_IdxWritePtr</ref>[2]<sp/>=<sp/>(<ref refid="imgui_8h_1afdc8744a5ac1a968b1ddfa47e13b2fa1" kindref="member">ImDrawIdx</ref>)(idx1<sp/>+<sp/>2);<sp/></highlight><highlight class="comment">//<sp/>Right<sp/>tri<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a771f4c7f71873852fe030c3e498e5843" kindref="member">_IdxWritePtr</ref>[3]<sp/>=<sp/>(<ref refid="imgui_8h_1afdc8744a5ac1a968b1ddfa47e13b2fa1" kindref="member">ImDrawIdx</ref>)(idx1<sp/>+<sp/>2);<sp/><ref refid="struct_im_draw_list_1a771f4c7f71873852fe030c3e498e5843" kindref="member">_IdxWritePtr</ref>[4]<sp/>=<sp/>(<ref refid="imgui_8h_1afdc8744a5ac1a968b1ddfa47e13b2fa1" kindref="member">ImDrawIdx</ref>)(idx2<sp/>+<sp/>2);<sp/><ref refid="struct_im_draw_list_1a771f4c7f71873852fe030c3e498e5843" kindref="member">_IdxWritePtr</ref>[5]<sp/>=<sp/>(<ref refid="imgui_8h_1afdc8744a5ac1a968b1ddfa47e13b2fa1" kindref="member">ImDrawIdx</ref>)(idx2<sp/>+<sp/>0);<sp/></highlight><highlight class="comment">//<sp/>Right<sp/>tri<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a771f4c7f71873852fe030c3e498e5843" kindref="member">_IdxWritePtr</ref>[6]<sp/>=<sp/>(<ref refid="imgui_8h_1afdc8744a5ac1a968b1ddfa47e13b2fa1" kindref="member">ImDrawIdx</ref>)(idx2<sp/>+<sp/>1);<sp/><ref refid="struct_im_draw_list_1a771f4c7f71873852fe030c3e498e5843" kindref="member">_IdxWritePtr</ref>[7]<sp/>=<sp/>(<ref refid="imgui_8h_1afdc8744a5ac1a968b1ddfa47e13b2fa1" kindref="member">ImDrawIdx</ref>)(idx1<sp/>+<sp/>1);<sp/><ref refid="struct_im_draw_list_1a771f4c7f71873852fe030c3e498e5843" kindref="member">_IdxWritePtr</ref>[8]<sp/>=<sp/>(<ref refid="imgui_8h_1afdc8744a5ac1a968b1ddfa47e13b2fa1" kindref="member">ImDrawIdx</ref>)(idx1<sp/>+<sp/>0);<sp/></highlight><highlight class="comment">//<sp/>Left<sp/>tri<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a771f4c7f71873852fe030c3e498e5843" kindref="member">_IdxWritePtr</ref>[9]<sp/>=<sp/>(<ref refid="imgui_8h_1afdc8744a5ac1a968b1ddfa47e13b2fa1" kindref="member">ImDrawIdx</ref>)(idx1<sp/>+<sp/>0);<sp/><ref refid="struct_im_draw_list_1a771f4c7f71873852fe030c3e498e5843" kindref="member">_IdxWritePtr</ref>[10]<sp/>=<sp/>(<ref refid="imgui_8h_1afdc8744a5ac1a968b1ddfa47e13b2fa1" kindref="member">ImDrawIdx</ref>)(idx2<sp/>+<sp/>0);<sp/><ref refid="struct_im_draw_list_1a771f4c7f71873852fe030c3e498e5843" kindref="member">_IdxWritePtr</ref>[11]<sp/>=<sp/>(<ref refid="imgui_8h_1afdc8744a5ac1a968b1ddfa47e13b2fa1" kindref="member">ImDrawIdx</ref>)(idx2<sp/>+<sp/>1);<sp/></highlight><highlight class="comment">//<sp/>Left<sp/>tri<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a771f4c7f71873852fe030c3e498e5843" kindref="member">_IdxWritePtr</ref><sp/>+=<sp/>12;</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="822"><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>idx1<sp/>=<sp/>idx2;</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="825"><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>vertexes<sp/>for<sp/>each<sp/>point<sp/>on<sp/>the<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(use_texture)</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we&apos;re<sp/>using<sp/>textures<sp/>we<sp/>only<sp/>need<sp/>to<sp/>emit<sp/>the<sp/>left/right<sp/>edge<sp/>vertices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImVec4<sp/>tex_uvs<sp/>=<sp/><ref refid="struct_im_draw_list_1ad5a67c6f1487a812410e9979d1cf4a02" kindref="member">_Data</ref>-&gt;TexUvLines[integer_thickness];</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*if<sp/>(fractional_thickness<sp/>!=<sp/>0.0f)<sp/>//<sp/>Currently<sp/>always<sp/>zero<sp/>when<sp/>use_texture==false!</highlight></codeline>
<codeline lineno="832"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="833"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>ImVec4<sp/>tex_uvs_1<sp/>=<sp/>_Data-&gt;TexUvLines[integer_thickness<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="834"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tex_uvs.x<sp/>=<sp/>tex_uvs.x<sp/>+<sp/>(tex_uvs_1.x<sp/>-<sp/>tex_uvs.x)<sp/>*<sp/>fractional_thickness;<sp/>//<sp/>inlined<sp/>ImLerp()</highlight></codeline>
<codeline lineno="835"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tex_uvs.y<sp/>=<sp/>tex_uvs.y<sp/>+<sp/>(tex_uvs_1.y<sp/>-<sp/>tex_uvs.y)<sp/>*<sp/>fractional_thickness;</highlight></codeline>
<codeline lineno="836"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tex_uvs.z<sp/>=<sp/>tex_uvs.z<sp/>+<sp/>(tex_uvs_1.z<sp/>-<sp/>tex_uvs.z)<sp/>*<sp/>fractional_thickness;</highlight></codeline>
<codeline lineno="837"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tex_uvs.w<sp/>=<sp/>tex_uvs.w<sp/>+<sp/>(tex_uvs_1.w<sp/>-<sp/>tex_uvs.w)<sp/>*<sp/>fractional_thickness;</highlight></codeline>
<codeline lineno="838"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImVec2<sp/>tex_uv0(tex_uvs.<ref refid="struct_im_vec4_1a2090f651f5e5b78fedae8dab87343db6" kindref="member">x</ref>,<sp/>tex_uvs.<ref refid="struct_im_vec4_1a6b4d00ae261be4fe54353c759c561fe7" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImVec2<sp/>tex_uv1(tex_uvs.<ref refid="struct_im_vec4_1aba6a75356917a28c967954bb29133a1a" kindref="member">z</ref>,<sp/>tex_uvs.<ref refid="struct_im_vec4_1afeed5acd9f0d2043175f4da229d12a38" kindref="member">w</ref>);</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>points_count;<sp/>i++)</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a67f870f5140bf1cab14b8515b7386073" kindref="member">_VtxWritePtr</ref>[0].pos<sp/>=<sp/>temp_points[i<sp/>*<sp/>2<sp/>+<sp/>0];<sp/><ref refid="struct_im_draw_list_1a67f870f5140bf1cab14b8515b7386073" kindref="member">_VtxWritePtr</ref>[0].uv<sp/>=<sp/>tex_uv0;<sp/><ref refid="struct_im_draw_list_1a67f870f5140bf1cab14b8515b7386073" kindref="member">_VtxWritePtr</ref>[0].col<sp/>=<sp/>col;<sp/></highlight><highlight class="comment">//<sp/>Left-side<sp/>outer<sp/>edge</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a67f870f5140bf1cab14b8515b7386073" kindref="member">_VtxWritePtr</ref>[1].pos<sp/>=<sp/>temp_points[i<sp/>*<sp/>2<sp/>+<sp/>1];<sp/><ref refid="struct_im_draw_list_1a67f870f5140bf1cab14b8515b7386073" kindref="member">_VtxWritePtr</ref>[1].uv<sp/>=<sp/>tex_uv1;<sp/><ref refid="struct_im_draw_list_1a67f870f5140bf1cab14b8515b7386073" kindref="member">_VtxWritePtr</ref>[1].col<sp/>=<sp/>col;<sp/></highlight><highlight class="comment">//<sp/>Right-side<sp/>outer<sp/>edge</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a67f870f5140bf1cab14b8515b7386073" kindref="member">_VtxWritePtr</ref><sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we&apos;re<sp/>not<sp/>using<sp/>a<sp/>texture,<sp/>we<sp/>need<sp/>the<sp/>center<sp/>vertex<sp/>as<sp/>well</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>points_count;<sp/>i++)</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a67f870f5140bf1cab14b8515b7386073" kindref="member">_VtxWritePtr</ref>[0].pos<sp/>=<sp/>points[i];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a67f870f5140bf1cab14b8515b7386073" kindref="member">_VtxWritePtr</ref>[0].uv<sp/>=<sp/>opaque_uv;<sp/><ref refid="struct_im_draw_list_1a67f870f5140bf1cab14b8515b7386073" kindref="member">_VtxWritePtr</ref>[0].col<sp/>=<sp/>col;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Center<sp/>of<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a67f870f5140bf1cab14b8515b7386073" kindref="member">_VtxWritePtr</ref>[1].pos<sp/>=<sp/>temp_points[i<sp/>*<sp/>2<sp/>+<sp/>0];<sp/><ref refid="struct_im_draw_list_1a67f870f5140bf1cab14b8515b7386073" kindref="member">_VtxWritePtr</ref>[1].uv<sp/>=<sp/>opaque_uv;<sp/><ref refid="struct_im_draw_list_1a67f870f5140bf1cab14b8515b7386073" kindref="member">_VtxWritePtr</ref>[1].col<sp/>=<sp/>col_trans;<sp/></highlight><highlight class="comment">//<sp/>Left-side<sp/>outer<sp/>edge</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a67f870f5140bf1cab14b8515b7386073" kindref="member">_VtxWritePtr</ref>[2].pos<sp/>=<sp/>temp_points[i<sp/>*<sp/>2<sp/>+<sp/>1];<sp/><ref refid="struct_im_draw_list_1a67f870f5140bf1cab14b8515b7386073" kindref="member">_VtxWritePtr</ref>[2].uv<sp/>=<sp/>opaque_uv;<sp/><ref refid="struct_im_draw_list_1a67f870f5140bf1cab14b8515b7386073" kindref="member">_VtxWritePtr</ref>[2].col<sp/>=<sp/>col_trans;<sp/></highlight><highlight class="comment">//<sp/>Right-side<sp/>outer<sp/>edge</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a67f870f5140bf1cab14b8515b7386073" kindref="member">_VtxWritePtr</ref><sp/>+=<sp/>3;</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>[PATH<sp/>2]<sp/>Non<sp/>texture-based<sp/>lines<sp/>(thick):<sp/>we<sp/>need<sp/>to<sp/>draw<sp/>the<sp/>solid<sp/>line<sp/>core<sp/>and<sp/>thus<sp/>require<sp/>four<sp/>vertices<sp/>per<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>half_inner_thickness<sp/>=<sp/>(thickness<sp/>-<sp/>AA_SIZE)<sp/>*<sp/>0.5f;</highlight></codeline>
<codeline lineno="864"><highlight class="normal"></highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>line<sp/>is<sp/>not<sp/>closed,<sp/>the<sp/>first<sp/>and<sp/>last<sp/>points<sp/>need<sp/>to<sp/>be<sp/>generated<sp/>differently<sp/>as<sp/>there<sp/>are<sp/>no<sp/>normals<sp/>to<sp/>blend</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!closed)</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>points_last<sp/>=<sp/>points_count<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp_points[0]<sp/>=<sp/>points[0]<sp/>+<sp/>temp_normals[0]<sp/>*<sp/>(half_inner_thickness<sp/>+<sp/>AA_SIZE);</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp_points[1]<sp/>=<sp/>points[0]<sp/>+<sp/>temp_normals[0]<sp/>*<sp/>(half_inner_thickness);</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp_points[2]<sp/>=<sp/>points[0]<sp/>-<sp/>temp_normals[0]<sp/>*<sp/>(half_inner_thickness);</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp_points[3]<sp/>=<sp/>points[0]<sp/>-<sp/>temp_normals[0]<sp/>*<sp/>(half_inner_thickness<sp/>+<sp/>AA_SIZE);</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp_points[points_last<sp/>*<sp/>4<sp/>+<sp/>0]<sp/>=<sp/>points[points_last]<sp/>+<sp/>temp_normals[points_last]<sp/>*<sp/>(half_inner_thickness<sp/>+<sp/>AA_SIZE);</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp_points[points_last<sp/>*<sp/>4<sp/>+<sp/>1]<sp/>=<sp/>points[points_last]<sp/>+<sp/>temp_normals[points_last]<sp/>*<sp/>(half_inner_thickness);</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp_points[points_last<sp/>*<sp/>4<sp/>+<sp/>2]<sp/>=<sp/>points[points_last]<sp/>-<sp/>temp_normals[points_last]<sp/>*<sp/>(half_inner_thickness);</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp_points[points_last<sp/>*<sp/>4<sp/>+<sp/>3]<sp/>=<sp/>points[points_last]<sp/>-<sp/>temp_normals[points_last]<sp/>*<sp/>(half_inner_thickness<sp/>+<sp/>AA_SIZE);</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="878"><highlight class="normal"></highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Generate<sp/>the<sp/>indices<sp/>to<sp/>form<sp/>a<sp/>number<sp/>of<sp/>triangles<sp/>for<sp/>each<sp/>line<sp/>segment,<sp/>and<sp/>the<sp/>vertices<sp/>for<sp/>the<sp/>line<sp/>edges</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>takes<sp/>points<sp/>n<sp/>and<sp/>n+1<sp/>and<sp/>writes<sp/>into<sp/>n+1,<sp/>with<sp/>the<sp/>first<sp/>point<sp/>in<sp/>a<sp/>closed<sp/>line<sp/>being<sp/>generated<sp/>from<sp/>the<sp/>final<sp/>one<sp/>(as<sp/>n+1<sp/>wraps)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME-OPT:<sp/>Merge<sp/>the<sp/>different<sp/>loops,<sp/>possibly<sp/>remove<sp/>the<sp/>temporary<sp/>buffer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx1<sp/>=<sp/><ref refid="struct_im_draw_list_1a2228793183665bc3d8612795555fe505" kindref="member">_VtxCurrentIdx</ref>;<sp/></highlight><highlight class="comment">//<sp/>Vertex<sp/>index<sp/>for<sp/>start<sp/>of<sp/>line<sp/>segment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i1<sp/>=<sp/>0;<sp/>i1<sp/>&lt;<sp/>count;<sp/>i1++)<sp/></highlight><highlight class="comment">//<sp/>i1<sp/>is<sp/>the<sp/>first<sp/>point<sp/>of<sp/>the<sp/>line<sp/>segment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i2<sp/>=<sp/>(i1<sp/>+<sp/>1)<sp/>==<sp/>points_count<sp/>?<sp/>0<sp/>:<sp/>(i1<sp/>+<sp/>1);<sp/></highlight><highlight class="comment">//<sp/>i2<sp/>is<sp/>the<sp/>second<sp/>point<sp/>of<sp/>the<sp/>line<sp/>segment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx2<sp/>=<sp/>(i1<sp/>+<sp/>1)<sp/>==<sp/>points_count<sp/>?<sp/><ref refid="struct_im_draw_list_1a2228793183665bc3d8612795555fe505" kindref="member">_VtxCurrentIdx</ref><sp/>:<sp/>(idx1<sp/>+<sp/>4);<sp/></highlight><highlight class="comment">//<sp/>Vertex<sp/>index<sp/>for<sp/>end<sp/>of<sp/>segment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="887"><highlight class="normal"></highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Average<sp/>normals</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dm_x<sp/>=<sp/>(temp_normals[i1].<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref><sp/>+<sp/>temp_normals[i2].<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref>)<sp/>*<sp/>0.5f;</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dm_y<sp/>=<sp/>(temp_normals[i1].<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref><sp/>+<sp/>temp_normals[i2].<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref>)<sp/>*<sp/>0.5f;</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imgui__draw_8cpp_1a4df703825e073b91ea24956d6021ee59" kindref="member">IM_FIXNORMAL2F</ref>(dm_x,<sp/>dm_y);</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dm_out_x<sp/>=<sp/>dm_x<sp/>*<sp/>(half_inner_thickness<sp/>+<sp/>AA_SIZE);</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dm_out_y<sp/>=<sp/>dm_y<sp/>*<sp/>(half_inner_thickness<sp/>+<sp/>AA_SIZE);</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dm_in_x<sp/>=<sp/>dm_x<sp/>*<sp/>half_inner_thickness;</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dm_in_y<sp/>=<sp/>dm_y<sp/>*<sp/>half_inner_thickness;</highlight></codeline>
<codeline lineno="896"><highlight class="normal"></highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>temporary<sp/>vertices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImVec2*<sp/>out_vtx<sp/>=<sp/>&amp;temp_points[i2<sp/>*<sp/>4];</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_vtx[0].<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref><sp/>=<sp/>points[i2].<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref><sp/>+<sp/>dm_out_x;</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_vtx[0].<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref><sp/>=<sp/>points[i2].<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref><sp/>+<sp/>dm_out_y;</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_vtx[1].<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref><sp/>=<sp/>points[i2].<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref><sp/>+<sp/>dm_in_x;</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_vtx[1].<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref><sp/>=<sp/>points[i2].<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref><sp/>+<sp/>dm_in_y;</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_vtx[2].<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref><sp/>=<sp/>points[i2].<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref><sp/>-<sp/>dm_in_x;</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_vtx[2].<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref><sp/>=<sp/>points[i2].<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref><sp/>-<sp/>dm_in_y;</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_vtx[3].<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref><sp/>=<sp/>points[i2].<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref><sp/>-<sp/>dm_out_x;</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_vtx[3].<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref><sp/>=<sp/>points[i2].<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref><sp/>-<sp/>dm_out_y;</highlight></codeline>
<codeline lineno="907"><highlight class="normal"></highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>indexes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a771f4c7f71873852fe030c3e498e5843" kindref="member">_IdxWritePtr</ref>[0]<sp/><sp/>=<sp/>(<ref refid="imgui_8h_1afdc8744a5ac1a968b1ddfa47e13b2fa1" kindref="member">ImDrawIdx</ref>)(idx2<sp/>+<sp/>1);<sp/><ref refid="struct_im_draw_list_1a771f4c7f71873852fe030c3e498e5843" kindref="member">_IdxWritePtr</ref>[1]<sp/><sp/>=<sp/>(<ref refid="imgui_8h_1afdc8744a5ac1a968b1ddfa47e13b2fa1" kindref="member">ImDrawIdx</ref>)(idx1<sp/>+<sp/>1);<sp/><ref refid="struct_im_draw_list_1a771f4c7f71873852fe030c3e498e5843" kindref="member">_IdxWritePtr</ref>[2]<sp/><sp/>=<sp/>(<ref refid="imgui_8h_1afdc8744a5ac1a968b1ddfa47e13b2fa1" kindref="member">ImDrawIdx</ref>)(idx1<sp/>+<sp/>2);</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a771f4c7f71873852fe030c3e498e5843" kindref="member">_IdxWritePtr</ref>[3]<sp/><sp/>=<sp/>(<ref refid="imgui_8h_1afdc8744a5ac1a968b1ddfa47e13b2fa1" kindref="member">ImDrawIdx</ref>)(idx1<sp/>+<sp/>2);<sp/><ref refid="struct_im_draw_list_1a771f4c7f71873852fe030c3e498e5843" kindref="member">_IdxWritePtr</ref>[4]<sp/><sp/>=<sp/>(<ref refid="imgui_8h_1afdc8744a5ac1a968b1ddfa47e13b2fa1" kindref="member">ImDrawIdx</ref>)(idx2<sp/>+<sp/>2);<sp/><ref refid="struct_im_draw_list_1a771f4c7f71873852fe030c3e498e5843" kindref="member">_IdxWritePtr</ref>[5]<sp/><sp/>=<sp/>(<ref refid="imgui_8h_1afdc8744a5ac1a968b1ddfa47e13b2fa1" kindref="member">ImDrawIdx</ref>)(idx2<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a771f4c7f71873852fe030c3e498e5843" kindref="member">_IdxWritePtr</ref>[6]<sp/><sp/>=<sp/>(<ref refid="imgui_8h_1afdc8744a5ac1a968b1ddfa47e13b2fa1" kindref="member">ImDrawIdx</ref>)(idx2<sp/>+<sp/>1);<sp/><ref refid="struct_im_draw_list_1a771f4c7f71873852fe030c3e498e5843" kindref="member">_IdxWritePtr</ref>[7]<sp/><sp/>=<sp/>(<ref refid="imgui_8h_1afdc8744a5ac1a968b1ddfa47e13b2fa1" kindref="member">ImDrawIdx</ref>)(idx1<sp/>+<sp/>1);<sp/><ref refid="struct_im_draw_list_1a771f4c7f71873852fe030c3e498e5843" kindref="member">_IdxWritePtr</ref>[8]<sp/><sp/>=<sp/>(<ref refid="imgui_8h_1afdc8744a5ac1a968b1ddfa47e13b2fa1" kindref="member">ImDrawIdx</ref>)(idx1<sp/>+<sp/>0);</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a771f4c7f71873852fe030c3e498e5843" kindref="member">_IdxWritePtr</ref>[9]<sp/><sp/>=<sp/>(<ref refid="imgui_8h_1afdc8744a5ac1a968b1ddfa47e13b2fa1" kindref="member">ImDrawIdx</ref>)(idx1<sp/>+<sp/>0);<sp/><ref refid="struct_im_draw_list_1a771f4c7f71873852fe030c3e498e5843" kindref="member">_IdxWritePtr</ref>[10]<sp/>=<sp/>(<ref refid="imgui_8h_1afdc8744a5ac1a968b1ddfa47e13b2fa1" kindref="member">ImDrawIdx</ref>)(idx2<sp/>+<sp/>0);<sp/><ref refid="struct_im_draw_list_1a771f4c7f71873852fe030c3e498e5843" kindref="member">_IdxWritePtr</ref>[11]<sp/>=<sp/>(<ref refid="imgui_8h_1afdc8744a5ac1a968b1ddfa47e13b2fa1" kindref="member">ImDrawIdx</ref>)(idx2<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a771f4c7f71873852fe030c3e498e5843" kindref="member">_IdxWritePtr</ref>[12]<sp/>=<sp/>(<ref refid="imgui_8h_1afdc8744a5ac1a968b1ddfa47e13b2fa1" kindref="member">ImDrawIdx</ref>)(idx2<sp/>+<sp/>2);<sp/><ref refid="struct_im_draw_list_1a771f4c7f71873852fe030c3e498e5843" kindref="member">_IdxWritePtr</ref>[13]<sp/>=<sp/>(<ref refid="imgui_8h_1afdc8744a5ac1a968b1ddfa47e13b2fa1" kindref="member">ImDrawIdx</ref>)(idx1<sp/>+<sp/>2);<sp/><ref refid="struct_im_draw_list_1a771f4c7f71873852fe030c3e498e5843" kindref="member">_IdxWritePtr</ref>[14]<sp/>=<sp/>(<ref refid="imgui_8h_1afdc8744a5ac1a968b1ddfa47e13b2fa1" kindref="member">ImDrawIdx</ref>)(idx1<sp/>+<sp/>3);</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a771f4c7f71873852fe030c3e498e5843" kindref="member">_IdxWritePtr</ref>[15]<sp/>=<sp/>(<ref refid="imgui_8h_1afdc8744a5ac1a968b1ddfa47e13b2fa1" kindref="member">ImDrawIdx</ref>)(idx1<sp/>+<sp/>3);<sp/><ref refid="struct_im_draw_list_1a771f4c7f71873852fe030c3e498e5843" kindref="member">_IdxWritePtr</ref>[16]<sp/>=<sp/>(<ref refid="imgui_8h_1afdc8744a5ac1a968b1ddfa47e13b2fa1" kindref="member">ImDrawIdx</ref>)(idx2<sp/>+<sp/>3);<sp/><ref refid="struct_im_draw_list_1a771f4c7f71873852fe030c3e498e5843" kindref="member">_IdxWritePtr</ref>[17]<sp/>=<sp/>(<ref refid="imgui_8h_1afdc8744a5ac1a968b1ddfa47e13b2fa1" kindref="member">ImDrawIdx</ref>)(idx2<sp/>+<sp/>2);</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a771f4c7f71873852fe030c3e498e5843" kindref="member">_IdxWritePtr</ref><sp/>+=<sp/>18;</highlight></codeline>
<codeline lineno="916"><highlight class="normal"></highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>idx1<sp/>=<sp/>idx2;</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="919"><highlight class="normal"></highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>vertices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>points_count;<sp/>i++)</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a67f870f5140bf1cab14b8515b7386073" kindref="member">_VtxWritePtr</ref>[0].pos<sp/>=<sp/>temp_points[i<sp/>*<sp/>4<sp/>+<sp/>0];<sp/><ref refid="struct_im_draw_list_1a67f870f5140bf1cab14b8515b7386073" kindref="member">_VtxWritePtr</ref>[0].uv<sp/>=<sp/>opaque_uv;<sp/><ref refid="struct_im_draw_list_1a67f870f5140bf1cab14b8515b7386073" kindref="member">_VtxWritePtr</ref>[0].col<sp/>=<sp/>col_trans;</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a67f870f5140bf1cab14b8515b7386073" kindref="member">_VtxWritePtr</ref>[1].pos<sp/>=<sp/>temp_points[i<sp/>*<sp/>4<sp/>+<sp/>1];<sp/><ref refid="struct_im_draw_list_1a67f870f5140bf1cab14b8515b7386073" kindref="member">_VtxWritePtr</ref>[1].uv<sp/>=<sp/>opaque_uv;<sp/><ref refid="struct_im_draw_list_1a67f870f5140bf1cab14b8515b7386073" kindref="member">_VtxWritePtr</ref>[1].col<sp/>=<sp/>col;</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a67f870f5140bf1cab14b8515b7386073" kindref="member">_VtxWritePtr</ref>[2].pos<sp/>=<sp/>temp_points[i<sp/>*<sp/>4<sp/>+<sp/>2];<sp/><ref refid="struct_im_draw_list_1a67f870f5140bf1cab14b8515b7386073" kindref="member">_VtxWritePtr</ref>[2].uv<sp/>=<sp/>opaque_uv;<sp/><ref refid="struct_im_draw_list_1a67f870f5140bf1cab14b8515b7386073" kindref="member">_VtxWritePtr</ref>[2].col<sp/>=<sp/>col;</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a67f870f5140bf1cab14b8515b7386073" kindref="member">_VtxWritePtr</ref>[3].pos<sp/>=<sp/>temp_points[i<sp/>*<sp/>4<sp/>+<sp/>3];<sp/><ref refid="struct_im_draw_list_1a67f870f5140bf1cab14b8515b7386073" kindref="member">_VtxWritePtr</ref>[3].uv<sp/>=<sp/>opaque_uv;<sp/><ref refid="struct_im_draw_list_1a67f870f5140bf1cab14b8515b7386073" kindref="member">_VtxWritePtr</ref>[3].col<sp/>=<sp/>col_trans;</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a67f870f5140bf1cab14b8515b7386073" kindref="member">_VtxWritePtr</ref><sp/>+=<sp/>4;</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a2228793183665bc3d8612795555fe505" kindref="member">_VtxCurrentIdx</ref><sp/>+=<sp/>(<ref refid="imgui_8h_1afdc8744a5ac1a968b1ddfa47e13b2fa1" kindref="member">ImDrawIdx</ref>)vtx_count;</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>[PATH<sp/>4]<sp/>Non<sp/>texture-based,<sp/>Non<sp/>anti-aliased<sp/>lines</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx_count<sp/>=<sp/>count<sp/>*<sp/>6;</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vtx_count<sp/>=<sp/>count<sp/>*<sp/>4;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME-OPT:<sp/>Not<sp/>sharing<sp/>edges</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a879aa38dbfb0344e3e023d65c002c7d7" kindref="member">PrimReserve</ref>(idx_count,<sp/>vtx_count);</highlight></codeline>
<codeline lineno="938"><highlight class="normal"></highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i1<sp/>=<sp/>0;<sp/>i1<sp/>&lt;<sp/>count;<sp/>i1++)</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i2<sp/>=<sp/>(i1<sp/>+<sp/>1)<sp/>==<sp/>points_count<sp/>?<sp/>0<sp/>:<sp/>i1<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImVec2&amp;<sp/>p1<sp/>=<sp/>points[i1];</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImVec2&amp;<sp/>p2<sp/>=<sp/>points[i2];</highlight></codeline>
<codeline lineno="944"><highlight class="normal"></highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dx<sp/>=<sp/>p2.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref><sp/>-<sp/>p1.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dy<sp/>=<sp/>p2.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref><sp/>-<sp/>p1.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imgui__draw_8cpp_1aa595f4d7f5dca6ca04e5b1648e84f0d6" kindref="member">IM_NORMALIZE2F_OVER_ZERO</ref>(dx,<sp/>dy);</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dx<sp/>*=<sp/>(thickness<sp/>*<sp/>0.5f);</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dy<sp/>*=<sp/>(thickness<sp/>*<sp/>0.5f);</highlight></codeline>
<codeline lineno="950"><highlight class="normal"></highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a67f870f5140bf1cab14b8515b7386073" kindref="member">_VtxWritePtr</ref>[0].pos.x<sp/>=<sp/>p1.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref><sp/>+<sp/>dy;<sp/><ref refid="struct_im_draw_list_1a67f870f5140bf1cab14b8515b7386073" kindref="member">_VtxWritePtr</ref>[0].pos.y<sp/>=<sp/>p1.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref><sp/>-<sp/>dx;<sp/><ref refid="struct_im_draw_list_1a67f870f5140bf1cab14b8515b7386073" kindref="member">_VtxWritePtr</ref>[0].uv<sp/>=<sp/>opaque_uv;<sp/><ref refid="struct_im_draw_list_1a67f870f5140bf1cab14b8515b7386073" kindref="member">_VtxWritePtr</ref>[0].col<sp/>=<sp/>col;</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a67f870f5140bf1cab14b8515b7386073" kindref="member">_VtxWritePtr</ref>[1].pos.x<sp/>=<sp/>p2.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref><sp/>+<sp/>dy;<sp/><ref refid="struct_im_draw_list_1a67f870f5140bf1cab14b8515b7386073" kindref="member">_VtxWritePtr</ref>[1].pos.y<sp/>=<sp/>p2.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref><sp/>-<sp/>dx;<sp/><ref refid="struct_im_draw_list_1a67f870f5140bf1cab14b8515b7386073" kindref="member">_VtxWritePtr</ref>[1].uv<sp/>=<sp/>opaque_uv;<sp/><ref refid="struct_im_draw_list_1a67f870f5140bf1cab14b8515b7386073" kindref="member">_VtxWritePtr</ref>[1].col<sp/>=<sp/>col;</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a67f870f5140bf1cab14b8515b7386073" kindref="member">_VtxWritePtr</ref>[2].pos.x<sp/>=<sp/>p2.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref><sp/>-<sp/>dy;<sp/><ref refid="struct_im_draw_list_1a67f870f5140bf1cab14b8515b7386073" kindref="member">_VtxWritePtr</ref>[2].pos.y<sp/>=<sp/>p2.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref><sp/>+<sp/>dx;<sp/><ref refid="struct_im_draw_list_1a67f870f5140bf1cab14b8515b7386073" kindref="member">_VtxWritePtr</ref>[2].uv<sp/>=<sp/>opaque_uv;<sp/><ref refid="struct_im_draw_list_1a67f870f5140bf1cab14b8515b7386073" kindref="member">_VtxWritePtr</ref>[2].col<sp/>=<sp/>col;</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a67f870f5140bf1cab14b8515b7386073" kindref="member">_VtxWritePtr</ref>[3].pos.x<sp/>=<sp/>p1.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref><sp/>-<sp/>dy;<sp/><ref refid="struct_im_draw_list_1a67f870f5140bf1cab14b8515b7386073" kindref="member">_VtxWritePtr</ref>[3].pos.y<sp/>=<sp/>p1.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref><sp/>+<sp/>dx;<sp/><ref refid="struct_im_draw_list_1a67f870f5140bf1cab14b8515b7386073" kindref="member">_VtxWritePtr</ref>[3].uv<sp/>=<sp/>opaque_uv;<sp/><ref refid="struct_im_draw_list_1a67f870f5140bf1cab14b8515b7386073" kindref="member">_VtxWritePtr</ref>[3].col<sp/>=<sp/>col;</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a67f870f5140bf1cab14b8515b7386073" kindref="member">_VtxWritePtr</ref><sp/>+=<sp/>4;</highlight></codeline>
<codeline lineno="956"><highlight class="normal"></highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a771f4c7f71873852fe030c3e498e5843" kindref="member">_IdxWritePtr</ref>[0]<sp/>=<sp/>(<ref refid="imgui_8h_1afdc8744a5ac1a968b1ddfa47e13b2fa1" kindref="member">ImDrawIdx</ref>)(<ref refid="struct_im_draw_list_1a2228793183665bc3d8612795555fe505" kindref="member">_VtxCurrentIdx</ref>);<sp/><ref refid="struct_im_draw_list_1a771f4c7f71873852fe030c3e498e5843" kindref="member">_IdxWritePtr</ref>[1]<sp/>=<sp/>(<ref refid="imgui_8h_1afdc8744a5ac1a968b1ddfa47e13b2fa1" kindref="member">ImDrawIdx</ref>)(<ref refid="struct_im_draw_list_1a2228793183665bc3d8612795555fe505" kindref="member">_VtxCurrentIdx</ref><sp/>+<sp/>1);<sp/><ref refid="struct_im_draw_list_1a771f4c7f71873852fe030c3e498e5843" kindref="member">_IdxWritePtr</ref>[2]<sp/>=<sp/>(<ref refid="imgui_8h_1afdc8744a5ac1a968b1ddfa47e13b2fa1" kindref="member">ImDrawIdx</ref>)(<ref refid="struct_im_draw_list_1a2228793183665bc3d8612795555fe505" kindref="member">_VtxCurrentIdx</ref><sp/>+<sp/>2);</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a771f4c7f71873852fe030c3e498e5843" kindref="member">_IdxWritePtr</ref>[3]<sp/>=<sp/>(<ref refid="imgui_8h_1afdc8744a5ac1a968b1ddfa47e13b2fa1" kindref="member">ImDrawIdx</ref>)(<ref refid="struct_im_draw_list_1a2228793183665bc3d8612795555fe505" kindref="member">_VtxCurrentIdx</ref>);<sp/><ref refid="struct_im_draw_list_1a771f4c7f71873852fe030c3e498e5843" kindref="member">_IdxWritePtr</ref>[4]<sp/>=<sp/>(<ref refid="imgui_8h_1afdc8744a5ac1a968b1ddfa47e13b2fa1" kindref="member">ImDrawIdx</ref>)(<ref refid="struct_im_draw_list_1a2228793183665bc3d8612795555fe505" kindref="member">_VtxCurrentIdx</ref><sp/>+<sp/>2);<sp/><ref refid="struct_im_draw_list_1a771f4c7f71873852fe030c3e498e5843" kindref="member">_IdxWritePtr</ref>[5]<sp/>=<sp/>(<ref refid="imgui_8h_1afdc8744a5ac1a968b1ddfa47e13b2fa1" kindref="member">ImDrawIdx</ref>)(<ref refid="struct_im_draw_list_1a2228793183665bc3d8612795555fe505" kindref="member">_VtxCurrentIdx</ref><sp/>+<sp/>3);</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a771f4c7f71873852fe030c3e498e5843" kindref="member">_IdxWritePtr</ref><sp/>+=<sp/>6;</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a2228793183665bc3d8612795555fe505" kindref="member">_VtxCurrentIdx</ref><sp/>+=<sp/>4;</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="963"><highlight class="normal">}</highlight></codeline>
<codeline lineno="964"><highlight class="normal"></highlight></codeline>
<codeline lineno="965"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>We<sp/>intentionally<sp/>avoid<sp/>using<sp/>ImVec2<sp/>and<sp/>its<sp/>math<sp/>operators<sp/>here<sp/>to<sp/>reduce<sp/>cost<sp/>to<sp/>a<sp/>minimum<sp/>for<sp/>debug/non-inlined<sp/>builds.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="966"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>Filled<sp/>shapes<sp/>must<sp/>always<sp/>use<sp/>clockwise<sp/>winding<sp/>order.<sp/>The<sp/>anti-aliasing<sp/>fringe<sp/>depends<sp/>on<sp/>it.<sp/>Counter-clockwise<sp/>shapes<sp/>will<sp/>have<sp/>&quot;inward&quot;<sp/>anti-aliasing.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="967"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_im_draw_list_1ad2accc0a74845b08bd0e6fae6183d6d0" kindref="member">ImDrawList::AddConvexPolyFilled</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>*<sp/>points,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>points_count,<sp/><ref refid="imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36" kindref="member">ImU32</ref><sp/>col)</highlight></codeline>
<codeline lineno="968"><highlight class="normal">{</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(points_count<sp/>&lt;<sp/>3<sp/>||<sp/>(col<sp/>&amp;<sp/><ref refid="imgui_8h_1a870161cddae56908e81835588fcf35cd" kindref="member">IM_COL32_A_MASK</ref>)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="971"><highlight class="normal"></highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImVec2<sp/>uv<sp/>=<sp/><ref refid="struct_im_draw_list_1ad5a67c6f1487a812410e9979d1cf4a02" kindref="member">_Data</ref>-&gt;TexUvWhitePixel;</highlight></codeline>
<codeline lineno="973"><highlight class="normal"></highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="struct_im_draw_list_1ada2c004661663ef875f4d4c7ec0b4557" kindref="member">Flags</ref><sp/>&amp;<sp/><ref refid="imgui_8h_1a2211278f8a7129d585362b8e013258b2a837378ee31245c2684dae47a39b38eb8" kindref="member">ImDrawListFlags_AntiAliasedFill</ref>)</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Anti-aliased<sp/>Fill</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>AA_SIZE<sp/>=<sp/><ref refid="struct_im_draw_list_1aa667eca45099e5679b161c17ac6ec7e0" kindref="member">_FringeScale</ref>;</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36" kindref="member">ImU32</ref><sp/>col_trans<sp/>=<sp/>col<sp/>&amp;<sp/>~IM_COL32_A_MASK;</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx_count<sp/>=<sp/>(points_count<sp/>-<sp/>2)*3<sp/>+<sp/>points_count<sp/>*<sp/>6;</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vtx_count<sp/>=<sp/>(points_count<sp/>*<sp/>2);</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a879aa38dbfb0344e3e023d65c002c7d7" kindref="member">PrimReserve</ref>(idx_count,<sp/>vtx_count);</highlight></codeline>
<codeline lineno="982"><highlight class="normal"></highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>indexes<sp/>for<sp/>fill</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vtx_inner_idx<sp/>=<sp/><ref refid="struct_im_draw_list_1a2228793183665bc3d8612795555fe505" kindref="member">_VtxCurrentIdx</ref>;</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vtx_outer_idx<sp/>=<sp/><ref refid="struct_im_draw_list_1a2228793183665bc3d8612795555fe505" kindref="member">_VtxCurrentIdx</ref><sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>2;<sp/>i<sp/>&lt;<sp/>points_count;<sp/>i++)</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a771f4c7f71873852fe030c3e498e5843" kindref="member">_IdxWritePtr</ref>[0]<sp/>=<sp/>(<ref refid="imgui_8h_1afdc8744a5ac1a968b1ddfa47e13b2fa1" kindref="member">ImDrawIdx</ref>)(vtx_inner_idx);<sp/><ref refid="struct_im_draw_list_1a771f4c7f71873852fe030c3e498e5843" kindref="member">_IdxWritePtr</ref>[1]<sp/>=<sp/>(<ref refid="imgui_8h_1afdc8744a5ac1a968b1ddfa47e13b2fa1" kindref="member">ImDrawIdx</ref>)(vtx_inner_idx<sp/>+<sp/>((i<sp/>-<sp/>1)<sp/>&lt;&lt;<sp/>1));<sp/><ref refid="struct_im_draw_list_1a771f4c7f71873852fe030c3e498e5843" kindref="member">_IdxWritePtr</ref>[2]<sp/>=<sp/>(<ref refid="imgui_8h_1afdc8744a5ac1a968b1ddfa47e13b2fa1" kindref="member">ImDrawIdx</ref>)(vtx_inner_idx<sp/>+<sp/>(i<sp/>&lt;&lt;<sp/>1));</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a771f4c7f71873852fe030c3e498e5843" kindref="member">_IdxWritePtr</ref><sp/>+=<sp/>3;</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="991"><highlight class="normal"></highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>normals</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1ad5a67c6f1487a812410e9979d1cf4a02" kindref="member">_Data</ref>-&gt;TempBuffer.reserve_discard(points_count);</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImVec2*<sp/>temp_normals<sp/>=<sp/><ref refid="struct_im_draw_list_1ad5a67c6f1487a812410e9979d1cf4a02" kindref="member">_Data</ref>-&gt;TempBuffer.Data;</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i0<sp/>=<sp/>points_count<sp/>-<sp/>1,<sp/>i1<sp/>=<sp/>0;<sp/>i1<sp/>&lt;<sp/>points_count;<sp/>i0<sp/>=<sp/>i1++)</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImVec2&amp;<sp/>p0<sp/>=<sp/>points[i0];</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImVec2&amp;<sp/>p1<sp/>=<sp/>points[i1];</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dx<sp/>=<sp/>p1.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref><sp/>-<sp/>p0.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dy<sp/>=<sp/>p1.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref><sp/>-<sp/>p0.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imgui__draw_8cpp_1aa595f4d7f5dca6ca04e5b1648e84f0d6" kindref="member">IM_NORMALIZE2F_OVER_ZERO</ref>(dx,<sp/>dy);</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp_normals[i0].<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref><sp/>=<sp/>dy;</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp_normals[i0].<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref><sp/>=<sp/>-dx;</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"></highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i0<sp/>=<sp/>points_count<sp/>-<sp/>1,<sp/>i1<sp/>=<sp/>0;<sp/>i1<sp/>&lt;<sp/>points_count;<sp/>i0<sp/>=<sp/>i1++)</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Average<sp/>normals</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImVec2&amp;<sp/>n0<sp/>=<sp/>temp_normals[i0];</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImVec2&amp;<sp/>n1<sp/>=<sp/>temp_normals[i1];</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dm_x<sp/>=<sp/>(n0.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref><sp/>+<sp/>n1.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref>)<sp/>*<sp/>0.5f;</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dm_y<sp/>=<sp/>(n0.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref><sp/>+<sp/>n1.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref>)<sp/>*<sp/>0.5f;</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imgui__draw_8cpp_1a4df703825e073b91ea24956d6021ee59" kindref="member">IM_FIXNORMAL2F</ref>(dm_x,<sp/>dm_y);</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dm_x<sp/>*=<sp/>AA_SIZE<sp/>*<sp/>0.5f;</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dm_y<sp/>*=<sp/>AA_SIZE<sp/>*<sp/>0.5f;</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"></highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>vertices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a67f870f5140bf1cab14b8515b7386073" kindref="member">_VtxWritePtr</ref>[0].pos.x<sp/>=<sp/>(points[i1].<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref><sp/>-<sp/>dm_x);<sp/><ref refid="struct_im_draw_list_1a67f870f5140bf1cab14b8515b7386073" kindref="member">_VtxWritePtr</ref>[0].pos.y<sp/>=<sp/>(points[i1].<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref><sp/>-<sp/>dm_y);<sp/><ref refid="struct_im_draw_list_1a67f870f5140bf1cab14b8515b7386073" kindref="member">_VtxWritePtr</ref>[0].uv<sp/>=<sp/>uv;<sp/><ref refid="struct_im_draw_list_1a67f870f5140bf1cab14b8515b7386073" kindref="member">_VtxWritePtr</ref>[0].col<sp/>=<sp/>col;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Inner</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a67f870f5140bf1cab14b8515b7386073" kindref="member">_VtxWritePtr</ref>[1].pos.x<sp/>=<sp/>(points[i1].<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref><sp/>+<sp/>dm_x);<sp/><ref refid="struct_im_draw_list_1a67f870f5140bf1cab14b8515b7386073" kindref="member">_VtxWritePtr</ref>[1].pos.y<sp/>=<sp/>(points[i1].<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref><sp/>+<sp/>dm_y);<sp/><ref refid="struct_im_draw_list_1a67f870f5140bf1cab14b8515b7386073" kindref="member">_VtxWritePtr</ref>[1].uv<sp/>=<sp/>uv;<sp/><ref refid="struct_im_draw_list_1a67f870f5140bf1cab14b8515b7386073" kindref="member">_VtxWritePtr</ref>[1].col<sp/>=<sp/>col_trans;<sp/><sp/></highlight><highlight class="comment">//<sp/>Outer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a67f870f5140bf1cab14b8515b7386073" kindref="member">_VtxWritePtr</ref><sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"></highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>indexes<sp/>for<sp/>fringes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a771f4c7f71873852fe030c3e498e5843" kindref="member">_IdxWritePtr</ref>[0]<sp/>=<sp/>(<ref refid="imgui_8h_1afdc8744a5ac1a968b1ddfa47e13b2fa1" kindref="member">ImDrawIdx</ref>)(vtx_inner_idx<sp/>+<sp/>(i1<sp/>&lt;&lt;<sp/>1));<sp/><ref refid="struct_im_draw_list_1a771f4c7f71873852fe030c3e498e5843" kindref="member">_IdxWritePtr</ref>[1]<sp/>=<sp/>(<ref refid="imgui_8h_1afdc8744a5ac1a968b1ddfa47e13b2fa1" kindref="member">ImDrawIdx</ref>)(vtx_inner_idx<sp/>+<sp/>(i0<sp/>&lt;&lt;<sp/>1));<sp/><ref refid="struct_im_draw_list_1a771f4c7f71873852fe030c3e498e5843" kindref="member">_IdxWritePtr</ref>[2]<sp/>=<sp/>(<ref refid="imgui_8h_1afdc8744a5ac1a968b1ddfa47e13b2fa1" kindref="member">ImDrawIdx</ref>)(vtx_outer_idx<sp/>+<sp/>(i0<sp/>&lt;&lt;<sp/>1));</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a771f4c7f71873852fe030c3e498e5843" kindref="member">_IdxWritePtr</ref>[3]<sp/>=<sp/>(<ref refid="imgui_8h_1afdc8744a5ac1a968b1ddfa47e13b2fa1" kindref="member">ImDrawIdx</ref>)(vtx_outer_idx<sp/>+<sp/>(i0<sp/>&lt;&lt;<sp/>1));<sp/><ref refid="struct_im_draw_list_1a771f4c7f71873852fe030c3e498e5843" kindref="member">_IdxWritePtr</ref>[4]<sp/>=<sp/>(<ref refid="imgui_8h_1afdc8744a5ac1a968b1ddfa47e13b2fa1" kindref="member">ImDrawIdx</ref>)(vtx_outer_idx<sp/>+<sp/>(i1<sp/>&lt;&lt;<sp/>1));<sp/><ref refid="struct_im_draw_list_1a771f4c7f71873852fe030c3e498e5843" kindref="member">_IdxWritePtr</ref>[5]<sp/>=<sp/>(<ref refid="imgui_8h_1afdc8744a5ac1a968b1ddfa47e13b2fa1" kindref="member">ImDrawIdx</ref>)(vtx_inner_idx<sp/>+<sp/>(i1<sp/>&lt;&lt;<sp/>1));</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a771f4c7f71873852fe030c3e498e5843" kindref="member">_IdxWritePtr</ref><sp/>+=<sp/>6;</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a2228793183665bc3d8612795555fe505" kindref="member">_VtxCurrentIdx</ref><sp/>+=<sp/>(<ref refid="imgui_8h_1afdc8744a5ac1a968b1ddfa47e13b2fa1" kindref="member">ImDrawIdx</ref>)vtx_count;</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Non<sp/>Anti-aliased<sp/>Fill</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx_count<sp/>=<sp/>(points_count<sp/>-<sp/>2)*3;</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vtx_count<sp/>=<sp/>points_count;</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a879aa38dbfb0344e3e023d65c002c7d7" kindref="member">PrimReserve</ref>(idx_count,<sp/>vtx_count);</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>vtx_count;<sp/>i++)</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a67f870f5140bf1cab14b8515b7386073" kindref="member">_VtxWritePtr</ref>[0].pos<sp/>=<sp/>points[i];<sp/><ref refid="struct_im_draw_list_1a67f870f5140bf1cab14b8515b7386073" kindref="member">_VtxWritePtr</ref>[0].uv<sp/>=<sp/>uv;<sp/><ref refid="struct_im_draw_list_1a67f870f5140bf1cab14b8515b7386073" kindref="member">_VtxWritePtr</ref>[0].col<sp/>=<sp/>col;</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a67f870f5140bf1cab14b8515b7386073" kindref="member">_VtxWritePtr</ref>++;</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>2;<sp/>i<sp/>&lt;<sp/>points_count;<sp/>i++)</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a771f4c7f71873852fe030c3e498e5843" kindref="member">_IdxWritePtr</ref>[0]<sp/>=<sp/>(<ref refid="imgui_8h_1afdc8744a5ac1a968b1ddfa47e13b2fa1" kindref="member">ImDrawIdx</ref>)(<ref refid="struct_im_draw_list_1a2228793183665bc3d8612795555fe505" kindref="member">_VtxCurrentIdx</ref>);<sp/><ref refid="struct_im_draw_list_1a771f4c7f71873852fe030c3e498e5843" kindref="member">_IdxWritePtr</ref>[1]<sp/>=<sp/>(<ref refid="imgui_8h_1afdc8744a5ac1a968b1ddfa47e13b2fa1" kindref="member">ImDrawIdx</ref>)(<ref refid="struct_im_draw_list_1a2228793183665bc3d8612795555fe505" kindref="member">_VtxCurrentIdx</ref><sp/>+<sp/>i<sp/>-<sp/>1);<sp/><ref refid="struct_im_draw_list_1a771f4c7f71873852fe030c3e498e5843" kindref="member">_IdxWritePtr</ref>[2]<sp/>=<sp/>(<ref refid="imgui_8h_1afdc8744a5ac1a968b1ddfa47e13b2fa1" kindref="member">ImDrawIdx</ref>)(<ref refid="struct_im_draw_list_1a2228793183665bc3d8612795555fe505" kindref="member">_VtxCurrentIdx</ref><sp/>+<sp/>i);</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a771f4c7f71873852fe030c3e498e5843" kindref="member">_IdxWritePtr</ref><sp/>+=<sp/>3;</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a2228793183665bc3d8612795555fe505" kindref="member">_VtxCurrentIdx</ref><sp/>+=<sp/>(<ref refid="imgui_8h_1afdc8744a5ac1a968b1ddfa47e13b2fa1" kindref="member">ImDrawIdx</ref>)vtx_count;</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1047"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"></highlight></codeline>
<codeline lineno="1049"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_im_draw_list_1ac25f3a7693ed13ba2dac455675be8654" kindref="member">ImDrawList::_PathArcToFastEx</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>center,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>radius,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a_min_sample,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a_max_sample,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a_step)</highlight></codeline>
<codeline lineno="1050"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(radius<sp/>&lt;<sp/>0.5f)</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a5bdc39abf351360500048628b8dc1b07" kindref="member">_Path</ref>.push_back(center);</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"></highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>arc<sp/>auto<sp/>segment<sp/>step<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a_step<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a_step<sp/>=<sp/><ref refid="imgui__internal_8h_1aefbde2925c5c52ea5d210149f53abb49" kindref="member">IM_DRAWLIST_ARCFAST_SAMPLE_MAX</ref><sp/>/<sp/><ref refid="struct_im_draw_list_1a52afa32aaab6d581cda90dc5d8726ed6" kindref="member">_CalcCircleAutoSegmentCount</ref>(radius);</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"></highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>we<sp/>never<sp/>do<sp/>steps<sp/>larger<sp/>than<sp/>one<sp/>quarter<sp/>of<sp/>the<sp/>circle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/>a_step<sp/>=<sp/>ImClamp(a_step,<sp/>1,<sp/><ref refid="imgui__internal_8h_1ac149be83e162f3775a56cd66590fc092" kindref="member">IM_DRAWLIST_ARCFAST_TABLE_SIZE</ref><sp/>/<sp/>4);</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"></highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sample_range<sp/>=<sp/>ImAbs(a_max_sample<sp/>-<sp/>a_min_sample);</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a_next_step<sp/>=<sp/>a_step;</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"></highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>samples<sp/>=<sp/>sample_range<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>extra_max_sample<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a_step<sp/>&gt;<sp/>1)</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>samples<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>sample_range<sp/>/<sp/>a_step<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>overstep<sp/>=<sp/>sample_range<sp/>%<sp/>a_step;</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"></highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(overstep<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>extra_max_sample<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>samples++;</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"></highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>When<sp/>we<sp/>have<sp/>overstep<sp/>to<sp/>avoid<sp/>awkwardly<sp/>looking<sp/>one<sp/>long<sp/>line<sp/>and<sp/>one<sp/>tiny<sp/>one<sp/>at<sp/>the<sp/>end,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>distribute<sp/>first<sp/>step<sp/>range<sp/>evenly<sp/>between<sp/>them<sp/>by<sp/>reducing<sp/>first<sp/>step<sp/>size.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sample_range<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a_step<sp/>-=<sp/>(a_step<sp/>-<sp/>overstep)<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"></highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a5bdc39abf351360500048628b8dc1b07" kindref="member">_Path</ref>.resize(<ref refid="struct_im_draw_list_1a5bdc39abf351360500048628b8dc1b07" kindref="member">_Path</ref>.Size<sp/>+<sp/>samples);</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/>ImVec2*<sp/>out_ptr<sp/>=<sp/><ref refid="struct_im_draw_list_1a5bdc39abf351360500048628b8dc1b07" kindref="member">_Path</ref>.Data<sp/>+<sp/>(<ref refid="struct_im_draw_list_1a5bdc39abf351360500048628b8dc1b07" kindref="member">_Path</ref>.Size<sp/>-<sp/>samples);</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"></highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sample_index<sp/>=<sp/>a_min_sample;</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sample_index<sp/>&lt;<sp/>0<sp/>||<sp/>sample_index<sp/>&gt;=<sp/><ref refid="imgui__internal_8h_1aefbde2925c5c52ea5d210149f53abb49" kindref="member">IM_DRAWLIST_ARCFAST_SAMPLE_MAX</ref>)</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sample_index<sp/>=<sp/>sample_index<sp/>%<sp/><ref refid="imgui__internal_8h_1aefbde2925c5c52ea5d210149f53abb49" kindref="member">IM_DRAWLIST_ARCFAST_SAMPLE_MAX</ref>;</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sample_index<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sample_index<sp/>+=<sp/><ref refid="imgui__internal_8h_1aefbde2925c5c52ea5d210149f53abb49" kindref="member">IM_DRAWLIST_ARCFAST_SAMPLE_MAX</ref>;</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"></highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a_max_sample<sp/>&gt;=<sp/>a_min_sample)</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref><sp/>=<sp/>a_min_sample;<sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref><sp/>&lt;=<sp/>a_max_sample;<sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref><sp/>+=<sp/>a_step,<sp/>sample_index<sp/>+=<sp/>a_step,<sp/>a_step<sp/>=<sp/>a_next_step)</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a_step<sp/>is<sp/>clamped<sp/>to<sp/>IM_DRAWLIST_ARCFAST_SAMPLE_MAX,<sp/>so<sp/>we<sp/>have<sp/>guaranteed<sp/>that<sp/>it<sp/>will<sp/>not<sp/>wrap<sp/>over<sp/>range<sp/>twice<sp/>or<sp/>more</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sample_index<sp/>&gt;=<sp/><ref refid="imgui__internal_8h_1aefbde2925c5c52ea5d210149f53abb49" kindref="member">IM_DRAWLIST_ARCFAST_SAMPLE_MAX</ref>)</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sample_index<sp/>-=<sp/><ref refid="imgui__internal_8h_1aefbde2925c5c52ea5d210149f53abb49" kindref="member">IM_DRAWLIST_ARCFAST_SAMPLE_MAX</ref>;</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"></highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImVec2<sp/>s<sp/>=<sp/><ref refid="struct_im_draw_list_1ad5a67c6f1487a812410e9979d1cf4a02" kindref="member">_Data</ref>-&gt;ArcFastVtx[sample_index];</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_ptr-&gt;<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref><sp/>=<sp/>center.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref><sp/>+<sp/>s.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref><sp/>*<sp/>radius;</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_ptr-&gt;<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref><sp/>=<sp/>center.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref><sp/>+<sp/>s.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref><sp/>*<sp/>radius;</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_ptr++;</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref><sp/>=<sp/>a_min_sample;<sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref><sp/>&gt;=<sp/>a_max_sample;<sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref><sp/>-=<sp/>a_step,<sp/>sample_index<sp/>-=<sp/>a_step,<sp/>a_step<sp/>=<sp/>a_next_step)</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a_step<sp/>is<sp/>clamped<sp/>to<sp/>IM_DRAWLIST_ARCFAST_SAMPLE_MAX,<sp/>so<sp/>we<sp/>have<sp/>guaranteed<sp/>that<sp/>it<sp/>will<sp/>not<sp/>wrap<sp/>over<sp/>range<sp/>twice<sp/>or<sp/>more</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sample_index<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sample_index<sp/>+=<sp/><ref refid="imgui__internal_8h_1aefbde2925c5c52ea5d210149f53abb49" kindref="member">IM_DRAWLIST_ARCFAST_SAMPLE_MAX</ref>;</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"></highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImVec2<sp/>s<sp/>=<sp/><ref refid="struct_im_draw_list_1ad5a67c6f1487a812410e9979d1cf4a02" kindref="member">_Data</ref>-&gt;ArcFastVtx[sample_index];</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_ptr-&gt;<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref><sp/>=<sp/>center.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref><sp/>+<sp/>s.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref><sp/>*<sp/>radius;</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_ptr-&gt;<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref><sp/>=<sp/>center.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref><sp/>+<sp/>s.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref><sp/>*<sp/>radius;</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_ptr++;</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"></highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(extra_max_sample)</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>normalized_max_sample<sp/>=<sp/>a_max_sample<sp/>%<sp/><ref refid="imgui__internal_8h_1aefbde2925c5c52ea5d210149f53abb49" kindref="member">IM_DRAWLIST_ARCFAST_SAMPLE_MAX</ref>;</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(normalized_max_sample<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>normalized_max_sample<sp/>+=<sp/><ref refid="imgui__internal_8h_1aefbde2925c5c52ea5d210149f53abb49" kindref="member">IM_DRAWLIST_ARCFAST_SAMPLE_MAX</ref>;</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"></highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImVec2<sp/>s<sp/>=<sp/><ref refid="struct_im_draw_list_1ad5a67c6f1487a812410e9979d1cf4a02" kindref="member">_Data</ref>-&gt;ArcFastVtx[normalized_max_sample];</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_ptr-&gt;<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref><sp/>=<sp/>center.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref><sp/>+<sp/>s.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref><sp/>*<sp/>radius;</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_ptr-&gt;<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref><sp/>=<sp/>center.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref><sp/>+<sp/>s.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref><sp/>*<sp/>radius;</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_ptr++;</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"></highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui__internal_8h_1aa6119f4859929e4a37720676c5765f73" kindref="member">IM_ASSERT_PARANOID</ref>(<ref refid="struct_im_draw_list_1a5bdc39abf351360500048628b8dc1b07" kindref="member">_Path</ref>.Data<sp/>+<sp/><ref refid="struct_im_draw_list_1a5bdc39abf351360500048628b8dc1b07" kindref="member">_Path</ref>.Size<sp/>==<sp/>out_ptr);</highlight></codeline>
<codeline lineno="1139"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"></highlight></codeline>
<codeline lineno="1141"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_im_draw_list_1a855fcd28cd12b81975e8a61ea2e80e96" kindref="member">ImDrawList::_PathArcToN</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>center,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>radius,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a_min,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a_max,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_segments)</highlight></codeline>
<codeline lineno="1142"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(radius<sp/>&lt;<sp/>0.5f)</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a5bdc39abf351360500048628b8dc1b07" kindref="member">_Path</ref>.push_back(center);</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"></highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>we<sp/>are<sp/>adding<sp/>a<sp/>point<sp/>at<sp/>both<sp/>a_min<sp/>and<sp/>a_max.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>you<sp/>are<sp/>trying<sp/>to<sp/>draw<sp/>a<sp/>full<sp/>closed<sp/>circle<sp/>you<sp/>don&apos;t<sp/>want<sp/>the<sp/>overlapping<sp/>points!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a5bdc39abf351360500048628b8dc1b07" kindref="member">_Path</ref>.reserve(<ref refid="struct_im_draw_list_1a5bdc39abf351360500048628b8dc1b07" kindref="member">_Path</ref>.Size<sp/>+<sp/>(num_segments<sp/>+<sp/>1));</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;=<sp/>num_segments;<sp/>i++)</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref><sp/>=<sp/>a_min<sp/>+<sp/>((float)i<sp/>/<sp/>(float)num_segments)<sp/>*<sp/>(a_max<sp/>-<sp/>a_min);</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a5bdc39abf351360500048628b8dc1b07" kindref="member">_Path</ref>.push_back(ImVec2(center.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref><sp/>+<sp/><ref refid="imgui__internal_8h_1a29665878048d6614ab3753e9b3b7b436" kindref="member">ImCos</ref>(<ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>)<sp/>*<sp/>radius,<sp/>center.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref><sp/>+<sp/><ref refid="imgui__internal_8h_1a6f4d18e137599dbd4b1bde0d2a4b065f" kindref="member">ImSin</ref>(<ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>)<sp/>*<sp/>radius));</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1157"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"></highlight></codeline>
<codeline lineno="1159"><highlight class="normal"></highlight><highlight class="comment">//<sp/>0:<sp/>East,<sp/>3:<sp/>South,<sp/>6:<sp/>West,<sp/>9:<sp/>North,<sp/>12:<sp/>East</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1160"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_im_draw_list_1a6d307c6de1a6522e76fa410e8fe96fcc" kindref="member">ImDrawList::PathArcToFast</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>center,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>radius,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a_min_of_12,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a_max_of_12)</highlight></codeline>
<codeline lineno="1161"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(radius<sp/>&lt;<sp/>0.5f)</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a5bdc39abf351360500048628b8dc1b07" kindref="member">_Path</ref>.push_back(center);</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1ac25f3a7693ed13ba2dac455675be8654" kindref="member">_PathArcToFastEx</ref>(center,<sp/>radius,<sp/>a_min_of_12<sp/>*<sp/><ref refid="imgui__internal_8h_1aefbde2925c5c52ea5d210149f53abb49" kindref="member">IM_DRAWLIST_ARCFAST_SAMPLE_MAX</ref><sp/>/<sp/>12,<sp/>a_max_of_12<sp/>*<sp/><ref refid="imgui__internal_8h_1aefbde2925c5c52ea5d210149f53abb49" kindref="member">IM_DRAWLIST_ARCFAST_SAMPLE_MAX</ref><sp/>/<sp/>12,<sp/>0);</highlight></codeline>
<codeline lineno="1168"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"></highlight></codeline>
<codeline lineno="1170"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_im_draw_list_1af86073403f1557cccb4ff45dfad0a74a" kindref="member">ImDrawList::PathArcTo</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>center,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>radius,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a_min,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a_max,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_segments)</highlight></codeline>
<codeline lineno="1171"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(radius<sp/>&lt;<sp/>0.5f)</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a5bdc39abf351360500048628b8dc1b07" kindref="member">_Path</ref>.push_back(center);</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"></highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num_segments<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a855fcd28cd12b81975e8a61ea2e80e96" kindref="member">_PathArcToN</ref>(center,<sp/>radius,<sp/>a_min,<sp/>a_max,<sp/>num_segments);</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"></highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Automatic<sp/>segment<sp/>count</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(radius<sp/>&lt;=<sp/>_Data-&gt;ArcFastRadiusCutoff)</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>a_is_reverse<sp/>=<sp/>a_max<sp/>&lt;<sp/>a_min;</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"></highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>are<sp/>going<sp/>to<sp/>use<sp/>precomputed<sp/>values<sp/>for<sp/>mid<sp/>samples.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Determine<sp/>first<sp/>and<sp/>last<sp/>sample<sp/>in<sp/>lookup<sp/>table<sp/>that<sp/>belong<sp/>to<sp/>the<sp/>arc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a_min_sample_f<sp/>=<sp/><ref refid="imgui__internal_8h_1aefbde2925c5c52ea5d210149f53abb49" kindref="member">IM_DRAWLIST_ARCFAST_SAMPLE_MAX</ref><sp/>*<sp/>a_min<sp/>/<sp/>(<ref refid="imgui__internal_8h_1ab8de43e3f17a4f0081fa6c2def6af1c1" kindref="member">IM_PI</ref><sp/>*<sp/>2.0f);</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a_max_sample_f<sp/>=<sp/><ref refid="imgui__internal_8h_1aefbde2925c5c52ea5d210149f53abb49" kindref="member">IM_DRAWLIST_ARCFAST_SAMPLE_MAX</ref><sp/>*<sp/>a_max<sp/>/<sp/>(<ref refid="imgui__internal_8h_1ab8de43e3f17a4f0081fa6c2def6af1c1" kindref="member">IM_PI</ref><sp/>*<sp/>2.0f);</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"></highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a_min_sample<sp/>=<sp/>a_is_reverse<sp/>?<sp/>(int)ImFloor(a_min_sample_f)<sp/>:<sp/>(int)<ref refid="imgui__internal_8h_1a09170e101a72d70544ae6edfe495ee8f" kindref="member">ImCeil</ref>(a_min_sample_f);</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a_max_sample<sp/>=<sp/>a_is_reverse<sp/>?<sp/>(int)<ref refid="imgui__internal_8h_1a09170e101a72d70544ae6edfe495ee8f" kindref="member">ImCeil</ref>(a_max_sample_f)<sp/>:<sp/>(int)ImFloor(a_max_sample_f);</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a_mid_samples<sp/>=<sp/>a_is_reverse<sp/>?<sp/>ImMax(a_min_sample<sp/>-<sp/>a_max_sample,<sp/>0)<sp/>:<sp/>ImMax(a_max_sample<sp/>-<sp/>a_min_sample,<sp/>0);</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"></highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a_min_segment_angle<sp/>=<sp/>a_min_sample<sp/>*<sp/><ref refid="imgui__internal_8h_1ab8de43e3f17a4f0081fa6c2def6af1c1" kindref="member">IM_PI</ref><sp/>*<sp/>2.0f<sp/>/<sp/><ref refid="imgui__internal_8h_1aefbde2925c5c52ea5d210149f53abb49" kindref="member">IM_DRAWLIST_ARCFAST_SAMPLE_MAX</ref>;</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a_max_segment_angle<sp/>=<sp/>a_max_sample<sp/>*<sp/><ref refid="imgui__internal_8h_1ab8de43e3f17a4f0081fa6c2def6af1c1" kindref="member">IM_PI</ref><sp/>*<sp/>2.0f<sp/>/<sp/><ref refid="imgui__internal_8h_1aefbde2925c5c52ea5d210149f53abb49" kindref="member">IM_DRAWLIST_ARCFAST_SAMPLE_MAX</ref>;</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>a_emit_start<sp/>=<sp/>ImAbs(a_min_segment_angle<sp/>-<sp/>a_min)<sp/>&gt;=<sp/>1e-5f;</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>a_emit_end<sp/>=<sp/>ImAbs(a_max<sp/>-<sp/>a_max_segment_angle)<sp/>&gt;=<sp/>1e-5f;</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"></highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a5bdc39abf351360500048628b8dc1b07" kindref="member">_Path</ref>.reserve(<ref refid="struct_im_draw_list_1a5bdc39abf351360500048628b8dc1b07" kindref="member">_Path</ref>.Size<sp/>+<sp/>(a_mid_samples<sp/>+<sp/>1<sp/>+<sp/>(a_emit_start<sp/>?<sp/>1<sp/>:<sp/>0)<sp/>+<sp/>(a_emit_end<sp/>?<sp/>1<sp/>:<sp/>0)));</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a_emit_start)</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a5bdc39abf351360500048628b8dc1b07" kindref="member">_Path</ref>.push_back(ImVec2(center.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref><sp/>+<sp/><ref refid="imgui__internal_8h_1a29665878048d6614ab3753e9b3b7b436" kindref="member">ImCos</ref>(a_min)<sp/>*<sp/>radius,<sp/>center.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref><sp/>+<sp/><ref refid="imgui__internal_8h_1a6f4d18e137599dbd4b1bde0d2a4b065f" kindref="member">ImSin</ref>(a_min)<sp/>*<sp/>radius));</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a_mid_samples<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1ac25f3a7693ed13ba2dac455675be8654" kindref="member">_PathArcToFastEx</ref>(center,<sp/>radius,<sp/>a_min_sample,<sp/>a_max_sample,<sp/>0);</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a_emit_end)</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a5bdc39abf351360500048628b8dc1b07" kindref="member">_Path</ref>.push_back(ImVec2(center.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref><sp/>+<sp/><ref refid="imgui__internal_8h_1a29665878048d6614ab3753e9b3b7b436" kindref="member">ImCos</ref>(a_max)<sp/>*<sp/>radius,<sp/>center.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref><sp/>+<sp/><ref refid="imgui__internal_8h_1a6f4d18e137599dbd4b1bde0d2a4b065f" kindref="member">ImSin</ref>(a_max)<sp/>*<sp/>radius));</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>arc_length<sp/>=<sp/>ImAbs(a_max<sp/>-<sp/>a_min);</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>circle_segment_count<sp/>=<sp/><ref refid="struct_im_draw_list_1a52afa32aaab6d581cda90dc5d8726ed6" kindref="member">_CalcCircleAutoSegmentCount</ref>(radius);</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>arc_segment_count<sp/>=<sp/>ImMax((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<ref refid="imgui__internal_8h_1a09170e101a72d70544ae6edfe495ee8f" kindref="member">ImCeil</ref>(circle_segment_count<sp/>*<sp/>arc_length<sp/>/<sp/>(<ref refid="imgui__internal_8h_1ab8de43e3f17a4f0081fa6c2def6af1c1" kindref="member">IM_PI</ref><sp/>*<sp/>2.0f)),<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(2.0f<sp/>*<sp/><ref refid="imgui__internal_8h_1ab8de43e3f17a4f0081fa6c2def6af1c1" kindref="member">IM_PI</ref><sp/>/<sp/>arc_length));</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a855fcd28cd12b81975e8a61ea2e80e96" kindref="member">_PathArcToN</ref>(center,<sp/>radius,<sp/>a_min,<sp/>a_max,<sp/>arc_segment_count);</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1218"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"></highlight></codeline>
<codeline lineno="1220"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_im_draw_list_1aa117dcc4f06b62f6988127ba27ff2e80" kindref="member">ImDrawList::PathEllipticalArcTo</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>center,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>radius_x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>radius_y,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>rot,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a_min,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a_max,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_segments)</highlight></codeline>
<codeline lineno="1221"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num_segments<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_segments<sp/>=<sp/><ref refid="struct_im_draw_list_1a52afa32aaab6d581cda90dc5d8726ed6" kindref="member">_CalcCircleAutoSegmentCount</ref>(ImMax(radius_x,<sp/>radius_y));<sp/></highlight><highlight class="comment">//<sp/>A<sp/>bit<sp/>pessimistic,<sp/>maybe<sp/>there&apos;s<sp/>a<sp/>better<sp/>computation<sp/>to<sp/>do<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1224"><highlight class="normal"></highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a5bdc39abf351360500048628b8dc1b07" kindref="member">_Path</ref>.reserve(<ref refid="struct_im_draw_list_1a5bdc39abf351360500048628b8dc1b07" kindref="member">_Path</ref>.Size<sp/>+<sp/>(num_segments<sp/>+<sp/>1));</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"></highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>cos_rot<sp/>=<sp/><ref refid="imgui__internal_8h_1a29665878048d6614ab3753e9b3b7b436" kindref="member">ImCos</ref>(rot);</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>sin_rot<sp/>=<sp/><ref refid="imgui__internal_8h_1a6f4d18e137599dbd4b1bde0d2a4b065f" kindref="member">ImSin</ref>(rot);</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;=<sp/>num_segments;<sp/>i++)</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref><sp/>=<sp/>a_min<sp/>+<sp/>((float)i<sp/>/<sp/>(float)num_segments)<sp/>*<sp/>(a_max<sp/>-<sp/>a_min);</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImVec2<sp/>point(<ref refid="imgui__internal_8h_1a29665878048d6614ab3753e9b3b7b436" kindref="member">ImCos</ref>(<ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>)<sp/>*<sp/>radius_x,<sp/><ref refid="imgui__internal_8h_1a6f4d18e137599dbd4b1bde0d2a4b065f" kindref="member">ImSin</ref>(<ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>)<sp/>*<sp/>radius_y);</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>rel_x<sp/>=<sp/>(point.x<sp/>*<sp/>cos_rot)<sp/>-<sp/>(point.y<sp/>*<sp/>sin_rot);</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>rel_y<sp/>=<sp/>(point.x<sp/>*<sp/>sin_rot)<sp/>+<sp/>(point.y<sp/>*<sp/>cos_rot);</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>point.x<sp/>=<sp/>rel_x<sp/>+<sp/>center.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>point.y<sp/>=<sp/>rel_y<sp/>+<sp/>center.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a5bdc39abf351360500048628b8dc1b07" kindref="member">_Path</ref>.push_back(point);</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1239"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"></highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/><ref refid="imgui__draw_8cpp_1a313bb9d47244a5d27a5aeb4cd74f94a3" kindref="member">ImBezierCubicCalc</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>p1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>p2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>p3,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>p4,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>t)</highlight></codeline>
<codeline lineno="1242"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>u<sp/>=<sp/>1.0f<sp/>-<sp/>t;</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>w1<sp/>=<sp/>u<sp/>*<sp/>u<sp/>*<sp/>u;</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>w2<sp/>=<sp/>3<sp/>*<sp/>u<sp/>*<sp/>u<sp/>*<sp/>t;</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>w3<sp/>=<sp/>3<sp/>*<sp/>u<sp/>*<sp/>t<sp/>*<sp/>t;</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>w4<sp/>=<sp/>t<sp/>*<sp/>t<sp/>*<sp/>t;</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(w1<sp/>*<sp/>p1.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref><sp/>+<sp/>w2<sp/>*<sp/>p2.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref><sp/>+<sp/>w3<sp/>*<sp/>p3.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref><sp/>+<sp/>w4<sp/>*<sp/>p4.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref>,<sp/>w1<sp/>*<sp/>p1.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref><sp/>+<sp/>w2<sp/>*<sp/>p2.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref><sp/>+<sp/>w3<sp/>*<sp/>p3.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref><sp/>+<sp/>w4<sp/>*<sp/>p4.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="1249"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"></highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/><ref refid="imgui__draw_8cpp_1a9b3ec0353c3a10709ad21985942613da" kindref="member">ImBezierQuadraticCalc</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>p1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>p2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>p3,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>t)</highlight></codeline>
<codeline lineno="1252"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>u<sp/>=<sp/>1.0f<sp/>-<sp/>t;</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>w1<sp/>=<sp/>u<sp/>*<sp/>u;</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>w2<sp/>=<sp/>2<sp/>*<sp/>u<sp/>*<sp/>t;</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>w3<sp/>=<sp/>t<sp/>*<sp/>t;</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(w1<sp/>*<sp/>p1.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref><sp/>+<sp/>w2<sp/>*<sp/>p2.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref><sp/>+<sp/>w3<sp/>*<sp/>p3.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref>,<sp/>w1<sp/>*<sp/>p1.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref><sp/>+<sp/>w2<sp/>*<sp/>p2.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref><sp/>+<sp/>w3<sp/>*<sp/>p3.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="1258"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"></highlight></codeline>
<codeline lineno="1260"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Closely<sp/>mimics<sp/>ImBezierCubicClosestPointCasteljau()<sp/>in<sp/>imgui.cpp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1261"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>PathBezierCubicCurveToCasteljau(<ref refid="struct_im_vector" kindref="compound">ImVector&lt;ImVec2&gt;</ref>*<sp/>path,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x1,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y1,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x2,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y2,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x3,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y3,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x4,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y4,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>tess_tol,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level)</highlight></codeline>
<codeline lineno="1262"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dx<sp/>=<sp/>x4<sp/>-<sp/>x1;</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dy<sp/>=<sp/>y4<sp/>-<sp/>y1;</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>d2<sp/>=<sp/>(x2<sp/>-<sp/>x4)<sp/>*<sp/>dy<sp/>-<sp/>(y2<sp/>-<sp/>y4)<sp/>*<sp/>dx;</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>d3<sp/>=<sp/>(x3<sp/>-<sp/>x4)<sp/>*<sp/>dy<sp/>-<sp/>(y3<sp/>-<sp/>y4)<sp/>*<sp/>dx;</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/>d2<sp/>=<sp/>(d2<sp/>&gt;=<sp/>0)<sp/>?<sp/>d2<sp/>:<sp/>-d2;</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/>d3<sp/>=<sp/>(d3<sp/>&gt;=<sp/>0)<sp/>?<sp/>d3<sp/>:<sp/>-d3;</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((d2<sp/>+<sp/>d3)<sp/>*<sp/>(d2<sp/>+<sp/>d3)<sp/>&lt;<sp/>tess_tol<sp/>*<sp/>(dx<sp/>*<sp/>dx<sp/>+<sp/>dy<sp/>*<sp/>dy))</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path-&gt;<ref refid="struct_im_vector_1aab5df48e0711a48bd12f3206e08c4108" kindref="member">push_back</ref>(<ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(x4,<sp/>y4));</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(level<sp/>&lt;<sp/>10)</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x12<sp/>=<sp/>(x1<sp/>+<sp/>x2)<sp/>*<sp/>0.5f,<sp/>y12<sp/>=<sp/>(y1<sp/>+<sp/>y2)<sp/>*<sp/>0.5f;</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x23<sp/>=<sp/>(x2<sp/>+<sp/>x3)<sp/>*<sp/>0.5f,<sp/>y23<sp/>=<sp/>(y2<sp/>+<sp/>y3)<sp/>*<sp/>0.5f;</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x34<sp/>=<sp/>(x3<sp/>+<sp/>x4)<sp/>*<sp/>0.5f,<sp/>y34<sp/>=<sp/>(y3<sp/>+<sp/>y4)<sp/>*<sp/>0.5f;</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x123<sp/>=<sp/>(x12<sp/>+<sp/>x23)<sp/>*<sp/>0.5f,<sp/>y123<sp/>=<sp/>(y12<sp/>+<sp/>y23)<sp/>*<sp/>0.5f;</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x234<sp/>=<sp/>(x23<sp/>+<sp/>x34)<sp/>*<sp/>0.5f,<sp/>y234<sp/>=<sp/>(y23<sp/>+<sp/>y34)<sp/>*<sp/>0.5f;</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x1234<sp/>=<sp/>(x123<sp/>+<sp/>x234)<sp/>*<sp/>0.5f,<sp/>y1234<sp/>=<sp/>(y123<sp/>+<sp/>y234)<sp/>*<sp/>0.5f;</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PathBezierCubicCurveToCasteljau(path,<sp/>x1,<sp/>y1,<sp/>x12,<sp/>y12,<sp/>x123,<sp/>y123,<sp/>x1234,<sp/>y1234,<sp/>tess_tol,<sp/>level<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PathBezierCubicCurveToCasteljau(path,<sp/>x1234,<sp/>y1234,<sp/>x234,<sp/>y234,<sp/>x34,<sp/>y34,<sp/>x4,<sp/>y4,<sp/>tess_tol,<sp/>level<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1284"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"></highlight></codeline>
<codeline lineno="1286"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>PathBezierQuadraticCurveToCasteljau(<ref refid="struct_im_vector" kindref="compound">ImVector&lt;ImVec2&gt;</ref>*<sp/>path,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x1,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y1,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x2,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y2,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x3,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y3,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>tess_tol,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level)</highlight></codeline>
<codeline lineno="1287"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dx<sp/>=<sp/>x3<sp/>-<sp/>x1,<sp/>dy<sp/>=<sp/>y3<sp/>-<sp/>y1;</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>det<sp/>=<sp/>(x2<sp/>-<sp/>x3)<sp/>*<sp/>dy<sp/>-<sp/>(y2<sp/>-<sp/>y3)<sp/>*<sp/>dx;</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(det<sp/>*<sp/>det<sp/>*<sp/>4.0f<sp/>&lt;<sp/>tess_tol<sp/>*<sp/>(dx<sp/>*<sp/>dx<sp/>+<sp/>dy<sp/>*<sp/>dy))</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path-&gt;<ref refid="struct_im_vector_1aab5df48e0711a48bd12f3206e08c4108" kindref="member">push_back</ref>(<ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(x3,<sp/>y3));</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(level<sp/>&lt;<sp/>10)</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x12<sp/>=<sp/>(x1<sp/>+<sp/>x2)<sp/>*<sp/>0.5f,<sp/>y12<sp/>=<sp/>(y1<sp/>+<sp/>y2)<sp/>*<sp/>0.5f;</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x23<sp/>=<sp/>(x2<sp/>+<sp/>x3)<sp/>*<sp/>0.5f,<sp/>y23<sp/>=<sp/>(y2<sp/>+<sp/>y3)<sp/>*<sp/>0.5f;</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x123<sp/>=<sp/>(x12<sp/>+<sp/>x23)<sp/>*<sp/>0.5f,<sp/>y123<sp/>=<sp/>(y12<sp/>+<sp/>y23)<sp/>*<sp/>0.5f;</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PathBezierQuadraticCurveToCasteljau(path,<sp/>x1,<sp/>y1,<sp/>x12,<sp/>y12,<sp/>x123,<sp/>y123,<sp/>tess_tol,<sp/>level<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PathBezierQuadraticCurveToCasteljau(path,<sp/>x123,<sp/>y123,<sp/>x23,<sp/>y23,<sp/>x3,<sp/>y3,<sp/>tess_tol,<sp/>level<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1302"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"></highlight></codeline>
<codeline lineno="1304"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_im_draw_list_1a48358bf6904dfd09906c6bfa3ef88777" kindref="member">ImDrawList::PathBezierCubicCurveTo</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>p2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>p3,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>p4,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_segments)</highlight></codeline>
<codeline lineno="1305"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/>ImVec2<sp/>p1<sp/>=<sp/><ref refid="struct_im_draw_list_1a5bdc39abf351360500048628b8dc1b07" kindref="member">_Path</ref>.back();</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num_segments<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imgui_8h_1acb09e7dc42e8e3cefb0ecaa197978920" kindref="member">IM_ASSERT</ref>(<ref refid="struct_im_draw_list_1ad5a67c6f1487a812410e9979d1cf4a02" kindref="member">_Data</ref>-&gt;CurveTessellationTol<sp/>&gt;<sp/>0.0f);</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PathBezierCubicCurveToCasteljau(&amp;<ref refid="struct_im_draw_list_1a5bdc39abf351360500048628b8dc1b07" kindref="member">_Path</ref>,<sp/>p1.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref>,<sp/>p1.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref>,<sp/>p2.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref>,<sp/>p2.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref>,<sp/>p3.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref>,<sp/>p3.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref>,<sp/>p4.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref>,<sp/>p4.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref>,<sp/><ref refid="struct_im_draw_list_1ad5a67c6f1487a812410e9979d1cf4a02" kindref="member">_Data</ref>-&gt;CurveTessellationTol,<sp/>0);<sp/></highlight><highlight class="comment">//<sp/>Auto-tessellated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>t_step<sp/>=<sp/>1.0f<sp/>/<sp/>(float)num_segments;</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i_step<sp/>=<sp/>1;<sp/>i_step<sp/>&lt;=<sp/>num_segments;<sp/>i_step++)</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a5bdc39abf351360500048628b8dc1b07" kindref="member">_Path</ref>.push_back(<ref refid="imgui__draw_8cpp_1a313bb9d47244a5d27a5aeb4cd74f94a3" kindref="member">ImBezierCubicCalc</ref>(p1,<sp/>p2,<sp/>p3,<sp/>p4,<sp/>t_step<sp/>*<sp/>i_step));</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1318"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"></highlight></codeline>
<codeline lineno="1320"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_im_draw_list_1af48c5212d06ca5967f70da33ffadbc86" kindref="member">ImDrawList::PathBezierQuadraticCurveTo</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>p2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>p3,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_segments)</highlight></codeline>
<codeline lineno="1321"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/><sp/><sp/>ImVec2<sp/>p1<sp/>=<sp/><ref refid="struct_im_draw_list_1a5bdc39abf351360500048628b8dc1b07" kindref="member">_Path</ref>.back();</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num_segments<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imgui_8h_1acb09e7dc42e8e3cefb0ecaa197978920" kindref="member">IM_ASSERT</ref>(<ref refid="struct_im_draw_list_1ad5a67c6f1487a812410e9979d1cf4a02" kindref="member">_Data</ref>-&gt;CurveTessellationTol<sp/>&gt;<sp/>0.0f);</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PathBezierQuadraticCurveToCasteljau(&amp;<ref refid="struct_im_draw_list_1a5bdc39abf351360500048628b8dc1b07" kindref="member">_Path</ref>,<sp/>p1.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref>,<sp/>p1.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref>,<sp/>p2.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref>,<sp/>p2.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref>,<sp/>p3.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref>,<sp/>p3.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref>,<sp/><ref refid="struct_im_draw_list_1ad5a67c6f1487a812410e9979d1cf4a02" kindref="member">_Data</ref>-&gt;CurveTessellationTol,<sp/>0);</highlight><highlight class="comment">//<sp/>Auto-tessellated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>t_step<sp/>=<sp/>1.0f<sp/>/<sp/>(float)num_segments;</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i_step<sp/>=<sp/>1;<sp/>i_step<sp/>&lt;=<sp/>num_segments;<sp/>i_step++)</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a5bdc39abf351360500048628b8dc1b07" kindref="member">_Path</ref>.push_back(<ref refid="imgui__draw_8cpp_1a9b3ec0353c3a10709ad21985942613da" kindref="member">ImBezierQuadraticCalc</ref>(p1,<sp/>p2,<sp/>p3,<sp/>t_step<sp/>*<sp/>i_step));</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1334"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"></highlight></codeline>
<codeline lineno="1336"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1af2ef7e1341558a1d39aa244c1257780a" kindref="member">ImDrawFlags</ref><sp/>FixRectCornerFlags(<ref refid="imgui_8h_1af2ef7e1341558a1d39aa244c1257780a" kindref="member">ImDrawFlags</ref><sp/>flags)</highlight></codeline>
<codeline lineno="1337"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1339"><highlight class="comment"><sp/><sp/><sp/><sp/>IM_STATIC_ASSERT(ImDrawFlags_RoundCornersTopLeft<sp/>==<sp/>(1<sp/>&lt;&lt;<sp/>4));</highlight></codeline>
<codeline lineno="1340"><highlight class="comment">#ifndef<sp/>IMGUI_DISABLE_OBSOLETE_FUNCTIONS</highlight></codeline>
<codeline lineno="1341"><highlight class="comment"><sp/><sp/><sp/><sp/>//<sp/>Obsoleted<sp/>in<sp/>1.82<sp/>(from<sp/>February<sp/>2021).<sp/>This<sp/>code<sp/>was<sp/>stripped/simplified<sp/>and<sp/>mostly<sp/>commented<sp/>in<sp/>1.90<sp/>(from<sp/>September<sp/>2023)</highlight></codeline>
<codeline lineno="1342"><highlight class="comment"><sp/><sp/><sp/><sp/>//<sp/>-<sp/>Legacy<sp/>Support<sp/>for<sp/>hard<sp/>coded<sp/>~0<sp/>(used<sp/>to<sp/>be<sp/>a<sp/>suggested<sp/>equivalent<sp/>to<sp/>ImDrawCornerFlags_All)</highlight></codeline>
<codeline lineno="1343"><highlight class="comment"><sp/><sp/><sp/><sp/>if<sp/>(flags<sp/>==<sp/>~0)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>return<sp/>ImDrawFlags_RoundCornersAll;<sp/>}</highlight></codeline>
<codeline lineno="1344"><highlight class="comment"><sp/><sp/><sp/><sp/>//<sp/>-<sp/>Legacy<sp/>Support<sp/>for<sp/>hard<sp/>coded<sp/>0x01<sp/>to<sp/>0x0F<sp/>(matching<sp/>15<sp/>out<sp/>of<sp/>16<sp/>old<sp/>flags<sp/>combinations).<sp/>Read<sp/>details<sp/>in<sp/>older<sp/>version<sp/>of<sp/>this<sp/>code.</highlight></codeline>
<codeline lineno="1345"><highlight class="comment"><sp/><sp/><sp/><sp/>if<sp/>(flags<sp/>&gt;=<sp/>0x01<sp/>&amp;&amp;<sp/>flags<sp/>&lt;=<sp/>0x0F)<sp/>{<sp/>return<sp/>(flags<sp/>&lt;&lt;<sp/>4);<sp/>}</highlight></codeline>
<codeline lineno="1346"><highlight class="comment"><sp/><sp/><sp/><sp/>//<sp/>We<sp/>cannot<sp/>support<sp/>hard<sp/>coded<sp/>0x00<sp/>with<sp/>&apos;float<sp/>rounding<sp/>&gt;<sp/>0.0f&apos;<sp/>--&gt;<sp/>replace<sp/>with<sp/>ImDrawFlags_RoundCornersNone<sp/>or<sp/>use<sp/>&apos;float<sp/>rounding<sp/>=<sp/>0.0f&apos;</highlight></codeline>
<codeline lineno="1347"><highlight class="comment">#endif</highlight></codeline>
<codeline lineno="1348"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>this<sp/>assert<sp/>triggers,<sp/>please<sp/>update<sp/>your<sp/>code<sp/>replacing<sp/>hardcoded<sp/>values<sp/>with<sp/>new<sp/>ImDrawFlags_RoundCorners*<sp/>values.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>ImDrawFlags_Closed<sp/>(==<sp/>0x01)<sp/>is<sp/>an<sp/>invalid<sp/>flag<sp/>for<sp/>AddRect(),<sp/>AddRectFilled(),<sp/>PathRect()<sp/>etc.<sp/>anyway.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>See<sp/>details<sp/>in<sp/>1.82<sp/>Changelog<sp/>as<sp/>well<sp/>as<sp/>2021/03/12<sp/>and<sp/>2023/09/08<sp/>entries<sp/>in<sp/>&quot;API<sp/>BREAKING<sp/>CHANGES&quot;<sp/>section.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui_8h_1acb09e7dc42e8e3cefb0ecaa197978920" kindref="member">IM_ASSERT</ref>((flags<sp/>&amp;<sp/>0x0F)<sp/>==<sp/>0<sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;Misuse<sp/>of<sp/>legacy<sp/>hardcoded<sp/>ImDrawCornerFlags<sp/>values!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"></highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((flags<sp/>&amp;<sp/><ref refid="imgui_8h_1af42aea565fd5eb55fdb4c85c24e3c582a637ceb6728a109dcea4995acb3e3a425" kindref="member">ImDrawFlags_RoundCornersMask_</ref>)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flags<sp/>|=<sp/><ref refid="imgui_8h_1af42aea565fd5eb55fdb4c85c24e3c582ad750e015eb8e7054f94f0224164b0b62" kindref="member">ImDrawFlags_RoundCornersAll</ref>;</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"></highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>flags;</highlight></codeline>
<codeline lineno="1358"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"></highlight></codeline>
<codeline lineno="1360"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_im_draw_list_1a2251eb264ed8b17a253c409787375053" kindref="member">ImDrawList::PathRect</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>b,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>rounding,<sp/><ref refid="imgui_8h_1af2ef7e1341558a1d39aa244c1257780a" kindref="member">ImDrawFlags</ref><sp/>flags)</highlight></codeline>
<codeline lineno="1361"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rounding<sp/>&gt;=<sp/>0.5f)</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flags<sp/>=<sp/>FixRectCornerFlags(flags);</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rounding<sp/>=<sp/>ImMin(rounding,<sp/><ref refid="imgui__internal_8h_1aa886f20aead1a15ce961ac6fa361b044" kindref="member">ImFabs</ref>(b.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref><sp/>-<sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>.x)<sp/>*<sp/>(((flags<sp/>&amp;<sp/><ref refid="imgui_8h_1af42aea565fd5eb55fdb4c85c24e3c582ac4c4e00692438148e81ccaa956e83d33" kindref="member">ImDrawFlags_RoundCornersTop</ref>)<sp/>==<sp/><ref refid="imgui_8h_1af42aea565fd5eb55fdb4c85c24e3c582ac4c4e00692438148e81ccaa956e83d33" kindref="member">ImDrawFlags_RoundCornersTop</ref>)<sp/>||<sp/>((flags<sp/>&amp;<sp/><ref refid="imgui_8h_1af42aea565fd5eb55fdb4c85c24e3c582a47e64d7746a0bf420f2492b83c12cc38" kindref="member">ImDrawFlags_RoundCornersBottom</ref>)<sp/>==<sp/><ref refid="imgui_8h_1af42aea565fd5eb55fdb4c85c24e3c582a47e64d7746a0bf420f2492b83c12cc38" kindref="member">ImDrawFlags_RoundCornersBottom</ref>)<sp/>?<sp/>0.5f<sp/>:<sp/>1.0f)<sp/>-<sp/>1.0f);</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rounding<sp/>=<sp/>ImMin(rounding,<sp/><ref refid="imgui__internal_8h_1aa886f20aead1a15ce961ac6fa361b044" kindref="member">ImFabs</ref>(b.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref><sp/>-<sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>.y)<sp/>*<sp/>(((flags<sp/>&amp;<sp/><ref refid="imgui_8h_1af42aea565fd5eb55fdb4c85c24e3c582a9c20a6a728c26897a43f6fbc877695f9" kindref="member">ImDrawFlags_RoundCornersLeft</ref>)<sp/>==<sp/><ref refid="imgui_8h_1af42aea565fd5eb55fdb4c85c24e3c582a9c20a6a728c26897a43f6fbc877695f9" kindref="member">ImDrawFlags_RoundCornersLeft</ref>)<sp/>||<sp/>((flags<sp/>&amp;<sp/><ref refid="imgui_8h_1af42aea565fd5eb55fdb4c85c24e3c582a4a92e85b3e5163439e9cd393175111de" kindref="member">ImDrawFlags_RoundCornersRight</ref>)<sp/>==<sp/><ref refid="imgui_8h_1af42aea565fd5eb55fdb4c85c24e3c582a4a92e85b3e5163439e9cd393175111de" kindref="member">ImDrawFlags_RoundCornersRight</ref>)<sp/>?<sp/>0.5f<sp/>:<sp/>1.0f)<sp/>-<sp/>1.0f);</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rounding<sp/>&lt;<sp/>0.5f<sp/>||<sp/>(flags<sp/>&amp;<sp/><ref refid="imgui_8h_1af42aea565fd5eb55fdb4c85c24e3c582a637ceb6728a109dcea4995acb3e3a425" kindref="member">ImDrawFlags_RoundCornersMask_</ref>)<sp/>==<sp/><ref refid="imgui_8h_1af42aea565fd5eb55fdb4c85c24e3c582a3110e31bfaa3ab35cae269eaf24fc546" kindref="member">ImDrawFlags_RoundCornersNone</ref>)</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a828d944325ed58d8b57abd3647bffaaf" kindref="member">PathLineTo</ref>(<ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>);</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a828d944325ed58d8b57abd3647bffaaf" kindref="member">PathLineTo</ref>(ImVec2(b.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref>,<sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>.y));</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a828d944325ed58d8b57abd3647bffaaf" kindref="member">PathLineTo</ref>(b);</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a828d944325ed58d8b57abd3647bffaaf" kindref="member">PathLineTo</ref>(ImVec2(<ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>.x,<sp/>b.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref>));</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>rounding_tl<sp/>=<sp/>(flags<sp/>&amp;<sp/><ref refid="imgui_8h_1af42aea565fd5eb55fdb4c85c24e3c582a061f928851785c7eff16663e7fcc02a6" kindref="member">ImDrawFlags_RoundCornersTopLeft</ref>)<sp/><sp/><sp/><sp/><sp/>?<sp/>rounding<sp/>:<sp/>0.0f;</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>rounding_tr<sp/>=<sp/>(flags<sp/>&amp;<sp/><ref refid="imgui_8h_1af42aea565fd5eb55fdb4c85c24e3c582a2b2f2532f7993f484005da8cbaa83290" kindref="member">ImDrawFlags_RoundCornersTopRight</ref>)<sp/><sp/><sp/><sp/>?<sp/>rounding<sp/>:<sp/>0.0f;</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>rounding_br<sp/>=<sp/>(flags<sp/>&amp;<sp/><ref refid="imgui_8h_1af42aea565fd5eb55fdb4c85c24e3c582a50c188768e2b0fceab5b7c702bac2af7" kindref="member">ImDrawFlags_RoundCornersBottomRight</ref>)<sp/>?<sp/>rounding<sp/>:<sp/>0.0f;</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>rounding_bl<sp/>=<sp/>(flags<sp/>&amp;<sp/><ref refid="imgui_8h_1af42aea565fd5eb55fdb4c85c24e3c582a1b5e764680b7f8f4ff4d6b9ff955f7f4" kindref="member">ImDrawFlags_RoundCornersBottomLeft</ref>)<sp/><sp/>?<sp/>rounding<sp/>:<sp/>0.0f;</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a6d307c6de1a6522e76fa410e8fe96fcc" kindref="member">PathArcToFast</ref>(ImVec2(<ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>.x<sp/>+<sp/>rounding_tl,<sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>.y<sp/>+<sp/>rounding_tl),<sp/>rounding_tl,<sp/>6,<sp/>9);</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a6d307c6de1a6522e76fa410e8fe96fcc" kindref="member">PathArcToFast</ref>(ImVec2(b.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref><sp/>-<sp/>rounding_tr,<sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>.y<sp/>+<sp/>rounding_tr),<sp/>rounding_tr,<sp/>9,<sp/>12);</highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a6d307c6de1a6522e76fa410e8fe96fcc" kindref="member">PathArcToFast</ref>(ImVec2(b.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref><sp/>-<sp/>rounding_br,<sp/>b.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref><sp/>-<sp/>rounding_br),<sp/>rounding_br,<sp/>0,<sp/>3);</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a6d307c6de1a6522e76fa410e8fe96fcc" kindref="member">PathArcToFast</ref>(ImVec2(<ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>.x<sp/>+<sp/>rounding_bl,<sp/>b.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref><sp/>-<sp/>rounding_bl),<sp/>rounding_bl,<sp/>3,<sp/>6);</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1386"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"></highlight></codeline>
<codeline lineno="1388"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_im_draw_list_1aa21e5a1c6e00239581f97d344fc0db61" kindref="member">ImDrawList::AddLine</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>p1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>p2,<sp/><ref refid="imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36" kindref="member">ImU32</ref><sp/>col,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>thickness)</highlight></codeline>
<codeline lineno="1389"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((col<sp/>&amp;<sp/><ref refid="imgui_8h_1a870161cddae56908e81835588fcf35cd" kindref="member">IM_COL32_A_MASK</ref>)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a828d944325ed58d8b57abd3647bffaaf" kindref="member">PathLineTo</ref>(p1<sp/>+<sp/>ImVec2(0.5f,<sp/>0.5f));</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a828d944325ed58d8b57abd3647bffaaf" kindref="member">PathLineTo</ref>(p2<sp/>+<sp/>ImVec2(0.5f,<sp/>0.5f));</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a60bf9040ef3d09b39c4ba8f5a2a68ae9" kindref="member">PathStroke</ref>(col,<sp/>0,<sp/>thickness);</highlight></codeline>
<codeline lineno="1395"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"></highlight></codeline>
<codeline lineno="1397"><highlight class="normal"></highlight><highlight class="comment">//<sp/>p_min<sp/>=<sp/>upper-left,<sp/>p_max<sp/>=<sp/>lower-right</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1398"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Note<sp/>we<sp/>don&apos;t<sp/>render<sp/>1<sp/>pixels<sp/>sized<sp/>rectangles<sp/>properly.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1399"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_im_draw_list_1ad96f10a3e954fe0c5b7c96d4e205af7b" kindref="member">ImDrawList::AddRect</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>p_min,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>p_max,<sp/><ref refid="imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36" kindref="member">ImU32</ref><sp/>col,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>rounding,<sp/><ref refid="imgui_8h_1af2ef7e1341558a1d39aa244c1257780a" kindref="member">ImDrawFlags</ref><sp/>flags,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>thickness)</highlight></codeline>
<codeline lineno="1400"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((col<sp/>&amp;<sp/><ref refid="imgui_8h_1a870161cddae56908e81835588fcf35cd" kindref="member">IM_COL32_A_MASK</ref>)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="struct_im_draw_list_1ada2c004661663ef875f4d4c7ec0b4557" kindref="member">Flags</ref><sp/>&amp;<sp/><ref refid="imgui_8h_1a2211278f8a7129d585362b8e013258b2a8bb409471d4cb95eeac3856976206a5f" kindref="member">ImDrawListFlags_AntiAliasedLines</ref>)</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a2251eb264ed8b17a253c409787375053" kindref="member">PathRect</ref>(p_min<sp/>+<sp/>ImVec2(0.50f,<sp/>0.50f),<sp/>p_max<sp/>-<sp/>ImVec2(0.50f,<sp/>0.50f),<sp/>rounding,<sp/>flags);</highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a2251eb264ed8b17a253c409787375053" kindref="member">PathRect</ref>(p_min<sp/>+<sp/>ImVec2(0.50f,<sp/>0.50f),<sp/>p_max<sp/>-<sp/>ImVec2(0.49f,<sp/>0.49f),<sp/>rounding,<sp/>flags);<sp/></highlight><highlight class="comment">//<sp/>Better<sp/>looking<sp/>lower-right<sp/>corner<sp/>and<sp/>rounded<sp/>non-AA<sp/>shapes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a60bf9040ef3d09b39c4ba8f5a2a68ae9" kindref="member">PathStroke</ref>(col,<sp/><ref refid="imgui_8h_1af42aea565fd5eb55fdb4c85c24e3c582a807e8779a6747675272b4337300d18a1" kindref="member">ImDrawFlags_Closed</ref>,<sp/>thickness);</highlight></codeline>
<codeline lineno="1408"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"></highlight></codeline>
<codeline lineno="1410"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_im_draw_list_1a6b16ab764160b0251d2e7b3bd08c1ffc" kindref="member">ImDrawList::AddRectFilled</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>p_min,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>p_max,<sp/><ref refid="imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36" kindref="member">ImU32</ref><sp/>col,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>rounding,<sp/><ref refid="imgui_8h_1af2ef7e1341558a1d39aa244c1257780a" kindref="member">ImDrawFlags</ref><sp/>flags)</highlight></codeline>
<codeline lineno="1411"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((col<sp/>&amp;<sp/><ref refid="imgui_8h_1a870161cddae56908e81835588fcf35cd" kindref="member">IM_COL32_A_MASK</ref>)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rounding<sp/>&lt;<sp/>0.5f<sp/>||<sp/>(flags<sp/>&amp;<sp/><ref refid="imgui_8h_1af42aea565fd5eb55fdb4c85c24e3c582a637ceb6728a109dcea4995acb3e3a425" kindref="member">ImDrawFlags_RoundCornersMask_</ref>)<sp/>==<sp/><ref refid="imgui_8h_1af42aea565fd5eb55fdb4c85c24e3c582a3110e31bfaa3ab35cae269eaf24fc546" kindref="member">ImDrawFlags_RoundCornersNone</ref>)</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a879aa38dbfb0344e3e023d65c002c7d7" kindref="member">PrimReserve</ref>(6,<sp/>4);</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1ae2be093563f1d20b8190b7c423113925" kindref="member">PrimRect</ref>(p_min,<sp/>p_max,<sp/>col);</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a2251eb264ed8b17a253c409787375053" kindref="member">PathRect</ref>(p_min,<sp/>p_max,<sp/>rounding,<sp/>flags);</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1aea9301cb99ebf4b27f5d3959017567c9" kindref="member">PathFillConvex</ref>(col);</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1424"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"></highlight></codeline>
<codeline lineno="1426"><highlight class="normal"></highlight><highlight class="comment">//<sp/>p_min<sp/>=<sp/>upper-left,<sp/>p_max<sp/>=<sp/>lower-right</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1427"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_im_draw_list_1a6282e85ad78b01ebb74832336e9a2a55" kindref="member">ImDrawList::AddRectFilledMultiColor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>p_min,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>p_max,<sp/><ref refid="imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36" kindref="member">ImU32</ref><sp/>col_upr_left,<sp/><ref refid="imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36" kindref="member">ImU32</ref><sp/>col_upr_right,<sp/><ref refid="imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36" kindref="member">ImU32</ref><sp/>col_bot_right,<sp/><ref refid="imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36" kindref="member">ImU32</ref><sp/>col_bot_left)</highlight></codeline>
<codeline lineno="1428"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((col_upr_left<sp/>|<sp/>col_upr_right<sp/>|<sp/>col_bot_right<sp/>|<sp/>col_bot_left)<sp/>&amp;<sp/><ref refid="imgui_8h_1a870161cddae56908e81835588fcf35cd" kindref="member">IM_COL32_A_MASK</ref>)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"></highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImVec2<sp/>uv<sp/>=<sp/><ref refid="struct_im_draw_list_1ad5a67c6f1487a812410e9979d1cf4a02" kindref="member">_Data</ref>-&gt;TexUvWhitePixel;</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a879aa38dbfb0344e3e023d65c002c7d7" kindref="member">PrimReserve</ref>(6,<sp/>4);</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a42b72f87a0084c02f11dcd1560c8bbc7" kindref="member">PrimWriteIdx</ref>((<ref refid="imgui_8h_1afdc8744a5ac1a968b1ddfa47e13b2fa1" kindref="member">ImDrawIdx</ref>)(<ref refid="struct_im_draw_list_1a2228793183665bc3d8612795555fe505" kindref="member">_VtxCurrentIdx</ref>));<sp/><ref refid="struct_im_draw_list_1a42b72f87a0084c02f11dcd1560c8bbc7" kindref="member">PrimWriteIdx</ref>((<ref refid="imgui_8h_1afdc8744a5ac1a968b1ddfa47e13b2fa1" kindref="member">ImDrawIdx</ref>)(<ref refid="struct_im_draw_list_1a2228793183665bc3d8612795555fe505" kindref="member">_VtxCurrentIdx</ref><sp/>+<sp/>1));<sp/><ref refid="struct_im_draw_list_1a42b72f87a0084c02f11dcd1560c8bbc7" kindref="member">PrimWriteIdx</ref>((<ref refid="imgui_8h_1afdc8744a5ac1a968b1ddfa47e13b2fa1" kindref="member">ImDrawIdx</ref>)(<ref refid="struct_im_draw_list_1a2228793183665bc3d8612795555fe505" kindref="member">_VtxCurrentIdx</ref><sp/>+<sp/>2));</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a42b72f87a0084c02f11dcd1560c8bbc7" kindref="member">PrimWriteIdx</ref>((<ref refid="imgui_8h_1afdc8744a5ac1a968b1ddfa47e13b2fa1" kindref="member">ImDrawIdx</ref>)(<ref refid="struct_im_draw_list_1a2228793183665bc3d8612795555fe505" kindref="member">_VtxCurrentIdx</ref>));<sp/><ref refid="struct_im_draw_list_1a42b72f87a0084c02f11dcd1560c8bbc7" kindref="member">PrimWriteIdx</ref>((<ref refid="imgui_8h_1afdc8744a5ac1a968b1ddfa47e13b2fa1" kindref="member">ImDrawIdx</ref>)(<ref refid="struct_im_draw_list_1a2228793183665bc3d8612795555fe505" kindref="member">_VtxCurrentIdx</ref><sp/>+<sp/>2));<sp/><ref refid="struct_im_draw_list_1a42b72f87a0084c02f11dcd1560c8bbc7" kindref="member">PrimWriteIdx</ref>((<ref refid="imgui_8h_1afdc8744a5ac1a968b1ddfa47e13b2fa1" kindref="member">ImDrawIdx</ref>)(<ref refid="struct_im_draw_list_1a2228793183665bc3d8612795555fe505" kindref="member">_VtxCurrentIdx</ref><sp/>+<sp/>3));</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1af86de4faf6c8e978fb712ea14c5d0c5f" kindref="member">PrimWriteVtx</ref>(p_min,<sp/>uv,<sp/>col_upr_left);</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1af86de4faf6c8e978fb712ea14c5d0c5f" kindref="member">PrimWriteVtx</ref>(ImVec2(p_max.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref>,<sp/>p_min.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref>),<sp/>uv,<sp/>col_upr_right);</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1af86de4faf6c8e978fb712ea14c5d0c5f" kindref="member">PrimWriteVtx</ref>(p_max,<sp/>uv,<sp/>col_bot_right);</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1af86de4faf6c8e978fb712ea14c5d0c5f" kindref="member">PrimWriteVtx</ref>(ImVec2(p_min.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref>,<sp/>p_max.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref>),<sp/>uv,<sp/>col_bot_left);</highlight></codeline>
<codeline lineno="1440"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"></highlight></codeline>
<codeline lineno="1442"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_im_draw_list_1a57b014138de51397db0570d88c770d9f" kindref="member">ImDrawList::AddQuad</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>p1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>p2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>p3,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>p4,<sp/><ref refid="imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36" kindref="member">ImU32</ref><sp/>col,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>thickness)</highlight></codeline>
<codeline lineno="1443"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((col<sp/>&amp;<sp/><ref refid="imgui_8h_1a870161cddae56908e81835588fcf35cd" kindref="member">IM_COL32_A_MASK</ref>)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"></highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a828d944325ed58d8b57abd3647bffaaf" kindref="member">PathLineTo</ref>(p1);</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a828d944325ed58d8b57abd3647bffaaf" kindref="member">PathLineTo</ref>(p2);</highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a828d944325ed58d8b57abd3647bffaaf" kindref="member">PathLineTo</ref>(p3);</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a828d944325ed58d8b57abd3647bffaaf" kindref="member">PathLineTo</ref>(p4);</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a60bf9040ef3d09b39c4ba8f5a2a68ae9" kindref="member">PathStroke</ref>(col,<sp/><ref refid="imgui_8h_1af42aea565fd5eb55fdb4c85c24e3c582a807e8779a6747675272b4337300d18a1" kindref="member">ImDrawFlags_Closed</ref>,<sp/>thickness);</highlight></codeline>
<codeline lineno="1452"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1453"><highlight class="normal"></highlight></codeline>
<codeline lineno="1454"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_im_draw_list_1a2b982fbad35f8736fdfc9d6e7db2ca94" kindref="member">ImDrawList::AddQuadFilled</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>p1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>p2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>p3,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>p4,<sp/><ref refid="imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36" kindref="member">ImU32</ref><sp/>col)</highlight></codeline>
<codeline lineno="1455"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((col<sp/>&amp;<sp/><ref refid="imgui_8h_1a870161cddae56908e81835588fcf35cd" kindref="member">IM_COL32_A_MASK</ref>)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1458"><highlight class="normal"></highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a828d944325ed58d8b57abd3647bffaaf" kindref="member">PathLineTo</ref>(p1);</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a828d944325ed58d8b57abd3647bffaaf" kindref="member">PathLineTo</ref>(p2);</highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a828d944325ed58d8b57abd3647bffaaf" kindref="member">PathLineTo</ref>(p3);</highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a828d944325ed58d8b57abd3647bffaaf" kindref="member">PathLineTo</ref>(p4);</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1aea9301cb99ebf4b27f5d3959017567c9" kindref="member">PathFillConvex</ref>(col);</highlight></codeline>
<codeline lineno="1464"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"></highlight></codeline>
<codeline lineno="1466"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_im_draw_list_1a04bde432891d0392e7d98d957c1fd9b3" kindref="member">ImDrawList::AddTriangle</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>p1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>p2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>p3,<sp/><ref refid="imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36" kindref="member">ImU32</ref><sp/>col,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>thickness)</highlight></codeline>
<codeline lineno="1467"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((col<sp/>&amp;<sp/><ref refid="imgui_8h_1a870161cddae56908e81835588fcf35cd" kindref="member">IM_COL32_A_MASK</ref>)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1470"><highlight class="normal"></highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a828d944325ed58d8b57abd3647bffaaf" kindref="member">PathLineTo</ref>(p1);</highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a828d944325ed58d8b57abd3647bffaaf" kindref="member">PathLineTo</ref>(p2);</highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a828d944325ed58d8b57abd3647bffaaf" kindref="member">PathLineTo</ref>(p3);</highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a60bf9040ef3d09b39c4ba8f5a2a68ae9" kindref="member">PathStroke</ref>(col,<sp/><ref refid="imgui_8h_1af42aea565fd5eb55fdb4c85c24e3c582a807e8779a6747675272b4337300d18a1" kindref="member">ImDrawFlags_Closed</ref>,<sp/>thickness);</highlight></codeline>
<codeline lineno="1475"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1476"><highlight class="normal"></highlight></codeline>
<codeline lineno="1477"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_im_draw_list_1af1dd4a3888034c5f71b66a38e44edf31" kindref="member">ImDrawList::AddTriangleFilled</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>p1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>p2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>p3,<sp/><ref refid="imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36" kindref="member">ImU32</ref><sp/>col)</highlight></codeline>
<codeline lineno="1478"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((col<sp/>&amp;<sp/><ref refid="imgui_8h_1a870161cddae56908e81835588fcf35cd" kindref="member">IM_COL32_A_MASK</ref>)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"></highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a828d944325ed58d8b57abd3647bffaaf" kindref="member">PathLineTo</ref>(p1);</highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a828d944325ed58d8b57abd3647bffaaf" kindref="member">PathLineTo</ref>(p2);</highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a828d944325ed58d8b57abd3647bffaaf" kindref="member">PathLineTo</ref>(p3);</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1aea9301cb99ebf4b27f5d3959017567c9" kindref="member">PathFillConvex</ref>(col);</highlight></codeline>
<codeline lineno="1486"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1487"><highlight class="normal"></highlight></codeline>
<codeline lineno="1488"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_im_draw_list_1a9b73eea0ebf7a9f02bc8a104deb7de9d" kindref="member">ImDrawList::AddCircle</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>center,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>radius,<sp/><ref refid="imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36" kindref="member">ImU32</ref><sp/>col,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_segments,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>thickness)</highlight></codeline>
<codeline lineno="1489"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((col<sp/>&amp;<sp/><ref refid="imgui_8h_1a870161cddae56908e81835588fcf35cd" kindref="member">IM_COL32_A_MASK</ref>)<sp/>==<sp/>0<sp/>||<sp/>radius<sp/>&lt;<sp/>0.5f)</highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1492"><highlight class="normal"></highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num_segments<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>arc<sp/>with<sp/>automatic<sp/>segment<sp/>count</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1ac25f3a7693ed13ba2dac455675be8654" kindref="member">_PathArcToFastEx</ref>(center,<sp/>radius<sp/>-<sp/>0.5f,<sp/>0,<sp/><ref refid="imgui__internal_8h_1aefbde2925c5c52ea5d210149f53abb49" kindref="member">IM_DRAWLIST_ARCFAST_SAMPLE_MAX</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a5bdc39abf351360500048628b8dc1b07" kindref="member">_Path</ref>.Size--;</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Explicit<sp/>segment<sp/>count<sp/>(still<sp/>clamp<sp/>to<sp/>avoid<sp/>drawing<sp/>insanely<sp/>tessellated<sp/>shapes)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_segments<sp/>=<sp/>ImClamp(num_segments,<sp/>3,<sp/><ref refid="imgui__internal_8h_1a4a2db720e636ba7503b2f4316b0d8fde" kindref="member">IM_DRAWLIST_CIRCLE_AUTO_SEGMENT_MAX</ref>);</highlight></codeline>
<codeline lineno="1503"><highlight class="normal"></highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Because<sp/>we<sp/>are<sp/>filling<sp/>a<sp/>closed<sp/>shape<sp/>we<sp/>remove<sp/>1<sp/>from<sp/>the<sp/>count<sp/>of<sp/>segments/points</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a_max<sp/>=<sp/>(<ref refid="imgui__internal_8h_1ab8de43e3f17a4f0081fa6c2def6af1c1" kindref="member">IM_PI</ref><sp/>*<sp/>2.0f)<sp/>*<sp/>((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)num_segments<sp/>-<sp/>1.0f)<sp/>/<sp/>(float)num_segments;</highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1af86073403f1557cccb4ff45dfad0a74a" kindref="member">PathArcTo</ref>(center,<sp/>radius<sp/>-<sp/>0.5f,<sp/>0.0f,<sp/>a_max,<sp/>num_segments<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1508"><highlight class="normal"></highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a60bf9040ef3d09b39c4ba8f5a2a68ae9" kindref="member">PathStroke</ref>(col,<sp/><ref refid="imgui_8h_1af42aea565fd5eb55fdb4c85c24e3c582a807e8779a6747675272b4337300d18a1" kindref="member">ImDrawFlags_Closed</ref>,<sp/>thickness);</highlight></codeline>
<codeline lineno="1510"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1511"><highlight class="normal"></highlight></codeline>
<codeline lineno="1512"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_im_draw_list_1aef950cf8b0293b2c5e4708af72de045b" kindref="member">ImDrawList::AddCircleFilled</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>center,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>radius,<sp/><ref refid="imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36" kindref="member">ImU32</ref><sp/>col,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_segments)</highlight></codeline>
<codeline lineno="1513"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1514"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((col<sp/>&amp;<sp/><ref refid="imgui_8h_1a870161cddae56908e81835588fcf35cd" kindref="member">IM_COL32_A_MASK</ref>)<sp/>==<sp/>0<sp/>||<sp/>radius<sp/>&lt;<sp/>0.5f)</highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1516"><highlight class="normal"></highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num_segments<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>arc<sp/>with<sp/>automatic<sp/>segment<sp/>count</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1ac25f3a7693ed13ba2dac455675be8654" kindref="member">_PathArcToFastEx</ref>(center,<sp/>radius,<sp/>0,<sp/><ref refid="imgui__internal_8h_1aefbde2925c5c52ea5d210149f53abb49" kindref="member">IM_DRAWLIST_ARCFAST_SAMPLE_MAX</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a5bdc39abf351360500048628b8dc1b07" kindref="member">_Path</ref>.Size--;</highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1524"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Explicit<sp/>segment<sp/>count<sp/>(still<sp/>clamp<sp/>to<sp/>avoid<sp/>drawing<sp/>insanely<sp/>tessellated<sp/>shapes)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_segments<sp/>=<sp/>ImClamp(num_segments,<sp/>3,<sp/><ref refid="imgui__internal_8h_1a4a2db720e636ba7503b2f4316b0d8fde" kindref="member">IM_DRAWLIST_CIRCLE_AUTO_SEGMENT_MAX</ref>);</highlight></codeline>
<codeline lineno="1527"><highlight class="normal"></highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Because<sp/>we<sp/>are<sp/>filling<sp/>a<sp/>closed<sp/>shape<sp/>we<sp/>remove<sp/>1<sp/>from<sp/>the<sp/>count<sp/>of<sp/>segments/points</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a_max<sp/>=<sp/>(<ref refid="imgui__internal_8h_1ab8de43e3f17a4f0081fa6c2def6af1c1" kindref="member">IM_PI</ref><sp/>*<sp/>2.0f)<sp/>*<sp/>((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)num_segments<sp/>-<sp/>1.0f)<sp/>/<sp/>(float)num_segments;</highlight></codeline>
<codeline lineno="1530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1af86073403f1557cccb4ff45dfad0a74a" kindref="member">PathArcTo</ref>(center,<sp/>radius,<sp/>0.0f,<sp/>a_max,<sp/>num_segments<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1532"><highlight class="normal"></highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1aea9301cb99ebf4b27f5d3959017567c9" kindref="member">PathFillConvex</ref>(col);</highlight></codeline>
<codeline lineno="1534"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1535"><highlight class="normal"></highlight></codeline>
<codeline lineno="1536"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Guaranteed<sp/>to<sp/>honor<sp/>&apos;num_segments&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1537"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_im_draw_list_1abd004dec93d106eb867c9c6554d85989" kindref="member">ImDrawList::AddNgon</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>center,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>radius,<sp/><ref refid="imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36" kindref="member">ImU32</ref><sp/>col,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_segments,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>thickness)</highlight></codeline>
<codeline lineno="1538"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1539"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((col<sp/>&amp;<sp/><ref refid="imgui_8h_1a870161cddae56908e81835588fcf35cd" kindref="member">IM_COL32_A_MASK</ref>)<sp/>==<sp/>0<sp/>||<sp/>num_segments<sp/>&lt;=<sp/>2)</highlight></codeline>
<codeline lineno="1540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1541"><highlight class="normal"></highlight></codeline>
<codeline lineno="1542"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Because<sp/>we<sp/>are<sp/>filling<sp/>a<sp/>closed<sp/>shape<sp/>we<sp/>remove<sp/>1<sp/>from<sp/>the<sp/>count<sp/>of<sp/>segments/points</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a_max<sp/>=<sp/>(<ref refid="imgui__internal_8h_1ab8de43e3f17a4f0081fa6c2def6af1c1" kindref="member">IM_PI</ref><sp/>*<sp/>2.0f)<sp/>*<sp/>((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)num_segments<sp/>-<sp/>1.0f)<sp/>/<sp/>(float)num_segments;</highlight></codeline>
<codeline lineno="1544"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1af86073403f1557cccb4ff45dfad0a74a" kindref="member">PathArcTo</ref>(center,<sp/>radius<sp/>-<sp/>0.5f,<sp/>0.0f,<sp/>a_max,<sp/>num_segments<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="1545"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a60bf9040ef3d09b39c4ba8f5a2a68ae9" kindref="member">PathStroke</ref>(col,<sp/><ref refid="imgui_8h_1af42aea565fd5eb55fdb4c85c24e3c582a807e8779a6747675272b4337300d18a1" kindref="member">ImDrawFlags_Closed</ref>,<sp/>thickness);</highlight></codeline>
<codeline lineno="1546"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1547"><highlight class="normal"></highlight></codeline>
<codeline lineno="1548"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Guaranteed<sp/>to<sp/>honor<sp/>&apos;num_segments&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1549"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_im_draw_list_1a75bf382ddc70429f82a570c2782c4491" kindref="member">ImDrawList::AddNgonFilled</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>center,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>radius,<sp/><ref refid="imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36" kindref="member">ImU32</ref><sp/>col,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_segments)</highlight></codeline>
<codeline lineno="1550"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1551"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((col<sp/>&amp;<sp/><ref refid="imgui_8h_1a870161cddae56908e81835588fcf35cd" kindref="member">IM_COL32_A_MASK</ref>)<sp/>==<sp/>0<sp/>||<sp/>num_segments<sp/>&lt;=<sp/>2)</highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1553"><highlight class="normal"></highlight></codeline>
<codeline lineno="1554"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Because<sp/>we<sp/>are<sp/>filling<sp/>a<sp/>closed<sp/>shape<sp/>we<sp/>remove<sp/>1<sp/>from<sp/>the<sp/>count<sp/>of<sp/>segments/points</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1555"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a_max<sp/>=<sp/>(<ref refid="imgui__internal_8h_1ab8de43e3f17a4f0081fa6c2def6af1c1" kindref="member">IM_PI</ref><sp/>*<sp/>2.0f)<sp/>*<sp/>((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)num_segments<sp/>-<sp/>1.0f)<sp/>/<sp/>(float)num_segments;</highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1af86073403f1557cccb4ff45dfad0a74a" kindref="member">PathArcTo</ref>(center,<sp/>radius,<sp/>0.0f,<sp/>a_max,<sp/>num_segments<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="1557"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1aea9301cb99ebf4b27f5d3959017567c9" kindref="member">PathFillConvex</ref>(col);</highlight></codeline>
<codeline lineno="1558"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1559"><highlight class="normal"></highlight></codeline>
<codeline lineno="1560"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Ellipse</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1561"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_im_draw_list_1a16d98b58032500e4e7e1a555a4b6ffce" kindref="member">ImDrawList::AddEllipse</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>center,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>radius_x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>radius_y,<sp/><ref refid="imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36" kindref="member">ImU32</ref><sp/>col,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>rot,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_segments,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>thickness)</highlight></codeline>
<codeline lineno="1562"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1563"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((col<sp/>&amp;<sp/><ref refid="imgui_8h_1a870161cddae56908e81835588fcf35cd" kindref="member">IM_COL32_A_MASK</ref>)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1565"><highlight class="normal"></highlight></codeline>
<codeline lineno="1566"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num_segments<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="1567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_segments<sp/>=<sp/><ref refid="struct_im_draw_list_1a52afa32aaab6d581cda90dc5d8726ed6" kindref="member">_CalcCircleAutoSegmentCount</ref>(ImMax(radius_x,<sp/>radius_y));<sp/></highlight><highlight class="comment">//<sp/>A<sp/>bit<sp/>pessimistic,<sp/>maybe<sp/>there&apos;s<sp/>a<sp/>better<sp/>computation<sp/>to<sp/>do<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1568"><highlight class="normal"></highlight></codeline>
<codeline lineno="1569"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Because<sp/>we<sp/>are<sp/>filling<sp/>a<sp/>closed<sp/>shape<sp/>we<sp/>remove<sp/>1<sp/>from<sp/>the<sp/>count<sp/>of<sp/>segments/points</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1570"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a_max<sp/>=<sp/><ref refid="imgui__internal_8h_1ab8de43e3f17a4f0081fa6c2def6af1c1" kindref="member">IM_PI</ref><sp/>*<sp/>2.0f<sp/>*<sp/>((float)num_segments<sp/>-<sp/>1.0f)<sp/>/<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)num_segments;</highlight></codeline>
<codeline lineno="1571"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1aa117dcc4f06b62f6988127ba27ff2e80" kindref="member">PathEllipticalArcTo</ref>(center,<sp/>radius_x,<sp/>radius_y,<sp/>rot,<sp/>0.0f,<sp/>a_max,<sp/>num_segments<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="1572"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a60bf9040ef3d09b39c4ba8f5a2a68ae9" kindref="member">PathStroke</ref>(col,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>thickness);</highlight></codeline>
<codeline lineno="1573"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1574"><highlight class="normal"></highlight></codeline>
<codeline lineno="1575"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_im_draw_list_1ac6ca6eb18ab96e580e7e500a7b8025b2" kindref="member">ImDrawList::AddEllipseFilled</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>center,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>radius_x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>radius_y,<sp/><ref refid="imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36" kindref="member">ImU32</ref><sp/>col,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>rot,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_segments)</highlight></codeline>
<codeline lineno="1576"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1577"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((col<sp/>&amp;<sp/><ref refid="imgui_8h_1a870161cddae56908e81835588fcf35cd" kindref="member">IM_COL32_A_MASK</ref>)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1579"><highlight class="normal"></highlight></codeline>
<codeline lineno="1580"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num_segments<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_segments<sp/>=<sp/><ref refid="struct_im_draw_list_1a52afa32aaab6d581cda90dc5d8726ed6" kindref="member">_CalcCircleAutoSegmentCount</ref>(ImMax(radius_x,<sp/>radius_y));<sp/></highlight><highlight class="comment">//<sp/>A<sp/>bit<sp/>pessimistic,<sp/>maybe<sp/>there&apos;s<sp/>a<sp/>better<sp/>computation<sp/>to<sp/>do<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1582"><highlight class="normal"></highlight></codeline>
<codeline lineno="1583"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Because<sp/>we<sp/>are<sp/>filling<sp/>a<sp/>closed<sp/>shape<sp/>we<sp/>remove<sp/>1<sp/>from<sp/>the<sp/>count<sp/>of<sp/>segments/points</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1584"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a_max<sp/>=<sp/><ref refid="imgui__internal_8h_1ab8de43e3f17a4f0081fa6c2def6af1c1" kindref="member">IM_PI</ref><sp/>*<sp/>2.0f<sp/>*<sp/>((float)num_segments<sp/>-<sp/>1.0f)<sp/>/<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)num_segments;</highlight></codeline>
<codeline lineno="1585"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1aa117dcc4f06b62f6988127ba27ff2e80" kindref="member">PathEllipticalArcTo</ref>(center,<sp/>radius_x,<sp/>radius_y,<sp/>rot,<sp/>0.0f,<sp/>a_max,<sp/>num_segments<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="1586"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1aea9301cb99ebf4b27f5d3959017567c9" kindref="member">PathFillConvex</ref>(col);</highlight></codeline>
<codeline lineno="1587"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1588"><highlight class="normal"></highlight></codeline>
<codeline lineno="1589"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Cubic<sp/>Bezier<sp/>takes<sp/>4<sp/>controls<sp/>points</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1590"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_im_draw_list_1a90ebb3c38b997ef3a3adb4d211a1b2a8" kindref="member">ImDrawList::AddBezierCubic</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>p1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>p2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>p3,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>p4,<sp/><ref refid="imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36" kindref="member">ImU32</ref><sp/>col,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>thickness,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_segments)</highlight></codeline>
<codeline lineno="1591"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1592"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((col<sp/>&amp;<sp/><ref refid="imgui_8h_1a870161cddae56908e81835588fcf35cd" kindref="member">IM_COL32_A_MASK</ref>)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1594"><highlight class="normal"></highlight></codeline>
<codeline lineno="1595"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a828d944325ed58d8b57abd3647bffaaf" kindref="member">PathLineTo</ref>(p1);</highlight></codeline>
<codeline lineno="1596"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a48358bf6904dfd09906c6bfa3ef88777" kindref="member">PathBezierCubicCurveTo</ref>(p2,<sp/>p3,<sp/>p4,<sp/>num_segments);</highlight></codeline>
<codeline lineno="1597"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a60bf9040ef3d09b39c4ba8f5a2a68ae9" kindref="member">PathStroke</ref>(col,<sp/>0,<sp/>thickness);</highlight></codeline>
<codeline lineno="1598"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1599"><highlight class="normal"></highlight></codeline>
<codeline lineno="1600"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Quadratic<sp/>Bezier<sp/>takes<sp/>3<sp/>controls<sp/>points</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1601"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_im_draw_list_1a2ca1f97b873778fc53fa4c1f1ca8bb1f" kindref="member">ImDrawList::AddBezierQuadratic</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>p1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>p2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>p3,<sp/><ref refid="imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36" kindref="member">ImU32</ref><sp/>col,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>thickness,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_segments)</highlight></codeline>
<codeline lineno="1602"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1603"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((col<sp/>&amp;<sp/><ref refid="imgui_8h_1a870161cddae56908e81835588fcf35cd" kindref="member">IM_COL32_A_MASK</ref>)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1605"><highlight class="normal"></highlight></codeline>
<codeline lineno="1606"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a828d944325ed58d8b57abd3647bffaaf" kindref="member">PathLineTo</ref>(p1);</highlight></codeline>
<codeline lineno="1607"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1af48c5212d06ca5967f70da33ffadbc86" kindref="member">PathBezierQuadraticCurveTo</ref>(p2,<sp/>p3,<sp/>num_segments);</highlight></codeline>
<codeline lineno="1608"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a60bf9040ef3d09b39c4ba8f5a2a68ae9" kindref="member">PathStroke</ref>(col,<sp/>0,<sp/>thickness);</highlight></codeline>
<codeline lineno="1609"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1610"><highlight class="normal"></highlight></codeline>
<codeline lineno="1611"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_im_draw_list_1ac5221bd86b3429f6d5b6e6ffe454942d" kindref="member">ImDrawList::AddText</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_font" kindref="compound">ImFont</ref>*<sp/>font,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>font_size,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>pos,<sp/><ref refid="imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36" kindref="member">ImU32</ref><sp/>col,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>text_begin,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>text_end,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>wrap_width,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>*<sp/>cpu_fine_clip_rect)</highlight></codeline>
<codeline lineno="1612"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1613"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((col<sp/>&amp;<sp/><ref refid="imgui_8h_1a870161cddae56908e81835588fcf35cd" kindref="member">IM_COL32_A_MASK</ref>)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1615"><highlight class="normal"></highlight></codeline>
<codeline lineno="1616"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(text_end<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="1617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>text_end<sp/>=<sp/>text_begin<sp/>+<sp/>strlen(text_begin);</highlight></codeline>
<codeline lineno="1618"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(text_begin<sp/>==<sp/>text_end)</highlight></codeline>
<codeline lineno="1619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1620"><highlight class="normal"></highlight></codeline>
<codeline lineno="1621"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Pull<sp/>default<sp/>font/size<sp/>from<sp/>the<sp/>shared<sp/>ImDrawListSharedData<sp/>instance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1622"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(font<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="1623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>font<sp/>=<sp/><ref refid="struct_im_draw_list_1ad5a67c6f1487a812410e9979d1cf4a02" kindref="member">_Data</ref>-&gt;Font;</highlight></codeline>
<codeline lineno="1624"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(font_size<sp/>==<sp/>0.0f)</highlight></codeline>
<codeline lineno="1625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>font_size<sp/>=<sp/><ref refid="struct_im_draw_list_1ad5a67c6f1487a812410e9979d1cf4a02" kindref="member">_Data</ref>-&gt;FontSize;</highlight></codeline>
<codeline lineno="1626"><highlight class="normal"></highlight></codeline>
<codeline lineno="1627"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui_8h_1acb09e7dc42e8e3cefb0ecaa197978920" kindref="member">IM_ASSERT</ref>(font-&gt;<ref refid="struct_im_font_1a8a5e0df6be5e3cabe91ae830524db960" kindref="member">ContainerAtlas</ref>-&gt;<ref refid="struct_im_font_atlas_1a1d7be9a6190c75706f80bda16c87f28e" kindref="member">TexID</ref><sp/>==<sp/><ref refid="struct_im_draw_list_1a87d1ec89ec6a742fd4d097d2b924e92b" kindref="member">_CmdHeader</ref>.TextureId);<sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>high-level<sp/>ImGui::PushFont()<sp/>or<sp/>low-level<sp/>ImDrawList::PushTextureId()<sp/>to<sp/>change<sp/>font.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1628"><highlight class="normal"></highlight></codeline>
<codeline lineno="1629"><highlight class="normal"><sp/><sp/><sp/><sp/>ImVec4<sp/>clip_rect<sp/>=<sp/><ref refid="struct_im_draw_list_1a87d1ec89ec6a742fd4d097d2b924e92b" kindref="member">_CmdHeader</ref>.ClipRect;</highlight></codeline>
<codeline lineno="1630"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cpu_fine_clip_rect)</highlight></codeline>
<codeline lineno="1631"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clip_rect.<ref refid="struct_im_vec4_1a2090f651f5e5b78fedae8dab87343db6" kindref="member">x</ref><sp/>=<sp/>ImMax(clip_rect.<ref refid="struct_im_vec4_1a2090f651f5e5b78fedae8dab87343db6" kindref="member">x</ref>,<sp/>cpu_fine_clip_rect-&gt;<ref refid="struct_im_vec4_1a2090f651f5e5b78fedae8dab87343db6" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="1633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clip_rect.<ref refid="struct_im_vec4_1a6b4d00ae261be4fe54353c759c561fe7" kindref="member">y</ref><sp/>=<sp/>ImMax(clip_rect.<ref refid="struct_im_vec4_1a6b4d00ae261be4fe54353c759c561fe7" kindref="member">y</ref>,<sp/>cpu_fine_clip_rect-&gt;<ref refid="struct_im_vec4_1a6b4d00ae261be4fe54353c759c561fe7" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="1634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clip_rect.<ref refid="struct_im_vec4_1aba6a75356917a28c967954bb29133a1a" kindref="member">z</ref><sp/>=<sp/>ImMin(clip_rect.<ref refid="struct_im_vec4_1aba6a75356917a28c967954bb29133a1a" kindref="member">z</ref>,<sp/>cpu_fine_clip_rect-&gt;<ref refid="struct_im_vec4_1aba6a75356917a28c967954bb29133a1a" kindref="member">z</ref>);</highlight></codeline>
<codeline lineno="1635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clip_rect.<ref refid="struct_im_vec4_1afeed5acd9f0d2043175f4da229d12a38" kindref="member">w</ref><sp/>=<sp/>ImMin(clip_rect.<ref refid="struct_im_vec4_1afeed5acd9f0d2043175f4da229d12a38" kindref="member">w</ref>,<sp/>cpu_fine_clip_rect-&gt;<ref refid="struct_im_vec4_1afeed5acd9f0d2043175f4da229d12a38" kindref="member">w</ref>);</highlight></codeline>
<codeline lineno="1636"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1637"><highlight class="normal"><sp/><sp/><sp/><sp/>font-&gt;<ref refid="struct_im_font_1a3259517a0d648a40d77beb0c2817382a" kindref="member">RenderText</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>font_size,<sp/>pos,<sp/>col,<sp/>clip_rect,<sp/>text_begin,<sp/>text_end,<sp/>wrap_width,<sp/>cpu_fine_clip_rect<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="1638"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1639"><highlight class="normal"></highlight></codeline>
<codeline lineno="1640"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_im_draw_list_1ac5221bd86b3429f6d5b6e6ffe454942d" kindref="member">ImDrawList::AddText</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>pos,<sp/><ref refid="imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36" kindref="member">ImU32</ref><sp/>col,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>text_begin,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>text_end)</highlight></codeline>
<codeline lineno="1641"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1642"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1ac5221bd86b3429f6d5b6e6ffe454942d" kindref="member">AddText</ref>(NULL,<sp/>0.0f,<sp/>pos,<sp/>col,<sp/>text_begin,<sp/>text_end);</highlight></codeline>
<codeline lineno="1643"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1644"><highlight class="normal"></highlight></codeline>
<codeline lineno="1645"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_im_draw_list_1ac1f529d53d7ba118484e47e49218c603" kindref="member">ImDrawList::AddImage</ref>(<ref refid="imgui_8h_1a364f4447ecbc4ca176145ccff9db6286" kindref="member">ImTextureID</ref><sp/>user_texture_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>p_min,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>p_max,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>uv_min,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>uv_max,<sp/><ref refid="imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36" kindref="member">ImU32</ref><sp/>col)</highlight></codeline>
<codeline lineno="1646"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1647"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((col<sp/>&amp;<sp/><ref refid="imgui_8h_1a870161cddae56908e81835588fcf35cd" kindref="member">IM_COL32_A_MASK</ref>)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1649"><highlight class="normal"></highlight></codeline>
<codeline lineno="1650"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>push_texture_id<sp/>=<sp/>user_texture_id<sp/>!=<sp/><ref refid="struct_im_draw_list_1a87d1ec89ec6a742fd4d097d2b924e92b" kindref="member">_CmdHeader</ref>.TextureId;</highlight></codeline>
<codeline lineno="1651"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(push_texture_id)</highlight></codeline>
<codeline lineno="1652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a7ac41e329a9df911b4823ef0150cee16" kindref="member">PushTextureID</ref>(user_texture_id);</highlight></codeline>
<codeline lineno="1653"><highlight class="normal"></highlight></codeline>
<codeline lineno="1654"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a879aa38dbfb0344e3e023d65c002c7d7" kindref="member">PrimReserve</ref>(6,<sp/>4);</highlight></codeline>
<codeline lineno="1655"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a77d48ed5b33ccdd908824c0a3bebfff8" kindref="member">PrimRectUV</ref>(p_min,<sp/>p_max,<sp/>uv_min,<sp/>uv_max,<sp/>col);</highlight></codeline>
<codeline lineno="1656"><highlight class="normal"></highlight></codeline>
<codeline lineno="1657"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(push_texture_id)</highlight></codeline>
<codeline lineno="1658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1ade9286c5ca58753f7bd571b30e2ff76c" kindref="member">PopTextureID</ref>();</highlight></codeline>
<codeline lineno="1659"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1660"><highlight class="normal"></highlight></codeline>
<codeline lineno="1661"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_im_draw_list_1abf9199e08d17fd33736fd67598485341" kindref="member">ImDrawList::AddImageQuad</ref>(<ref refid="imgui_8h_1a364f4447ecbc4ca176145ccff9db6286" kindref="member">ImTextureID</ref><sp/>user_texture_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>p1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>p2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>p3,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>p4,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>uv1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>uv2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>uv3,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>uv4,<sp/><ref refid="imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36" kindref="member">ImU32</ref><sp/>col)</highlight></codeline>
<codeline lineno="1662"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1663"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((col<sp/>&amp;<sp/><ref refid="imgui_8h_1a870161cddae56908e81835588fcf35cd" kindref="member">IM_COL32_A_MASK</ref>)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1665"><highlight class="normal"></highlight></codeline>
<codeline lineno="1666"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>push_texture_id<sp/>=<sp/>user_texture_id<sp/>!=<sp/><ref refid="struct_im_draw_list_1a87d1ec89ec6a742fd4d097d2b924e92b" kindref="member">_CmdHeader</ref>.TextureId;</highlight></codeline>
<codeline lineno="1667"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(push_texture_id)</highlight></codeline>
<codeline lineno="1668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a7ac41e329a9df911b4823ef0150cee16" kindref="member">PushTextureID</ref>(user_texture_id);</highlight></codeline>
<codeline lineno="1669"><highlight class="normal"></highlight></codeline>
<codeline lineno="1670"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a879aa38dbfb0344e3e023d65c002c7d7" kindref="member">PrimReserve</ref>(6,<sp/>4);</highlight></codeline>
<codeline lineno="1671"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a9df27414aaca5f34ac3664a8b82582b5" kindref="member">PrimQuadUV</ref>(p1,<sp/>p2,<sp/>p3,<sp/>p4,<sp/>uv1,<sp/>uv2,<sp/>uv3,<sp/>uv4,<sp/>col);</highlight></codeline>
<codeline lineno="1672"><highlight class="normal"></highlight></codeline>
<codeline lineno="1673"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(push_texture_id)</highlight></codeline>
<codeline lineno="1674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1ade9286c5ca58753f7bd571b30e2ff76c" kindref="member">PopTextureID</ref>();</highlight></codeline>
<codeline lineno="1675"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1676"><highlight class="normal"></highlight></codeline>
<codeline lineno="1677"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_im_draw_list_1a864ccce7a012e9c1ffb4d5693311d847" kindref="member">ImDrawList::AddImageRounded</ref>(<ref refid="imgui_8h_1a364f4447ecbc4ca176145ccff9db6286" kindref="member">ImTextureID</ref><sp/>user_texture_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>p_min,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>p_max,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>uv_min,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>uv_max,<sp/><ref refid="imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36" kindref="member">ImU32</ref><sp/>col,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>rounding,<sp/><ref refid="imgui_8h_1af2ef7e1341558a1d39aa244c1257780a" kindref="member">ImDrawFlags</ref><sp/>flags)</highlight></codeline>
<codeline lineno="1678"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1679"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((col<sp/>&amp;<sp/><ref refid="imgui_8h_1a870161cddae56908e81835588fcf35cd" kindref="member">IM_COL32_A_MASK</ref>)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1681"><highlight class="normal"></highlight></codeline>
<codeline lineno="1682"><highlight class="normal"><sp/><sp/><sp/><sp/>flags<sp/>=<sp/>FixRectCornerFlags(flags);</highlight></codeline>
<codeline lineno="1683"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rounding<sp/>&lt;<sp/>0.5f<sp/>||<sp/>(flags<sp/>&amp;<sp/><ref refid="imgui_8h_1af42aea565fd5eb55fdb4c85c24e3c582a637ceb6728a109dcea4995acb3e3a425" kindref="member">ImDrawFlags_RoundCornersMask_</ref>)<sp/>==<sp/><ref refid="imgui_8h_1af42aea565fd5eb55fdb4c85c24e3c582a3110e31bfaa3ab35cae269eaf24fc546" kindref="member">ImDrawFlags_RoundCornersNone</ref>)</highlight></codeline>
<codeline lineno="1684"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1ac1f529d53d7ba118484e47e49218c603" kindref="member">AddImage</ref>(user_texture_id,<sp/>p_min,<sp/>p_max,<sp/>uv_min,<sp/>uv_max,<sp/>col);</highlight></codeline>
<codeline lineno="1686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1687"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1688"><highlight class="normal"></highlight></codeline>
<codeline lineno="1689"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>push_texture_id<sp/>=<sp/>user_texture_id<sp/>!=<sp/><ref refid="struct_im_draw_list_1a87d1ec89ec6a742fd4d097d2b924e92b" kindref="member">_CmdHeader</ref>.TextureId;</highlight></codeline>
<codeline lineno="1690"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(push_texture_id)</highlight></codeline>
<codeline lineno="1691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a7ac41e329a9df911b4823ef0150cee16" kindref="member">PushTextureID</ref>(user_texture_id);</highlight></codeline>
<codeline lineno="1692"><highlight class="normal"></highlight></codeline>
<codeline lineno="1693"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vert_start_idx<sp/>=<sp/><ref refid="struct_im_draw_list_1aa8ff4aee39cf3c3791b7e29a7b4264be" kindref="member">VtxBuffer</ref>.Size;</highlight></codeline>
<codeline lineno="1694"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1a2251eb264ed8b17a253c409787375053" kindref="member">PathRect</ref>(p_min,<sp/>p_max,<sp/>rounding,<sp/>flags);</highlight></codeline>
<codeline lineno="1695"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1aea9301cb99ebf4b27f5d3959017567c9" kindref="member">PathFillConvex</ref>(col);</highlight></codeline>
<codeline lineno="1696"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vert_end_idx<sp/>=<sp/><ref refid="struct_im_draw_list_1aa8ff4aee39cf3c3791b7e29a7b4264be" kindref="member">VtxBuffer</ref>.Size;</highlight></codeline>
<codeline lineno="1697"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_im_gui_1a676637659ec4291b07f386454840b58a" kindref="member">ImGui::ShadeVertsLinearUV</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>vert_start_idx,<sp/>vert_end_idx,<sp/>p_min,<sp/>p_max,<sp/>uv_min,<sp/>uv_max,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1698"><highlight class="normal"></highlight></codeline>
<codeline lineno="1699"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(push_texture_id)</highlight></codeline>
<codeline lineno="1700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_1ade9286c5ca58753f7bd571b30e2ff76c" kindref="member">PopTextureID</ref>();</highlight></codeline>
<codeline lineno="1701"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1702"><highlight class="normal"></highlight></codeline>
<codeline lineno="1703"><highlight class="normal"></highlight></codeline>
<codeline lineno="1704"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1705"><highlight class="normal"></highlight><highlight class="comment">//<sp/>[SECTION]<sp/>ImDrawListSplitter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1706"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1707"><highlight class="normal"></highlight><highlight class="comment">//<sp/>FIXME:<sp/>This<sp/>may<sp/>be<sp/>a<sp/>little<sp/>confusing,<sp/>trying<sp/>to<sp/>be<sp/>a<sp/>little<sp/>too<sp/>low-level/optimal<sp/>instead<sp/>of<sp/>just<sp/>doing<sp/>vector<sp/>swap..</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1708"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1709"><highlight class="normal"></highlight></codeline>
<codeline lineno="1710"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_im_draw_list_splitter_1a95dbdaa7ea2a0328a85732ed210a549b" kindref="member">ImDrawListSplitter::ClearFreeMemory</ref>()</highlight></codeline>
<codeline lineno="1711"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1712"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="struct_im_draw_list_splitter_1ab3b0bdddacaa7b347c41735c2d9952dc" kindref="member">_Channels</ref>.Size;<sp/>i++)</highlight></codeline>
<codeline lineno="1713"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/><ref refid="struct_im_draw_list_splitter_1a99a46d62e09810f31d0a6efd4a0d2b09" kindref="member">_Current</ref>)</highlight></codeline>
<codeline lineno="1715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(&amp;<ref refid="struct_im_draw_list_splitter_1ab3b0bdddacaa7b347c41735c2d9952dc" kindref="member">_Channels</ref>[i],<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_im_draw_list_splitter_1ab3b0bdddacaa7b347c41735c2d9952dc" kindref="member">_Channels</ref>[i]));<sp/><sp/></highlight><highlight class="comment">//<sp/>Current<sp/>channel<sp/>is<sp/>a<sp/>copy<sp/>of<sp/>CmdBuffer/IdxBuffer,<sp/>don&apos;t<sp/>destruct<sp/>again</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_splitter_1ab3b0bdddacaa7b347c41735c2d9952dc" kindref="member">_Channels</ref>[i]._CmdBuffer.clear();</highlight></codeline>
<codeline lineno="1717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_splitter_1ab3b0bdddacaa7b347c41735c2d9952dc" kindref="member">_Channels</ref>[i]._IdxBuffer.clear();</highlight></codeline>
<codeline lineno="1718"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1719"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_splitter_1a99a46d62e09810f31d0a6efd4a0d2b09" kindref="member">_Current</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1720"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_splitter_1ae3a1593ee05bc52e6284943eab3c97a2" kindref="member">_Count</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1721"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_splitter_1ab3b0bdddacaa7b347c41735c2d9952dc" kindref="member">_Channels</ref>.clear();</highlight></codeline>
<codeline lineno="1722"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1723"><highlight class="normal"></highlight></codeline>
<codeline lineno="1724"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_im_draw_list_splitter_1aa491c5b1e10b2f5340e7db4949d31255" kindref="member">ImDrawListSplitter::Split</ref>(<ref refid="struct_im_draw_list" kindref="compound">ImDrawList</ref>*<sp/>draw_list,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>channels_count)</highlight></codeline>
<codeline lineno="1725"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1726"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui_8h_1a27f58d195412a83fd20f60587d77e111" kindref="member">IM_UNUSED</ref>(draw_list);</highlight></codeline>
<codeline lineno="1727"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui_8h_1acb09e7dc42e8e3cefb0ecaa197978920" kindref="member">IM_ASSERT</ref>(<ref refid="struct_im_draw_list_splitter_1a99a46d62e09810f31d0a6efd4a0d2b09" kindref="member">_Current</ref><sp/>==<sp/>0<sp/>&amp;&amp;<sp/><ref refid="struct_im_draw_list_splitter_1ae3a1593ee05bc52e6284943eab3c97a2" kindref="member">_Count</ref><sp/>&lt;=<sp/>1<sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;Nested<sp/>channel<sp/>splitting<sp/>is<sp/>not<sp/>supported.<sp/>Please<sp/>use<sp/>separate<sp/>instances<sp/>of<sp/>ImDrawListSplitter.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1728"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>old_channels_count<sp/>=<sp/><ref refid="struct_im_draw_list_splitter_1ab3b0bdddacaa7b347c41735c2d9952dc" kindref="member">_Channels</ref>.Size;</highlight></codeline>
<codeline lineno="1729"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(old_channels_count<sp/>&lt;<sp/>channels_count)</highlight></codeline>
<codeline lineno="1730"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_splitter_1ab3b0bdddacaa7b347c41735c2d9952dc" kindref="member">_Channels</ref>.reserve(channels_count);<sp/></highlight><highlight class="comment">//<sp/>Avoid<sp/>over<sp/>reserving<sp/>since<sp/>this<sp/>is<sp/>likely<sp/>to<sp/>stay<sp/>stable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_splitter_1ab3b0bdddacaa7b347c41735c2d9952dc" kindref="member">_Channels</ref>.resize(channels_count);</highlight></codeline>
<codeline lineno="1733"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1734"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_splitter_1ae3a1593ee05bc52e6284943eab3c97a2" kindref="member">_Count</ref><sp/>=<sp/>channels_count;</highlight></codeline>
<codeline lineno="1735"><highlight class="normal"></highlight></codeline>
<codeline lineno="1736"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Channels[]<sp/>(24/32<sp/>bytes<sp/>each)<sp/>hold<sp/>storage<sp/>that<sp/>we&apos;ll<sp/>swap<sp/>with<sp/>draw_list-&gt;_CmdBuffer/_IdxBuffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1737"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>content<sp/>of<sp/>Channels[0]<sp/>at<sp/>this<sp/>point<sp/>doesn&apos;t<sp/>matter.<sp/>We<sp/>clear<sp/>it<sp/>to<sp/>make<sp/>state<sp/>tidy<sp/>in<sp/>a<sp/>debugger<sp/>but<sp/>we<sp/>don&apos;t<sp/>strictly<sp/>need<sp/>to.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1738"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>When<sp/>we<sp/>switch<sp/>to<sp/>the<sp/>next<sp/>channel,<sp/>we&apos;ll<sp/>copy<sp/>draw_list-&gt;_CmdBuffer/_IdxBuffer<sp/>into<sp/>Channels[0]<sp/>and<sp/>then<sp/>Channels[1]<sp/>into<sp/>draw_list-&gt;CmdBuffer/_IdxBuffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1739"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(&amp;<ref refid="struct_im_draw_list_splitter_1ab3b0bdddacaa7b347c41735c2d9952dc" kindref="member">_Channels</ref>[0],<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(ImDrawChannel));</highlight></codeline>
<codeline lineno="1740"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>channels_count;<sp/>i++)</highlight></codeline>
<codeline lineno="1741"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&gt;=<sp/>old_channels_count)</highlight></codeline>
<codeline lineno="1743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imgui_8h_1a4057509225bb55db4effa9c799a0ec61" kindref="member">IM_PLACEMENT_NEW</ref>(&amp;<ref refid="struct_im_draw_list_splitter_1ab3b0bdddacaa7b347c41735c2d9952dc" kindref="member">_Channels</ref>[i])<sp/>ImDrawChannel();</highlight></codeline>
<codeline lineno="1745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_splitter_1ab3b0bdddacaa7b347c41735c2d9952dc" kindref="member">_Channels</ref>[i]._CmdBuffer.resize(0);</highlight></codeline>
<codeline lineno="1749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_splitter_1ab3b0bdddacaa7b347c41735c2d9952dc" kindref="member">_Channels</ref>[i]._IdxBuffer.resize(0);</highlight></codeline>
<codeline lineno="1750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1751"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1752"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1753"><highlight class="normal"></highlight></codeline>
<codeline lineno="1754"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_im_draw_list_splitter_1af3fc4bad2abca9e481d476d1877ba5be" kindref="member">ImDrawListSplitter::Merge</ref>(<ref refid="struct_im_draw_list" kindref="compound">ImDrawList</ref>*<sp/>draw_list)</highlight></codeline>
<codeline lineno="1755"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1756"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>we<sp/>never<sp/>use<sp/>or<sp/>rely<sp/>on<sp/>_Channels.Size<sp/>because<sp/>it<sp/>is<sp/>merely<sp/>a<sp/>buffer<sp/>that<sp/>we<sp/>never<sp/>shrink<sp/>back<sp/>to<sp/>0<sp/>to<sp/>keep<sp/>all<sp/>sub-buffers<sp/>ready<sp/>for<sp/>use.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1757"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="struct_im_draw_list_splitter_1ae3a1593ee05bc52e6284943eab3c97a2" kindref="member">_Count</ref><sp/>&lt;=<sp/>1)</highlight></codeline>
<codeline lineno="1758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1759"><highlight class="normal"></highlight></codeline>
<codeline lineno="1760"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_splitter_1ad3797b0755caa07f3d69a9e3566eb0e5" kindref="member">SetCurrentChannel</ref>(draw_list,<sp/>0);</highlight></codeline>
<codeline lineno="1761"><highlight class="normal"><sp/><sp/><sp/><sp/>draw_list-&gt;<ref refid="struct_im_draw_list_1a2cb0295fcd3062bfedbebbad55865455" kindref="member">_PopUnusedDrawCmd</ref>();</highlight></codeline>
<codeline lineno="1762"><highlight class="normal"></highlight></codeline>
<codeline lineno="1763"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>our<sp/>final<sp/>buffer<sp/>sizes.<sp/>Also<sp/>fix<sp/>the<sp/>incorrect<sp/>IdxOffset<sp/>values<sp/>in<sp/>each<sp/>command.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1764"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>new_cmd_buffer_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1765"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>new_idx_buffer_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1766"><highlight class="normal"><sp/><sp/><sp/><sp/>ImDrawCmd*<sp/>last_cmd<sp/>=<sp/>(<ref refid="struct_im_draw_list_splitter_1ae3a1593ee05bc52e6284943eab3c97a2" kindref="member">_Count</ref><sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>draw_list-&gt;<ref refid="struct_im_draw_list_1a67a4b5cc4c83bc3b81d96c46cbd38a07" kindref="member">CmdBuffer</ref>.<ref refid="struct_im_vector_1abbfd157947f66280d27b21d70a16df8d" kindref="member">Size</ref><sp/>&gt;<sp/>0)<sp/>?<sp/>&amp;draw_list-&gt;<ref refid="struct_im_draw_list_1a67a4b5cc4c83bc3b81d96c46cbd38a07" kindref="member">CmdBuffer</ref>.<ref refid="struct_im_vector_1a2d80e87e81b1b01143c8d8be93e6fde1" kindref="member">back</ref>()<sp/>:<sp/>NULL;</highlight></codeline>
<codeline lineno="1767"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx_offset<sp/>=<sp/>last_cmd<sp/>?<sp/>last_cmd-&gt;<ref refid="struct_im_draw_cmd_1adec5adcd0cc6cf0da193bf0437fbba47" kindref="member">IdxOffset</ref><sp/>+<sp/>last_cmd-&gt;<ref refid="struct_im_draw_cmd_1aafe2532964fb1f6905d67d84dd3e8730" kindref="member">ElemCount</ref><sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="1768"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/><ref refid="struct_im_draw_list_splitter_1ae3a1593ee05bc52e6284943eab3c97a2" kindref="member">_Count</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="1769"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImDrawChannel&amp;<sp/>ch<sp/>=<sp/><ref refid="struct_im_draw_list_splitter_1ab3b0bdddacaa7b347c41735c2d9952dc" kindref="member">_Channels</ref>[i];</highlight></codeline>
<codeline lineno="1771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ch.<ref refid="struct_im_draw_channel_1a8bb018bc09e2a1f4389c78390a437f78" kindref="member">_CmdBuffer</ref>.<ref refid="struct_im_vector_1abbfd157947f66280d27b21d70a16df8d" kindref="member">Size</ref><sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>ch.<ref refid="struct_im_draw_channel_1a8bb018bc09e2a1f4389c78390a437f78" kindref="member">_CmdBuffer</ref>.<ref refid="struct_im_vector_1a2d80e87e81b1b01143c8d8be93e6fde1" kindref="member">back</ref>().<ref refid="struct_im_draw_cmd_1aafe2532964fb1f6905d67d84dd3e8730" kindref="member">ElemCount</ref><sp/>==<sp/>0<sp/>&amp;&amp;<sp/>ch.<ref refid="struct_im_draw_channel_1a8bb018bc09e2a1f4389c78390a437f78" kindref="member">_CmdBuffer</ref>.<ref refid="struct_im_vector_1a2d80e87e81b1b01143c8d8be93e6fde1" kindref="member">back</ref>().<ref refid="struct_im_draw_cmd_1ad26dac4e939f5c4bb892cbca0f9e3af8" kindref="member">UserCallback</ref><sp/>==<sp/>NULL)<sp/></highlight><highlight class="comment">//<sp/>Equivalent<sp/>of<sp/>PopUnusedDrawCmd()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ch.<ref refid="struct_im_draw_channel_1a8bb018bc09e2a1f4389c78390a437f78" kindref="member">_CmdBuffer</ref>.<ref refid="struct_im_vector_1a3db7ce62d3c429effdb893fbf7148c1c" kindref="member">pop_back</ref>();</highlight></codeline>
<codeline lineno="1773"><highlight class="normal"></highlight></codeline>
<codeline lineno="1774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ch.<ref refid="struct_im_draw_channel_1a8bb018bc09e2a1f4389c78390a437f78" kindref="member">_CmdBuffer</ref>.<ref refid="struct_im_vector_1abbfd157947f66280d27b21d70a16df8d" kindref="member">Size</ref><sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>last_cmd<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="1775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>not<sp/>include<sp/>ImDrawCmd_AreSequentialIdxOffset()<sp/>in<sp/>the<sp/>compare<sp/>as<sp/>we<sp/>rebuild<sp/>IdxOffset<sp/>values<sp/>ourselves.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Manipulating<sp/>IdxOffset<sp/>(e.g.<sp/>by<sp/>reordering<sp/>draw<sp/>commands<sp/>like<sp/>done<sp/>by<sp/>RenderDimmedBackgroundBehindWindow())<sp/>is<sp/>not<sp/>supported<sp/>within<sp/>a<sp/>splitter.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImDrawCmd*<sp/>next_cmd<sp/>=<sp/>&amp;ch.<ref refid="struct_im_draw_channel_1a8bb018bc09e2a1f4389c78390a437f78" kindref="member">_CmdBuffer</ref>[0];</highlight></codeline>
<codeline lineno="1779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="imgui__draw_8cpp_1ac140465795cda6fa747579fc0b1b29d0" kindref="member">ImDrawCmd_HeaderCompare</ref>(last_cmd,<sp/>next_cmd)<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>last_cmd-&gt;<ref refid="struct_im_draw_cmd_1ad26dac4e939f5c4bb892cbca0f9e3af8" kindref="member">UserCallback</ref><sp/>==<sp/>NULL<sp/>&amp;&amp;<sp/>next_cmd-&gt;<ref refid="struct_im_draw_cmd_1ad26dac4e939f5c4bb892cbca0f9e3af8" kindref="member">UserCallback</ref><sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="1780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Merge<sp/>previous<sp/>channel<sp/>last<sp/>draw<sp/>command<sp/>with<sp/>current<sp/>channel<sp/>first<sp/>draw<sp/>command<sp/>if<sp/>matching.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last_cmd-&gt;<ref refid="struct_im_draw_cmd_1aafe2532964fb1f6905d67d84dd3e8730" kindref="member">ElemCount</ref><sp/>+=<sp/>next_cmd-&gt;<ref refid="struct_im_draw_cmd_1aafe2532964fb1f6905d67d84dd3e8730" kindref="member">ElemCount</ref>;</highlight></codeline>
<codeline lineno="1783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>idx_offset<sp/>+=<sp/>next_cmd-&gt;<ref refid="struct_im_draw_cmd_1aafe2532964fb1f6905d67d84dd3e8730" kindref="member">ElemCount</ref>;</highlight></codeline>
<codeline lineno="1784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ch.<ref refid="struct_im_draw_channel_1a8bb018bc09e2a1f4389c78390a437f78" kindref="member">_CmdBuffer</ref>.<ref refid="struct_im_vector_1a2f88ac70791f2da6d4168d7b29f38f1e" kindref="member">erase</ref>(ch.<ref refid="struct_im_draw_channel_1a8bb018bc09e2a1f4389c78390a437f78" kindref="member">_CmdBuffer</ref>.<ref refid="struct_im_vector_1ac0e46e8b30cb079d93c8f0aad7d7cbd0" kindref="member">Data</ref>);<sp/></highlight><highlight class="comment">//<sp/>FIXME-OPT:<sp/>Improve<sp/>for<sp/>multiple<sp/>merges.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ch.<ref refid="struct_im_draw_channel_1a8bb018bc09e2a1f4389c78390a437f78" kindref="member">_CmdBuffer</ref>.<ref refid="struct_im_vector_1abbfd157947f66280d27b21d70a16df8d" kindref="member">Size</ref><sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="1788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last_cmd<sp/>=<sp/>&amp;ch.<ref refid="struct_im_draw_channel_1a8bb018bc09e2a1f4389c78390a437f78" kindref="member">_CmdBuffer</ref>.<ref refid="struct_im_vector_1a2d80e87e81b1b01143c8d8be93e6fde1" kindref="member">back</ref>();</highlight></codeline>
<codeline lineno="1789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_cmd_buffer_count<sp/>+=<sp/>ch.<ref refid="struct_im_draw_channel_1a8bb018bc09e2a1f4389c78390a437f78" kindref="member">_CmdBuffer</ref>.<ref refid="struct_im_vector_1abbfd157947f66280d27b21d70a16df8d" kindref="member">Size</ref>;</highlight></codeline>
<codeline lineno="1790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_idx_buffer_count<sp/>+=<sp/>ch.<ref refid="struct_im_draw_channel_1abf48aaacbb4908d4b1ff8b54ee85a45f" kindref="member">_IdxBuffer</ref>.<ref refid="struct_im_vector_1abbfd157947f66280d27b21d70a16df8d" kindref="member">Size</ref>;</highlight></codeline>
<codeline lineno="1791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cmd_n<sp/>=<sp/>0;<sp/>cmd_n<sp/>&lt;<sp/>ch.<ref refid="struct_im_draw_channel_1a8bb018bc09e2a1f4389c78390a437f78" kindref="member">_CmdBuffer</ref>.<ref refid="struct_im_vector_1abbfd157947f66280d27b21d70a16df8d" kindref="member">Size</ref>;<sp/>cmd_n++)</highlight></codeline>
<codeline lineno="1792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ch.<ref refid="struct_im_draw_channel_1a8bb018bc09e2a1f4389c78390a437f78" kindref="member">_CmdBuffer</ref>.<ref refid="struct_im_vector_1ac0e46e8b30cb079d93c8f0aad7d7cbd0" kindref="member">Data</ref>[cmd_n].<ref refid="struct_im_draw_cmd_1adec5adcd0cc6cf0da193bf0437fbba47" kindref="member">IdxOffset</ref><sp/>=<sp/>idx_offset;</highlight></codeline>
<codeline lineno="1794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>idx_offset<sp/>+=<sp/>ch.<ref refid="struct_im_draw_channel_1a8bb018bc09e2a1f4389c78390a437f78" kindref="member">_CmdBuffer</ref>.<ref refid="struct_im_vector_1ac0e46e8b30cb079d93c8f0aad7d7cbd0" kindref="member">Data</ref>[cmd_n].<ref refid="struct_im_draw_cmd_1aafe2532964fb1f6905d67d84dd3e8730" kindref="member">ElemCount</ref>;</highlight></codeline>
<codeline lineno="1795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1796"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1797"><highlight class="normal"><sp/><sp/><sp/><sp/>draw_list-&gt;<ref refid="struct_im_draw_list_1a67a4b5cc4c83bc3b81d96c46cbd38a07" kindref="member">CmdBuffer</ref>.<ref refid="struct_im_vector_1ac371dd62e56ae486b1a5038cf07eee56" kindref="member">resize</ref>(draw_list-&gt;<ref refid="struct_im_draw_list_1a67a4b5cc4c83bc3b81d96c46cbd38a07" kindref="member">CmdBuffer</ref>.<ref refid="struct_im_vector_1abbfd157947f66280d27b21d70a16df8d" kindref="member">Size</ref><sp/>+<sp/>new_cmd_buffer_count);</highlight></codeline>
<codeline lineno="1798"><highlight class="normal"><sp/><sp/><sp/><sp/>draw_list-&gt;<ref refid="struct_im_draw_list_1adf292ff70a954d82daf061c609e75dfc" kindref="member">IdxBuffer</ref>.<ref refid="struct_im_vector_1ac371dd62e56ae486b1a5038cf07eee56" kindref="member">resize</ref>(draw_list-&gt;<ref refid="struct_im_draw_list_1adf292ff70a954d82daf061c609e75dfc" kindref="member">IdxBuffer</ref>.<ref refid="struct_im_vector_1abbfd157947f66280d27b21d70a16df8d" kindref="member">Size</ref><sp/>+<sp/>new_idx_buffer_count);</highlight></codeline>
<codeline lineno="1799"><highlight class="normal"></highlight></codeline>
<codeline lineno="1800"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Write<sp/>commands<sp/>and<sp/>indices<sp/>in<sp/>order<sp/>(they<sp/>are<sp/>fairly<sp/>small<sp/>structures,<sp/>we<sp/>don&apos;t<sp/>copy<sp/>vertices<sp/>only<sp/>indices)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1801"><highlight class="normal"><sp/><sp/><sp/><sp/>ImDrawCmd*<sp/>cmd_write<sp/>=<sp/>draw_list-&gt;<ref refid="struct_im_draw_list_1a67a4b5cc4c83bc3b81d96c46cbd38a07" kindref="member">CmdBuffer</ref>.<ref refid="struct_im_vector_1ac0e46e8b30cb079d93c8f0aad7d7cbd0" kindref="member">Data</ref><sp/>+<sp/>draw_list-&gt;<ref refid="struct_im_draw_list_1a67a4b5cc4c83bc3b81d96c46cbd38a07" kindref="member">CmdBuffer</ref>.<ref refid="struct_im_vector_1abbfd157947f66280d27b21d70a16df8d" kindref="member">Size</ref><sp/>-<sp/>new_cmd_buffer_count;</highlight></codeline>
<codeline lineno="1802"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui_8h_1afdc8744a5ac1a968b1ddfa47e13b2fa1" kindref="member">ImDrawIdx</ref>*<sp/>idx_write<sp/>=<sp/>draw_list-&gt;<ref refid="struct_im_draw_list_1adf292ff70a954d82daf061c609e75dfc" kindref="member">IdxBuffer</ref>.<ref refid="struct_im_vector_1ac0e46e8b30cb079d93c8f0aad7d7cbd0" kindref="member">Data</ref><sp/>+<sp/>draw_list-&gt;<ref refid="struct_im_draw_list_1adf292ff70a954d82daf061c609e75dfc" kindref="member">IdxBuffer</ref>.<ref refid="struct_im_vector_1abbfd157947f66280d27b21d70a16df8d" kindref="member">Size</ref><sp/>-<sp/>new_idx_buffer_count;</highlight></codeline>
<codeline lineno="1803"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/><ref refid="struct_im_draw_list_splitter_1ae3a1593ee05bc52e6284943eab3c97a2" kindref="member">_Count</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="1804"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImDrawChannel&amp;<sp/>ch<sp/>=<sp/><ref refid="struct_im_draw_list_splitter_1ab3b0bdddacaa7b347c41735c2d9952dc" kindref="member">_Channels</ref>[i];</highlight></codeline>
<codeline lineno="1806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sz<sp/>=<sp/>ch.<ref refid="struct_im_draw_channel_1a8bb018bc09e2a1f4389c78390a437f78" kindref="member">_CmdBuffer</ref>.<ref refid="struct_im_vector_1abbfd157947f66280d27b21d70a16df8d" kindref="member">Size</ref>)<sp/>{<sp/>memcpy(cmd_write,<sp/>ch.<ref refid="struct_im_draw_channel_1a8bb018bc09e2a1f4389c78390a437f78" kindref="member">_CmdBuffer</ref>.<ref refid="struct_im_vector_1ac0e46e8b30cb079d93c8f0aad7d7cbd0" kindref="member">Data</ref>,<sp/>sz<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(ImDrawCmd));<sp/>cmd_write<sp/>+=<sp/>sz;<sp/>}</highlight></codeline>
<codeline lineno="1807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sz<sp/>=<sp/>ch.<ref refid="struct_im_draw_channel_1abf48aaacbb4908d4b1ff8b54ee85a45f" kindref="member">_IdxBuffer</ref>.<ref refid="struct_im_vector_1abbfd157947f66280d27b21d70a16df8d" kindref="member">Size</ref>)<sp/>{<sp/>memcpy(idx_write,<sp/>ch.<ref refid="struct_im_draw_channel_1abf48aaacbb4908d4b1ff8b54ee85a45f" kindref="member">_IdxBuffer</ref>.<ref refid="struct_im_vector_1ac0e46e8b30cb079d93c8f0aad7d7cbd0" kindref="member">Data</ref>,<sp/>sz<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="imgui_8h_1afdc8744a5ac1a968b1ddfa47e13b2fa1" kindref="member">ImDrawIdx</ref>));<sp/>idx_write<sp/>+=<sp/>sz;<sp/>}</highlight></codeline>
<codeline lineno="1808"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1809"><highlight class="normal"><sp/><sp/><sp/><sp/>draw_list-&gt;<ref refid="struct_im_draw_list_1a771f4c7f71873852fe030c3e498e5843" kindref="member">_IdxWritePtr</ref><sp/>=<sp/>idx_write;</highlight></codeline>
<codeline lineno="1810"><highlight class="normal"></highlight></codeline>
<codeline lineno="1811"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Ensure<sp/>there&apos;s<sp/>always<sp/>a<sp/>non-callback<sp/>draw<sp/>command<sp/>trailing<sp/>the<sp/>command-buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1812"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(draw_list-&gt;<ref refid="struct_im_draw_list_1a67a4b5cc4c83bc3b81d96c46cbd38a07" kindref="member">CmdBuffer</ref>.<ref refid="struct_im_vector_1abbfd157947f66280d27b21d70a16df8d" kindref="member">Size</ref><sp/>==<sp/>0<sp/>||<sp/>draw_list-&gt;<ref refid="struct_im_draw_list_1a67a4b5cc4c83bc3b81d96c46cbd38a07" kindref="member">CmdBuffer</ref>.<ref refid="struct_im_vector_1a2d80e87e81b1b01143c8d8be93e6fde1" kindref="member">back</ref>().<ref refid="struct_im_draw_cmd_1ad26dac4e939f5c4bb892cbca0f9e3af8" kindref="member">UserCallback</ref><sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="1813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>draw_list-&gt;<ref refid="struct_im_draw_list_1a846714bb0321c6f1f908767abc8559e6" kindref="member">AddDrawCmd</ref>();</highlight></codeline>
<codeline lineno="1814"><highlight class="normal"></highlight></codeline>
<codeline lineno="1815"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>current<sp/>command<sp/>is<sp/>used<sp/>with<sp/>different<sp/>settings<sp/>we<sp/>need<sp/>to<sp/>add<sp/>a<sp/>new<sp/>command</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1816"><highlight class="normal"><sp/><sp/><sp/><sp/>ImDrawCmd*<sp/>curr_cmd<sp/>=<sp/>&amp;draw_list-&gt;<ref refid="struct_im_draw_list_1a67a4b5cc4c83bc3b81d96c46cbd38a07" kindref="member">CmdBuffer</ref>.<ref refid="struct_im_vector_1ac0e46e8b30cb079d93c8f0aad7d7cbd0" kindref="member">Data</ref>[draw_list-&gt;<ref refid="struct_im_draw_list_1a67a4b5cc4c83bc3b81d96c46cbd38a07" kindref="member">CmdBuffer</ref>.<ref refid="struct_im_vector_1abbfd157947f66280d27b21d70a16df8d" kindref="member">Size</ref><sp/>-<sp/>1];</highlight></codeline>
<codeline lineno="1817"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(curr_cmd-&gt;<ref refid="struct_im_draw_cmd_1aafe2532964fb1f6905d67d84dd3e8730" kindref="member">ElemCount</ref><sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imgui__draw_8cpp_1a13d0eca12c1e2df442519a1a80d8cdaa" kindref="member">ImDrawCmd_HeaderCopy</ref>(curr_cmd,<sp/>&amp;draw_list-&gt;<ref refid="struct_im_draw_list_1a87d1ec89ec6a742fd4d097d2b924e92b" kindref="member">_CmdHeader</ref>);<sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>ClipRect,<sp/>TextureId,<sp/>VtxOffset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1819"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="imgui__draw_8cpp_1ac140465795cda6fa747579fc0b1b29d0" kindref="member">ImDrawCmd_HeaderCompare</ref>(curr_cmd,<sp/>&amp;draw_list-&gt;<ref refid="struct_im_draw_list_1a87d1ec89ec6a742fd4d097d2b924e92b" kindref="member">_CmdHeader</ref>)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="1820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>draw_list-&gt;<ref refid="struct_im_draw_list_1a846714bb0321c6f1f908767abc8559e6" kindref="member">AddDrawCmd</ref>();</highlight></codeline>
<codeline lineno="1821"><highlight class="normal"></highlight></codeline>
<codeline lineno="1822"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_splitter_1ae3a1593ee05bc52e6284943eab3c97a2" kindref="member">_Count</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1823"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1824"><highlight class="normal"></highlight></codeline>
<codeline lineno="1825"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_im_draw_list_splitter_1ad3797b0755caa07f3d69a9e3566eb0e5" kindref="member">ImDrawListSplitter::SetCurrentChannel</ref>(<ref refid="struct_im_draw_list" kindref="compound">ImDrawList</ref>*<sp/>draw_list,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx)</highlight></codeline>
<codeline lineno="1826"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1827"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui_8h_1acb09e7dc42e8e3cefb0ecaa197978920" kindref="member">IM_ASSERT</ref>(idx<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>idx<sp/>&lt;<sp/><ref refid="struct_im_draw_list_splitter_1ae3a1593ee05bc52e6284943eab3c97a2" kindref="member">_Count</ref>);</highlight></codeline>
<codeline lineno="1828"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="struct_im_draw_list_splitter_1a99a46d62e09810f31d0a6efd4a0d2b09" kindref="member">_Current</ref><sp/>==<sp/>idx)</highlight></codeline>
<codeline lineno="1829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1830"><highlight class="normal"></highlight></codeline>
<codeline lineno="1831"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Overwrite<sp/>ImVector<sp/>(12/16<sp/>bytes),<sp/>four<sp/>times.<sp/>This<sp/>is<sp/>merely<sp/>a<sp/>silly<sp/>optimization<sp/>instead<sp/>of<sp/>doing<sp/>.swap()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1832"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(&amp;<ref refid="struct_im_draw_list_splitter_1ab3b0bdddacaa7b347c41735c2d9952dc" kindref="member">_Channels</ref>.Data[<ref refid="struct_im_draw_list_splitter_1a99a46d62e09810f31d0a6efd4a0d2b09" kindref="member">_Current</ref>]._CmdBuffer,<sp/>&amp;draw_list-&gt;<ref refid="struct_im_draw_list_1a67a4b5cc4c83bc3b81d96c46cbd38a07" kindref="member">CmdBuffer</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(draw_list-&gt;<ref refid="struct_im_draw_list_1a67a4b5cc4c83bc3b81d96c46cbd38a07" kindref="member">CmdBuffer</ref>));</highlight></codeline>
<codeline lineno="1833"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(&amp;<ref refid="struct_im_draw_list_splitter_1ab3b0bdddacaa7b347c41735c2d9952dc" kindref="member">_Channels</ref>.Data[<ref refid="struct_im_draw_list_splitter_1a99a46d62e09810f31d0a6efd4a0d2b09" kindref="member">_Current</ref>]._IdxBuffer,<sp/>&amp;draw_list-&gt;<ref refid="struct_im_draw_list_1adf292ff70a954d82daf061c609e75dfc" kindref="member">IdxBuffer</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(draw_list-&gt;<ref refid="struct_im_draw_list_1adf292ff70a954d82daf061c609e75dfc" kindref="member">IdxBuffer</ref>));</highlight></codeline>
<codeline lineno="1834"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_list_splitter_1a99a46d62e09810f31d0a6efd4a0d2b09" kindref="member">_Current</ref><sp/>=<sp/>idx;</highlight></codeline>
<codeline lineno="1835"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(&amp;draw_list-&gt;<ref refid="struct_im_draw_list_1a67a4b5cc4c83bc3b81d96c46cbd38a07" kindref="member">CmdBuffer</ref>,<sp/>&amp;<ref refid="struct_im_draw_list_splitter_1ab3b0bdddacaa7b347c41735c2d9952dc" kindref="member">_Channels</ref>.Data[idx]._CmdBuffer,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(draw_list-&gt;<ref refid="struct_im_draw_list_1a67a4b5cc4c83bc3b81d96c46cbd38a07" kindref="member">CmdBuffer</ref>));</highlight></codeline>
<codeline lineno="1836"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(&amp;draw_list-&gt;<ref refid="struct_im_draw_list_1adf292ff70a954d82daf061c609e75dfc" kindref="member">IdxBuffer</ref>,<sp/>&amp;<ref refid="struct_im_draw_list_splitter_1ab3b0bdddacaa7b347c41735c2d9952dc" kindref="member">_Channels</ref>.Data[idx]._IdxBuffer,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(draw_list-&gt;<ref refid="struct_im_draw_list_1adf292ff70a954d82daf061c609e75dfc" kindref="member">IdxBuffer</ref>));</highlight></codeline>
<codeline lineno="1837"><highlight class="normal"><sp/><sp/><sp/><sp/>draw_list-&gt;<ref refid="struct_im_draw_list_1a771f4c7f71873852fe030c3e498e5843" kindref="member">_IdxWritePtr</ref><sp/>=<sp/>draw_list-&gt;<ref refid="struct_im_draw_list_1adf292ff70a954d82daf061c609e75dfc" kindref="member">IdxBuffer</ref>.<ref refid="struct_im_vector_1ac0e46e8b30cb079d93c8f0aad7d7cbd0" kindref="member">Data</ref><sp/>+<sp/>draw_list-&gt;<ref refid="struct_im_draw_list_1adf292ff70a954d82daf061c609e75dfc" kindref="member">IdxBuffer</ref>.<ref refid="struct_im_vector_1abbfd157947f66280d27b21d70a16df8d" kindref="member">Size</ref>;</highlight></codeline>
<codeline lineno="1838"><highlight class="normal"></highlight></codeline>
<codeline lineno="1839"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>current<sp/>command<sp/>is<sp/>used<sp/>with<sp/>different<sp/>settings<sp/>we<sp/>need<sp/>to<sp/>add<sp/>a<sp/>new<sp/>command</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1840"><highlight class="normal"><sp/><sp/><sp/><sp/>ImDrawCmd*<sp/>curr_cmd<sp/>=<sp/>(draw_list-&gt;<ref refid="struct_im_draw_list_1a67a4b5cc4c83bc3b81d96c46cbd38a07" kindref="member">CmdBuffer</ref>.<ref refid="struct_im_vector_1abbfd157947f66280d27b21d70a16df8d" kindref="member">Size</ref><sp/>==<sp/>0)<sp/>?<sp/>NULL<sp/>:<sp/>&amp;draw_list-&gt;CmdBuffer.Data[draw_list-&gt;CmdBuffer.Size<sp/>-<sp/>1];</highlight></codeline>
<codeline lineno="1841"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(curr_cmd<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="1842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>draw_list-&gt;<ref refid="struct_im_draw_list_1a846714bb0321c6f1f908767abc8559e6" kindref="member">AddDrawCmd</ref>();</highlight></codeline>
<codeline lineno="1843"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(curr_cmd-&gt;<ref refid="struct_im_draw_cmd_1aafe2532964fb1f6905d67d84dd3e8730" kindref="member">ElemCount</ref><sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imgui__draw_8cpp_1a13d0eca12c1e2df442519a1a80d8cdaa" kindref="member">ImDrawCmd_HeaderCopy</ref>(curr_cmd,<sp/>&amp;draw_list-&gt;<ref refid="struct_im_draw_list_1a87d1ec89ec6a742fd4d097d2b924e92b" kindref="member">_CmdHeader</ref>);<sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>ClipRect,<sp/>TextureId,<sp/>VtxOffset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1845"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="imgui__draw_8cpp_1ac140465795cda6fa747579fc0b1b29d0" kindref="member">ImDrawCmd_HeaderCompare</ref>(curr_cmd,<sp/>&amp;draw_list-&gt;<ref refid="struct_im_draw_list_1a87d1ec89ec6a742fd4d097d2b924e92b" kindref="member">_CmdHeader</ref>)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="1846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>draw_list-&gt;<ref refid="struct_im_draw_list_1a846714bb0321c6f1f908767abc8559e6" kindref="member">AddDrawCmd</ref>();</highlight></codeline>
<codeline lineno="1847"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1848"><highlight class="normal"></highlight></codeline>
<codeline lineno="1849"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1850"><highlight class="normal"></highlight><highlight class="comment">//<sp/>[SECTION]<sp/>ImDrawData</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1851"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1852"><highlight class="normal"></highlight></codeline>
<codeline lineno="1853"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_im_draw_data_1ab6a90612bd22eaff0d42539875e2e5c9" kindref="member">ImDrawData::Clear</ref>()</highlight></codeline>
<codeline lineno="1854"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1855"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_data_1ad01ab9ce5e8843b7860ccbb3eb9a6554" kindref="member">Valid</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1856"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_data_1adc0bbc2881c15f78bdabe51d82582f4e" kindref="member">CmdListsCount</ref><sp/>=<sp/><ref refid="struct_im_draw_data_1a1ac8a5d441f464628295ef91a0602fc5" kindref="member">TotalIdxCount</ref><sp/>=<sp/><ref refid="struct_im_draw_data_1af0035b52cdf91932b25eaf2da853965a" kindref="member">TotalVtxCount</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1857"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_data_1ad78ff9e65c4037c492ceade5d3ddd633" kindref="member">CmdLists</ref>.resize(0);<sp/></highlight><highlight class="comment">//<sp/>The<sp/>ImDrawList<sp/>are<sp/>NOT<sp/>owned<sp/>by<sp/>ImDrawData<sp/>but<sp/>e.g.<sp/>by<sp/>ImGuiContext,<sp/>so<sp/>we<sp/>don&apos;t<sp/>clear<sp/>them.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1858"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_data_1a1e7755e98f5e24b1f4d9152766e6346e" kindref="member">DisplayPos</ref><sp/>=<sp/><ref refid="struct_im_draw_data_1a74d53447c8882a3ce6dc7aaa3e081f39" kindref="member">DisplaySize</ref><sp/>=<sp/><ref refid="struct_im_draw_data_1ad57d704d2e5aecd79454c98c8a8111ec" kindref="member">FramebufferScale</ref><sp/>=<sp/>ImVec2(0.0f,<sp/>0.0f);</highlight></codeline>
<codeline lineno="1859"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_data_1afe3a34d1f384c37e99627e6efbc91815" kindref="member">OwnerViewport</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1860"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1861"><highlight class="normal"></highlight></codeline>
<codeline lineno="1862"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Important:<sp/>&apos;out_list&apos;<sp/>is<sp/>generally<sp/>going<sp/>to<sp/>be<sp/>draw_data-&gt;CmdLists,<sp/>but<sp/>may<sp/>be<sp/>another<sp/>temporary<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1863"><highlight class="normal"></highlight><highlight class="comment">//<sp/>as<sp/>long<sp/>at<sp/>it<sp/>is<sp/>expected<sp/>that<sp/>the<sp/>result<sp/>will<sp/>be<sp/>later<sp/>merged<sp/>into<sp/>draw_data-&gt;CmdLists[].</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1864"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespace_im_gui_1a0074bb825de97c5602d9d9bb2e4d49d4" kindref="member">ImGui::AddDrawListToDrawDataEx</ref>(<ref refid="struct_im_draw_data" kindref="compound">ImDrawData</ref>*<sp/>draw_data,<sp/><ref refid="struct_im_vector" kindref="compound">ImVector&lt;ImDrawList*&gt;</ref>*<sp/>out_list,<sp/><ref refid="struct_im_draw_list" kindref="compound">ImDrawList</ref>*<sp/>draw_list)</highlight></codeline>
<codeline lineno="1865"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1866"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(draw_list-&gt;<ref refid="struct_im_draw_list_1a67a4b5cc4c83bc3b81d96c46cbd38a07" kindref="member">CmdBuffer</ref>.<ref refid="struct_im_vector_1abbfd157947f66280d27b21d70a16df8d" kindref="member">Size</ref><sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1868"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(draw_list-&gt;<ref refid="struct_im_draw_list_1a67a4b5cc4c83bc3b81d96c46cbd38a07" kindref="member">CmdBuffer</ref>.<ref refid="struct_im_vector_1abbfd157947f66280d27b21d70a16df8d" kindref="member">Size</ref><sp/>==<sp/>1<sp/>&amp;&amp;<sp/>draw_list-&gt;<ref refid="struct_im_draw_list_1a67a4b5cc4c83bc3b81d96c46cbd38a07" kindref="member">CmdBuffer</ref>[0].ElemCount<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>draw_list-&gt;<ref refid="struct_im_draw_list_1a67a4b5cc4c83bc3b81d96c46cbd38a07" kindref="member">CmdBuffer</ref>[0].UserCallback<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="1869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1870"><highlight class="normal"></highlight></codeline>
<codeline lineno="1871"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>list<sp/>sanity<sp/>check.<sp/>Detect<sp/>mismatch<sp/>between<sp/>PrimReserve()<sp/>calls<sp/>and<sp/>incrementing<sp/>_VtxCurrentIdx,<sp/>_VtxWritePtr<sp/>etc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1872"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>May<sp/>trigger<sp/>for<sp/>you<sp/>if<sp/>you<sp/>are<sp/>using<sp/>PrimXXX<sp/>functions<sp/>incorrectly.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1873"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui_8h_1acb09e7dc42e8e3cefb0ecaa197978920" kindref="member">IM_ASSERT</ref>(draw_list-&gt;<ref refid="struct_im_draw_list_1aa8ff4aee39cf3c3791b7e29a7b4264be" kindref="member">VtxBuffer</ref>.<ref refid="struct_im_vector_1abbfd157947f66280d27b21d70a16df8d" kindref="member">Size</ref><sp/>==<sp/>0<sp/>||<sp/>draw_list-&gt;<ref refid="struct_im_draw_list_1a67f870f5140bf1cab14b8515b7386073" kindref="member">_VtxWritePtr</ref><sp/>==<sp/>draw_list-&gt;<ref refid="struct_im_draw_list_1aa8ff4aee39cf3c3791b7e29a7b4264be" kindref="member">VtxBuffer</ref>.<ref refid="struct_im_vector_1ac0e46e8b30cb079d93c8f0aad7d7cbd0" kindref="member">Data</ref><sp/>+<sp/>draw_list-&gt;<ref refid="struct_im_draw_list_1aa8ff4aee39cf3c3791b7e29a7b4264be" kindref="member">VtxBuffer</ref>.<ref refid="struct_im_vector_1abbfd157947f66280d27b21d70a16df8d" kindref="member">Size</ref>);</highlight></codeline>
<codeline lineno="1874"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui_8h_1acb09e7dc42e8e3cefb0ecaa197978920" kindref="member">IM_ASSERT</ref>(draw_list-&gt;<ref refid="struct_im_draw_list_1adf292ff70a954d82daf061c609e75dfc" kindref="member">IdxBuffer</ref>.<ref refid="struct_im_vector_1abbfd157947f66280d27b21d70a16df8d" kindref="member">Size</ref><sp/>==<sp/>0<sp/>||<sp/>draw_list-&gt;<ref refid="struct_im_draw_list_1a771f4c7f71873852fe030c3e498e5843" kindref="member">_IdxWritePtr</ref><sp/>==<sp/>draw_list-&gt;<ref refid="struct_im_draw_list_1adf292ff70a954d82daf061c609e75dfc" kindref="member">IdxBuffer</ref>.<ref refid="struct_im_vector_1ac0e46e8b30cb079d93c8f0aad7d7cbd0" kindref="member">Data</ref><sp/>+<sp/>draw_list-&gt;<ref refid="struct_im_draw_list_1adf292ff70a954d82daf061c609e75dfc" kindref="member">IdxBuffer</ref>.<ref refid="struct_im_vector_1abbfd157947f66280d27b21d70a16df8d" kindref="member">Size</ref>);</highlight></codeline>
<codeline lineno="1875"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(draw_list-&gt;<ref refid="struct_im_draw_list_1ada2c004661663ef875f4d4c7ec0b4557" kindref="member">Flags</ref><sp/>&amp;<sp/><ref refid="imgui_8h_1a2211278f8a7129d585362b8e013258b2a9619691b2f426ddce2277019b6707820" kindref="member">ImDrawListFlags_AllowVtxOffset</ref>))</highlight></codeline>
<codeline lineno="1876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imgui_8h_1acb09e7dc42e8e3cefb0ecaa197978920" kindref="member">IM_ASSERT</ref>((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)draw_list-&gt;<ref refid="struct_im_draw_list_1a2228793183665bc3d8612795555fe505" kindref="member">_VtxCurrentIdx</ref><sp/>==<sp/>draw_list-&gt;<ref refid="struct_im_draw_list_1aa8ff4aee39cf3c3791b7e29a7b4264be" kindref="member">VtxBuffer</ref>.<ref refid="struct_im_vector_1abbfd157947f66280d27b21d70a16df8d" kindref="member">Size</ref>);</highlight></codeline>
<codeline lineno="1877"><highlight class="normal"></highlight></codeline>
<codeline lineno="1878"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>that<sp/>draw_list<sp/>doesn&apos;t<sp/>use<sp/>more<sp/>vertices<sp/>than<sp/>indexable<sp/>(default<sp/>ImDrawIdx<sp/>=<sp/>unsigned<sp/>short<sp/>=<sp/>2<sp/>bytes<sp/>=<sp/>64K<sp/>vertices<sp/>per<sp/>ImDrawList<sp/>=<sp/>per<sp/>window)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1879"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>this<sp/>assert<sp/>triggers<sp/>because<sp/>you<sp/>are<sp/>drawing<sp/>lots<sp/>of<sp/>stuff<sp/>manually:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1880"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>First,<sp/>make<sp/>sure<sp/>you<sp/>are<sp/>coarse<sp/>clipping<sp/>yourself<sp/>and<sp/>not<sp/>trying<sp/>to<sp/>draw<sp/>many<sp/>things<sp/>outside<sp/>visible<sp/>bounds.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1881"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>Be<sp/>mindful<sp/>that<sp/>the<sp/>lower-level<sp/>ImDrawList<sp/>API<sp/>doesn&apos;t<sp/>filter<sp/>vertices.<sp/>Use<sp/>the<sp/>Metrics/Debugger<sp/>window<sp/>to<sp/>inspect<sp/>draw<sp/>list<sp/>contents.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1882"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>If<sp/>you<sp/>want<sp/>large<sp/>meshes<sp/>with<sp/>more<sp/>than<sp/>64K<sp/>vertices,<sp/>you<sp/>can<sp/>either:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1883"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>(A)<sp/>Handle<sp/>the<sp/>ImDrawCmd::VtxOffset<sp/>value<sp/>in<sp/>your<sp/>renderer<sp/>backend,<sp/>and<sp/>set<sp/>&apos;io.BackendFlags<sp/>|=<sp/>ImGuiBackendFlags_RendererHasVtxOffset&apos;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1884"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Most<sp/>example<sp/>backends<sp/>already<sp/>support<sp/>this<sp/>from<sp/>1.71.<sp/>Pre-1.71<sp/>backends<sp/>won&apos;t.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1885"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Some<sp/>graphics<sp/>API<sp/>such<sp/>as<sp/>GL<sp/>ES<sp/>1/2<sp/>don&apos;t<sp/>have<sp/>a<sp/>way<sp/>to<sp/>offset<sp/>the<sp/>starting<sp/>vertex<sp/>so<sp/>it<sp/>is<sp/>not<sp/>supported<sp/>for<sp/>them.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1886"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>(B)<sp/>Or<sp/>handle<sp/>32-bit<sp/>indices<sp/>in<sp/>your<sp/>renderer<sp/>backend,<sp/>and<sp/>uncomment<sp/>&apos;#define<sp/>ImDrawIdx<sp/>unsigned<sp/>int&apos;<sp/>line<sp/>in<sp/>imconfig.h.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1887"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Most<sp/>example<sp/>backends<sp/>already<sp/>support<sp/>this.<sp/>For<sp/>example,<sp/>the<sp/>OpenGL<sp/>example<sp/>code<sp/>detect<sp/>index<sp/>size<sp/>at<sp/>compile-time:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1888"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glDrawElements(GL_TRIANGLES,<sp/>(GLsizei)pcmd-&gt;ElemCount,<sp/>sizeof(ImDrawIdx)<sp/>==<sp/>2<sp/>?<sp/>GL_UNSIGNED_SHORT<sp/>:<sp/>GL_UNSIGNED_INT,<sp/>idx_buffer_offset);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1889"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Your<sp/>own<sp/>engine<sp/>or<sp/>render<sp/>API<sp/>may<sp/>use<sp/>different<sp/>parameters<sp/>or<sp/>function<sp/>calls<sp/>to<sp/>specify<sp/>index<sp/>sizes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1890"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>2<sp/>and<sp/>4<sp/>bytes<sp/>indices<sp/>are<sp/>generally<sp/>supported<sp/>by<sp/>most<sp/>graphics<sp/>API.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1891"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>If<sp/>for<sp/>some<sp/>reason<sp/>neither<sp/>of<sp/>those<sp/>solutions<sp/>works<sp/>for<sp/>you,<sp/>a<sp/>workaround<sp/>is<sp/>to<sp/>call<sp/>BeginChild()/EndChild()<sp/>before<sp/>reaching</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1892"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>the<sp/>64K<sp/>limit<sp/>to<sp/>split<sp/>your<sp/>draw<sp/>commands<sp/>in<sp/>multiple<sp/>draw<sp/>lists.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1893"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="imgui_8h_1afdc8744a5ac1a968b1ddfa47e13b2fa1" kindref="member">ImDrawIdx</ref>)<sp/>==<sp/>2)</highlight></codeline>
<codeline lineno="1894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imgui_8h_1acb09e7dc42e8e3cefb0ecaa197978920" kindref="member">IM_ASSERT</ref>(draw_list-&gt;<ref refid="struct_im_draw_list_1a2228793183665bc3d8612795555fe505" kindref="member">_VtxCurrentIdx</ref><sp/>&lt;<sp/>(1<sp/>&lt;&lt;<sp/>16)<sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;Too<sp/>many<sp/>vertices<sp/>in<sp/>ImDrawList<sp/>using<sp/>16-bit<sp/>indices.<sp/>Read<sp/>comment<sp/>above&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1895"><highlight class="normal"></highlight></codeline>
<codeline lineno="1896"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>to<sp/>output<sp/>list<sp/>+<sp/>records<sp/>state<sp/>in<sp/>ImDrawData</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1897"><highlight class="normal"><sp/><sp/><sp/><sp/>out_list-&gt;<ref refid="struct_im_vector_1aab5df48e0711a48bd12f3206e08c4108" kindref="member">push_back</ref>(draw_list);</highlight></codeline>
<codeline lineno="1898"><highlight class="normal"><sp/><sp/><sp/><sp/>draw_data-&gt;<ref refid="struct_im_draw_data_1adc0bbc2881c15f78bdabe51d82582f4e" kindref="member">CmdListsCount</ref>++;</highlight></codeline>
<codeline lineno="1899"><highlight class="normal"><sp/><sp/><sp/><sp/>draw_data-&gt;<ref refid="struct_im_draw_data_1af0035b52cdf91932b25eaf2da853965a" kindref="member">TotalVtxCount</ref><sp/>+=<sp/>draw_list-&gt;<ref refid="struct_im_draw_list_1aa8ff4aee39cf3c3791b7e29a7b4264be" kindref="member">VtxBuffer</ref>.<ref refid="struct_im_vector_1abbfd157947f66280d27b21d70a16df8d" kindref="member">Size</ref>;</highlight></codeline>
<codeline lineno="1900"><highlight class="normal"><sp/><sp/><sp/><sp/>draw_data-&gt;<ref refid="struct_im_draw_data_1a1ac8a5d441f464628295ef91a0602fc5" kindref="member">TotalIdxCount</ref><sp/>+=<sp/>draw_list-&gt;<ref refid="struct_im_draw_list_1adf292ff70a954d82daf061c609e75dfc" kindref="member">IdxBuffer</ref>.<ref refid="struct_im_vector_1abbfd157947f66280d27b21d70a16df8d" kindref="member">Size</ref>;</highlight></codeline>
<codeline lineno="1901"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1902"><highlight class="normal"></highlight></codeline>
<codeline lineno="1903"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_im_draw_data_1aa48f45dd7e1567f68cdf4b910e769302" kindref="member">ImDrawData::AddDrawList</ref>(<ref refid="struct_im_draw_list" kindref="compound">ImDrawList</ref>*<sp/>draw_list)</highlight></codeline>
<codeline lineno="1904"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1905"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui_8h_1acb09e7dc42e8e3cefb0ecaa197978920" kindref="member">IM_ASSERT</ref>(<ref refid="struct_im_draw_data_1ad78ff9e65c4037c492ceade5d3ddd633" kindref="member">CmdLists</ref>.Size<sp/>==<sp/><ref refid="struct_im_draw_data_1adc0bbc2881c15f78bdabe51d82582f4e" kindref="member">CmdListsCount</ref>);</highlight></codeline>
<codeline lineno="1906"><highlight class="normal"><sp/><sp/><sp/><sp/>draw_list-&gt;<ref refid="struct_im_draw_list_1a2cb0295fcd3062bfedbebbad55865455" kindref="member">_PopUnusedDrawCmd</ref>();</highlight></codeline>
<codeline lineno="1907"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_im_gui_1a0074bb825de97c5602d9d9bb2e4d49d4" kindref="member">ImGui::AddDrawListToDrawDataEx</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;<ref refid="struct_im_draw_data_1ad78ff9e65c4037c492ceade5d3ddd633" kindref="member">CmdLists</ref>,<sp/>draw_list);</highlight></codeline>
<codeline lineno="1908"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1909"><highlight class="normal"></highlight></codeline>
<codeline lineno="1910"><highlight class="normal"></highlight><highlight class="comment">//<sp/>For<sp/>backward<sp/>compatibility:<sp/>convert<sp/>all<sp/>buffers<sp/>from<sp/>indexed<sp/>to<sp/>de-indexed,<sp/>in<sp/>case<sp/>you<sp/>cannot<sp/>render<sp/>indexed.<sp/>Note:<sp/>this<sp/>is<sp/>slow<sp/>and<sp/>most<sp/>likely<sp/>a<sp/>waste<sp/>of<sp/>resources.<sp/>Always<sp/>prefer<sp/>indexed<sp/>rendering!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1911"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_im_draw_data_1a88ae746e958b79ee527fe94dee29d57c" kindref="member">ImDrawData::DeIndexAllBuffers</ref>()</highlight></codeline>
<codeline lineno="1912"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1913"><highlight class="normal"><sp/><sp/><sp/><sp/>ImVector&lt;ImDrawVert&gt;<sp/>new_vtx_buffer;</highlight></codeline>
<codeline lineno="1914"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_data_1af0035b52cdf91932b25eaf2da853965a" kindref="member">TotalVtxCount</ref><sp/>=<sp/><ref refid="struct_im_draw_data_1a1ac8a5d441f464628295ef91a0602fc5" kindref="member">TotalIdxCount</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1915"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="struct_im_draw_data_1adc0bbc2881c15f78bdabe51d82582f4e" kindref="member">CmdListsCount</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="1916"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImDrawList*<sp/>cmd_list<sp/>=<sp/><ref refid="struct_im_draw_data_1ad78ff9e65c4037c492ceade5d3ddd633" kindref="member">CmdLists</ref>[i];</highlight></codeline>
<codeline lineno="1918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cmd_list-&gt;<ref refid="struct_im_draw_list_1adf292ff70a954d82daf061c609e75dfc" kindref="member">IdxBuffer</ref>.<ref refid="struct_im_vector_1aa53e48a5272f4bad1099368769514ff1" kindref="member">empty</ref>())</highlight></codeline>
<codeline lineno="1919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_vtx_buffer.<ref refid="struct_im_vector_1ac371dd62e56ae486b1a5038cf07eee56" kindref="member">resize</ref>(cmd_list-&gt;<ref refid="struct_im_draw_list_1adf292ff70a954d82daf061c609e75dfc" kindref="member">IdxBuffer</ref>.<ref refid="struct_im_vector_1abbfd157947f66280d27b21d70a16df8d" kindref="member">Size</ref>);</highlight></codeline>
<codeline lineno="1921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>cmd_list-&gt;<ref refid="struct_im_draw_list_1adf292ff70a954d82daf061c609e75dfc" kindref="member">IdxBuffer</ref>.<ref refid="struct_im_vector_1abbfd157947f66280d27b21d70a16df8d" kindref="member">Size</ref>;<sp/>j++)</highlight></codeline>
<codeline lineno="1922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_vtx_buffer[j]<sp/>=<sp/>cmd_list-&gt;<ref refid="struct_im_draw_list_1aa8ff4aee39cf3c3791b7e29a7b4264be" kindref="member">VtxBuffer</ref>[cmd_list-&gt;<ref refid="struct_im_draw_list_1adf292ff70a954d82daf061c609e75dfc" kindref="member">IdxBuffer</ref>[j]];</highlight></codeline>
<codeline lineno="1923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmd_list-&gt;<ref refid="struct_im_draw_list_1aa8ff4aee39cf3c3791b7e29a7b4264be" kindref="member">VtxBuffer</ref>.<ref refid="struct_im_vector_1afcec0d2a1e28aebe412b6efd06f0a77a" kindref="member">swap</ref>(new_vtx_buffer);</highlight></codeline>
<codeline lineno="1924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmd_list-&gt;<ref refid="struct_im_draw_list_1adf292ff70a954d82daf061c609e75dfc" kindref="member">IdxBuffer</ref>.<ref refid="struct_im_vector_1ac371dd62e56ae486b1a5038cf07eee56" kindref="member">resize</ref>(0);</highlight></codeline>
<codeline lineno="1925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_data_1af0035b52cdf91932b25eaf2da853965a" kindref="member">TotalVtxCount</ref><sp/>+=<sp/>cmd_list-&gt;<ref refid="struct_im_draw_list_1aa8ff4aee39cf3c3791b7e29a7b4264be" kindref="member">VtxBuffer</ref>.<ref refid="struct_im_vector_1abbfd157947f66280d27b21d70a16df8d" kindref="member">Size</ref>;</highlight></codeline>
<codeline lineno="1926"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1927"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1928"><highlight class="normal"></highlight></codeline>
<codeline lineno="1929"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helper<sp/>to<sp/>scale<sp/>the<sp/>ClipRect<sp/>field<sp/>of<sp/>each<sp/>ImDrawCmd.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1930"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Use<sp/>if<sp/>your<sp/>final<sp/>output<sp/>buffer<sp/>is<sp/>at<sp/>a<sp/>different<sp/>scale<sp/>than<sp/>draw_data-&gt;DisplaySize,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1931"><highlight class="normal"></highlight><highlight class="comment">//<sp/>or<sp/>if<sp/>there<sp/>is<sp/>a<sp/>difference<sp/>between<sp/>your<sp/>window<sp/>resolution<sp/>and<sp/>framebuffer<sp/>resolution.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1932"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_im_draw_data_1a951fbe824674c7a5c2f6a478f3654ca8" kindref="member">ImDrawData::ScaleClipRects</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>fb_scale)</highlight></codeline>
<codeline lineno="1933"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1934"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ImDrawList*<sp/>draw_list<sp/>:<sp/><ref refid="struct_im_draw_data_1ad78ff9e65c4037c492ceade5d3ddd633" kindref="member">CmdLists</ref>)</highlight></codeline>
<codeline lineno="1935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ImDrawCmd&amp;<sp/>cmd<sp/>:<sp/>draw_list-&gt;<ref refid="struct_im_draw_list_1a67a4b5cc4c83bc3b81d96c46cbd38a07" kindref="member">CmdBuffer</ref>)</highlight></codeline>
<codeline lineno="1936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmd.<ref refid="struct_im_draw_cmd_1a838918f420ff81cb8dc7265077592daa" kindref="member">ClipRect</ref><sp/>=<sp/>ImVec4(cmd.<ref refid="struct_im_draw_cmd_1a838918f420ff81cb8dc7265077592daa" kindref="member">ClipRect</ref>.<ref refid="struct_im_vec4_1a2090f651f5e5b78fedae8dab87343db6" kindref="member">x</ref><sp/>*<sp/>fb_scale.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref>,<sp/>cmd.<ref refid="struct_im_draw_cmd_1a838918f420ff81cb8dc7265077592daa" kindref="member">ClipRect</ref>.<ref refid="struct_im_vec4_1a6b4d00ae261be4fe54353c759c561fe7" kindref="member">y</ref><sp/>*<sp/>fb_scale.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref>,<sp/>cmd.<ref refid="struct_im_draw_cmd_1a838918f420ff81cb8dc7265077592daa" kindref="member">ClipRect</ref>.<ref refid="struct_im_vec4_1aba6a75356917a28c967954bb29133a1a" kindref="member">z</ref><sp/>*<sp/>fb_scale.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref>,<sp/>cmd.<ref refid="struct_im_draw_cmd_1a838918f420ff81cb8dc7265077592daa" kindref="member">ClipRect</ref>.<ref refid="struct_im_vec4_1afeed5acd9f0d2043175f4da229d12a38" kindref="member">w</ref><sp/>*<sp/>fb_scale.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="1937"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1938"><highlight class="normal"></highlight></codeline>
<codeline lineno="1939"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1940"><highlight class="normal"></highlight><highlight class="comment">//<sp/>[SECTION]<sp/>Helpers<sp/>ShadeVertsXXX<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1941"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1942"><highlight class="normal"></highlight></codeline>
<codeline lineno="1943"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Generic<sp/>linear<sp/>color<sp/>gradient,<sp/>write<sp/>to<sp/>RGB<sp/>fields,<sp/>leave<sp/>A<sp/>untouched.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1944"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespace_im_gui_1acd137f6ee31f657e539eaa7e62f4f28a" kindref="member">ImGui::ShadeVertsLinearColorGradientKeepAlpha</ref>(<ref refid="struct_im_draw_list" kindref="compound">ImDrawList</ref>*<sp/>draw_list,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vert_start_idx,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vert_end_idx,<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>gradient_p0,<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>gradient_p1,<sp/><ref refid="imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36" kindref="member">ImU32</ref><sp/>col0,<sp/><ref refid="imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36" kindref="member">ImU32</ref><sp/>col1)</highlight></codeline>
<codeline lineno="1945"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1946"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>gradient_extent<sp/>=<sp/>gradient_p1<sp/>-<sp/>gradient_p0;</highlight></codeline>
<codeline lineno="1947"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>gradient_inv_length2<sp/>=<sp/>1.0f<sp/>/<sp/>ImLengthSqr(gradient_extent);</highlight></codeline>
<codeline lineno="1948"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_vert" kindref="compound">ImDrawVert</ref>*<sp/>vert_start<sp/>=<sp/>draw_list-&gt;<ref refid="struct_im_draw_list_1aa8ff4aee39cf3c3791b7e29a7b4264be" kindref="member">VtxBuffer</ref>.<ref refid="struct_im_vector_1ac0e46e8b30cb079d93c8f0aad7d7cbd0" kindref="member">Data</ref><sp/>+<sp/>vert_start_idx;</highlight></codeline>
<codeline lineno="1949"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_vert" kindref="compound">ImDrawVert</ref>*<sp/>vert_end<sp/>=<sp/>draw_list-&gt;<ref refid="struct_im_draw_list_1aa8ff4aee39cf3c3791b7e29a7b4264be" kindref="member">VtxBuffer</ref>.<ref refid="struct_im_vector_1ac0e46e8b30cb079d93c8f0aad7d7cbd0" kindref="member">Data</ref><sp/>+<sp/>vert_end_idx;</highlight></codeline>
<codeline lineno="1950"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col0_r<sp/>=<sp/>(int)(col0<sp/>&gt;&gt;<sp/><ref refid="imgui_8h_1a20304e1d419a45750f3a447b72143d6a" kindref="member">IM_COL32_R_SHIFT</ref>)<sp/>&amp;<sp/>0xFF;</highlight></codeline>
<codeline lineno="1951"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col0_g<sp/>=<sp/>(int)(col0<sp/>&gt;&gt;<sp/><ref refid="imgui_8h_1a17bb28f324a8b6f4007ea22c5648e109" kindref="member">IM_COL32_G_SHIFT</ref>)<sp/>&amp;<sp/>0xFF;</highlight></codeline>
<codeline lineno="1952"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col0_b<sp/>=<sp/>(int)(col0<sp/>&gt;&gt;<sp/><ref refid="imgui_8h_1a7684ce06ad5e130bf3ff780818cca399" kindref="member">IM_COL32_B_SHIFT</ref>)<sp/>&amp;<sp/>0xFF;</highlight></codeline>
<codeline lineno="1953"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col_delta_r<sp/>=<sp/>((int)(col1<sp/>&gt;&gt;<sp/><ref refid="imgui_8h_1a20304e1d419a45750f3a447b72143d6a" kindref="member">IM_COL32_R_SHIFT</ref>)<sp/>&amp;<sp/>0xFF)<sp/>-<sp/>col0_r;</highlight></codeline>
<codeline lineno="1954"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col_delta_g<sp/>=<sp/>((int)(col1<sp/>&gt;&gt;<sp/><ref refid="imgui_8h_1a17bb28f324a8b6f4007ea22c5648e109" kindref="member">IM_COL32_G_SHIFT</ref>)<sp/>&amp;<sp/>0xFF)<sp/>-<sp/>col0_g;</highlight></codeline>
<codeline lineno="1955"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col_delta_b<sp/>=<sp/>((int)(col1<sp/>&gt;&gt;<sp/><ref refid="imgui_8h_1a7684ce06ad5e130bf3ff780818cca399" kindref="member">IM_COL32_B_SHIFT</ref>)<sp/>&amp;<sp/>0xFF)<sp/>-<sp/>col0_b;</highlight></codeline>
<codeline lineno="1956"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="struct_im_draw_vert" kindref="compound">ImDrawVert</ref>*<sp/>vert<sp/>=<sp/>vert_start;<sp/>vert<sp/>&lt;<sp/>vert_end;<sp/>vert++)</highlight></codeline>
<codeline lineno="1957"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>d<sp/>=<sp/>ImDot(vert-&gt;pos<sp/>-<sp/>gradient_p0,<sp/>gradient_extent);</highlight></codeline>
<codeline lineno="1959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>t<sp/>=<sp/>ImClamp(d<sp/>*<sp/>gradient_inv_length2,<sp/>0.0f,<sp/>1.0f);</highlight></codeline>
<codeline lineno="1960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>(int)(col0_r<sp/>+<sp/>col_delta_r<sp/>*<sp/>t);</highlight></codeline>
<codeline lineno="1961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>g<sp/>=<sp/>(int)(col0_g<sp/>+<sp/>col_delta_g<sp/>*<sp/>t);</highlight></codeline>
<codeline lineno="1962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>b<sp/>=<sp/>(int)(col0_b<sp/>+<sp/>col_delta_b<sp/>*<sp/>t);</highlight></codeline>
<codeline lineno="1963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vert-&gt;col<sp/>=<sp/>(r<sp/>&lt;&lt;<sp/><ref refid="imgui_8h_1a20304e1d419a45750f3a447b72143d6a" kindref="member">IM_COL32_R_SHIFT</ref>)<sp/>|<sp/>(g<sp/>&lt;&lt;<sp/><ref refid="imgui_8h_1a17bb28f324a8b6f4007ea22c5648e109" kindref="member">IM_COL32_G_SHIFT</ref>)<sp/>|<sp/>(b<sp/>&lt;&lt;<sp/><ref refid="imgui_8h_1a7684ce06ad5e130bf3ff780818cca399" kindref="member">IM_COL32_B_SHIFT</ref>)<sp/>|<sp/>(vert-&gt;col<sp/>&amp;<sp/><ref refid="imgui_8h_1a870161cddae56908e81835588fcf35cd" kindref="member">IM_COL32_A_MASK</ref>);</highlight></codeline>
<codeline lineno="1964"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1965"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1966"><highlight class="normal"></highlight></codeline>
<codeline lineno="1967"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Distribute<sp/>UV<sp/>over<sp/>(a,<sp/>b)<sp/>rectangle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1968"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespace_im_gui_1a676637659ec4291b07f386454840b58a" kindref="member">ImGui::ShadeVertsLinearUV</ref>(<ref refid="struct_im_draw_list" kindref="compound">ImDrawList</ref>*<sp/>draw_list,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vert_start_idx,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vert_end_idx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>b,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>uv_a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>uv_b,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>clamp)</highlight></codeline>
<codeline lineno="1969"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1970"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>size<sp/>=<sp/>b<sp/>-<sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>;</highlight></codeline>
<codeline lineno="1971"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>uv_size<sp/>=<sp/>uv_b<sp/>-<sp/>uv_a;</highlight></codeline>
<codeline lineno="1972"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>scale<sp/>=<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(</highlight></codeline>
<codeline lineno="1973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref><sp/>!=<sp/>0.0f<sp/>?<sp/>(uv_size.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref><sp/>/<sp/>size.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref>)<sp/>:<sp/>0.0f,</highlight></codeline>
<codeline lineno="1974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref><sp/>!=<sp/>0.0f<sp/>?<sp/>(uv_size.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref><sp/>/<sp/>size.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref>)<sp/>:<sp/>0.0f);</highlight></codeline>
<codeline lineno="1975"><highlight class="normal"></highlight></codeline>
<codeline lineno="1976"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_vert" kindref="compound">ImDrawVert</ref>*<sp/>vert_start<sp/>=<sp/>draw_list-&gt;<ref refid="struct_im_draw_list_1aa8ff4aee39cf3c3791b7e29a7b4264be" kindref="member">VtxBuffer</ref>.<ref refid="struct_im_vector_1ac0e46e8b30cb079d93c8f0aad7d7cbd0" kindref="member">Data</ref><sp/>+<sp/>vert_start_idx;</highlight></codeline>
<codeline lineno="1977"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_vert" kindref="compound">ImDrawVert</ref>*<sp/>vert_end<sp/>=<sp/>draw_list-&gt;<ref refid="struct_im_draw_list_1aa8ff4aee39cf3c3791b7e29a7b4264be" kindref="member">VtxBuffer</ref>.<ref refid="struct_im_vector_1ac0e46e8b30cb079d93c8f0aad7d7cbd0" kindref="member">Data</ref><sp/>+<sp/>vert_end_idx;</highlight></codeline>
<codeline lineno="1978"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(clamp)</highlight></codeline>
<codeline lineno="1979"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>min<sp/>=<sp/>ImMin(uv_a,<sp/>uv_b);</highlight></codeline>
<codeline lineno="1981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>max<sp/>=<sp/>ImMax(uv_a,<sp/>uv_b);</highlight></codeline>
<codeline lineno="1982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="struct_im_draw_vert" kindref="compound">ImDrawVert</ref>*<sp/>vertex<sp/>=<sp/>vert_start;<sp/>vertex<sp/>&lt;<sp/>vert_end;<sp/>++vertex)</highlight></codeline>
<codeline lineno="1983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vertex-&gt;uv<sp/>=<sp/>ImClamp(uv_a<sp/>+<sp/>ImMul(<ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(vertex-&gt;pos.x,<sp/>vertex-&gt;pos.y)<sp/>-<sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>,<sp/>scale),<sp/>min,<sp/>max);</highlight></codeline>
<codeline lineno="1984"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1985"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1986"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="struct_im_draw_vert" kindref="compound">ImDrawVert</ref>*<sp/>vertex<sp/>=<sp/>vert_start;<sp/>vertex<sp/>&lt;<sp/>vert_end;<sp/>++vertex)</highlight></codeline>
<codeline lineno="1988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vertex-&gt;uv<sp/>=<sp/>uv_a<sp/>+<sp/>ImMul(<ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(vertex-&gt;pos.x,<sp/>vertex-&gt;pos.y)<sp/>-<sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>,<sp/>scale);</highlight></codeline>
<codeline lineno="1989"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1990"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1991"><highlight class="normal"></highlight></codeline>
<codeline lineno="1992"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespace_im_gui_1a88fb69f1ac18ffb7925aa1c77fb7c37c" kindref="member">ImGui::ShadeVertsTransformPos</ref>(<ref refid="struct_im_draw_list" kindref="compound">ImDrawList</ref>*<sp/>draw_list,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vert_start_idx,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vert_end_idx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>pivot_in,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>cos_a,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>sin_a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>pivot_out)</highlight></codeline>
<codeline lineno="1993"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1994"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_vert" kindref="compound">ImDrawVert</ref>*<sp/>vert_start<sp/>=<sp/>draw_list-&gt;<ref refid="struct_im_draw_list_1aa8ff4aee39cf3c3791b7e29a7b4264be" kindref="member">VtxBuffer</ref>.<ref refid="struct_im_vector_1ac0e46e8b30cb079d93c8f0aad7d7cbd0" kindref="member">Data</ref><sp/>+<sp/>vert_start_idx;</highlight></codeline>
<codeline lineno="1995"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_draw_vert" kindref="compound">ImDrawVert</ref>*<sp/>vert_end<sp/>=<sp/>draw_list-&gt;<ref refid="struct_im_draw_list_1aa8ff4aee39cf3c3791b7e29a7b4264be" kindref="member">VtxBuffer</ref>.<ref refid="struct_im_vector_1ac0e46e8b30cb079d93c8f0aad7d7cbd0" kindref="member">Data</ref><sp/>+<sp/>vert_end_idx;</highlight></codeline>
<codeline lineno="1996"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="struct_im_draw_vert" kindref="compound">ImDrawVert</ref>*<sp/>vertex<sp/>=<sp/>vert_start;<sp/>vertex<sp/>&lt;<sp/>vert_end;<sp/>++vertex)</highlight></codeline>
<codeline lineno="1997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vertex-&gt;<ref refid="struct_im_draw_vert_1aedc578bbf364ddea71be12b4f177a5b4" kindref="member">pos</ref><sp/>=<sp/>ImRotate(vertex-&gt;pos-<sp/>pivot_in,<sp/>cos_a,<sp/>sin_a)<sp/>+<sp/>pivot_out;</highlight></codeline>
<codeline lineno="1998"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1999"><highlight class="normal"></highlight></codeline>
<codeline lineno="2000"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2001"><highlight class="normal"></highlight><highlight class="comment">//<sp/>[SECTION]<sp/>ImFontConfig</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2002"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2003"><highlight class="normal"></highlight></codeline>
<codeline lineno="2004"><highlight class="normal"><ref refid="struct_im_font_config_1af56ce39ce94ce0fb5171f4d8aa93f79c" kindref="member">ImFontConfig::ImFontConfig</ref>()</highlight></codeline>
<codeline lineno="2005"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2006"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2007"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_font_config_1a99dfbf61ef79cee89b6f03e17cbe63b4" kindref="member">FontDataOwnedByAtlas</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2008"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_font_config_1ab460df0d8019ffa8d124e8988c710910" kindref="member">OversampleH</ref><sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="2009"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_font_config_1a8018f84c60bfafb2b4629aeb77a047cb" kindref="member">OversampleV</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="2010"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_font_config_1af9040efaa5998aef3add4b629d7dc255" kindref="member">GlyphMaxAdvanceX</ref><sp/>=<sp/>FLT_MAX;</highlight></codeline>
<codeline lineno="2011"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_font_config_1a9365265cc52098a8ecf89ff47f6106f2" kindref="member">RasterizerMultiply</ref><sp/>=<sp/>1.0f;</highlight></codeline>
<codeline lineno="2012"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_font_config_1a16af4c04622910d619882b9d068fddc9" kindref="member">RasterizerDensity</ref><sp/>=<sp/>1.0f;</highlight></codeline>
<codeline lineno="2013"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_font_config_1af58c73936500737189bbcfa3480f8c3c" kindref="member">EllipsisChar</ref><sp/>=<sp/>(<ref refid="imgui_8h_1a1ecb49ee827c39a982f1e1467910d020" kindref="member">ImWchar</ref>)-1;</highlight></codeline>
<codeline lineno="2014"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2015"><highlight class="normal"></highlight></codeline>
<codeline lineno="2016"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2017"><highlight class="normal"></highlight><highlight class="comment">//<sp/>[SECTION]<sp/>ImFontAtlas</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2018"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2019"><highlight class="normal"></highlight></codeline>
<codeline lineno="2020"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>work<sp/>of<sp/>art<sp/>lies<sp/>ahead!<sp/>(.<sp/>=<sp/>white<sp/>layer,<sp/>X<sp/>=<sp/>black<sp/>layer,<sp/>others<sp/>are<sp/>blank)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2021"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>2x2<sp/>white<sp/>texels<sp/>on<sp/>the<sp/>top<sp/>left<sp/>are<sp/>the<sp/>ones<sp/>we&apos;ll<sp/>use<sp/>everywhere<sp/>in<sp/>Dear<sp/>ImGui<sp/>to<sp/>render<sp/>filled<sp/>shapes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2022"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(This<sp/>is<sp/>used<sp/>when<sp/>io.MouseDrawCursor<sp/>=<sp/>true)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2023"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="imgui__draw_8cpp_1adf518fea7357febbb14eeecb692a8d95" kindref="member">FONT_ATLAS_DEFAULT_TEX_DATA_W</ref><sp/>=<sp/>122;<sp/></highlight><highlight class="comment">//<sp/>Actual<sp/>texture<sp/>will<sp/>be<sp/>2<sp/>times<sp/>that<sp/>+<sp/>1<sp/>spacing.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2024"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="imgui__draw_8cpp_1a2c96fc3febbe9f4f6c042a2f975a5b1d" kindref="member">FONT_ATLAS_DEFAULT_TEX_DATA_H</ref><sp/>=<sp/>27;</highlight></codeline>
<codeline lineno="2025"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS[<ref refid="imgui__draw_8cpp_1adf518fea7357febbb14eeecb692a8d95" kindref="member">FONT_ATLAS_DEFAULT_TEX_DATA_W</ref><sp/>*<sp/><ref refid="imgui__draw_8cpp_1a2c96fc3febbe9f4f6c042a2f975a5b1d" kindref="member">FONT_ATLAS_DEFAULT_TEX_DATA_H</ref><sp/>+<sp/>1]<sp/>=</highlight></codeline>
<codeline lineno="2026"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2027"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;..-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-XXXXXXX-<sp/><sp/><sp/><sp/>X<sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>X<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-XXXXXXX<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>XXXXXXX-<sp/><sp/><sp/><sp/><sp/>XX<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>XX<sp/><sp/><sp/><sp/><sp/><sp/><sp/>XX<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2028"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;..-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-X.....X-<sp/><sp/><sp/>X.X<sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>X.X<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-X.....X<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>X.....X-<sp/><sp/><sp/><sp/>X..X<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-X..X<sp/><sp/><sp/><sp/><sp/>X..X&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2029"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;---<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-XXX.XXX-<sp/><sp/>X...X<sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>X...X<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-X....X<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>X....X-<sp/><sp/><sp/><sp/>X..X<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-X...X<sp/><sp/><sp/>X...X&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2030"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;X<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/>X.X<sp/><sp/>-<sp/>X.....X<sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>X.....X<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-X...X<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>X...X-<sp/><sp/><sp/><sp/>X..X<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>X...X<sp/>X...X<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2031"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;XX<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/>X.X<sp/><sp/>-X.......X-<sp/><sp/><sp/><sp/><sp/><sp/><sp/>X.......X<sp/><sp/><sp/><sp/><sp/><sp/><sp/>-X..X.X<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>X.X..X-<sp/><sp/><sp/><sp/>X..X<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/>X...X...X<sp/><sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2032"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;X.X<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/>X.X<sp/><sp/>-XXXX.XXXX-<sp/><sp/><sp/><sp/><sp/><sp/><sp/>XXXX.XXXX<sp/><sp/><sp/><sp/><sp/><sp/><sp/>-X.X<sp/>X.X<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>X.X<sp/>X.X-<sp/><sp/><sp/><sp/>X..XXX<sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/>X.....X<sp/><sp/><sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2033"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;X..X<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/>X.X<sp/><sp/>-<sp/><sp/><sp/>X.X<sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>X.X<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-XX<sp/><sp/><sp/>X.X<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>X.X<sp/><sp/><sp/>XX-<sp/><sp/><sp/><sp/>X..X..XXX<sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/>X...X<sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2034"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;X...X<sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/>X.X<sp/><sp/>-<sp/><sp/><sp/>X.X<sp/><sp/><sp/>-<sp/><sp/><sp/><sp/>XX<sp/><sp/><sp/><sp/>X.X<sp/><sp/><sp/><sp/>XX<sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/>X.X<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>X.X<sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/>X..X..X..XX<sp/><sp/>-<sp/><sp/><sp/><sp/><sp/>X.X<sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2035"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;X....X<sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/>X.X<sp/><sp/>-<sp/><sp/><sp/>X.X<sp/><sp/><sp/>-<sp/><sp/><sp/>X.X<sp/><sp/><sp/><sp/>X.X<sp/><sp/><sp/><sp/>X.X<sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/>X.X<sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/>X.X<sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/>X..X..X..X.X<sp/>-<sp/><sp/><sp/><sp/>X...X<sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2036"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;X.....X<sp/><sp/><sp/><sp/><sp/>-<sp/><sp/>X.X<sp/><sp/>-<sp/><sp/><sp/>X.X<sp/><sp/><sp/>-<sp/><sp/>X..X<sp/><sp/><sp/><sp/>X.X<sp/><sp/><sp/><sp/>X..X<sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>X.X<sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/>X.X<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-XXX<sp/>X..X..X..X..X-<sp/><sp/><sp/>X.....X<sp/><sp/><sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2037"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;X......X<sp/><sp/><sp/><sp/>-<sp/><sp/>X.X<sp/><sp/>-<sp/><sp/><sp/>X.X<sp/><sp/><sp/>-<sp/>X...XXXXXX.XXXXXX...X<sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>X.X<sp/><sp/><sp/>XX-XX<sp/><sp/><sp/>X.X<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-X..XX........X..X-<sp/><sp/>X...X...X<sp/><sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2038"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;X.......X<sp/><sp/><sp/>-<sp/><sp/>X.X<sp/><sp/>-<sp/><sp/><sp/>X.X<sp/><sp/><sp/>-X.....................X-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>X.X<sp/>X.X-X.X<sp/>X.X<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-X...X...........X-<sp/>X...X<sp/>X...X<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2039"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;X........X<sp/><sp/>-<sp/><sp/>X.X<sp/><sp/>-<sp/><sp/><sp/>X.X<sp/><sp/><sp/>-<sp/>X...XXXXXX.XXXXXX...X<sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>X.X..X-X..X.X<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>X..............X-X...X<sp/><sp/><sp/>X...X&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2040"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;X.........X<sp/>-XXX.XXX-<sp/><sp/><sp/>X.X<sp/><sp/><sp/>-<sp/><sp/>X..X<sp/><sp/><sp/><sp/>X.X<sp/><sp/><sp/><sp/>X..X<sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>X...X-X...X<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/>X.............X-X..X<sp/><sp/><sp/><sp/><sp/>X..X&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2041"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;X..........X-X.....X-<sp/><sp/><sp/>X.X<sp/><sp/><sp/>-<sp/><sp/><sp/>X.X<sp/><sp/><sp/><sp/>X.X<sp/><sp/><sp/><sp/>X.X<sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>X....X-X....X<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/>X.............X-<sp/>XX<sp/><sp/><sp/><sp/><sp/><sp/><sp/>XX<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2042"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;X......XXXXX-XXXXXXX-<sp/><sp/><sp/>X.X<sp/><sp/><sp/>-<sp/><sp/><sp/><sp/>XX<sp/><sp/><sp/><sp/>X.X<sp/><sp/><sp/><sp/>XX<sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>X.....X-X.....X<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/>X............X--------------&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2043"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;X...X..X<sp/><sp/><sp/><sp/>---------<sp/><sp/><sp/>X.X<sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>X.X<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>XXXXXXX-XXXXXXX<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/>X...........X<sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2044"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;X..X<sp/>X..X<sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/>-XXXX.XXXX-<sp/><sp/><sp/><sp/><sp/><sp/><sp/>XXXX.XXXX<sp/><sp/><sp/><sp/><sp/><sp/><sp/>-------------------------------------<sp/><sp/><sp/><sp/>X..........X<sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2045"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;X.X<sp/><sp/>X..X<sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/>-X.......X-<sp/><sp/><sp/><sp/><sp/><sp/><sp/>X.......X<sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/>XX<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>XX<sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/>X..........X<sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2046"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;XX<sp/><sp/><sp/><sp/>X..X<sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>X.....X<sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>X.....X<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/>X.X<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>X.X<sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/>X........X<sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2047"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/>X..X<sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/>X...X<sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>X...X<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/>X..X<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>X..X<sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/>X........X<sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2048"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>XX<sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/>X.X<sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>X.X<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>X...XXXXXXXXXXXXX...X<sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/>XXXXXXXXXX<sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2049"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;-------------<sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/>X<sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>X<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-X.....................X-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-------------------<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2050"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-----------------------------------<sp/>X...XXXXXXXXXXXXX...X<sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2051"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/>X..X<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>X..X<sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2052"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/>X.X<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>X.X<sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2053"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/>XX<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>XX<sp/><sp/><sp/><sp/>-<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2054"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2055"><highlight class="normal"></highlight></codeline>
<codeline lineno="2056"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>FONT_ATLAS_DEFAULT_TEX_CURSOR_DATA[<ref refid="imgui_8h_1a2eb1181cc1d7872a061df8731141dde9a4c24ccc8f37a57d6341da1cfd3b337a5" kindref="member">ImGuiMouseCursor_COUNT</ref>][3]<sp/>=</highlight></codeline>
<codeline lineno="2057"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2058"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Pos<sp/>........<sp/>Size<sp/>.........<sp/>Offset<sp/>......</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2059"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(<sp/>0,3),<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(12,19),<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(<sp/>0,<sp/>0)<sp/>},<sp/></highlight><highlight class="comment">//<sp/>ImGuiMouseCursor_Arrow</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2060"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(13,0),<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(<sp/>7,16),<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(<sp/>1,<sp/>8)<sp/>},<sp/></highlight><highlight class="comment">//<sp/>ImGuiMouseCursor_TextInput</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2061"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(31,0),<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(23,23),<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(11,11)<sp/>},<sp/></highlight><highlight class="comment">//<sp/>ImGuiMouseCursor_ResizeAll</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2062"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(21,0),<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(<sp/>9,23),<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(<sp/>4,11)<sp/>},<sp/></highlight><highlight class="comment">//<sp/>ImGuiMouseCursor_ResizeNS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2063"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(55,18),<ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(23,<sp/>9),<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(11,<sp/>4)<sp/>},<sp/></highlight><highlight class="comment">//<sp/>ImGuiMouseCursor_ResizeEW</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2064"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(73,0),<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(17,17),<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(<sp/>8,<sp/>8)<sp/>},<sp/></highlight><highlight class="comment">//<sp/>ImGuiMouseCursor_ResizeNESW</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2065"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(55,0),<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(17,17),<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(<sp/>8,<sp/>8)<sp/>},<sp/></highlight><highlight class="comment">//<sp/>ImGuiMouseCursor_ResizeNWSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2066"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(91,0),<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(17,22),<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(<sp/>5,<sp/>0)<sp/>},<sp/></highlight><highlight class="comment">//<sp/>ImGuiMouseCursor_Hand</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2067"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(109,0),<ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(13,15),<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(<sp/>6,<sp/>7)<sp/>},<sp/></highlight><highlight class="comment">//<sp/>ImGuiMouseCursor_NotAllowed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2068"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2069"><highlight class="normal"></highlight></codeline>
<codeline lineno="2070"><highlight class="normal"><ref refid="struct_im_font_atlas_1aa34e7909d30440d5c35aaef990ac741e" kindref="member">ImFontAtlas::ImFontAtlas</ref>()</highlight></codeline>
<codeline lineno="2071"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2072"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2073"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_font_atlas_1a32034b2aac4616d8c27ee666a1fd1b62" kindref="member">TexGlyphPadding</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="2074"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_font_atlas_1afc92fd54d52cab4fe787e364e7e4f652" kindref="member">PackIdMouseCursors</ref><sp/>=<sp/><ref refid="struct_im_font_atlas_1a0964aa42e665dbd423066309b3c7461b" kindref="member">PackIdLines</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="2075"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2076"><highlight class="normal"></highlight></codeline>
<codeline lineno="2077"><highlight class="normal"><ref refid="struct_im_font_atlas_1a950b4f7586ad7786ae251b957d67a268" kindref="member">ImFontAtlas::~ImFontAtlas</ref>()</highlight></codeline>
<codeline lineno="2078"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2079"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui_8h_1acb09e7dc42e8e3cefb0ecaa197978920" kindref="member">IM_ASSERT</ref>(!<ref refid="struct_im_font_atlas_1a2222ff64ba974a8ee7a286617f879f9b" kindref="member">Locked</ref><sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;Cannot<sp/>modify<sp/>a<sp/>locked<sp/>ImFontAtlas<sp/>between<sp/>NewFrame()<sp/>and<sp/>EndFrame/Render()!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2080"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_font_atlas_1a8f6d01c671d8670f991ba651bbaf7e77" kindref="member">Clear</ref>();</highlight></codeline>
<codeline lineno="2081"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2082"><highlight class="normal"></highlight></codeline>
<codeline lineno="2083"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_font_atlas_1a3f5bcbb7a2683b1af106fcf4e1217662" kindref="member">ImFontAtlas::ClearInputData</ref>()</highlight></codeline>
<codeline lineno="2084"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2085"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui_8h_1acb09e7dc42e8e3cefb0ecaa197978920" kindref="member">IM_ASSERT</ref>(!<ref refid="struct_im_font_atlas_1a2222ff64ba974a8ee7a286617f879f9b" kindref="member">Locked</ref><sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;Cannot<sp/>modify<sp/>a<sp/>locked<sp/>ImFontAtlas<sp/>between<sp/>NewFrame()<sp/>and<sp/>EndFrame/Render()!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2086"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ImFontConfig&amp;<sp/>font_cfg<sp/>:<sp/><ref refid="struct_im_font_atlas_1afa4f7459807763d032fe2d0022fc0823" kindref="member">ConfigData</ref>)</highlight></codeline>
<codeline lineno="2087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(font_cfg.FontData<sp/>&amp;&amp;<sp/>font_cfg.FontDataOwnedByAtlas)</highlight></codeline>
<codeline lineno="2088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imgui_8h_1ac24040f4c2d54ba3216c829703498ebb" kindref="member">IM_FREE</ref>(font_cfg.FontData);</highlight></codeline>
<codeline lineno="2090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>font_cfg.FontData<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2092"><highlight class="normal"></highlight></codeline>
<codeline lineno="2093"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>When<sp/>clearing<sp/>this<sp/>we<sp/>lose<sp/>access<sp/>to<sp/>the<sp/>font<sp/>name<sp/>and<sp/>other<sp/>information<sp/>used<sp/>to<sp/>build<sp/>the<sp/>font.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2094"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ImFont*<sp/>font<sp/>:<sp/><ref refid="struct_im_font_atlas_1a0198aeb17ef8bb810ccc8db103b93b1f" kindref="member">Fonts</ref>)</highlight></codeline>
<codeline lineno="2095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(font-&gt;<ref refid="struct_im_font_1afff4a317b215a37599589941d6131fd0" kindref="member">ConfigData</ref><sp/>&gt;=<sp/><ref refid="struct_im_font_atlas_1afa4f7459807763d032fe2d0022fc0823" kindref="member">ConfigData</ref>.Data<sp/>&amp;&amp;<sp/>font-&gt;<ref refid="struct_im_font_1afff4a317b215a37599589941d6131fd0" kindref="member">ConfigData</ref><sp/>&lt;<sp/><ref refid="struct_im_font_atlas_1afa4f7459807763d032fe2d0022fc0823" kindref="member">ConfigData</ref>.Data<sp/>+<sp/><ref refid="struct_im_font_atlas_1afa4f7459807763d032fe2d0022fc0823" kindref="member">ConfigData</ref>.Size)</highlight></codeline>
<codeline lineno="2096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>font-&gt;<ref refid="struct_im_font_1afff4a317b215a37599589941d6131fd0" kindref="member">ConfigData</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>font-&gt;<ref refid="struct_im_font_1a4a30fc7711d628ad582ccb3188a51ddd" kindref="member">ConfigDataCount</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2100"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_font_atlas_1afa4f7459807763d032fe2d0022fc0823" kindref="member">ConfigData</ref>.clear();</highlight></codeline>
<codeline lineno="2101"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_font_atlas_1ae3752e66f7454a42e5ae5ec052af537c" kindref="member">CustomRects</ref>.clear();</highlight></codeline>
<codeline lineno="2102"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_font_atlas_1afc92fd54d52cab4fe787e364e7e4f652" kindref="member">PackIdMouseCursors</ref><sp/>=<sp/><ref refid="struct_im_font_atlas_1a0964aa42e665dbd423066309b3c7461b" kindref="member">PackIdLines</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="2103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Important:<sp/>we<sp/>leave<sp/>TexReady<sp/>untouched</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2104"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2105"><highlight class="normal"></highlight></codeline>
<codeline lineno="2106"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_font_atlas_1a3ede4bd513bec044c77ac392ad9c6e86" kindref="member">ImFontAtlas::ClearTexData</ref>()</highlight></codeline>
<codeline lineno="2107"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2108"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui_8h_1acb09e7dc42e8e3cefb0ecaa197978920" kindref="member">IM_ASSERT</ref>(!<ref refid="struct_im_font_atlas_1a2222ff64ba974a8ee7a286617f879f9b" kindref="member">Locked</ref><sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;Cannot<sp/>modify<sp/>a<sp/>locked<sp/>ImFontAtlas<sp/>between<sp/>NewFrame()<sp/>and<sp/>EndFrame/Render()!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="struct_im_font_atlas_1a443ea9e7c4cf85ee791ffe891280eff3" kindref="member">TexPixelsAlpha8</ref>)</highlight></codeline>
<codeline lineno="2110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imgui_8h_1ac24040f4c2d54ba3216c829703498ebb" kindref="member">IM_FREE</ref>(<ref refid="struct_im_font_atlas_1a443ea9e7c4cf85ee791ffe891280eff3" kindref="member">TexPixelsAlpha8</ref>);</highlight></codeline>
<codeline lineno="2111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="struct_im_font_atlas_1a41163489a5b8060f405c56e22590cba5" kindref="member">TexPixelsRGBA32</ref>)</highlight></codeline>
<codeline lineno="2112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imgui_8h_1ac24040f4c2d54ba3216c829703498ebb" kindref="member">IM_FREE</ref>(<ref refid="struct_im_font_atlas_1a41163489a5b8060f405c56e22590cba5" kindref="member">TexPixelsRGBA32</ref>);</highlight></codeline>
<codeline lineno="2113"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_font_atlas_1a443ea9e7c4cf85ee791ffe891280eff3" kindref="member">TexPixelsAlpha8</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2114"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_font_atlas_1a41163489a5b8060f405c56e22590cba5" kindref="member">TexPixelsRGBA32</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2115"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_font_atlas_1a4bc426a6a9c2fd3ab1ad3893142613ff" kindref="member">TexPixelsUseColors</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Important:<sp/>we<sp/>leave<sp/>TexReady<sp/>untouched</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2117"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2118"><highlight class="normal"></highlight></codeline>
<codeline lineno="2119"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_font_atlas_1ad5c2560d708bd0c389e9bd9da2d9b055" kindref="member">ImFontAtlas::ClearFonts</ref>()</highlight></codeline>
<codeline lineno="2120"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2121"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui_8h_1acb09e7dc42e8e3cefb0ecaa197978920" kindref="member">IM_ASSERT</ref>(!<ref refid="struct_im_font_atlas_1a2222ff64ba974a8ee7a286617f879f9b" kindref="member">Locked</ref><sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;Cannot<sp/>modify<sp/>a<sp/>locked<sp/>ImFontAtlas<sp/>between<sp/>NewFrame()<sp/>and<sp/>EndFrame/Render()!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2122"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_font_atlas_1a0198aeb17ef8bb810ccc8db103b93b1f" kindref="member">Fonts</ref>.clear_delete();</highlight></codeline>
<codeline lineno="2123"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_font_atlas_1a9d28236e71f9a21a21d8f4f7eac39299" kindref="member">TexReady</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2124"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2125"><highlight class="normal"></highlight></codeline>
<codeline lineno="2126"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_font_atlas_1a8f6d01c671d8670f991ba651bbaf7e77" kindref="member">ImFontAtlas::Clear</ref>()</highlight></codeline>
<codeline lineno="2127"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2128"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_font_atlas_1a3f5bcbb7a2683b1af106fcf4e1217662" kindref="member">ClearInputData</ref>();</highlight></codeline>
<codeline lineno="2129"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_font_atlas_1a3ede4bd513bec044c77ac392ad9c6e86" kindref="member">ClearTexData</ref>();</highlight></codeline>
<codeline lineno="2130"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_font_atlas_1ad5c2560d708bd0c389e9bd9da2d9b055" kindref="member">ClearFonts</ref>();</highlight></codeline>
<codeline lineno="2131"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2132"><highlight class="normal"></highlight></codeline>
<codeline lineno="2133"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_font_atlas_1aeff1a1044a1ab68d8f27bb2819cd9f44" kindref="member">ImFontAtlas::GetTexDataAsAlpha8</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>out_pixels,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>out_width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>out_height,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>out_bytes_per_pixel)</highlight></codeline>
<codeline lineno="2134"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Build<sp/>atlas<sp/>on<sp/>demand</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="struct_im_font_atlas_1a443ea9e7c4cf85ee791ffe891280eff3" kindref="member">TexPixelsAlpha8</ref><sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="2137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_font_atlas_1a81e39e30dffa4dd7e458a53297451e27" kindref="member">Build</ref>();</highlight></codeline>
<codeline lineno="2138"><highlight class="normal"></highlight></codeline>
<codeline lineno="2139"><highlight class="normal"><sp/><sp/><sp/><sp/>*out_pixels<sp/>=<sp/><ref refid="struct_im_font_atlas_1a443ea9e7c4cf85ee791ffe891280eff3" kindref="member">TexPixelsAlpha8</ref>;</highlight></codeline>
<codeline lineno="2140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(out_width)<sp/>*out_width<sp/>=<sp/><ref refid="struct_im_font_atlas_1a2d0662502433e7a87b3aa4681ba17aa3" kindref="member">TexWidth</ref>;</highlight></codeline>
<codeline lineno="2141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(out_height)<sp/>*out_height<sp/>=<sp/><ref refid="struct_im_font_atlas_1a5ef74d37ec01d9e8aac5c57433296ce3" kindref="member">TexHeight</ref>;</highlight></codeline>
<codeline lineno="2142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(out_bytes_per_pixel)<sp/>*out_bytes_per_pixel<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="2143"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2144"><highlight class="normal"></highlight></codeline>
<codeline lineno="2145"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_font_atlas_1a8abb0c4e67ebb38249d4df71218c4eec" kindref="member">ImFontAtlas::GetTexDataAsRGBA32</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>out_pixels,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>out_width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>out_height,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>out_bytes_per_pixel)</highlight></codeline>
<codeline lineno="2146"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Convert<sp/>to<sp/>RGBA32<sp/>format<sp/>on<sp/>demand</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Although<sp/>it<sp/>is<sp/>likely<sp/>to<sp/>be<sp/>the<sp/>most<sp/>commonly<sp/>used<sp/>format,<sp/>our<sp/>font<sp/>rendering<sp/>is<sp/>1<sp/>channel<sp/>/<sp/>8<sp/>bpp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="struct_im_font_atlas_1a41163489a5b8060f405c56e22590cba5" kindref="member">TexPixelsRGBA32</ref>)</highlight></codeline>
<codeline lineno="2150"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pixels<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_font_atlas_1aeff1a1044a1ab68d8f27bb2819cd9f44" kindref="member">GetTexDataAsAlpha8</ref>(&amp;pixels,<sp/>NULL,<sp/>NULL);</highlight></codeline>
<codeline lineno="2153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pixels)</highlight></codeline>
<codeline lineno="2154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_font_atlas_1a41163489a5b8060f405c56e22590cba5" kindref="member">TexPixelsRGBA32</ref><sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*)<ref refid="imgui_8h_1a40113fb128e7035c8d4aaeeed565e7aa" kindref="member">IM_ALLOC</ref>((</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)<ref refid="struct_im_font_atlas_1a2d0662502433e7a87b3aa4681ba17aa3" kindref="member">TexWidth</ref><sp/>*<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)<ref refid="struct_im_font_atlas_1a5ef74d37ec01d9e8aac5c57433296ce3" kindref="member">TexHeight</ref><sp/>*<sp/>4);</highlight></codeline>
<codeline lineno="2156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>src<sp/>=<sp/>pixels;</highlight></codeline>
<codeline lineno="2157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>dst<sp/>=<sp/><ref refid="struct_im_font_atlas_1a41163489a5b8060f405c56e22590cba5" kindref="member">TexPixelsRGBA32</ref>;</highlight></codeline>
<codeline lineno="2158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/><ref refid="struct_im_font_atlas_1a2d0662502433e7a87b3aa4681ba17aa3" kindref="member">TexWidth</ref><sp/>*<sp/><ref refid="struct_im_font_atlas_1a5ef74d37ec01d9e8aac5c57433296ce3" kindref="member">TexHeight</ref>;<sp/>n<sp/>&gt;<sp/>0;<sp/>n--)</highlight></codeline>
<codeline lineno="2159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*dst++<sp/>=<sp/><ref refid="imgui_8h_1a123bd4e23eb51ac9dced93eab78c4456" kindref="member">IM_COL32</ref>(255,<sp/>255,<sp/>255,<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(*src++));</highlight></codeline>
<codeline lineno="2160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2161"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2162"><highlight class="normal"></highlight></codeline>
<codeline lineno="2163"><highlight class="normal"><sp/><sp/><sp/><sp/>*out_pixels<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<ref refid="struct_im_font_atlas_1a41163489a5b8060f405c56e22590cba5" kindref="member">TexPixelsRGBA32</ref>;</highlight></codeline>
<codeline lineno="2164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(out_width)<sp/>*out_width<sp/>=<sp/><ref refid="struct_im_font_atlas_1a2d0662502433e7a87b3aa4681ba17aa3" kindref="member">TexWidth</ref>;</highlight></codeline>
<codeline lineno="2165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(out_height)<sp/>*out_height<sp/>=<sp/><ref refid="struct_im_font_atlas_1a5ef74d37ec01d9e8aac5c57433296ce3" kindref="member">TexHeight</ref>;</highlight></codeline>
<codeline lineno="2166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(out_bytes_per_pixel)<sp/>*out_bytes_per_pixel<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="2167"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2168"><highlight class="normal"></highlight></codeline>
<codeline lineno="2169"><highlight class="normal"><ref refid="struct_im_font" kindref="compound">ImFont</ref>*<sp/><ref refid="struct_im_font_atlas_1ad01c0f19a95d37a9e5ebab1e54525625" kindref="member">ImFontAtlas::AddFont</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_font_config" kindref="compound">ImFontConfig</ref>*<sp/>font_cfg)</highlight></codeline>
<codeline lineno="2170"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2171"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui_8h_1acb09e7dc42e8e3cefb0ecaa197978920" kindref="member">IM_ASSERT</ref>(!<ref refid="struct_im_font_atlas_1a2222ff64ba974a8ee7a286617f879f9b" kindref="member">Locked</ref><sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;Cannot<sp/>modify<sp/>a<sp/>locked<sp/>ImFontAtlas<sp/>between<sp/>NewFrame()<sp/>and<sp/>EndFrame/Render()!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2172"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui_8h_1acb09e7dc42e8e3cefb0ecaa197978920" kindref="member">IM_ASSERT</ref>(font_cfg-&gt;<ref refid="struct_im_font_config_1a0265861de7ba7b0d953e1c97e7a50cf3" kindref="member">FontData</ref><sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>font_cfg-&gt;<ref refid="struct_im_font_config_1a39df7ad3bb496421ce2cc5d2428345ef" kindref="member">FontDataSize</ref><sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="2173"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui_8h_1acb09e7dc42e8e3cefb0ecaa197978920" kindref="member">IM_ASSERT</ref>(font_cfg-&gt;<ref refid="struct_im_font_config_1a2eff9cc7a11461414402f08ab910d277" kindref="member">SizePixels</ref><sp/>&gt;<sp/>0.0f);</highlight></codeline>
<codeline lineno="2174"><highlight class="normal"></highlight></codeline>
<codeline lineno="2175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>new<sp/>font</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!font_cfg-&gt;<ref refid="struct_im_font_config_1ad5cab281622e5bdec8e2d55cadc5601e" kindref="member">MergeMode</ref>)</highlight></codeline>
<codeline lineno="2177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_font_atlas_1a0198aeb17ef8bb810ccc8db103b93b1f" kindref="member">Fonts</ref>.push_back(<ref refid="imgui_8h_1a5e3b2a8968432747cd4932c539d76723" kindref="member">IM_NEW</ref>(ImFont));</highlight></codeline>
<codeline lineno="2178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imgui_8h_1acb09e7dc42e8e3cefb0ecaa197978920" kindref="member">IM_ASSERT</ref>(!<ref refid="struct_im_font_atlas_1a0198aeb17ef8bb810ccc8db103b93b1f" kindref="member">Fonts</ref>.empty()<sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;Cannot<sp/>use<sp/>MergeMode<sp/>for<sp/>the<sp/>first<sp/>font&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>When<sp/>using<sp/>MergeMode<sp/>make<sp/>sure<sp/>that<sp/>a<sp/>font<sp/>has<sp/>already<sp/>been<sp/>added<sp/>before.<sp/>You<sp/>can<sp/>use<sp/>ImGui::GetIO().Fonts-&gt;AddFontDefault()<sp/>to<sp/>add<sp/>the<sp/>default<sp/>imgui<sp/>font.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2180"><highlight class="normal"></highlight></codeline>
<codeline lineno="2181"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_font_atlas_1afa4f7459807763d032fe2d0022fc0823" kindref="member">ConfigData</ref>.push_back(*font_cfg);</highlight></codeline>
<codeline lineno="2182"><highlight class="normal"><sp/><sp/><sp/><sp/>ImFontConfig&amp;<sp/>new_font_cfg<sp/>=<sp/><ref refid="struct_im_font_atlas_1afa4f7459807763d032fe2d0022fc0823" kindref="member">ConfigData</ref>.back();</highlight></codeline>
<codeline lineno="2183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(new_font_cfg.<ref refid="struct_im_font_config_1a561773c311f6cf6de00642c2801e7b92" kindref="member">DstFont</ref><sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="2184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_font_cfg.<ref refid="struct_im_font_config_1a561773c311f6cf6de00642c2801e7b92" kindref="member">DstFont</ref><sp/>=<sp/><ref refid="struct_im_font_atlas_1a0198aeb17ef8bb810ccc8db103b93b1f" kindref="member">Fonts</ref>.back();</highlight></codeline>
<codeline lineno="2185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!new_font_cfg.<ref refid="struct_im_font_config_1a99dfbf61ef79cee89b6f03e17cbe63b4" kindref="member">FontDataOwnedByAtlas</ref>)</highlight></codeline>
<codeline lineno="2186"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_font_cfg.<ref refid="struct_im_font_config_1a0265861de7ba7b0d953e1c97e7a50cf3" kindref="member">FontData</ref><sp/>=<sp/><ref refid="imgui_8h_1a40113fb128e7035c8d4aaeeed565e7aa" kindref="member">IM_ALLOC</ref>(new_font_cfg.<ref refid="struct_im_font_config_1a39df7ad3bb496421ce2cc5d2428345ef" kindref="member">FontDataSize</ref>);</highlight></codeline>
<codeline lineno="2188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_font_cfg.<ref refid="struct_im_font_config_1a99dfbf61ef79cee89b6f03e17cbe63b4" kindref="member">FontDataOwnedByAtlas</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(new_font_cfg.<ref refid="struct_im_font_config_1a0265861de7ba7b0d953e1c97e7a50cf3" kindref="member">FontData</ref>,<sp/>font_cfg-&gt;<ref refid="struct_im_font_config_1a0265861de7ba7b0d953e1c97e7a50cf3" kindref="member">FontData</ref>,<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)new_font_cfg.<ref refid="struct_im_font_config_1a39df7ad3bb496421ce2cc5d2428345ef" kindref="member">FontDataSize</ref>);</highlight></codeline>
<codeline lineno="2190"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2191"><highlight class="normal"></highlight></codeline>
<codeline lineno="2192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(new_font_cfg.<ref refid="struct_im_font_config_1a561773c311f6cf6de00642c2801e7b92" kindref="member">DstFont</ref>-&gt;<ref refid="struct_im_font_1a51df9d341917235207db60e775b11621" kindref="member">EllipsisChar</ref><sp/>==<sp/>(<ref refid="imgui_8h_1a1ecb49ee827c39a982f1e1467910d020" kindref="member">ImWchar</ref>)-1)</highlight></codeline>
<codeline lineno="2193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_font_cfg.<ref refid="struct_im_font_config_1a561773c311f6cf6de00642c2801e7b92" kindref="member">DstFont</ref>-&gt;<ref refid="struct_im_font_1a51df9d341917235207db60e775b11621" kindref="member">EllipsisChar</ref><sp/>=<sp/>font_cfg-&gt;<ref refid="struct_im_font_config_1af58c73936500737189bbcfa3480f8c3c" kindref="member">EllipsisChar</ref>;</highlight></codeline>
<codeline lineno="2194"><highlight class="normal"></highlight></codeline>
<codeline lineno="2195"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui__draw_8cpp_1ab58975478a1fbc1735cf9b15e2db5be0" kindref="member">ImFontAtlasUpdateConfigDataPointers</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2196"><highlight class="normal"></highlight></codeline>
<codeline lineno="2197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Invalidate<sp/>texture</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2198"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_font_atlas_1a9d28236e71f9a21a21d8f4f7eac39299" kindref="member">TexReady</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2199"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_font_atlas_1a3ede4bd513bec044c77ac392ad9c6e86" kindref="member">ClearTexData</ref>();</highlight></codeline>
<codeline lineno="2200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>new_font_cfg.<ref refid="struct_im_font_config_1a561773c311f6cf6de00642c2801e7b92" kindref="member">DstFont</ref>;</highlight></codeline>
<codeline lineno="2201"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2202"><highlight class="normal"></highlight></codeline>
<codeline lineno="2203"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Default<sp/>font<sp/>TTF<sp/>is<sp/>compressed<sp/>with<sp/>stb_compress<sp/>then<sp/>base85<sp/>encoded<sp/>(see<sp/>misc/fonts/binary_to_compressed_c.cpp<sp/>for<sp/>encoder)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2204"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stb_decompress_length(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>input);</highlight></codeline>
<codeline lineno="2205"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stb_decompress(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>output,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>input,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length);</highlight></codeline>
<codeline lineno="2206"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><sp/>GetDefaultCompressedFontDataTTFBase85();</highlight></codeline>
<codeline lineno="2207"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Decode85Byte(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>c)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c<sp/>&gt;=<sp/></highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal"><sp/>?<sp/>c-36<sp/>:<sp/>c-35;<sp/>}</highlight></codeline>
<codeline lineno="2208"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Decode85(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>src,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>dst)</highlight></codeline>
<codeline lineno="2209"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*src)</highlight></codeline>
<codeline lineno="2211"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tmp<sp/>=<sp/>Decode85Byte(src[0])<sp/>+<sp/>85<sp/>*<sp/>(Decode85Byte(src[1])<sp/>+<sp/>85<sp/>*<sp/>(Decode85Byte(src[2])<sp/>+<sp/>85<sp/>*<sp/>(Decode85Byte(src[3])<sp/>+<sp/>85<sp/>*<sp/>Decode85Byte(src[4]))));</highlight></codeline>
<codeline lineno="2213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst[0]<sp/>=<sp/>((tmp<sp/>&gt;&gt;<sp/>0)<sp/>&amp;<sp/>0xFF);<sp/>dst[1]<sp/>=<sp/>((tmp<sp/>&gt;&gt;<sp/>8)<sp/>&amp;<sp/>0xFF);<sp/>dst[2]<sp/>=<sp/>((tmp<sp/>&gt;&gt;<sp/>16)<sp/>&amp;<sp/>0xFF);<sp/>dst[3]<sp/>=<sp/>((tmp<sp/>&gt;&gt;<sp/>24)<sp/>&amp;<sp/>0xFF);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can&apos;t<sp/>assume<sp/>little-endianness.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src<sp/>+=<sp/>5;</highlight></codeline>
<codeline lineno="2215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst<sp/>+=<sp/>4;</highlight></codeline>
<codeline lineno="2216"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2217"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2218"><highlight class="normal"></highlight></codeline>
<codeline lineno="2219"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Load<sp/>embedded<sp/>ProggyClean.ttf<sp/>at<sp/>size<sp/>13,<sp/>disable<sp/>oversampling</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2220"><highlight class="normal"><ref refid="struct_im_font" kindref="compound">ImFont</ref>*<sp/><ref refid="struct_im_font_atlas_1a9d2b4a94579bf603a0d2662cd8348cbd" kindref="member">ImFontAtlas::AddFontDefault</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_font_config" kindref="compound">ImFontConfig</ref>*<sp/>font_cfg_template)</highlight></codeline>
<codeline lineno="2221"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2222"><highlight class="normal"><sp/><sp/><sp/><sp/>ImFontConfig<sp/>font_cfg<sp/>=<sp/>font_cfg_template<sp/>?<sp/>*font_cfg_template<sp/>:<sp/>ImFontConfig();</highlight></codeline>
<codeline lineno="2223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!font_cfg_template)</highlight></codeline>
<codeline lineno="2224"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>font_cfg.<ref refid="struct_im_font_config_1ab460df0d8019ffa8d124e8988c710910" kindref="member">OversampleH</ref><sp/>=<sp/>font_cfg.<ref refid="struct_im_font_config_1a8018f84c60bfafb2b4629aeb77a047cb" kindref="member">OversampleV</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="2226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>font_cfg.<ref refid="struct_im_font_config_1a635b5fa03934467891fa949a037b5b89" kindref="member">PixelSnapH</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2227"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(font_cfg.<ref refid="struct_im_font_config_1a2eff9cc7a11461414402f08ab910d277" kindref="member">SizePixels</ref><sp/>&lt;=<sp/>0.0f)</highlight></codeline>
<codeline lineno="2229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>font_cfg.<ref refid="struct_im_font_config_1a2eff9cc7a11461414402f08ab910d277" kindref="member">SizePixels</ref><sp/>=<sp/>13.0f<sp/>*<sp/>1.0f;</highlight></codeline>
<codeline lineno="2230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(font_cfg.<ref refid="struct_im_font_config_1a12d3c014914d3b77533e219a013dc750" kindref="member">Name</ref>[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imgui_8cpp_1a75ccaf7d676b1f567ba888ae42ac3809" kindref="member">ImFormatString</ref>(font_cfg.<ref refid="struct_im_font_config_1a12d3c014914d3b77533e219a013dc750" kindref="member">Name</ref>,<sp/><ref refid="imgui_8h_1aeabe36f60fe45cf64cbc9641bcd58cca" kindref="member">IM_ARRAYSIZE</ref>(font_cfg.<ref refid="struct_im_font_config_1a12d3c014914d3b77533e219a013dc750" kindref="member">Name</ref>),<sp/></highlight><highlight class="stringliteral">&quot;ProggyClean.ttf,<sp/>%dpx&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)font_cfg.<ref refid="struct_im_font_config_1a2eff9cc7a11461414402f08ab910d277" kindref="member">SizePixels</ref>);</highlight></codeline>
<codeline lineno="2232"><highlight class="normal"><sp/><sp/><sp/><sp/>font_cfg.<ref refid="struct_im_font_config_1af58c73936500737189bbcfa3480f8c3c" kindref="member">EllipsisChar</ref><sp/>=<sp/>(<ref refid="imgui_8h_1a1ecb49ee827c39a982f1e1467910d020" kindref="member">ImWchar</ref>)0x0085;</highlight></codeline>
<codeline lineno="2233"><highlight class="normal"><sp/><sp/><sp/><sp/>font_cfg.<ref refid="struct_im_font_config_1a290a81956fdcb7ad3b5e3152594db121" kindref="member">GlyphOffset</ref>.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref><sp/>=<sp/>1.0f<sp/>*<sp/><ref refid="imgui__internal_8h_1a7ed216e24ac2d184f538765c01a763e6" kindref="member">IM_TRUNC</ref>(font_cfg.<ref refid="struct_im_font_config_1a2eff9cc7a11461414402f08ab910d277" kindref="member">SizePixels</ref><sp/>/<sp/>13.0f);<sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>+1<sp/>offset<sp/>per<sp/>13<sp/>units</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2234"><highlight class="normal"></highlight></codeline>
<codeline lineno="2235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>ttf_compressed_base85<sp/>=<sp/>GetDefaultCompressedFontDataTTFBase85();</highlight></codeline>
<codeline lineno="2236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1a1ecb49ee827c39a982f1e1467910d020" kindref="member">ImWchar</ref>*<sp/>glyph_ranges<sp/>=<sp/>font_cfg.<ref refid="struct_im_font_config_1aa174ceff80323012cd1b717d864258dd" kindref="member">GlyphRanges</ref><sp/>!=<sp/>NULL<sp/>?<sp/>font_cfg.<ref refid="struct_im_font_config_1aa174ceff80323012cd1b717d864258dd" kindref="member">GlyphRanges</ref><sp/>:<sp/><ref refid="struct_im_font_atlas_1adec0df140eb1dc01c2a22a5253d62820" kindref="member">GetGlyphRangesDefault</ref>();</highlight></codeline>
<codeline lineno="2237"><highlight class="normal"><sp/><sp/><sp/><sp/>ImFont*<sp/>font<sp/>=<sp/><ref refid="struct_im_font_atlas_1ab43b930beb57c0b998f42f4586677956" kindref="member">AddFontFromMemoryCompressedBase85TTF</ref>(ttf_compressed_base85,<sp/>font_cfg.<ref refid="struct_im_font_config_1a2eff9cc7a11461414402f08ab910d277" kindref="member">SizePixels</ref>,<sp/>&amp;font_cfg,<sp/>glyph_ranges);</highlight></codeline>
<codeline lineno="2238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>font;</highlight></codeline>
<codeline lineno="2239"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2240"><highlight class="normal"></highlight></codeline>
<codeline lineno="2241"><highlight class="normal"><ref refid="struct_im_font" kindref="compound">ImFont</ref>*<sp/><ref refid="struct_im_font_atlas_1a4613437629eb668ffa2e70d71ea3b734" kindref="member">ImFontAtlas::AddFontFromFileTTF</ref>(<ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>*<sp/>ctx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>filename,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>size_pixels,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_font_config" kindref="compound">ImFontConfig</ref>*<sp/>font_cfg_template,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1a1ecb49ee827c39a982f1e1467910d020" kindref="member">ImWchar</ref>*<sp/>glyph_ranges)</highlight></codeline>
<codeline lineno="2242"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2243"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui_8h_1acb09e7dc42e8e3cefb0ecaa197978920" kindref="member">IM_ASSERT</ref>(!<ref refid="struct_im_font_atlas_1a2222ff64ba974a8ee7a286617f879f9b" kindref="member">Locked</ref><sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;Cannot<sp/>modify<sp/>a<sp/>locked<sp/>ImFontAtlas<sp/>between<sp/>NewFrame()<sp/>and<sp/>EndFrame/Render()!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>data_size<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>data<sp/>=<sp/><ref refid="imgui_8cpp_1a7556ba36bd4300f97dd7055ce82fbdbd" kindref="member">ImFileLoadToMemory</ref>(ctx,<sp/>filename,<sp/></highlight><highlight class="stringliteral">&quot;rb&quot;</highlight><highlight class="normal">,<sp/>&amp;data_size,<sp/>0);</highlight></codeline>
<codeline lineno="2246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!data)</highlight></codeline>
<codeline lineno="2247"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imgui__internal_8h_1a537f548eb1d21404f9341cfe20383cd7" kindref="member">IM_ASSERT_USER_ERROR</ref>(0,<sp/></highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>load<sp/>font<sp/>file!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="2250"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2251"><highlight class="normal"><sp/><sp/><sp/><sp/>ImFontConfig<sp/>font_cfg<sp/>=<sp/>font_cfg_template<sp/>?<sp/>*font_cfg_template<sp/>:<sp/>ImFontConfig();</highlight></codeline>
<codeline lineno="2252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(font_cfg.<ref refid="struct_im_font_config_1a12d3c014914d3b77533e219a013dc750" kindref="member">Name</ref>[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2253"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Store<sp/>a<sp/>short<sp/>copy<sp/>of<sp/>filename<sp/>into<sp/>into<sp/>the<sp/>font<sp/>name<sp/>for<sp/>convenience</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>p;</highlight></codeline>
<codeline lineno="2256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(p<sp/>=<sp/>filename<sp/>+<sp/>strlen(filename);<sp/>p<sp/>&gt;<sp/>filename<sp/>&amp;&amp;<sp/>p[-1]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>p[-1]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal">;<sp/>p--)<sp/>{}</highlight></codeline>
<codeline lineno="2257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imgui_8cpp_1a75ccaf7d676b1f567ba888ae42ac3809" kindref="member">ImFormatString</ref>(font_cfg.<ref refid="struct_im_font_config_1a12d3c014914d3b77533e219a013dc750" kindref="member">Name</ref>,<sp/><ref refid="imgui_8h_1aeabe36f60fe45cf64cbc9641bcd58cca" kindref="member">IM_ARRAYSIZE</ref>(font_cfg.<ref refid="struct_im_font_config_1a12d3c014914d3b77533e219a013dc750" kindref="member">Name</ref>),<sp/></highlight><highlight class="stringliteral">&quot;%s,<sp/>%.0fpx&quot;</highlight><highlight class="normal">,<sp/>p,<sp/>size_pixels);</highlight></codeline>
<codeline lineno="2258"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_im_font_atlas_1a95eec9b791e9c509180030f8176406ff" kindref="member">AddFontFromMemoryTTF</ref>(data,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)data_size,<sp/>size_pixels,<sp/>&amp;font_cfg,<sp/>glyph_ranges);</highlight></codeline>
<codeline lineno="2260"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2261"><highlight class="normal"></highlight></codeline>
<codeline lineno="2262"><highlight class="normal"></highlight><highlight class="comment">//<sp/>NB:<sp/>Transfer<sp/>ownership<sp/>of<sp/>&apos;ttf_data&apos;<sp/>to<sp/>ImFontAtlas,<sp/>unless<sp/>font_cfg_template-&gt;FontDataOwnedByAtlas<sp/>==<sp/>false.<sp/>Owned<sp/>TTF<sp/>buffer<sp/>will<sp/>be<sp/>deleted<sp/>after<sp/>Build().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2263"><highlight class="normal"><ref refid="struct_im_font" kindref="compound">ImFont</ref>*<sp/><ref refid="struct_im_font_atlas_1a95eec9b791e9c509180030f8176406ff" kindref="member">ImFontAtlas::AddFontFromMemoryTTF</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>font_data,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>font_data_size,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>size_pixels,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_font_config" kindref="compound">ImFontConfig</ref>*<sp/>font_cfg_template,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1a1ecb49ee827c39a982f1e1467910d020" kindref="member">ImWchar</ref>*<sp/>glyph_ranges)</highlight></codeline>
<codeline lineno="2264"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2265"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui_8h_1acb09e7dc42e8e3cefb0ecaa197978920" kindref="member">IM_ASSERT</ref>(!<ref refid="struct_im_font_atlas_1a2222ff64ba974a8ee7a286617f879f9b" kindref="member">Locked</ref><sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;Cannot<sp/>modify<sp/>a<sp/>locked<sp/>ImFontAtlas<sp/>between<sp/>NewFrame()<sp/>and<sp/>EndFrame/Render()!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2266"><highlight class="normal"><sp/><sp/><sp/><sp/>ImFontConfig<sp/>font_cfg<sp/>=<sp/>font_cfg_template<sp/>?<sp/>*font_cfg_template<sp/>:<sp/>ImFontConfig();</highlight></codeline>
<codeline lineno="2267"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui_8h_1acb09e7dc42e8e3cefb0ecaa197978920" kindref="member">IM_ASSERT</ref>(font_cfg.<ref refid="struct_im_font_config_1a0265861de7ba7b0d953e1c97e7a50cf3" kindref="member">FontData</ref><sp/>==<sp/>NULL);</highlight></codeline>
<codeline lineno="2268"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui_8h_1acb09e7dc42e8e3cefb0ecaa197978920" kindref="member">IM_ASSERT</ref>(font_data_size<sp/>&gt;<sp/>100<sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;Incorrect<sp/>value<sp/>for<sp/>font_data_size!&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>Heuristic<sp/>to<sp/>prevent<sp/>accidentally<sp/>passing<sp/>a<sp/>wrong<sp/>value<sp/>to<sp/>font_data_size.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2269"><highlight class="normal"><sp/><sp/><sp/><sp/>font_cfg.<ref refid="struct_im_font_config_1a0265861de7ba7b0d953e1c97e7a50cf3" kindref="member">FontData</ref><sp/>=<sp/>font_data;</highlight></codeline>
<codeline lineno="2270"><highlight class="normal"><sp/><sp/><sp/><sp/>font_cfg.<ref refid="struct_im_font_config_1a39df7ad3bb496421ce2cc5d2428345ef" kindref="member">FontDataSize</ref><sp/>=<sp/>font_data_size;</highlight></codeline>
<codeline lineno="2271"><highlight class="normal"><sp/><sp/><sp/><sp/>font_cfg.<ref refid="struct_im_font_config_1a2eff9cc7a11461414402f08ab910d277" kindref="member">SizePixels</ref><sp/>=<sp/>size_pixels<sp/>&gt;<sp/>0.0f<sp/>?<sp/>size_pixels<sp/>:<sp/>font_cfg.<ref refid="struct_im_font_config_1a2eff9cc7a11461414402f08ab910d277" kindref="member">SizePixels</ref>;</highlight></codeline>
<codeline lineno="2272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(glyph_ranges)</highlight></codeline>
<codeline lineno="2273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>font_cfg.<ref refid="struct_im_font_config_1aa174ceff80323012cd1b717d864258dd" kindref="member">GlyphRanges</ref><sp/>=<sp/>glyph_ranges;</highlight></codeline>
<codeline lineno="2274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_im_font_atlas_1ad01c0f19a95d37a9e5ebab1e54525625" kindref="member">AddFont</ref>(&amp;font_cfg);</highlight></codeline>
<codeline lineno="2275"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2276"><highlight class="normal"></highlight></codeline>
<codeline lineno="2277"><highlight class="normal"><ref refid="struct_im_font" kindref="compound">ImFont</ref>*<sp/><ref refid="struct_im_font_atlas_1a478ffa07777bf990ade02889e15a21ab" kindref="member">ImFontAtlas::AddFontFromMemoryCompressedTTF</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>compressed_ttf_data,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>compressed_ttf_size,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>size_pixels,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_font_config" kindref="compound">ImFontConfig</ref>*<sp/>font_cfg_template,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1a1ecb49ee827c39a982f1e1467910d020" kindref="member">ImWchar</ref>*<sp/>glyph_ranges)</highlight></codeline>
<codeline lineno="2278"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>buf_decompressed_size<sp/>=<sp/>stb_decompress_length((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)compressed_ttf_data);</highlight></codeline>
<codeline lineno="2280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>buf_decompressed_data<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<ref refid="imgui_8h_1a40113fb128e7035c8d4aaeeed565e7aa" kindref="member">IM_ALLOC</ref>(buf_decompressed_size);</highlight></codeline>
<codeline lineno="2281"><highlight class="normal"><sp/><sp/><sp/><sp/>stb_decompress(buf_decompressed_data,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)compressed_ttf_data,<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)compressed_ttf_size);</highlight></codeline>
<codeline lineno="2282"><highlight class="normal"></highlight></codeline>
<codeline lineno="2283"><highlight class="normal"><sp/><sp/><sp/><sp/>ImFontConfig<sp/>font_cfg<sp/>=<sp/>font_cfg_template<sp/>?<sp/>*font_cfg_template<sp/>:<sp/>ImFontConfig();</highlight></codeline>
<codeline lineno="2284"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui_8h_1acb09e7dc42e8e3cefb0ecaa197978920" kindref="member">IM_ASSERT</ref>(font_cfg.<ref refid="struct_im_font_config_1a0265861de7ba7b0d953e1c97e7a50cf3" kindref="member">FontData</ref><sp/>==<sp/>NULL);</highlight></codeline>
<codeline lineno="2285"><highlight class="normal"><sp/><sp/><sp/><sp/>font_cfg.<ref refid="struct_im_font_config_1a99dfbf61ef79cee89b6f03e17cbe63b4" kindref="member">FontDataOwnedByAtlas</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_im_font_atlas_1a95eec9b791e9c509180030f8176406ff" kindref="member">AddFontFromMemoryTTF</ref>(buf_decompressed_data,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)buf_decompressed_size,<sp/>size_pixels,<sp/>&amp;font_cfg,<sp/>glyph_ranges);</highlight></codeline>
<codeline lineno="2287"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2288"><highlight class="normal"></highlight></codeline>
<codeline lineno="2289"><highlight class="normal"><ref refid="struct_im_font" kindref="compound">ImFont</ref>*<sp/><ref refid="struct_im_font_atlas_1ab43b930beb57c0b998f42f4586677956" kindref="member">ImFontAtlas::AddFontFromMemoryCompressedBase85TTF</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>compressed_ttf_data_base85,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>size_pixels,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_font_config" kindref="compound">ImFontConfig</ref>*<sp/>font_cfg,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1a1ecb49ee827c39a982f1e1467910d020" kindref="member">ImWchar</ref>*<sp/>glyph_ranges)</highlight></codeline>
<codeline lineno="2290"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>compressed_ttf_size<sp/>=<sp/>(((int)strlen(compressed_ttf_data_base85)<sp/>+<sp/>4)<sp/>/<sp/>5)<sp/>*<sp/>4;</highlight></codeline>
<codeline lineno="2292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>compressed_ttf<sp/>=<sp/><ref refid="imgui_8h_1a40113fb128e7035c8d4aaeeed565e7aa" kindref="member">IM_ALLOC</ref>((</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)compressed_ttf_size);</highlight></codeline>
<codeline lineno="2293"><highlight class="normal"><sp/><sp/><sp/><sp/>Decode85((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)compressed_ttf_data_base85,<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)compressed_ttf);</highlight></codeline>
<codeline lineno="2294"><highlight class="normal"><sp/><sp/><sp/><sp/>ImFont*<sp/>font<sp/>=<sp/><ref refid="struct_im_font_atlas_1a478ffa07777bf990ade02889e15a21ab" kindref="member">AddFontFromMemoryCompressedTTF</ref>(compressed_ttf,<sp/>compressed_ttf_size,<sp/>size_pixels,<sp/>font_cfg,<sp/>glyph_ranges);</highlight></codeline>
<codeline lineno="2295"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui_8h_1ac24040f4c2d54ba3216c829703498ebb" kindref="member">IM_FREE</ref>(compressed_ttf);</highlight></codeline>
<codeline lineno="2296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>font;</highlight></codeline>
<codeline lineno="2297"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2298"><highlight class="normal"></highlight></codeline>
<codeline lineno="2299"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_im_font_atlas_1af048760e2d58ec93446e345deb887259" kindref="member">ImFontAtlas::AddCustomRectRegular</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height)</highlight></codeline>
<codeline lineno="2300"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2301"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui_8h_1acb09e7dc42e8e3cefb0ecaa197978920" kindref="member">IM_ASSERT</ref>(width<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>width<sp/>&lt;=<sp/>0xFFFF);</highlight></codeline>
<codeline lineno="2302"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui_8h_1acb09e7dc42e8e3cefb0ecaa197978920" kindref="member">IM_ASSERT</ref>(height<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>height<sp/>&lt;=<sp/>0xFFFF);</highlight></codeline>
<codeline lineno="2303"><highlight class="normal"><sp/><sp/><sp/><sp/>ImFontAtlasCustomRect<sp/>r;</highlight></codeline>
<codeline lineno="2304"><highlight class="normal"><sp/><sp/><sp/><sp/>r.<ref refid="struct_im_font_atlas_custom_rect_1ada0c5ae3700d9074280c0801dd9ae20e" kindref="member">Width</ref><sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>short)width;</highlight></codeline>
<codeline lineno="2305"><highlight class="normal"><sp/><sp/><sp/><sp/>r.<ref refid="struct_im_font_atlas_custom_rect_1a94a6da45f46f0cc5abfd6580abfb2f0c" kindref="member">Height</ref><sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>short)height;</highlight></codeline>
<codeline lineno="2306"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_font_atlas_1ae3752e66f7454a42e5ae5ec052af537c" kindref="member">CustomRects</ref>.push_back(r);</highlight></codeline>
<codeline lineno="2307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_im_font_atlas_1ae3752e66f7454a42e5ae5ec052af537c" kindref="member">CustomRects</ref>.Size<sp/>-<sp/>1;<sp/></highlight><highlight class="comment">//<sp/>Return<sp/>index</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2308"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2309"><highlight class="normal"></highlight></codeline>
<codeline lineno="2310"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_im_font_atlas_1a5643182be4e3f1a442cfa6cdc0321c7c" kindref="member">ImFontAtlas::AddCustomRectFontGlyph</ref>(<ref refid="struct_im_font" kindref="compound">ImFont</ref>*<sp/>font,<sp/><ref refid="imgui_8h_1a1ecb49ee827c39a982f1e1467910d020" kindref="member">ImWchar</ref><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>advance_x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>offset)</highlight></codeline>
<codeline lineno="2311"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2312"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>IMGUI_USE_WCHAR32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2313"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui_8h_1acb09e7dc42e8e3cefb0ecaa197978920" kindref="member">IM_ASSERT</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>&lt;=<sp/><ref refid="imgui_8h_1aefe19804994a49c4e39032acbfe49e0d" kindref="member">IM_UNICODE_CODEPOINT_MAX</ref>);</highlight></codeline>
<codeline lineno="2314"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2315"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui_8h_1acb09e7dc42e8e3cefb0ecaa197978920" kindref="member">IM_ASSERT</ref>(font<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="2316"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui_8h_1acb09e7dc42e8e3cefb0ecaa197978920" kindref="member">IM_ASSERT</ref>(width<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>width<sp/>&lt;=<sp/>0xFFFF);</highlight></codeline>
<codeline lineno="2317"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui_8h_1acb09e7dc42e8e3cefb0ecaa197978920" kindref="member">IM_ASSERT</ref>(height<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>height<sp/>&lt;=<sp/>0xFFFF);</highlight></codeline>
<codeline lineno="2318"><highlight class="normal"><sp/><sp/><sp/><sp/>ImFontAtlasCustomRect<sp/>r;</highlight></codeline>
<codeline lineno="2319"><highlight class="normal"><sp/><sp/><sp/><sp/>r.<ref refid="struct_im_font_atlas_custom_rect_1ada0c5ae3700d9074280c0801dd9ae20e" kindref="member">Width</ref><sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>short)width;</highlight></codeline>
<codeline lineno="2320"><highlight class="normal"><sp/><sp/><sp/><sp/>r.<ref refid="struct_im_font_atlas_custom_rect_1a94a6da45f46f0cc5abfd6580abfb2f0c" kindref="member">Height</ref><sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>short)height;</highlight></codeline>
<codeline lineno="2321"><highlight class="normal"><sp/><sp/><sp/><sp/>r.<ref refid="struct_im_font_atlas_custom_rect_1a697df6d4ccdaac2077c43cdc1b5435a4" kindref="member">GlyphID</ref><sp/>=<sp/>id;</highlight></codeline>
<codeline lineno="2322"><highlight class="normal"><sp/><sp/><sp/><sp/>r.<ref refid="struct_im_font_atlas_custom_rect_1a062a08fee260f08e669231e602682617" kindref="member">GlyphAdvanceX</ref><sp/>=<sp/>advance_x;</highlight></codeline>
<codeline lineno="2323"><highlight class="normal"><sp/><sp/><sp/><sp/>r.<ref refid="struct_im_font_atlas_custom_rect_1a03f4d8c267b53dd7981560b0fb5b8b03" kindref="member">GlyphOffset</ref><sp/>=<sp/>offset;</highlight></codeline>
<codeline lineno="2324"><highlight class="normal"><sp/><sp/><sp/><sp/>r.<ref refid="struct_im_font_atlas_custom_rect_1ae0b05bcab100beb72c96c4a606c61b3a" kindref="member">Font</ref><sp/>=<sp/>font;</highlight></codeline>
<codeline lineno="2325"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_font_atlas_1ae3752e66f7454a42e5ae5ec052af537c" kindref="member">CustomRects</ref>.push_back(r);</highlight></codeline>
<codeline lineno="2326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_im_font_atlas_1ae3752e66f7454a42e5ae5ec052af537c" kindref="member">CustomRects</ref>.Size<sp/>-<sp/>1;<sp/></highlight><highlight class="comment">//<sp/>Return<sp/>index</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2327"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2328"><highlight class="normal"></highlight></codeline>
<codeline lineno="2329"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_im_font_atlas_1a66bb70a3c3dab00bd714fc52e2195882" kindref="member">ImFontAtlas::CalcCustomRectUV</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_font_atlas_custom_rect" kindref="compound">ImFontAtlasCustomRect</ref>*<sp/>rect,<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>*<sp/>out_uv_min,<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>*<sp/>out_uv_max)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2330"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2331"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui_8h_1acb09e7dc42e8e3cefb0ecaa197978920" kindref="member">IM_ASSERT</ref>(<ref refid="struct_im_font_atlas_1a2d0662502433e7a87b3aa4681ba17aa3" kindref="member">TexWidth</ref><sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/><ref refid="struct_im_font_atlas_1a5ef74d37ec01d9e8aac5c57433296ce3" kindref="member">TexHeight</ref><sp/>&gt;<sp/>0);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Font<sp/>atlas<sp/>needs<sp/>to<sp/>be<sp/>built<sp/>before<sp/>we<sp/>can<sp/>calculate<sp/>UV<sp/>coordinates</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2332"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui_8h_1acb09e7dc42e8e3cefb0ecaa197978920" kindref="member">IM_ASSERT</ref>(rect-&gt;<ref refid="struct_im_font_atlas_custom_rect_1a8829c3c64981078ba03d75c2b07e2abc" kindref="member">IsPacked</ref>());<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>the<sp/>rectangle<sp/>has<sp/>been<sp/>packed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2333"><highlight class="normal"><sp/><sp/><sp/><sp/>*out_uv_min<sp/>=<sp/>ImVec2((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)rect-&gt;<ref refid="struct_im_font_atlas_custom_rect_1a4e653e0c1855c48c4fc0b830ed696aed" kindref="member">X</ref><sp/>*<sp/><ref refid="struct_im_font_atlas_1adbe3a6b1fd501108649fe04f882b8664" kindref="member">TexUvScale</ref>.x,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)rect-&gt;<ref refid="struct_im_font_atlas_custom_rect_1adda5fb1f5bfeb194bd5fc27b635db338" kindref="member">Y</ref><sp/>*<sp/><ref refid="struct_im_font_atlas_1adbe3a6b1fd501108649fe04f882b8664" kindref="member">TexUvScale</ref>.y);</highlight></codeline>
<codeline lineno="2334"><highlight class="normal"><sp/><sp/><sp/><sp/>*out_uv_max<sp/>=<sp/>ImVec2((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)(rect-&gt;<ref refid="struct_im_font_atlas_custom_rect_1a4e653e0c1855c48c4fc0b830ed696aed" kindref="member">X</ref><sp/>+<sp/>rect-&gt;<ref refid="struct_im_font_atlas_custom_rect_1ada0c5ae3700d9074280c0801dd9ae20e" kindref="member">Width</ref>)<sp/>*<sp/><ref refid="struct_im_font_atlas_1adbe3a6b1fd501108649fe04f882b8664" kindref="member">TexUvScale</ref>.x,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)(rect-&gt;<ref refid="struct_im_font_atlas_custom_rect_1adda5fb1f5bfeb194bd5fc27b635db338" kindref="member">Y</ref><sp/>+<sp/>rect-&gt;<ref refid="struct_im_font_atlas_custom_rect_1a94a6da45f46f0cc5abfd6580abfb2f0c" kindref="member">Height</ref>)<sp/>*<sp/><ref refid="struct_im_font_atlas_1adbe3a6b1fd501108649fe04f882b8664" kindref="member">TexUvScale</ref>.y);</highlight></codeline>
<codeline lineno="2335"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2336"><highlight class="normal"></highlight></codeline>
<codeline lineno="2337"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_im_font_atlas_1a6d27a36fe034851310dd00d7dc5253c3" kindref="member">ImFontAtlas::GetMouseCursorTexData</ref>(<ref refid="imgui_8h_1a9223d6c82bb5d12c2eab5f829ca520ef" kindref="member">ImGuiMouseCursor</ref><sp/>cursor_type,<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>*<sp/>out_offset,<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>*<sp/>out_size,<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>out_uv_border[2],<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>out_uv_fill[2])</highlight></codeline>
<codeline lineno="2338"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cursor_type<sp/>&lt;=<sp/>ImGuiMouseCursor_None<sp/>||<sp/>cursor_type<sp/>&gt;=<sp/><ref refid="imgui_8h_1a2eb1181cc1d7872a061df8731141dde9a4c24ccc8f37a57d6341da1cfd3b337a5" kindref="member">ImGuiMouseCursor_COUNT</ref>)</highlight></codeline>
<codeline lineno="2340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="struct_im_font_atlas_1adf2f2d04b46911ad01cfbef0f59e1f11" kindref="member">Flags</ref><sp/>&amp;<sp/><ref refid="imgui_8h_1a80e2e7eb7dc9a76ac5384b9ce6786563abf2d3e7edd841daaa59af9eb8f2b35fa" kindref="member">ImFontAtlasFlags_NoMouseCursors</ref>)</highlight></codeline>
<codeline lineno="2342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2343"><highlight class="normal"></highlight></codeline>
<codeline lineno="2344"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui_8h_1acb09e7dc42e8e3cefb0ecaa197978920" kindref="member">IM_ASSERT</ref>(<ref refid="struct_im_font_atlas_1afc92fd54d52cab4fe787e364e7e4f652" kindref="member">PackIdMouseCursors</ref><sp/>!=<sp/>-1);</highlight></codeline>
<codeline lineno="2345"><highlight class="normal"><sp/><sp/><sp/><sp/>ImFontAtlasCustomRect*<sp/>r<sp/>=<sp/><ref refid="struct_im_font_atlas_1a6a4c5f59c12c88a5c0429d6a6ec06481" kindref="member">GetCustomRectByIndex</ref>(<ref refid="struct_im_font_atlas_1afc92fd54d52cab4fe787e364e7e4f652" kindref="member">PackIdMouseCursors</ref>);</highlight></codeline>
<codeline lineno="2346"><highlight class="normal"><sp/><sp/><sp/><sp/>ImVec2<sp/>pos<sp/>=<sp/>FONT_ATLAS_DEFAULT_TEX_CURSOR_DATA[cursor_type][0]<sp/>+<sp/>ImVec2((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)r-&gt;<ref refid="struct_im_font_atlas_custom_rect_1a4e653e0c1855c48c4fc0b830ed696aed" kindref="member">X</ref>,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)r-&gt;<ref refid="struct_im_font_atlas_custom_rect_1adda5fb1f5bfeb194bd5fc27b635db338" kindref="member">Y</ref>);</highlight></codeline>
<codeline lineno="2347"><highlight class="normal"><sp/><sp/><sp/><sp/>ImVec2<sp/>size<sp/>=<sp/>FONT_ATLAS_DEFAULT_TEX_CURSOR_DATA[cursor_type][1];</highlight></codeline>
<codeline lineno="2348"><highlight class="normal"><sp/><sp/><sp/><sp/>*out_size<sp/>=<sp/>size;</highlight></codeline>
<codeline lineno="2349"><highlight class="normal"><sp/><sp/><sp/><sp/>*out_offset<sp/>=<sp/>FONT_ATLAS_DEFAULT_TEX_CURSOR_DATA[cursor_type][2];</highlight></codeline>
<codeline lineno="2350"><highlight class="normal"><sp/><sp/><sp/><sp/>out_uv_border[0]<sp/>=<sp/>(pos)<sp/>*<sp/><ref refid="struct_im_font_atlas_1adbe3a6b1fd501108649fe04f882b8664" kindref="member">TexUvScale</ref>;</highlight></codeline>
<codeline lineno="2351"><highlight class="normal"><sp/><sp/><sp/><sp/>out_uv_border[1]<sp/>=<sp/>(pos<sp/>+<sp/>size)<sp/>*<sp/><ref refid="struct_im_font_atlas_1adbe3a6b1fd501108649fe04f882b8664" kindref="member">TexUvScale</ref>;</highlight></codeline>
<codeline lineno="2352"><highlight class="normal"><sp/><sp/><sp/><sp/>pos.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref><sp/>+=<sp/><ref refid="imgui__draw_8cpp_1adf518fea7357febbb14eeecb692a8d95" kindref="member">FONT_ATLAS_DEFAULT_TEX_DATA_W</ref><sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="2353"><highlight class="normal"><sp/><sp/><sp/><sp/>out_uv_fill[0]<sp/>=<sp/>(pos)<sp/>*<sp/><ref refid="struct_im_font_atlas_1adbe3a6b1fd501108649fe04f882b8664" kindref="member">TexUvScale</ref>;</highlight></codeline>
<codeline lineno="2354"><highlight class="normal"><sp/><sp/><sp/><sp/>out_uv_fill[1]<sp/>=<sp/>(pos<sp/>+<sp/>size)<sp/>*<sp/><ref refid="struct_im_font_atlas_1adbe3a6b1fd501108649fe04f882b8664" kindref="member">TexUvScale</ref>;</highlight></codeline>
<codeline lineno="2355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2356"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2357"><highlight class="normal"></highlight></codeline>
<codeline lineno="2358"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_font_atlas_1a81e39e30dffa4dd7e458a53297451e27" kindref="member">ImFontAtlas::Build</ref>()</highlight></codeline>
<codeline lineno="2359"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2360"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui_8h_1acb09e7dc42e8e3cefb0ecaa197978920" kindref="member">IM_ASSERT</ref>(!<ref refid="struct_im_font_atlas_1a2222ff64ba974a8ee7a286617f879f9b" kindref="member">Locked</ref><sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;Cannot<sp/>modify<sp/>a<sp/>locked<sp/>ImFontAtlas<sp/>between<sp/>NewFrame()<sp/>and<sp/>EndFrame/Render()!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2361"><highlight class="normal"></highlight></codeline>
<codeline lineno="2362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Default<sp/>font<sp/>is<sp/>none<sp/>are<sp/>specified</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="struct_im_font_atlas_1afa4f7459807763d032fe2d0022fc0823" kindref="member">ConfigData</ref>.Size<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="2364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_font_atlas_1a9d2b4a94579bf603a0d2662cd8348cbd" kindref="member">AddFontDefault</ref>();</highlight></codeline>
<codeline lineno="2365"><highlight class="normal"></highlight></codeline>
<codeline lineno="2366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Select<sp/>builder</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Note<sp/>that<sp/>we<sp/>do<sp/>not<sp/>reassign<sp/>to<sp/>atlas-&gt;FontBuilderIO,<sp/>since<sp/>it<sp/>is<sp/>likely<sp/>to<sp/>point<sp/>to<sp/>static<sp/>data<sp/>which</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>may<sp/>mess<sp/>with<sp/>some<sp/>hot-reloading<sp/>schemes.<sp/>If<sp/>you<sp/>need<sp/>to<sp/>assign<sp/>to<sp/>this<sp/>(for<sp/>dynamic<sp/>selection)<sp/>AND<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>using<sp/>a<sp/>hot-reloading<sp/>scheme<sp/>that<sp/>messes<sp/>up<sp/>static<sp/>data,<sp/>store<sp/>your<sp/>own<sp/>instance<sp/>of<sp/>ImFontBuilderIO<sp/>somewhere</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>and<sp/>point<sp/>to<sp/>it<sp/>instead<sp/>of<sp/>pointing<sp/>directly<sp/>to<sp/>return<sp/>value<sp/>of<sp/>the<sp/>GetBuilderXXX<sp/>functions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImFontBuilderIO*<sp/>builder_io<sp/>=<sp/><ref refid="struct_im_font_atlas_1a43337693a61cd40ec0110c83da628f09" kindref="member">FontBuilderIO</ref>;</highlight></codeline>
<codeline lineno="2372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(builder_io<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="2373"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2374"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>IMGUI_ENABLE_FREETYPE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>builder_io<sp/>=<sp/>ImGuiFreeType::GetBuilderForFreeType();</highlight></codeline>
<codeline lineno="2376"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(IMGUI_ENABLE_STB_TRUETYPE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>builder_io<sp/>=<sp/><ref refid="imgui__draw_8cpp_1a4c276d0224ef420d570c9485c4c76a19" kindref="member">ImFontAtlasGetBuilderForStbTruetype</ref>();</highlight></codeline>
<codeline lineno="2378"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imgui_8h_1acb09e7dc42e8e3cefb0ecaa197978920" kindref="member">IM_ASSERT</ref>(0);<sp/></highlight><highlight class="comment">//<sp/>Invalid<sp/>Build<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2380"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2381"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2382"><highlight class="normal"></highlight></codeline>
<codeline lineno="2383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Build</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>builder_io-&gt;<ref refid="struct_im_font_builder_i_o_1a81018973af73c727705382fe8c4155b5" kindref="member">FontBuilder_Build</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2385"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2386"><highlight class="normal"></highlight></codeline>
<codeline lineno="2387"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui__draw_8cpp_1a8d5f3a053aae34ac7b93e39cb9096d06" kindref="member">ImFontAtlasBuildMultiplyCalcLookupTable</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>out_table[256],<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>in_brighten_factor)</highlight></codeline>
<codeline lineno="2388"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>256;<sp/>i++)</highlight></codeline>
<codeline lineno="2390"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">value</ref><sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>int)(i<sp/>*<sp/>in_brighten_factor);</highlight></codeline>
<codeline lineno="2392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_table[i]<sp/>=<sp/><ref refid="pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">value</ref><sp/>&gt;<sp/>255<sp/>?<sp/>255<sp/>:<sp/>(<ref refid="pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">value</ref><sp/>&amp;<sp/>0xFF);</highlight></codeline>
<codeline lineno="2393"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2394"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2395"><highlight class="normal"></highlight></codeline>
<codeline lineno="2396"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui__draw_8cpp_1a8dc3feae771599949b33712b520e9060" kindref="member">ImFontAtlasBuildMultiplyRectAlpha8</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>table[256],<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pixels,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stride)</highlight></codeline>
<codeline lineno="2397"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2398"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui__internal_8h_1aa6119f4859929e4a37720676c5765f73" kindref="member">IM_ASSERT_PARANOID</ref>(w<sp/>&lt;=<sp/>stride);</highlight></codeline>
<codeline lineno="2399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>data<sp/>=<sp/>pixels<sp/>+<sp/>x<sp/>+<sp/>y<sp/>*<sp/>stride;</highlight></codeline>
<codeline lineno="2400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>h;<sp/>j<sp/>&gt;<sp/>0;<sp/>j--,<sp/>data<sp/>+=<sp/>stride<sp/>-<sp/>w)</highlight></codeline>
<codeline lineno="2401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>w;<sp/>i<sp/>&gt;<sp/>0;<sp/>i--,<sp/>data++)</highlight></codeline>
<codeline lineno="2402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*data<sp/>=<sp/>table[*data];</highlight></codeline>
<codeline lineno="2403"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2404"><highlight class="normal"></highlight></codeline>
<codeline lineno="2405"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>IMGUI_ENABLE_STB_TRUETYPE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2406"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Temporary<sp/>data<sp/>for<sp/>one<sp/>source<sp/>font<sp/>(multiple<sp/>source<sp/>fonts<sp/>can<sp/>be<sp/>merged<sp/>into<sp/>one<sp/>destination<sp/>ImFont)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2407"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(C++03<sp/>doesn&apos;t<sp/>allow<sp/>instancing<sp/>ImVector&lt;&gt;<sp/>with<sp/>function-local<sp/>types<sp/>so<sp/>we<sp/>declare<sp/>the<sp/>type<sp/>here.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2408" refid="struct_im_font_build_src_data" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_im_font_build_src_data" kindref="compound">ImFontBuildSrcData</ref></highlight></codeline>
<codeline lineno="2409"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2410"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structstbtt__fontinfo" kindref="compound">stbtt_fontinfo</ref><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_font_build_src_data_1aa7499553235c2f084be3d2e2e030c3cc" kindref="member">FontInfo</ref>;</highlight></codeline>
<codeline lineno="2411"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structstbtt__pack__range" kindref="compound">stbtt_pack_range</ref><sp/><sp/><sp/><sp/><ref refid="struct_im_font_build_src_data_1a98c6b58804c9be957ea6ce5b1732ad52" kindref="member">PackRange</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Hold<sp/>the<sp/>list<sp/>of<sp/>codepoints<sp/>to<sp/>pack<sp/>(essentially<sp/>points<sp/>to<sp/>Codepoints.Data)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2412"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structstbrp__rect" kindref="compound">stbrp_rect</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_font_build_src_data_1a918baffa45001ec6ba866ad18a338969" kindref="member">Rects</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Rectangle<sp/>to<sp/>pack.<sp/>We<sp/>first<sp/>fill<sp/>in<sp/>their<sp/>size<sp/>and<sp/>the<sp/>packer<sp/>will<sp/>give<sp/>us<sp/>their<sp/>position.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2413"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structstbtt__packedchar" kindref="compound">stbtt_packedchar</ref>*<sp/><sp/><sp/><ref refid="struct_im_font_build_src_data_1a7c85b2866a23a42357f19c05df2b7f3f" kindref="member">PackedChars</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Output<sp/>glyphs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1a1ecb49ee827c39a982f1e1467910d020" kindref="member">ImWchar</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_font_build_src_data_1a30187b934b16d7bef600887f1cc6614f" kindref="member">SrcRanges</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Ranges<sp/>as<sp/>requested<sp/>by<sp/>user<sp/>(user<sp/>is<sp/>allowed<sp/>to<sp/>request<sp/>too<sp/>much,<sp/>e.g.<sp/>0x0020..0xFFFF)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_font_build_src_data_1a1fa5c70e2d29e53743557d55050ab912" kindref="member">DstIndex</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Index<sp/>into<sp/>atlas-&gt;Fonts[]<sp/>and<sp/>dst_tmp_array[]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_font_build_src_data_1a40ce6c1a652c3d3c67d094e064691da1" kindref="member">GlyphsHighest</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Highest<sp/>requested<sp/>codepoint</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_font_build_src_data_1a73600dcc4e6c8d6b499c032c4ed0e823" kindref="member">GlyphsCount</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Glyph<sp/>count<sp/>(excluding<sp/>missing<sp/>glyphs<sp/>and<sp/>glyphs<sp/>already<sp/>set<sp/>by<sp/>an<sp/>earlier<sp/>source<sp/>font)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2418"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_bit_vector" kindref="compound">ImBitVector</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_font_build_src_data_1ad767ca332169ff5df851170eb970b96a" kindref="member">GlyphsSet</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Glyph<sp/>bit<sp/>map<sp/>(random<sp/>access,<sp/>1-bit<sp/>per<sp/>codepoint.<sp/>This<sp/>will<sp/>be<sp/>a<sp/>maximum<sp/>of<sp/>8KB)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2419"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vector" kindref="compound">ImVector&lt;int&gt;</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_font_build_src_data_1ae4d653fb221fc19a30a2117f73043377" kindref="member">GlyphsList</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Glyph<sp/>codepoints<sp/>list<sp/>(flattened<sp/>version<sp/>of<sp/>GlyphsSet)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2420"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2421"><highlight class="normal"></highlight></codeline>
<codeline lineno="2422"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Temporary<sp/>data<sp/>for<sp/>one<sp/>destination<sp/>ImFont*<sp/>(multiple<sp/>source<sp/>fonts<sp/>can<sp/>be<sp/>merged<sp/>into<sp/>one<sp/>destination<sp/>ImFont)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2423" refid="struct_im_font_build_dst_data" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_im_font_build_dst_data" kindref="compound">ImFontBuildDstData</ref></highlight></codeline>
<codeline lineno="2424"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_font_build_dst_data_1ab13d637daba34891db2968684647a728" kindref="member">SrcCount</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Number<sp/>of<sp/>source<sp/>fonts<sp/>targeting<sp/>this<sp/>destination<sp/>font.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_font_build_dst_data_1a2c0592f57b8381a9d106b6881491b29c" kindref="member">GlyphsHighest</ref>;</highlight></codeline>
<codeline lineno="2427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_font_build_dst_data_1aeb9950177ed2ec156332ec8c3683c2e2" kindref="member">GlyphsCount</ref>;</highlight></codeline>
<codeline lineno="2428"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_bit_vector" kindref="compound">ImBitVector</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_font_build_dst_data_1acb81b9abe454d0a989ae467a5b208d9a" kindref="member">GlyphsSet</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>used<sp/>to<sp/>resolve<sp/>collision<sp/>when<sp/>multiple<sp/>sources<sp/>are<sp/>merged<sp/>into<sp/>a<sp/>same<sp/>destination<sp/>font.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2429"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2430"><highlight class="normal"></highlight></codeline>
<codeline lineno="2431"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UnpackBitVectorToFlatIndexList(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_bit_vector" kindref="compound">ImBitVector</ref>*<sp/>in,<sp/><ref refid="struct_im_vector" kindref="compound">ImVector&lt;int&gt;</ref>*<sp/>out)</highlight></codeline>
<codeline lineno="2432"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2433"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui_8h_1acb09e7dc42e8e3cefb0ecaa197978920" kindref="member">IM_ASSERT</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(in-&gt;<ref refid="struct_im_bit_vector_1a419abda300de5270b4475eac6ce250c2" kindref="member">Storage</ref>.<ref refid="struct_im_vector_1ac0e46e8b30cb079d93c8f0aad7d7cbd0" kindref="member">Data</ref>[0])<sp/>==<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36" kindref="member">ImU32</ref>*<sp/>it_begin<sp/>=<sp/>in-&gt;<ref refid="struct_im_bit_vector_1a419abda300de5270b4475eac6ce250c2" kindref="member">Storage</ref>.<ref refid="struct_im_vector_1ab48ae48675fa779e29c9ae5892bb99f4" kindref="member">begin</ref>();</highlight></codeline>
<codeline lineno="2435"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36" kindref="member">ImU32</ref>*<sp/>it_end<sp/>=<sp/>in-&gt;<ref refid="struct_im_bit_vector_1a419abda300de5270b4475eac6ce250c2" kindref="member">Storage</ref>.<ref refid="struct_im_vector_1a278ca772697b2b2139d3b8add336a249" kindref="member">end</ref>();</highlight></codeline>
<codeline lineno="2436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36" kindref="member">ImU32</ref>*<sp/>it<sp/>=<sp/>it_begin;<sp/>it<sp/>&lt;<sp/>it_end;<sp/>it++)</highlight></codeline>
<codeline lineno="2437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36" kindref="member">ImU32</ref><sp/>entries_32<sp/>=<sp/>*it)</highlight></codeline>
<codeline lineno="2438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36" kindref="member">ImU32</ref><sp/>bit_n<sp/>=<sp/>0;<sp/>bit_n<sp/>&lt;<sp/>32;<sp/>bit_n++)</highlight></codeline>
<codeline lineno="2439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(entries_32<sp/>&amp;<sp/>((<ref refid="imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36" kindref="member">ImU32</ref>)1<sp/>&lt;&lt;<sp/>bit_n))</highlight></codeline>
<codeline lineno="2440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out-&gt;<ref refid="struct_im_vector_1aab5df48e0711a48bd12f3206e08c4108" kindref="member">push_back</ref>((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(((it<sp/>-<sp/>it_begin)<sp/>&lt;&lt;<sp/>5)<sp/>+<sp/>bit_n));</highlight></codeline>
<codeline lineno="2441"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2442"><highlight class="normal"></highlight></codeline>
<codeline lineno="2443"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImFontAtlasBuildWithStbTruetype(<ref refid="struct_im_font_atlas" kindref="compound">ImFontAtlas</ref>*<sp/>atlas)</highlight></codeline>
<codeline lineno="2444"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2445"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui_8h_1acb09e7dc42e8e3cefb0ecaa197978920" kindref="member">IM_ASSERT</ref>(atlas-&gt;<ref refid="struct_im_font_atlas_1afa4f7459807763d032fe2d0022fc0823" kindref="member">ConfigData</ref>.<ref refid="struct_im_vector_1abbfd157947f66280d27b21d70a16df8d" kindref="member">Size</ref><sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="2446"><highlight class="normal"></highlight></codeline>
<codeline lineno="2447"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui__draw_8cpp_1ac050ff181df43cec0b63d834b6039c3f" kindref="member">ImFontAtlasBuildInit</ref>(atlas);</highlight></codeline>
<codeline lineno="2448"><highlight class="normal"></highlight></codeline>
<codeline lineno="2449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clear<sp/>atlas</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2450"><highlight class="normal"><sp/><sp/><sp/><sp/>atlas-&gt;<ref refid="struct_im_font_atlas_1a1d7be9a6190c75706f80bda16c87f28e" kindref="member">TexID</ref><sp/>=<sp/>(<ref refid="imgui_8h_1a364f4447ecbc4ca176145ccff9db6286" kindref="member">ImTextureID</ref>)NULL;</highlight></codeline>
<codeline lineno="2451"><highlight class="normal"><sp/><sp/><sp/><sp/>atlas-&gt;<ref refid="struct_im_font_atlas_1a2d0662502433e7a87b3aa4681ba17aa3" kindref="member">TexWidth</ref><sp/>=<sp/>atlas-&gt;<ref refid="struct_im_font_atlas_1a5ef74d37ec01d9e8aac5c57433296ce3" kindref="member">TexHeight</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2452"><highlight class="normal"><sp/><sp/><sp/><sp/>atlas-&gt;<ref refid="struct_im_font_atlas_1adbe3a6b1fd501108649fe04f882b8664" kindref="member">TexUvScale</ref><sp/>=<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(0.0f,<sp/>0.0f);</highlight></codeline>
<codeline lineno="2453"><highlight class="normal"><sp/><sp/><sp/><sp/>atlas-&gt;<ref refid="struct_im_font_atlas_1af1d05221e9a1607d7f625df92a4f9b7e" kindref="member">TexUvWhitePixel</ref><sp/>=<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(0.0f,<sp/>0.0f);</highlight></codeline>
<codeline lineno="2454"><highlight class="normal"><sp/><sp/><sp/><sp/>atlas-&gt;<ref refid="struct_im_font_atlas_1a3ede4bd513bec044c77ac392ad9c6e86" kindref="member">ClearTexData</ref>();</highlight></codeline>
<codeline lineno="2455"><highlight class="normal"></highlight></codeline>
<codeline lineno="2456"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Temporary<sp/>storage<sp/>for<sp/>building</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2457"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vector" kindref="compound">ImVector&lt;ImFontBuildSrcData&gt;</ref><sp/>src_tmp_array;</highlight></codeline>
<codeline lineno="2458"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vector" kindref="compound">ImVector&lt;ImFontBuildDstData&gt;</ref><sp/>dst_tmp_array;</highlight></codeline>
<codeline lineno="2459"><highlight class="normal"><sp/><sp/><sp/><sp/>src_tmp_array.<ref refid="struct_im_vector_1ac371dd62e56ae486b1a5038cf07eee56" kindref="member">resize</ref>(atlas-&gt;<ref refid="struct_im_font_atlas_1afa4f7459807763d032fe2d0022fc0823" kindref="member">ConfigData</ref>.<ref refid="struct_im_vector_1abbfd157947f66280d27b21d70a16df8d" kindref="member">Size</ref>);</highlight></codeline>
<codeline lineno="2460"><highlight class="normal"><sp/><sp/><sp/><sp/>dst_tmp_array.<ref refid="struct_im_vector_1ac371dd62e56ae486b1a5038cf07eee56" kindref="member">resize</ref>(atlas-&gt;<ref refid="struct_im_font_atlas_1a0198aeb17ef8bb810ccc8db103b93b1f" kindref="member">Fonts</ref>.<ref refid="struct_im_vector_1abbfd157947f66280d27b21d70a16df8d" kindref="member">Size</ref>);</highlight></codeline>
<codeline lineno="2461"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(src_tmp_array.<ref refid="struct_im_vector_1ac0e46e8b30cb079d93c8f0aad7d7cbd0" kindref="member">Data</ref>,<sp/>0,<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)src_tmp_array.<ref refid="struct_im_vector_1ade9f2e937e47b0e0f9970dcfba038204" kindref="member">size_in_bytes</ref>());</highlight></codeline>
<codeline lineno="2462"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(dst_tmp_array.<ref refid="struct_im_vector_1ac0e46e8b30cb079d93c8f0aad7d7cbd0" kindref="member">Data</ref>,<sp/>0,<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)dst_tmp_array.<ref refid="struct_im_vector_1ade9f2e937e47b0e0f9970dcfba038204" kindref="member">size_in_bytes</ref>());</highlight></codeline>
<codeline lineno="2463"><highlight class="normal"></highlight></codeline>
<codeline lineno="2464"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1.<sp/>Initialize<sp/>font<sp/>loading<sp/>structure,<sp/>check<sp/>font<sp/>data<sp/>validity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2465"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>src_i<sp/>=<sp/>0;<sp/>src_i<sp/>&lt;<sp/>atlas-&gt;<ref refid="struct_im_font_atlas_1afa4f7459807763d032fe2d0022fc0823" kindref="member">ConfigData</ref>.<ref refid="struct_im_vector_1abbfd157947f66280d27b21d70a16df8d" kindref="member">Size</ref>;<sp/>src_i++)</highlight></codeline>
<codeline lineno="2466"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_font_build_src_data" kindref="compound">ImFontBuildSrcData</ref>&amp;<sp/>src_tmp<sp/>=<sp/>src_tmp_array[src_i];</highlight></codeline>
<codeline lineno="2468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_font_config" kindref="compound">ImFontConfig</ref>&amp;<sp/>cfg<sp/>=<sp/>atlas-&gt;<ref refid="struct_im_font_atlas_1afa4f7459807763d032fe2d0022fc0823" kindref="member">ConfigData</ref>[src_i];</highlight></codeline>
<codeline lineno="2469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imgui_8h_1acb09e7dc42e8e3cefb0ecaa197978920" kindref="member">IM_ASSERT</ref>(cfg.<ref refid="struct_im_font_config_1a561773c311f6cf6de00642c2801e7b92" kindref="member">DstFont</ref><sp/>&amp;&amp;<sp/>(!cfg.<ref refid="struct_im_font_config_1a561773c311f6cf6de00642c2801e7b92" kindref="member">DstFont</ref>-&gt;<ref refid="struct_im_font_1a97dafa61cc94e84be396d69b0d42b1ce" kindref="member">IsLoaded</ref>()<sp/>||<sp/>cfg.<ref refid="struct_im_font_config_1a561773c311f6cf6de00642c2801e7b92" kindref="member">DstFont</ref>-&gt;<ref refid="struct_im_font_1a8a5e0df6be5e3cabe91ae830524db960" kindref="member">ContainerAtlas</ref><sp/>==<sp/>atlas));</highlight></codeline>
<codeline lineno="2470"><highlight class="normal"></highlight></codeline>
<codeline lineno="2471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>index<sp/>from<sp/>cfg.DstFont<sp/>(we<sp/>allow<sp/>the<sp/>user<sp/>to<sp/>set<sp/>cfg.DstFont.<sp/>Also<sp/>it<sp/>makes<sp/>casual<sp/>debugging<sp/>nicer<sp/>than<sp/>when<sp/>storing<sp/>indices)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src_tmp.<ref refid="struct_im_font_build_src_data_1a1fa5c70e2d29e53743557d55050ab912" kindref="member">DstIndex</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="2473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>output_i<sp/>=<sp/>0;<sp/>output_i<sp/>&lt;<sp/>atlas-&gt;<ref refid="struct_im_font_atlas_1a0198aeb17ef8bb810ccc8db103b93b1f" kindref="member">Fonts</ref>.<ref refid="struct_im_vector_1abbfd157947f66280d27b21d70a16df8d" kindref="member">Size</ref><sp/>&amp;&amp;<sp/>src_tmp.<ref refid="struct_im_font_build_src_data_1a1fa5c70e2d29e53743557d55050ab912" kindref="member">DstIndex</ref><sp/>==<sp/>-1;<sp/>output_i++)</highlight></codeline>
<codeline lineno="2474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cfg.<ref refid="struct_im_font_config_1a561773c311f6cf6de00642c2801e7b92" kindref="member">DstFont</ref><sp/>==<sp/>atlas-&gt;<ref refid="struct_im_font_atlas_1a0198aeb17ef8bb810ccc8db103b93b1f" kindref="member">Fonts</ref>[output_i])</highlight></codeline>
<codeline lineno="2475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src_tmp.<ref refid="struct_im_font_build_src_data_1a1fa5c70e2d29e53743557d55050ab912" kindref="member">DstIndex</ref><sp/>=<sp/>output_i;</highlight></codeline>
<codeline lineno="2476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(src_tmp.<ref refid="struct_im_font_build_src_data_1a1fa5c70e2d29e53743557d55050ab912" kindref="member">DstIndex</ref><sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="2477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imgui_8h_1acb09e7dc42e8e3cefb0ecaa197978920" kindref="member">IM_ASSERT</ref>(src_tmp.<ref refid="struct_im_font_build_src_data_1a1fa5c70e2d29e53743557d55050ab912" kindref="member">DstIndex</ref><sp/>!=<sp/>-1);<sp/></highlight><highlight class="comment">//<sp/>cfg.DstFont<sp/>not<sp/>pointing<sp/>within<sp/>atlas-&gt;Fonts[]<sp/>array?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>helper<sp/>structure<sp/>for<sp/>font<sp/>loading<sp/>and<sp/>verify<sp/>that<sp/>the<sp/>TTF/OTF<sp/>data<sp/>is<sp/>correct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>font_offset<sp/>=<sp/><ref refid="imstb__truetype_8h_1a5ba17159df62ca39649e6f2231ac6e89" kindref="member">stbtt_GetFontOffsetForIndex</ref>((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)cfg.<ref refid="struct_im_font_config_1a0265861de7ba7b0d953e1c97e7a50cf3" kindref="member">FontData</ref>,<sp/>cfg.<ref refid="struct_im_font_config_1ab37ee3d5cf76000a4000e9296161e527" kindref="member">FontNo</ref>);</highlight></codeline>
<codeline lineno="2483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imgui_8h_1acb09e7dc42e8e3cefb0ecaa197978920" kindref="member">IM_ASSERT</ref>(font_offset<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;FontData<sp/>is<sp/>incorrect,<sp/>or<sp/>FontNo<sp/>cannot<sp/>be<sp/>found.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="imstb__truetype_8h_1ac3b6bda1851d0b1a4fd53f5f353668e5" kindref="member">stbtt_InitFont</ref>(&amp;src_tmp.<ref refid="struct_im_font_build_src_data_1aa7499553235c2f084be3d2e2e030c3cc" kindref="member">FontInfo</ref>,<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)cfg.<ref refid="struct_im_font_config_1a0265861de7ba7b0d953e1c97e7a50cf3" kindref="member">FontData</ref>,<sp/>font_offset))</highlight></codeline>
<codeline lineno="2485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imgui_8h_1acb09e7dc42e8e3cefb0ecaa197978920" kindref="member">IM_ASSERT</ref>(0<sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;stbtt_InitFont():<sp/>failed<sp/>to<sp/>parse<sp/>FontData.<sp/>It<sp/>is<sp/>correct<sp/>and<sp/>complete?<sp/>Check<sp/>FontDataSize.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2489"><highlight class="normal"></highlight></codeline>
<codeline lineno="2490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Measure<sp/>highest<sp/>codepoints</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_font_build_dst_data" kindref="compound">ImFontBuildDstData</ref>&amp;<sp/>dst_tmp<sp/>=<sp/>dst_tmp_array[src_tmp.<ref refid="struct_im_font_build_src_data_1a1fa5c70e2d29e53743557d55050ab912" kindref="member">DstIndex</ref>];</highlight></codeline>
<codeline lineno="2492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src_tmp.<ref refid="struct_im_font_build_src_data_1a30187b934b16d7bef600887f1cc6614f" kindref="member">SrcRanges</ref><sp/>=<sp/>cfg.<ref refid="struct_im_font_config_1aa174ceff80323012cd1b717d864258dd" kindref="member">GlyphRanges</ref><sp/>?<sp/>cfg.<ref refid="struct_im_font_config_1aa174ceff80323012cd1b717d864258dd" kindref="member">GlyphRanges</ref><sp/>:<sp/>atlas-&gt;<ref refid="struct_im_font_atlas_1adec0df140eb1dc01c2a22a5253d62820" kindref="member">GetGlyphRangesDefault</ref>();</highlight></codeline>
<codeline lineno="2493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1a1ecb49ee827c39a982f1e1467910d020" kindref="member">ImWchar</ref>*<sp/>src_range<sp/>=<sp/>src_tmp.<ref refid="struct_im_font_build_src_data_1a30187b934b16d7bef600887f1cc6614f" kindref="member">SrcRanges</ref>;<sp/>src_range[0]<sp/>&amp;&amp;<sp/>src_range[1];<sp/>src_range<sp/>+=<sp/>2)</highlight></codeline>
<codeline lineno="2494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>for<sp/>valid<sp/>range.<sp/>This<sp/>may<sp/>also<sp/>help<sp/>detect<sp/>*some*<sp/>dangling<sp/>pointers,<sp/>because<sp/>a<sp/>common</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>user<sp/>error<sp/>is<sp/>to<sp/>setup<sp/>ImFontConfig::GlyphRanges<sp/>with<sp/>a<sp/>pointer<sp/>to<sp/>data<sp/>that<sp/>isn&apos;t<sp/>persistent.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imgui_8h_1acb09e7dc42e8e3cefb0ecaa197978920" kindref="member">IM_ASSERT</ref>(src_range[0]<sp/>&lt;=<sp/>src_range[1]);</highlight></codeline>
<codeline lineno="2498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src_tmp.<ref refid="struct_im_font_build_src_data_1a40ce6c1a652c3d3c67d094e064691da1" kindref="member">GlyphsHighest</ref><sp/>=<sp/>ImMax(src_tmp.<ref refid="struct_im_font_build_src_data_1a40ce6c1a652c3d3c67d094e064691da1" kindref="member">GlyphsHighest</ref>,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)src_range[1]);</highlight></codeline>
<codeline lineno="2499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst_tmp.<ref refid="struct_im_font_build_dst_data_1ab13d637daba34891db2968684647a728" kindref="member">SrcCount</ref>++;</highlight></codeline>
<codeline lineno="2501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst_tmp.<ref refid="struct_im_font_build_dst_data_1a2c0592f57b8381a9d106b6881491b29c" kindref="member">GlyphsHighest</ref><sp/>=<sp/>ImMax(dst_tmp.<ref refid="struct_im_font_build_dst_data_1a2c0592f57b8381a9d106b6881491b29c" kindref="member">GlyphsHighest</ref>,<sp/>src_tmp.<ref refid="struct_im_font_build_src_data_1a40ce6c1a652c3d3c67d094e064691da1" kindref="member">GlyphsHighest</ref>);</highlight></codeline>
<codeline lineno="2502"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2503"><highlight class="normal"></highlight></codeline>
<codeline lineno="2504"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>2.<sp/>For<sp/>every<sp/>requested<sp/>codepoint,<sp/>check<sp/>for<sp/>their<sp/>presence<sp/>in<sp/>the<sp/>font<sp/>data,<sp/>and<sp/>handle<sp/>redundancy<sp/>or<sp/>overlaps<sp/>between<sp/>source<sp/>fonts<sp/>to<sp/>avoid<sp/>unused<sp/>glyphs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2505"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>total_glyphs_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2506"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>src_i<sp/>=<sp/>0;<sp/>src_i<sp/>&lt;<sp/>src_tmp_array.<ref refid="struct_im_vector_1abbfd157947f66280d27b21d70a16df8d" kindref="member">Size</ref>;<sp/>src_i++)</highlight></codeline>
<codeline lineno="2507"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_font_build_src_data" kindref="compound">ImFontBuildSrcData</ref>&amp;<sp/>src_tmp<sp/>=<sp/>src_tmp_array[src_i];</highlight></codeline>
<codeline lineno="2509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_font_build_dst_data" kindref="compound">ImFontBuildDstData</ref>&amp;<sp/>dst_tmp<sp/>=<sp/>dst_tmp_array[src_tmp.<ref refid="struct_im_font_build_src_data_1a1fa5c70e2d29e53743557d55050ab912" kindref="member">DstIndex</ref>];</highlight></codeline>
<codeline lineno="2510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src_tmp.<ref refid="struct_im_font_build_src_data_1ad767ca332169ff5df851170eb970b96a" kindref="member">GlyphsSet</ref>.<ref refid="struct_im_bit_vector_1a2e25a0809000ad27bfc3fb89f3d04829" kindref="member">Create</ref>(src_tmp.<ref refid="struct_im_font_build_src_data_1a40ce6c1a652c3d3c67d094e064691da1" kindref="member">GlyphsHighest</ref><sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="2511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dst_tmp.<ref refid="struct_im_font_build_dst_data_1acb81b9abe454d0a989ae467a5b208d9a" kindref="member">GlyphsSet</ref>.<ref refid="struct_im_bit_vector_1a419abda300de5270b4475eac6ce250c2" kindref="member">Storage</ref>.<ref refid="struct_im_vector_1aa53e48a5272f4bad1099368769514ff1" kindref="member">empty</ref>())</highlight></codeline>
<codeline lineno="2512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst_tmp.<ref refid="struct_im_font_build_dst_data_1acb81b9abe454d0a989ae467a5b208d9a" kindref="member">GlyphsSet</ref>.<ref refid="struct_im_bit_vector_1a2e25a0809000ad27bfc3fb89f3d04829" kindref="member">Create</ref>(dst_tmp.<ref refid="struct_im_font_build_dst_data_1a2c0592f57b8381a9d106b6881491b29c" kindref="member">GlyphsHighest</ref><sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="2513"><highlight class="normal"></highlight></codeline>
<codeline lineno="2514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1a1ecb49ee827c39a982f1e1467910d020" kindref="member">ImWchar</ref>*<sp/>src_range<sp/>=<sp/>src_tmp.<ref refid="struct_im_font_build_src_data_1a30187b934b16d7bef600887f1cc6614f" kindref="member">SrcRanges</ref>;<sp/>src_range[0]<sp/>&amp;&amp;<sp/>src_range[1];<sp/>src_range<sp/>+=<sp/>2)</highlight></codeline>
<codeline lineno="2515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>codepoint<sp/>=<sp/>src_range[0];<sp/>codepoint<sp/>&lt;=<sp/>src_range[1];<sp/>codepoint++)</highlight></codeline>
<codeline lineno="2516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dst_tmp.<ref refid="struct_im_font_build_dst_data_1acb81b9abe454d0a989ae467a5b208d9a" kindref="member">GlyphsSet</ref>.<ref refid="struct_im_bit_vector_1ac472600d0eb12fabafae58db68ab7e2b" kindref="member">TestBit</ref>(codepoint))<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Don&apos;t<sp/>overwrite<sp/>existing<sp/>glyphs.<sp/>We<sp/>could<sp/>make<sp/>this<sp/>an<sp/>option<sp/>for<sp/>MergeMode<sp/>(e.g.<sp/>MergeOverwrite==true)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="imstb__truetype_8h_1a213d5628c6b2e5c107b99378eefc6e3a" kindref="member">stbtt_FindGlyphIndex</ref>(&amp;src_tmp.<ref refid="struct_im_font_build_src_data_1aa7499553235c2f084be3d2e2e030c3cc" kindref="member">FontInfo</ref>,<sp/>codepoint))<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>It<sp/>is<sp/>actually<sp/>in<sp/>the<sp/>font?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2521"><highlight class="normal"></highlight></codeline>
<codeline lineno="2522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>to<sp/>avail<sp/>set/counters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src_tmp.<ref refid="struct_im_font_build_src_data_1a73600dcc4e6c8d6b499c032c4ed0e823" kindref="member">GlyphsCount</ref>++;</highlight></codeline>
<codeline lineno="2524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst_tmp.<ref refid="struct_im_font_build_dst_data_1aeb9950177ed2ec156332ec8c3683c2e2" kindref="member">GlyphsCount</ref>++;</highlight></codeline>
<codeline lineno="2525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src_tmp.<ref refid="struct_im_font_build_src_data_1ad767ca332169ff5df851170eb970b96a" kindref="member">GlyphsSet</ref>.<ref refid="struct_im_bit_vector_1afab0abbd320b1f33d1988760be7cd39b" kindref="member">SetBit</ref>(codepoint);</highlight></codeline>
<codeline lineno="2526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst_tmp.<ref refid="struct_im_font_build_dst_data_1acb81b9abe454d0a989ae467a5b208d9a" kindref="member">GlyphsSet</ref>.<ref refid="struct_im_bit_vector_1afab0abbd320b1f33d1988760be7cd39b" kindref="member">SetBit</ref>(codepoint);</highlight></codeline>
<codeline lineno="2527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>total_glyphs_count++;</highlight></codeline>
<codeline lineno="2528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2529"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2530"><highlight class="normal"></highlight></codeline>
<codeline lineno="2531"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>3.<sp/>Unpack<sp/>our<sp/>bit<sp/>map<sp/>into<sp/>a<sp/>flat<sp/>list<sp/>(we<sp/>now<sp/>have<sp/>all<sp/>the<sp/>Unicode<sp/>points<sp/>that<sp/>we<sp/>know<sp/>are<sp/>requested<sp/>_and_<sp/>available<sp/>_and_<sp/>not<sp/>overlapping<sp/>another)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2532"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>src_i<sp/>=<sp/>0;<sp/>src_i<sp/>&lt;<sp/>src_tmp_array.<ref refid="struct_im_vector_1abbfd157947f66280d27b21d70a16df8d" kindref="member">Size</ref>;<sp/>src_i++)</highlight></codeline>
<codeline lineno="2533"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_font_build_src_data" kindref="compound">ImFontBuildSrcData</ref>&amp;<sp/>src_tmp<sp/>=<sp/>src_tmp_array[src_i];</highlight></codeline>
<codeline lineno="2535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src_tmp.<ref refid="struct_im_font_build_src_data_1ae4d653fb221fc19a30a2117f73043377" kindref="member">GlyphsList</ref>.<ref refid="struct_im_vector_1a0f14f5736c3372157856eebb67123b75" kindref="member">reserve</ref>(src_tmp.<ref refid="struct_im_font_build_src_data_1a73600dcc4e6c8d6b499c032c4ed0e823" kindref="member">GlyphsCount</ref>);</highlight></codeline>
<codeline lineno="2536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnpackBitVectorToFlatIndexList(&amp;src_tmp.<ref refid="struct_im_font_build_src_data_1ad767ca332169ff5df851170eb970b96a" kindref="member">GlyphsSet</ref>,<sp/>&amp;src_tmp.<ref refid="struct_im_font_build_src_data_1ae4d653fb221fc19a30a2117f73043377" kindref="member">GlyphsList</ref>);</highlight></codeline>
<codeline lineno="2537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src_tmp.<ref refid="struct_im_font_build_src_data_1ad767ca332169ff5df851170eb970b96a" kindref="member">GlyphsSet</ref>.<ref refid="struct_im_bit_vector_1a6486ac9a357400a42af07909f937a659" kindref="member">Clear</ref>();</highlight></codeline>
<codeline lineno="2538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imgui_8h_1acb09e7dc42e8e3cefb0ecaa197978920" kindref="member">IM_ASSERT</ref>(src_tmp.<ref refid="struct_im_font_build_src_data_1ae4d653fb221fc19a30a2117f73043377" kindref="member">GlyphsList</ref>.<ref refid="struct_im_vector_1abbfd157947f66280d27b21d70a16df8d" kindref="member">Size</ref><sp/>==<sp/>src_tmp.<ref refid="struct_im_font_build_src_data_1a73600dcc4e6c8d6b499c032c4ed0e823" kindref="member">GlyphsCount</ref>);</highlight></codeline>
<codeline lineno="2539"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2540"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dst_i<sp/>=<sp/>0;<sp/>dst_i<sp/>&lt;<sp/>dst_tmp_array.<ref refid="struct_im_vector_1abbfd157947f66280d27b21d70a16df8d" kindref="member">Size</ref>;<sp/>dst_i++)</highlight></codeline>
<codeline lineno="2541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst_tmp_array[dst_i].GlyphsSet.Clear();</highlight></codeline>
<codeline lineno="2542"><highlight class="normal"><sp/><sp/><sp/><sp/>dst_tmp_array.<ref refid="struct_im_vector_1ae2d401b4ec5f1113cdb8edb5a61a38f7" kindref="member">clear</ref>();</highlight></codeline>
<codeline lineno="2543"><highlight class="normal"></highlight></codeline>
<codeline lineno="2544"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Allocate<sp/>packing<sp/>character<sp/>data<sp/>and<sp/>flag<sp/>packed<sp/>characters<sp/>buffer<sp/>as<sp/>non-packed<sp/>(x0=y0=x1=y1=0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2545"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(We<sp/>technically<sp/>don&apos;t<sp/>need<sp/>to<sp/>zero-clear<sp/>buf_rects,<sp/>but<sp/>let&apos;s<sp/>do<sp/>it<sp/>for<sp/>the<sp/>sake<sp/>of<sp/>sanity)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2546"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vector" kindref="compound">ImVector&lt;stbrp_rect&gt;</ref><sp/>buf_rects;</highlight></codeline>
<codeline lineno="2547"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vector" kindref="compound">ImVector&lt;stbtt_packedchar&gt;</ref><sp/>buf_packedchars;</highlight></codeline>
<codeline lineno="2548"><highlight class="normal"><sp/><sp/><sp/><sp/>buf_rects.<ref refid="struct_im_vector_1ac371dd62e56ae486b1a5038cf07eee56" kindref="member">resize</ref>(total_glyphs_count);</highlight></codeline>
<codeline lineno="2549"><highlight class="normal"><sp/><sp/><sp/><sp/>buf_packedchars.<ref refid="struct_im_vector_1ac371dd62e56ae486b1a5038cf07eee56" kindref="member">resize</ref>(total_glyphs_count);</highlight></codeline>
<codeline lineno="2550"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(buf_rects.<ref refid="struct_im_vector_1ac0e46e8b30cb079d93c8f0aad7d7cbd0" kindref="member">Data</ref>,<sp/>0,<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)buf_rects.<ref refid="struct_im_vector_1ade9f2e937e47b0e0f9970dcfba038204" kindref="member">size_in_bytes</ref>());</highlight></codeline>
<codeline lineno="2551"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(buf_packedchars.<ref refid="struct_im_vector_1ac0e46e8b30cb079d93c8f0aad7d7cbd0" kindref="member">Data</ref>,<sp/>0,<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)buf_packedchars.<ref refid="struct_im_vector_1ade9f2e937e47b0e0f9970dcfba038204" kindref="member">size_in_bytes</ref>());</highlight></codeline>
<codeline lineno="2552"><highlight class="normal"></highlight></codeline>
<codeline lineno="2553"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>4.<sp/>Gather<sp/>glyphs<sp/>sizes<sp/>so<sp/>we<sp/>can<sp/>pack<sp/>them<sp/>in<sp/>our<sp/>virtual<sp/>canvas.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2554"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>total_surface<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2555"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>buf_rects_out_n<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2556"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>buf_packedchars_out_n<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2557"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>src_i<sp/>=<sp/>0;<sp/>src_i<sp/>&lt;<sp/>src_tmp_array.<ref refid="struct_im_vector_1abbfd157947f66280d27b21d70a16df8d" kindref="member">Size</ref>;<sp/>src_i++)</highlight></codeline>
<codeline lineno="2558"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_font_build_src_data" kindref="compound">ImFontBuildSrcData</ref>&amp;<sp/>src_tmp<sp/>=<sp/>src_tmp_array[src_i];</highlight></codeline>
<codeline lineno="2560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(src_tmp.<ref refid="struct_im_font_build_src_data_1a73600dcc4e6c8d6b499c032c4ed0e823" kindref="member">GlyphsCount</ref><sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="2561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2562"><highlight class="normal"></highlight></codeline>
<codeline lineno="2563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src_tmp.<ref refid="struct_im_font_build_src_data_1a918baffa45001ec6ba866ad18a338969" kindref="member">Rects</ref><sp/>=<sp/>&amp;buf_rects[buf_rects_out_n];</highlight></codeline>
<codeline lineno="2564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src_tmp.<ref refid="struct_im_font_build_src_data_1a7c85b2866a23a42357f19c05df2b7f3f" kindref="member">PackedChars</ref><sp/>=<sp/>&amp;buf_packedchars[buf_packedchars_out_n];</highlight></codeline>
<codeline lineno="2565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf_rects_out_n<sp/>+=<sp/>src_tmp.<ref refid="struct_im_font_build_src_data_1a73600dcc4e6c8d6b499c032c4ed0e823" kindref="member">GlyphsCount</ref>;</highlight></codeline>
<codeline lineno="2566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf_packedchars_out_n<sp/>+=<sp/>src_tmp.<ref refid="struct_im_font_build_src_data_1a73600dcc4e6c8d6b499c032c4ed0e823" kindref="member">GlyphsCount</ref>;</highlight></codeline>
<codeline lineno="2567"><highlight class="normal"></highlight></codeline>
<codeline lineno="2568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Convert<sp/>our<sp/>ranges<sp/>in<sp/>the<sp/>format<sp/>stb_truetype<sp/>wants</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_font_config" kindref="compound">ImFontConfig</ref>&amp;<sp/>cfg<sp/>=<sp/>atlas-&gt;<ref refid="struct_im_font_atlas_1afa4f7459807763d032fe2d0022fc0823" kindref="member">ConfigData</ref>[src_i];</highlight></codeline>
<codeline lineno="2570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src_tmp.<ref refid="struct_im_font_build_src_data_1a98c6b58804c9be957ea6ce5b1732ad52" kindref="member">PackRange</ref>.<ref refid="structstbtt__pack__range_1a296916dc971e5e7627822fe98dc42828" kindref="member">font_size</ref><sp/>=<sp/>cfg.<ref refid="struct_im_font_config_1a2eff9cc7a11461414402f08ab910d277" kindref="member">SizePixels</ref><sp/>*<sp/>cfg.<ref refid="struct_im_font_config_1a16af4c04622910d619882b9d068fddc9" kindref="member">RasterizerDensity</ref>;</highlight></codeline>
<codeline lineno="2571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src_tmp.<ref refid="struct_im_font_build_src_data_1a98c6b58804c9be957ea6ce5b1732ad52" kindref="member">PackRange</ref>.<ref refid="structstbtt__pack__range_1a3b414cbee1e164c29dd138e0ae3d5759" kindref="member">first_unicode_codepoint_in_range</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src_tmp.<ref refid="struct_im_font_build_src_data_1a98c6b58804c9be957ea6ce5b1732ad52" kindref="member">PackRange</ref>.<ref refid="structstbtt__pack__range_1a1567aa5455e1251529a91b46261368cf" kindref="member">array_of_unicode_codepoints</ref><sp/>=<sp/>src_tmp.<ref refid="struct_im_font_build_src_data_1ae4d653fb221fc19a30a2117f73043377" kindref="member">GlyphsList</ref>.<ref refid="struct_im_vector_1ac0e46e8b30cb079d93c8f0aad7d7cbd0" kindref="member">Data</ref>;</highlight></codeline>
<codeline lineno="2573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src_tmp.<ref refid="struct_im_font_build_src_data_1a98c6b58804c9be957ea6ce5b1732ad52" kindref="member">PackRange</ref>.<ref refid="structstbtt__pack__range_1a046d65b6ffb65fb998d471ba098e2e23" kindref="member">num_chars</ref><sp/>=<sp/>src_tmp.<ref refid="struct_im_font_build_src_data_1ae4d653fb221fc19a30a2117f73043377" kindref="member">GlyphsList</ref>.<ref refid="struct_im_vector_1abbfd157947f66280d27b21d70a16df8d" kindref="member">Size</ref>;</highlight></codeline>
<codeline lineno="2574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src_tmp.<ref refid="struct_im_font_build_src_data_1a98c6b58804c9be957ea6ce5b1732ad52" kindref="member">PackRange</ref>.<ref refid="structstbtt__pack__range_1aa8f7ddd637ed341ea39b08466fab9284" kindref="member">chardata_for_range</ref><sp/>=<sp/>src_tmp.<ref refid="struct_im_font_build_src_data_1a7c85b2866a23a42357f19c05df2b7f3f" kindref="member">PackedChars</ref>;</highlight></codeline>
<codeline lineno="2575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src_tmp.<ref refid="struct_im_font_build_src_data_1a98c6b58804c9be957ea6ce5b1732ad52" kindref="member">PackRange</ref>.<ref refid="structstbtt__pack__range_1a7a642139ce446c58fde5c48553bcf008" kindref="member">h_oversample</ref><sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>char)cfg.<ref refid="struct_im_font_config_1ab460df0d8019ffa8d124e8988c710910" kindref="member">OversampleH</ref>;</highlight></codeline>
<codeline lineno="2576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src_tmp.<ref refid="struct_im_font_build_src_data_1a98c6b58804c9be957ea6ce5b1732ad52" kindref="member">PackRange</ref>.<ref refid="structstbtt__pack__range_1a6288f14006e257544db3d015c32b4113" kindref="member">v_oversample</ref><sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>char)cfg.<ref refid="struct_im_font_config_1a8018f84c60bfafb2b4629aeb77a047cb" kindref="member">OversampleV</ref>;</highlight></codeline>
<codeline lineno="2577"><highlight class="normal"></highlight></codeline>
<codeline lineno="2578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Gather<sp/>the<sp/>sizes<sp/>of<sp/>all<sp/>rectangles<sp/>we<sp/>will<sp/>need<sp/>to<sp/>pack<sp/>(this<sp/>loop<sp/>is<sp/>based<sp/>on<sp/>stbtt_PackFontRangesGatherRects)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale<sp/>=<sp/>(cfg.<ref refid="struct_im_font_config_1a2eff9cc7a11461414402f08ab910d277" kindref="member">SizePixels</ref><sp/>&gt;<sp/>0.0f)<sp/>?<sp/><ref refid="imstb__truetype_8h_1aad275d7211530a3d817fcd8647690b7b" kindref="member">stbtt_ScaleForPixelHeight</ref>(&amp;src_tmp.<ref refid="struct_im_font_build_src_data_1aa7499553235c2f084be3d2e2e030c3cc" kindref="member">FontInfo</ref>,<sp/>cfg.<ref refid="struct_im_font_config_1a2eff9cc7a11461414402f08ab910d277" kindref="member">SizePixels</ref><sp/>*<sp/>cfg.<ref refid="struct_im_font_config_1a16af4c04622910d619882b9d068fddc9" kindref="member">RasterizerDensity</ref>)<sp/>:<sp/><ref refid="imstb__truetype_8h_1a76da72e13355eae763c567ffde0b4607" kindref="member">stbtt_ScaleForMappingEmToPixels</ref>(&amp;src_tmp.<ref refid="struct_im_font_build_src_data_1aa7499553235c2f084be3d2e2e030c3cc" kindref="member">FontInfo</ref>,<sp/>-cfg.<ref refid="struct_im_font_config_1a2eff9cc7a11461414402f08ab910d277" kindref="member">SizePixels</ref><sp/>*<sp/>cfg.<ref refid="struct_im_font_config_1a16af4c04622910d619882b9d068fddc9" kindref="member">RasterizerDensity</ref>);</highlight></codeline>
<codeline lineno="2580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>padding<sp/>=<sp/>atlas-&gt;<ref refid="struct_im_font_atlas_1a32034b2aac4616d8c27ee666a1fd1b62" kindref="member">TexGlyphPadding</ref>;</highlight></codeline>
<codeline lineno="2581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>glyph_i<sp/>=<sp/>0;<sp/>glyph_i<sp/>&lt;<sp/>src_tmp.<ref refid="struct_im_font_build_src_data_1ae4d653fb221fc19a30a2117f73043377" kindref="member">GlyphsList</ref>.<ref refid="struct_im_vector_1abbfd157947f66280d27b21d70a16df8d" kindref="member">Size</ref>;<sp/>glyph_i++)</highlight></codeline>
<codeline lineno="2582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x0,<sp/>y0,<sp/>x1,<sp/>y1;</highlight></codeline>
<codeline lineno="2584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>glyph_index_in_font<sp/>=<sp/><ref refid="imstb__truetype_8h_1a213d5628c6b2e5c107b99378eefc6e3a" kindref="member">stbtt_FindGlyphIndex</ref>(&amp;src_tmp.<ref refid="struct_im_font_build_src_data_1aa7499553235c2f084be3d2e2e030c3cc" kindref="member">FontInfo</ref>,<sp/>src_tmp.<ref refid="struct_im_font_build_src_data_1ae4d653fb221fc19a30a2117f73043377" kindref="member">GlyphsList</ref>[glyph_i]);</highlight></codeline>
<codeline lineno="2585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imgui_8h_1acb09e7dc42e8e3cefb0ecaa197978920" kindref="member">IM_ASSERT</ref>(glyph_index_in_font<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="2586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imstb__truetype_8h_1a597ef6b92ab0b5800c74478548b4782f" kindref="member">stbtt_GetGlyphBitmapBoxSubpixel</ref>(&amp;src_tmp.<ref refid="struct_im_font_build_src_data_1aa7499553235c2f084be3d2e2e030c3cc" kindref="member">FontInfo</ref>,<sp/>glyph_index_in_font,<sp/>scale<sp/>*<sp/>cfg.<ref refid="struct_im_font_config_1ab460df0d8019ffa8d124e8988c710910" kindref="member">OversampleH</ref>,<sp/>scale<sp/>*<sp/>cfg.<ref refid="struct_im_font_config_1a8018f84c60bfafb2b4629aeb77a047cb" kindref="member">OversampleV</ref>,<sp/>0,<sp/>0,<sp/>&amp;x0,<sp/>&amp;y0,<sp/>&amp;x1,<sp/>&amp;y1);</highlight></codeline>
<codeline lineno="2587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src_tmp.<ref refid="struct_im_font_build_src_data_1a918baffa45001ec6ba866ad18a338969" kindref="member">Rects</ref>[glyph_i].<ref refid="structstbrp__rect_1a248d43f1eb979c1e7b92ba6df431dec5" kindref="member">w</ref><sp/>=<sp/>(<ref refid="imstb__rectpack_8h_1a4a396a45893c12de32e2d598abd6b302" kindref="member">stbrp_coord</ref>)(x1<sp/>-<sp/>x0<sp/>+<sp/>padding<sp/>+<sp/>cfg.<ref refid="struct_im_font_config_1ab460df0d8019ffa8d124e8988c710910" kindref="member">OversampleH</ref><sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="2588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src_tmp.<ref refid="struct_im_font_build_src_data_1a918baffa45001ec6ba866ad18a338969" kindref="member">Rects</ref>[glyph_i].<ref refid="structstbrp__rect_1af68de2dadc7972b7c089d5e0c0558398" kindref="member">h</ref><sp/>=<sp/>(<ref refid="imstb__rectpack_8h_1a4a396a45893c12de32e2d598abd6b302" kindref="member">stbrp_coord</ref>)(y1<sp/>-<sp/>y0<sp/>+<sp/>padding<sp/>+<sp/>cfg.<ref refid="struct_im_font_config_1a8018f84c60bfafb2b4629aeb77a047cb" kindref="member">OversampleV</ref><sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="2589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>total_surface<sp/>+=<sp/>src_tmp.<ref refid="struct_im_font_build_src_data_1a918baffa45001ec6ba866ad18a338969" kindref="member">Rects</ref>[glyph_i].<ref refid="structstbrp__rect_1a248d43f1eb979c1e7b92ba6df431dec5" kindref="member">w</ref><sp/>*<sp/>src_tmp.<ref refid="struct_im_font_build_src_data_1a918baffa45001ec6ba866ad18a338969" kindref="member">Rects</ref>[glyph_i].<ref refid="structstbrp__rect_1af68de2dadc7972b7c089d5e0c0558398" kindref="member">h</ref>;</highlight></codeline>
<codeline lineno="2590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2591"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2592"><highlight class="normal"></highlight></codeline>
<codeline lineno="2593"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>need<sp/>a<sp/>width<sp/>for<sp/>the<sp/>skyline<sp/>algorithm,<sp/>any<sp/>width!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2594"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>exact<sp/>width<sp/>doesn&apos;t<sp/>really<sp/>matter<sp/>much,<sp/>but<sp/>some<sp/>API/GPU<sp/>have<sp/>texture<sp/>size<sp/>limitations<sp/>and<sp/>increasing<sp/>width<sp/>can<sp/>decrease<sp/>height.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2595"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>User<sp/>can<sp/>override<sp/>TexDesiredWidth<sp/>and<sp/>TexGlyphPadding<sp/>if<sp/>they<sp/>wish,<sp/>otherwise<sp/>we<sp/>use<sp/>a<sp/>simple<sp/>heuristic<sp/>to<sp/>select<sp/>the<sp/>width<sp/>based<sp/>on<sp/>expected<sp/>surface.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2596"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>surface_sqrt<sp/>=<sp/>(int)<ref refid="imgui__internal_8h_1af45b12e2af4037adec57b0a9488b45c2" kindref="member">ImSqrt</ref>((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)total_surface)<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="2597"><highlight class="normal"><sp/><sp/><sp/><sp/>atlas-&gt;<ref refid="struct_im_font_atlas_1a5ef74d37ec01d9e8aac5c57433296ce3" kindref="member">TexHeight</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2598"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(atlas-&gt;<ref refid="struct_im_font_atlas_1aa1d62d7da5633f894dbe881547e9de7c" kindref="member">TexDesiredWidth</ref><sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="2599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atlas-&gt;<ref refid="struct_im_font_atlas_1a2d0662502433e7a87b3aa4681ba17aa3" kindref="member">TexWidth</ref><sp/>=<sp/>atlas-&gt;<ref refid="struct_im_font_atlas_1aa1d62d7da5633f894dbe881547e9de7c" kindref="member">TexDesiredWidth</ref>;</highlight></codeline>
<codeline lineno="2600"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atlas-&gt;<ref refid="struct_im_font_atlas_1a2d0662502433e7a87b3aa4681ba17aa3" kindref="member">TexWidth</ref><sp/>=<sp/>(surface_sqrt<sp/>&gt;=<sp/>4096<sp/>*<sp/>0.7f)<sp/>?<sp/>4096<sp/>:<sp/>(surface_sqrt<sp/>&gt;=<sp/>2048<sp/>*<sp/>0.7f)<sp/>?<sp/>2048<sp/>:<sp/>(surface_sqrt<sp/>&gt;=<sp/>1024<sp/>*<sp/>0.7f)<sp/>?<sp/>1024<sp/>:<sp/>512;</highlight></codeline>
<codeline lineno="2602"><highlight class="normal"></highlight></codeline>
<codeline lineno="2603"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>5.<sp/>Start<sp/>packing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2604"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Pack<sp/>our<sp/>extra<sp/>data<sp/>rectangles<sp/>first,<sp/>so<sp/>it<sp/>will<sp/>be<sp/>on<sp/>the<sp/>upper-left<sp/>corner<sp/>of<sp/>our<sp/>texture<sp/>(UV<sp/>will<sp/>have<sp/>small<sp/>values).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2605"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>TEX_HEIGHT_MAX<sp/>=<sp/>1024<sp/>*<sp/>32;</highlight></codeline>
<codeline lineno="2606"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structstbtt__pack__context" kindref="compound">stbtt_pack_context</ref><sp/>spc<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="2607"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imstb__truetype_8h_1adfc8faff4ebfbad1ce0bff9b4ebc691c" kindref="member">stbtt_PackBegin</ref>(&amp;spc,<sp/>NULL,<sp/>atlas-&gt;<ref refid="struct_im_font_atlas_1a2d0662502433e7a87b3aa4681ba17aa3" kindref="member">TexWidth</ref>,<sp/>TEX_HEIGHT_MAX,<sp/>0,<sp/>atlas-&gt;<ref refid="struct_im_font_atlas_1a32034b2aac4616d8c27ee666a1fd1b62" kindref="member">TexGlyphPadding</ref>,<sp/>NULL);</highlight></codeline>
<codeline lineno="2608"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui__draw_8cpp_1add0fcd1708ca3540688d8277fc01bf3f" kindref="member">ImFontAtlasBuildPackCustomRects</ref>(atlas,<sp/>spc.<ref refid="structstbtt__pack__context_1a303a72f0a39479b439fa531925be7031" kindref="member">pack_info</ref>);</highlight></codeline>
<codeline lineno="2609"><highlight class="normal"></highlight></codeline>
<codeline lineno="2610"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>6.<sp/>Pack<sp/>each<sp/>source<sp/>font.<sp/>No<sp/>rendering<sp/>yet,<sp/>we<sp/>are<sp/>working<sp/>with<sp/>rectangles<sp/>in<sp/>an<sp/>infinitely<sp/>tall<sp/>texture<sp/>at<sp/>this<sp/>point.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2611"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>src_i<sp/>=<sp/>0;<sp/>src_i<sp/>&lt;<sp/>src_tmp_array.<ref refid="struct_im_vector_1abbfd157947f66280d27b21d70a16df8d" kindref="member">Size</ref>;<sp/>src_i++)</highlight></codeline>
<codeline lineno="2612"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_font_build_src_data" kindref="compound">ImFontBuildSrcData</ref>&amp;<sp/>src_tmp<sp/>=<sp/>src_tmp_array[src_i];</highlight></codeline>
<codeline lineno="2614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(src_tmp.<ref refid="struct_im_font_build_src_data_1a73600dcc4e6c8d6b499c032c4ed0e823" kindref="member">GlyphsCount</ref><sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="2615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2616"><highlight class="normal"></highlight></codeline>
<codeline lineno="2617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imstb__rectpack_8h_1af038ae1b98573f24736c9a3eed0478ba" kindref="member">stbrp_pack_rects</ref>((<ref refid="structstbrp__context" kindref="compound">stbrp_context</ref>*)spc.<ref refid="structstbtt__pack__context_1a303a72f0a39479b439fa531925be7031" kindref="member">pack_info</ref>,<sp/>src_tmp.<ref refid="struct_im_font_build_src_data_1a918baffa45001ec6ba866ad18a338969" kindref="member">Rects</ref>,<sp/>src_tmp.<ref refid="struct_im_font_build_src_data_1a73600dcc4e6c8d6b499c032c4ed0e823" kindref="member">GlyphsCount</ref>);</highlight></codeline>
<codeline lineno="2618"><highlight class="normal"></highlight></codeline>
<codeline lineno="2619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Extend<sp/>texture<sp/>height<sp/>and<sp/>mark<sp/>missing<sp/>glyphs<sp/>as<sp/>non-packed<sp/>so<sp/>we<sp/>won&apos;t<sp/>render<sp/>them.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME:<sp/>We<sp/>are<sp/>not<sp/>handling<sp/>packing<sp/>failure<sp/>here<sp/>(would<sp/>happen<sp/>if<sp/>we<sp/>got<sp/>off<sp/>TEX_HEIGHT_MAX<sp/>or<sp/>if<sp/>a<sp/>single<sp/>if<sp/>larger<sp/>than<sp/>TexWidth?)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>glyph_i<sp/>=<sp/>0;<sp/>glyph_i<sp/>&lt;<sp/>src_tmp.<ref refid="struct_im_font_build_src_data_1a73600dcc4e6c8d6b499c032c4ed0e823" kindref="member">GlyphsCount</ref>;<sp/>glyph_i++)</highlight></codeline>
<codeline lineno="2622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(src_tmp.<ref refid="struct_im_font_build_src_data_1a918baffa45001ec6ba866ad18a338969" kindref="member">Rects</ref>[glyph_i].<ref refid="structstbrp__rect_1a74ba347755ce17f2f8a2ea66c612af49" kindref="member">was_packed</ref>)</highlight></codeline>
<codeline lineno="2623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atlas-&gt;<ref refid="struct_im_font_atlas_1a5ef74d37ec01d9e8aac5c57433296ce3" kindref="member">TexHeight</ref><sp/>=<sp/>ImMax(atlas-&gt;<ref refid="struct_im_font_atlas_1a5ef74d37ec01d9e8aac5c57433296ce3" kindref="member">TexHeight</ref>,<sp/>src_tmp.<ref refid="struct_im_font_build_src_data_1a918baffa45001ec6ba866ad18a338969" kindref="member">Rects</ref>[glyph_i].<ref refid="structstbrp__rect_1ae3034c1fbf86043b568f5a4dddf946fa" kindref="member">y</ref><sp/>+<sp/>src_tmp.<ref refid="struct_im_font_build_src_data_1a918baffa45001ec6ba866ad18a338969" kindref="member">Rects</ref>[glyph_i].<ref refid="structstbrp__rect_1af68de2dadc7972b7c089d5e0c0558398" kindref="member">h</ref>);</highlight></codeline>
<codeline lineno="2624"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2625"><highlight class="normal"></highlight></codeline>
<codeline lineno="2626"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>7.<sp/>Allocate<sp/>texture</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2627"><highlight class="normal"><sp/><sp/><sp/><sp/>atlas-&gt;<ref refid="struct_im_font_atlas_1a5ef74d37ec01d9e8aac5c57433296ce3" kindref="member">TexHeight</ref><sp/>=<sp/>(atlas-&gt;<ref refid="struct_im_font_atlas_1adf2f2d04b46911ad01cfbef0f59e1f11" kindref="member">Flags</ref><sp/>&amp;<sp/><ref refid="imgui_8h_1a80e2e7eb7dc9a76ac5384b9ce6786563a85118b9701f0caf3540e6b542999b999" kindref="member">ImFontAtlasFlags_NoPowerOfTwoHeight</ref>)<sp/>?<sp/>(atlas-&gt;<ref refid="struct_im_font_atlas_1a5ef74d37ec01d9e8aac5c57433296ce3" kindref="member">TexHeight</ref><sp/>+<sp/>1)<sp/>:<sp/>ImUpperPowerOfTwo(atlas-&gt;<ref refid="struct_im_font_atlas_1a5ef74d37ec01d9e8aac5c57433296ce3" kindref="member">TexHeight</ref>);</highlight></codeline>
<codeline lineno="2628"><highlight class="normal"><sp/><sp/><sp/><sp/>atlas-&gt;<ref refid="struct_im_font_atlas_1adbe3a6b1fd501108649fe04f882b8664" kindref="member">TexUvScale</ref><sp/>=<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(1.0f<sp/>/<sp/>atlas-&gt;<ref refid="struct_im_font_atlas_1a2d0662502433e7a87b3aa4681ba17aa3" kindref="member">TexWidth</ref>,<sp/>1.0f<sp/>/<sp/>atlas-&gt;<ref refid="struct_im_font_atlas_1a5ef74d37ec01d9e8aac5c57433296ce3" kindref="member">TexHeight</ref>);</highlight></codeline>
<codeline lineno="2629"><highlight class="normal"><sp/><sp/><sp/><sp/>atlas-&gt;<ref refid="struct_im_font_atlas_1a443ea9e7c4cf85ee791ffe891280eff3" kindref="member">TexPixelsAlpha8</ref><sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<ref refid="imgui_8h_1a40113fb128e7035c8d4aaeeed565e7aa" kindref="member">IM_ALLOC</ref>(atlas-&gt;<ref refid="struct_im_font_atlas_1a2d0662502433e7a87b3aa4681ba17aa3" kindref="member">TexWidth</ref><sp/>*<sp/>atlas-&gt;<ref refid="struct_im_font_atlas_1a5ef74d37ec01d9e8aac5c57433296ce3" kindref="member">TexHeight</ref>);</highlight></codeline>
<codeline lineno="2630"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(atlas-&gt;<ref refid="struct_im_font_atlas_1a443ea9e7c4cf85ee791ffe891280eff3" kindref="member">TexPixelsAlpha8</ref>,<sp/>0,<sp/>atlas-&gt;<ref refid="struct_im_font_atlas_1a2d0662502433e7a87b3aa4681ba17aa3" kindref="member">TexWidth</ref><sp/>*<sp/>atlas-&gt;<ref refid="struct_im_font_atlas_1a5ef74d37ec01d9e8aac5c57433296ce3" kindref="member">TexHeight</ref>);</highlight></codeline>
<codeline lineno="2631"><highlight class="normal"><sp/><sp/><sp/><sp/>spc.<ref refid="structstbtt__pack__context_1a6549105fd1922df983fbe036b9db4a1a" kindref="member">pixels</ref><sp/>=<sp/>atlas-&gt;<ref refid="struct_im_font_atlas_1a443ea9e7c4cf85ee791ffe891280eff3" kindref="member">TexPixelsAlpha8</ref>;</highlight></codeline>
<codeline lineno="2632"><highlight class="normal"><sp/><sp/><sp/><sp/>spc.<ref refid="structstbtt__pack__context_1a817ec010d7f09ba9776517c5a87f13a7" kindref="member">height</ref><sp/>=<sp/>atlas-&gt;<ref refid="struct_im_font_atlas_1a5ef74d37ec01d9e8aac5c57433296ce3" kindref="member">TexHeight</ref>;</highlight></codeline>
<codeline lineno="2633"><highlight class="normal"></highlight></codeline>
<codeline lineno="2634"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>8.<sp/>Render/rasterize<sp/>font<sp/>characters<sp/>into<sp/>the<sp/>texture</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2635"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>src_i<sp/>=<sp/>0;<sp/>src_i<sp/>&lt;<sp/>src_tmp_array.<ref refid="struct_im_vector_1abbfd157947f66280d27b21d70a16df8d" kindref="member">Size</ref>;<sp/>src_i++)</highlight></codeline>
<codeline lineno="2636"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_font_config" kindref="compound">ImFontConfig</ref>&amp;<sp/>cfg<sp/>=<sp/>atlas-&gt;<ref refid="struct_im_font_atlas_1afa4f7459807763d032fe2d0022fc0823" kindref="member">ConfigData</ref>[src_i];</highlight></codeline>
<codeline lineno="2638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_font_build_src_data" kindref="compound">ImFontBuildSrcData</ref>&amp;<sp/>src_tmp<sp/>=<sp/>src_tmp_array[src_i];</highlight></codeline>
<codeline lineno="2639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(src_tmp.<ref refid="struct_im_font_build_src_data_1a73600dcc4e6c8d6b499c032c4ed0e823" kindref="member">GlyphsCount</ref><sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="2640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2641"><highlight class="normal"></highlight></codeline>
<codeline lineno="2642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imstb__truetype_8h_1ab6eca9e0104838ca2483dea24dd9e631" kindref="member">stbtt_PackFontRangesRenderIntoRects</ref>(&amp;spc,<sp/>&amp;src_tmp.<ref refid="struct_im_font_build_src_data_1aa7499553235c2f084be3d2e2e030c3cc" kindref="member">FontInfo</ref>,<sp/>&amp;src_tmp.<ref refid="struct_im_font_build_src_data_1a98c6b58804c9be957ea6ce5b1732ad52" kindref="member">PackRange</ref>,<sp/>1,<sp/>src_tmp.<ref refid="struct_im_font_build_src_data_1a918baffa45001ec6ba866ad18a338969" kindref="member">Rects</ref>);</highlight></codeline>
<codeline lineno="2643"><highlight class="normal"></highlight></codeline>
<codeline lineno="2644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Apply<sp/>multiply<sp/>operator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cfg.<ref refid="struct_im_font_config_1a9365265cc52098a8ecf89ff47f6106f2" kindref="member">RasterizerMultiply</ref><sp/>!=<sp/>1.0f)</highlight></codeline>
<codeline lineno="2646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>multiply_table[256];</highlight></codeline>
<codeline lineno="2648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imgui__draw_8cpp_1a8d5f3a053aae34ac7b93e39cb9096d06" kindref="member">ImFontAtlasBuildMultiplyCalcLookupTable</ref>(multiply_table,<sp/>cfg.<ref refid="struct_im_font_config_1a9365265cc52098a8ecf89ff47f6106f2" kindref="member">RasterizerMultiply</ref>);</highlight></codeline>
<codeline lineno="2649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structstbrp__rect" kindref="compound">stbrp_rect</ref>*<sp/>r<sp/>=<sp/>&amp;src_tmp.<ref refid="struct_im_font_build_src_data_1a918baffa45001ec6ba866ad18a338969" kindref="member">Rects</ref>[0];</highlight></codeline>
<codeline lineno="2650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>glyph_i<sp/>=<sp/>0;<sp/>glyph_i<sp/>&lt;<sp/>src_tmp.<ref refid="struct_im_font_build_src_data_1a73600dcc4e6c8d6b499c032c4ed0e823" kindref="member">GlyphsCount</ref>;<sp/>glyph_i++,<sp/>r++)</highlight></codeline>
<codeline lineno="2651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(r-&gt;<ref refid="structstbrp__rect_1a74ba347755ce17f2f8a2ea66c612af49" kindref="member">was_packed</ref>)</highlight></codeline>
<codeline lineno="2652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imgui__draw_8cpp_1a8dc3feae771599949b33712b520e9060" kindref="member">ImFontAtlasBuildMultiplyRectAlpha8</ref>(multiply_table,<sp/>atlas-&gt;<ref refid="struct_im_font_atlas_1a443ea9e7c4cf85ee791ffe891280eff3" kindref="member">TexPixelsAlpha8</ref>,<sp/>r-&gt;<ref refid="structstbrp__rect_1a4cc623a3e29f0bc0d3375f6645c84d18" kindref="member">x</ref>,<sp/>r-&gt;<ref refid="structstbrp__rect_1ae3034c1fbf86043b568f5a4dddf946fa" kindref="member">y</ref>,<sp/>r-&gt;<ref refid="structstbrp__rect_1a248d43f1eb979c1e7b92ba6df431dec5" kindref="member">w</ref>,<sp/>r-&gt;<ref refid="structstbrp__rect_1af68de2dadc7972b7c089d5e0c0558398" kindref="member">h</ref>,<sp/>atlas-&gt;<ref refid="struct_im_font_atlas_1a2d0662502433e7a87b3aa4681ba17aa3" kindref="member">TexWidth</ref><sp/>*<sp/>1);</highlight></codeline>
<codeline lineno="2653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src_tmp.<ref refid="struct_im_font_build_src_data_1a918baffa45001ec6ba866ad18a338969" kindref="member">Rects</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2655"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2656"><highlight class="normal"></highlight></codeline>
<codeline lineno="2657"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>End<sp/>packing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2658"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imstb__truetype_8h_1ab51e492c4b320b8af6ef557ad3388140" kindref="member">stbtt_PackEnd</ref>(&amp;spc);</highlight></codeline>
<codeline lineno="2659"><highlight class="normal"><sp/><sp/><sp/><sp/>buf_rects.<ref refid="struct_im_vector_1ae2d401b4ec5f1113cdb8edb5a61a38f7" kindref="member">clear</ref>();</highlight></codeline>
<codeline lineno="2660"><highlight class="normal"></highlight></codeline>
<codeline lineno="2661"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>9.<sp/>Setup<sp/>ImFont<sp/>and<sp/>glyphs<sp/>for<sp/>runtime</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2662"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>src_i<sp/>=<sp/>0;<sp/>src_i<sp/>&lt;<sp/>src_tmp_array.<ref refid="struct_im_vector_1abbfd157947f66280d27b21d70a16df8d" kindref="member">Size</ref>;<sp/>src_i++)</highlight></codeline>
<codeline lineno="2663"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>When<sp/>merging<sp/>fonts<sp/>with<sp/>MergeMode=true:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>We<sp/>can<sp/>have<sp/>multiple<sp/>input<sp/>fonts<sp/>writing<sp/>into<sp/>a<sp/>same<sp/>destination<sp/>font.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>dst_font-&gt;ConfigData<sp/>is<sp/>!=<sp/>from<sp/>cfg<sp/>which<sp/>is<sp/>our<sp/>source<sp/>configuration.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_font_build_src_data" kindref="compound">ImFontBuildSrcData</ref>&amp;<sp/>src_tmp<sp/>=<sp/>src_tmp_array[src_i];</highlight></codeline>
<codeline lineno="2668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_font_config" kindref="compound">ImFontConfig</ref>&amp;<sp/>cfg<sp/>=<sp/>atlas-&gt;<ref refid="struct_im_font_atlas_1afa4f7459807763d032fe2d0022fc0823" kindref="member">ConfigData</ref>[src_i];</highlight></codeline>
<codeline lineno="2669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_font" kindref="compound">ImFont</ref>*<sp/>dst_font<sp/>=<sp/>cfg.<ref refid="struct_im_font_config_1a561773c311f6cf6de00642c2801e7b92" kindref="member">DstFont</ref>;</highlight></codeline>
<codeline lineno="2670"><highlight class="normal"></highlight></codeline>
<codeline lineno="2671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>font_scale<sp/>=<sp/><ref refid="imstb__truetype_8h_1aad275d7211530a3d817fcd8647690b7b" kindref="member">stbtt_ScaleForPixelHeight</ref>(&amp;src_tmp.<ref refid="struct_im_font_build_src_data_1aa7499553235c2f084be3d2e2e030c3cc" kindref="member">FontInfo</ref>,<sp/>cfg.<ref refid="struct_im_font_config_1a2eff9cc7a11461414402f08ab910d277" kindref="member">SizePixels</ref>);</highlight></codeline>
<codeline lineno="2672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>unscaled_ascent,<sp/>unscaled_descent,<sp/>unscaled_line_gap;</highlight></codeline>
<codeline lineno="2673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imstb__truetype_8h_1a2784e0e55678a5980e950b1c9fbc75f0" kindref="member">stbtt_GetFontVMetrics</ref>(&amp;src_tmp.<ref refid="struct_im_font_build_src_data_1aa7499553235c2f084be3d2e2e030c3cc" kindref="member">FontInfo</ref>,<sp/>&amp;unscaled_ascent,<sp/>&amp;unscaled_descent,<sp/>&amp;unscaled_line_gap);</highlight></codeline>
<codeline lineno="2674"><highlight class="normal"></highlight></codeline>
<codeline lineno="2675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ascent<sp/>=<sp/>ImTrunc(unscaled_ascent<sp/>*<sp/>font_scale<sp/>+<sp/>((unscaled_ascent<sp/>&gt;<sp/>0.0f)<sp/>?<sp/>+1<sp/>:<sp/>-1));</highlight></codeline>
<codeline lineno="2676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>descent<sp/>=<sp/>ImTrunc(unscaled_descent<sp/>*<sp/>font_scale<sp/>+<sp/>((unscaled_descent<sp/>&gt;<sp/>0.0f)<sp/>?<sp/>+1<sp/>:<sp/>-1));</highlight></codeline>
<codeline lineno="2677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imgui__draw_8cpp_1a4bea0932904c84de73237df3f1f76bdd" kindref="member">ImFontAtlasBuildSetupFont</ref>(atlas,<sp/>dst_font,<sp/>&amp;cfg,<sp/>ascent,<sp/>descent);</highlight></codeline>
<codeline lineno="2678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>font_off_x<sp/>=<sp/>cfg.<ref refid="struct_im_font_config_1a290a81956fdcb7ad3b5e3152594db121" kindref="member">GlyphOffset</ref>.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="2679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>font_off_y<sp/>=<sp/>cfg.<ref refid="struct_im_font_config_1a290a81956fdcb7ad3b5e3152594db121" kindref="member">GlyphOffset</ref>.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref><sp/>+<sp/><ref refid="imgui__internal_8h_1aca6e2273580ccf447bcde493e6292043" kindref="member">IM_ROUND</ref>(dst_font-&gt;<ref refid="struct_im_font_1a5238ef18f8ad02b783fb8b3a195b708e" kindref="member">Ascent</ref>);</highlight></codeline>
<codeline lineno="2680"><highlight class="normal"></highlight></codeline>
<codeline lineno="2681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>inv_rasterization_scale<sp/>=<sp/>1.0f<sp/>/<sp/>cfg.<ref refid="struct_im_font_config_1a16af4c04622910d619882b9d068fddc9" kindref="member">RasterizerDensity</ref>;</highlight></codeline>
<codeline lineno="2682"><highlight class="normal"></highlight></codeline>
<codeline lineno="2683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>glyph_i<sp/>=<sp/>0;<sp/>glyph_i<sp/>&lt;<sp/>src_tmp.<ref refid="struct_im_font_build_src_data_1a73600dcc4e6c8d6b499c032c4ed0e823" kindref="member">GlyphsCount</ref>;<sp/>glyph_i++)</highlight></codeline>
<codeline lineno="2684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Register<sp/>glyph</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>codepoint<sp/>=<sp/>src_tmp.<ref refid="struct_im_font_build_src_data_1ae4d653fb221fc19a30a2117f73043377" kindref="member">GlyphsList</ref>[glyph_i];</highlight></codeline>
<codeline lineno="2687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structstbtt__packedchar" kindref="compound">stbtt_packedchar</ref>&amp;<sp/>pc<sp/>=<sp/>src_tmp.<ref refid="struct_im_font_build_src_data_1a7c85b2866a23a42357f19c05df2b7f3f" kindref="member">PackedChars</ref>[glyph_i];</highlight></codeline>
<codeline lineno="2688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structstbtt__aligned__quad" kindref="compound">stbtt_aligned_quad</ref><sp/>q;</highlight></codeline>
<codeline lineno="2689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>unused_x<sp/>=<sp/>0.0f,<sp/>unused_y<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="2690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imstb__truetype_8h_1abbca8f4e5de8209200a7be6c1c57661e" kindref="member">stbtt_GetPackedQuad</ref>(src_tmp.<ref refid="struct_im_font_build_src_data_1a7c85b2866a23a42357f19c05df2b7f3f" kindref="member">PackedChars</ref>,<sp/>atlas-&gt;<ref refid="struct_im_font_atlas_1a2d0662502433e7a87b3aa4681ba17aa3" kindref="member">TexWidth</ref>,<sp/>atlas-&gt;<ref refid="struct_im_font_atlas_1a5ef74d37ec01d9e8aac5c57433296ce3" kindref="member">TexHeight</ref>,<sp/>glyph_i,<sp/>&amp;unused_x,<sp/>&amp;unused_y,<sp/>&amp;q,<sp/>0);</highlight></codeline>
<codeline lineno="2691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x0<sp/>=<sp/>q.<ref refid="structstbtt__aligned__quad_1ad74fd8fd69f8a8e1bd20cb0ab7df6e2e" kindref="member">x0</ref><sp/>*<sp/>inv_rasterization_scale<sp/>+<sp/>font_off_x;</highlight></codeline>
<codeline lineno="2692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y0<sp/>=<sp/>q.<ref refid="structstbtt__aligned__quad_1a6178a6b380cf6889893afaeb5019ecd6" kindref="member">y0</ref><sp/>*<sp/>inv_rasterization_scale<sp/>+<sp/>font_off_y;</highlight></codeline>
<codeline lineno="2693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x1<sp/>=<sp/>q.<ref refid="structstbtt__aligned__quad_1a43a7eeac24238e289f825e644331dee6" kindref="member">x1</ref><sp/>*<sp/>inv_rasterization_scale<sp/>+<sp/>font_off_x;</highlight></codeline>
<codeline lineno="2694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y1<sp/>=<sp/>q.<ref refid="structstbtt__aligned__quad_1a66ee8061da982804073a3d2a9114e53c" kindref="member">y1</ref><sp/>*<sp/>inv_rasterization_scale<sp/>+<sp/>font_off_y;</highlight></codeline>
<codeline lineno="2695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst_font-&gt;<ref refid="struct_im_font_1a1badad96fa8d41b4754fc7bdb826e6b2" kindref="member">AddGlyph</ref>(&amp;cfg,<sp/>(<ref refid="imgui_8h_1a1ecb49ee827c39a982f1e1467910d020" kindref="member">ImWchar</ref>)codepoint,<sp/>x0,<sp/>y0,<sp/>x1,<sp/>y1,<sp/>q.<ref refid="structstbtt__aligned__quad_1ac23b153ff4042deb5499e5a8cacf4a59" kindref="member">s0</ref>,<sp/>q.<ref refid="structstbtt__aligned__quad_1a921cd13638a8b3a1e0729021d371da49" kindref="member">t0</ref>,<sp/>q.<ref refid="structstbtt__aligned__quad_1a26360efee3cdfb5aa2bdc593157b436b" kindref="member">s1</ref>,<sp/>q.<ref refid="structstbtt__aligned__quad_1ae1f5ed7333ca5bba46c6a098a05ac75b" kindref="member">t1</ref>,<sp/>pc.<ref refid="structstbtt__packedchar_1a28707ae98d1fa946b3390840aeff76ab" kindref="member">xadvance</ref><sp/>*<sp/>inv_rasterization_scale);</highlight></codeline>
<codeline lineno="2696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2697"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2698"><highlight class="normal"></highlight></codeline>
<codeline lineno="2699"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Cleanup</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2700"><highlight class="normal"><sp/><sp/><sp/><sp/>src_tmp_array.<ref refid="struct_im_vector_1ac1ed34eac753156e87e8a92f78dbbe3f" kindref="member">clear_destruct</ref>();</highlight></codeline>
<codeline lineno="2701"><highlight class="normal"></highlight></codeline>
<codeline lineno="2702"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui__draw_8cpp_1adbf0ee92b3ac86e30b9e81f552d15d37" kindref="member">ImFontAtlasBuildFinish</ref>(atlas);</highlight></codeline>
<codeline lineno="2703"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2704"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2705"><highlight class="normal"></highlight></codeline>
<codeline lineno="2706"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_font_builder_i_o" kindref="compound">ImFontBuilderIO</ref>*<sp/><ref refid="imgui__draw_8cpp_1a4c276d0224ef420d570c9485c4c76a19" kindref="member">ImFontAtlasGetBuilderForStbTruetype</ref>()</highlight></codeline>
<codeline lineno="2707"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2708"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct_im_font_builder_i_o" kindref="compound">ImFontBuilderIO</ref><sp/>io;</highlight></codeline>
<codeline lineno="2709"><highlight class="normal"><sp/><sp/><sp/><sp/>io.<ref refid="struct_im_font_builder_i_o_1a81018973af73c727705382fe8c4155b5" kindref="member">FontBuilder_Build</ref><sp/>=<sp/>ImFontAtlasBuildWithStbTruetype;</highlight></codeline>
<codeline lineno="2710"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;io;</highlight></codeline>
<codeline lineno="2711"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2712"><highlight class="normal"></highlight></codeline>
<codeline lineno="2713"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>IMGUI_ENABLE_STB_TRUETYPE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2714"><highlight class="normal"></highlight></codeline>
<codeline lineno="2715"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="imgui__draw_8cpp_1ab58975478a1fbc1735cf9b15e2db5be0" kindref="member">ImFontAtlasUpdateConfigDataPointers</ref>(<ref refid="struct_im_font_atlas" kindref="compound">ImFontAtlas</ref>*<sp/>atlas)</highlight></codeline>
<codeline lineno="2716"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2717"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="struct_im_font_config" kindref="compound">ImFontConfig</ref>&amp;<sp/>font_cfg<sp/>:<sp/>atlas-&gt;<ref refid="struct_im_font_atlas_1afa4f7459807763d032fe2d0022fc0823" kindref="member">ConfigData</ref>)</highlight></codeline>
<codeline lineno="2718"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_font" kindref="compound">ImFont</ref>*<sp/>font<sp/>=<sp/>font_cfg.<ref refid="struct_im_font_config_1a561773c311f6cf6de00642c2801e7b92" kindref="member">DstFont</ref>;</highlight></codeline>
<codeline lineno="2720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!font_cfg.<ref refid="struct_im_font_config_1ad5cab281622e5bdec8e2d55cadc5601e" kindref="member">MergeMode</ref>)</highlight></codeline>
<codeline lineno="2721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>font-&gt;<ref refid="struct_im_font_1afff4a317b215a37599589941d6131fd0" kindref="member">ConfigData</ref><sp/>=<sp/>&amp;font_cfg;</highlight></codeline>
<codeline lineno="2723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>font-&gt;<ref refid="struct_im_font_1a4a30fc7711d628ad582ccb3188a51ddd" kindref="member">ConfigDataCount</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>font-&gt;<ref refid="struct_im_font_1a4a30fc7711d628ad582ccb3188a51ddd" kindref="member">ConfigDataCount</ref>++;</highlight></codeline>
<codeline lineno="2726"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2727"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2728"><highlight class="normal"></highlight></codeline>
<codeline lineno="2729"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="imgui__draw_8cpp_1a4bea0932904c84de73237df3f1f76bdd" kindref="member">ImFontAtlasBuildSetupFont</ref>(<ref refid="struct_im_font_atlas" kindref="compound">ImFontAtlas</ref>*<sp/>atlas,<sp/><ref refid="struct_im_font" kindref="compound">ImFont</ref>*<sp/>font,<sp/><ref refid="struct_im_font_config" kindref="compound">ImFontConfig</ref>*<sp/>font_config,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ascent,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>descent)</highlight></codeline>
<codeline lineno="2730"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2731"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!font_config-&gt;<ref refid="struct_im_font_config_1ad5cab281622e5bdec8e2d55cadc5601e" kindref="member">MergeMode</ref>)</highlight></codeline>
<codeline lineno="2732"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>font-&gt;<ref refid="struct_im_font_1aecf7773b1c40b433f91ee245f463de12" kindref="member">ClearOutputData</ref>();</highlight></codeline>
<codeline lineno="2734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>font-&gt;<ref refid="struct_im_font_1a423e36d1594281f1a5a537e5b0d0a3d4" kindref="member">FontSize</ref><sp/>=<sp/>font_config-&gt;<ref refid="struct_im_font_config_1a2eff9cc7a11461414402f08ab910d277" kindref="member">SizePixels</ref>;</highlight></codeline>
<codeline lineno="2735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imgui_8h_1acb09e7dc42e8e3cefb0ecaa197978920" kindref="member">IM_ASSERT</ref>(font-&gt;<ref refid="struct_im_font_1afff4a317b215a37599589941d6131fd0" kindref="member">ConfigData</ref><sp/>==<sp/>font_config);</highlight></codeline>
<codeline lineno="2736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>font-&gt;<ref refid="struct_im_font_1a8a5e0df6be5e3cabe91ae830524db960" kindref="member">ContainerAtlas</ref><sp/>=<sp/>atlas;</highlight></codeline>
<codeline lineno="2737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>font-&gt;<ref refid="struct_im_font_1a5238ef18f8ad02b783fb8b3a195b708e" kindref="member">Ascent</ref><sp/>=<sp/>ascent;</highlight></codeline>
<codeline lineno="2738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>font-&gt;<ref refid="struct_im_font_1abcca12aa908bf7105433e7db6088a5e5" kindref="member">Descent</ref><sp/>=<sp/>descent;</highlight></codeline>
<codeline lineno="2739"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2740"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2741"><highlight class="normal"></highlight></codeline>
<codeline lineno="2742"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="imgui__draw_8cpp_1add0fcd1708ca3540688d8277fc01bf3f" kindref="member">ImFontAtlasBuildPackCustomRects</ref>(<ref refid="struct_im_font_atlas" kindref="compound">ImFontAtlas</ref>*<sp/>atlas,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>stbrp_context_opaque)</highlight></codeline>
<codeline lineno="2743"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2744"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structstbrp__context" kindref="compound">stbrp_context</ref>*<sp/>pack_context<sp/>=<sp/>(<ref refid="structstbrp__context" kindref="compound">stbrp_context</ref>*)stbrp_context_opaque;</highlight></codeline>
<codeline lineno="2745"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui_8h_1acb09e7dc42e8e3cefb0ecaa197978920" kindref="member">IM_ASSERT</ref>(pack_context<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="2746"><highlight class="normal"></highlight></codeline>
<codeline lineno="2747"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vector" kindref="compound">ImVector&lt;ImFontAtlasCustomRect&gt;</ref>&amp;<sp/>user_rects<sp/>=<sp/>atlas-&gt;<ref refid="struct_im_font_atlas_1ae3752e66f7454a42e5ae5ec052af537c" kindref="member">CustomRects</ref>;</highlight></codeline>
<codeline lineno="2748"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui_8h_1acb09e7dc42e8e3cefb0ecaa197978920" kindref="member">IM_ASSERT</ref>(user_rects.<ref refid="struct_im_vector_1abbfd157947f66280d27b21d70a16df8d" kindref="member">Size</ref><sp/>&gt;=<sp/>1);<sp/></highlight><highlight class="comment">//<sp/>We<sp/>expect<sp/>at<sp/>least<sp/>the<sp/>default<sp/>custom<sp/>rects<sp/>to<sp/>be<sp/>registered,<sp/>else<sp/>something<sp/>went<sp/>wrong.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2749"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__GNUC__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2750"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(user_rects.<ref refid="struct_im_vector_1abbfd157947f66280d27b21d70a16df8d" kindref="member">Size</ref><sp/>&lt;<sp/>1)<sp/>{<sp/>__builtin_unreachable();<sp/>}<sp/></highlight><highlight class="comment">//<sp/>Workaround<sp/>for<sp/>GCC<sp/>bug<sp/>if<sp/>IM_ASSERT()<sp/>is<sp/>defined<sp/>to<sp/>conditionally<sp/>throw<sp/>(see<sp/>#5343)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2751"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2752"><highlight class="normal"></highlight></codeline>
<codeline lineno="2753"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vector" kindref="compound">ImVector&lt;stbrp_rect&gt;</ref><sp/>pack_rects;</highlight></codeline>
<codeline lineno="2754"><highlight class="normal"><sp/><sp/><sp/><sp/>pack_rects.<ref refid="struct_im_vector_1ac371dd62e56ae486b1a5038cf07eee56" kindref="member">resize</ref>(user_rects.<ref refid="struct_im_vector_1abbfd157947f66280d27b21d70a16df8d" kindref="member">Size</ref>);</highlight></codeline>
<codeline lineno="2755"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(pack_rects.<ref refid="struct_im_vector_1ac0e46e8b30cb079d93c8f0aad7d7cbd0" kindref="member">Data</ref>,<sp/>0,<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)pack_rects.<ref refid="struct_im_vector_1ade9f2e937e47b0e0f9970dcfba038204" kindref="member">size_in_bytes</ref>());</highlight></codeline>
<codeline lineno="2756"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>user_rects.<ref refid="struct_im_vector_1abbfd157947f66280d27b21d70a16df8d" kindref="member">Size</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="2757"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pack_rects[i].w<sp/>=<sp/>user_rects[i].Width;</highlight></codeline>
<codeline lineno="2759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pack_rects[i].h<sp/>=<sp/>user_rects[i].Height;</highlight></codeline>
<codeline lineno="2760"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2761"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imstb__rectpack_8h_1af038ae1b98573f24736c9a3eed0478ba" kindref="member">stbrp_pack_rects</ref>(pack_context,<sp/>&amp;pack_rects[0],<sp/>pack_rects.<ref refid="struct_im_vector_1abbfd157947f66280d27b21d70a16df8d" kindref="member">Size</ref>);</highlight></codeline>
<codeline lineno="2762"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>pack_rects.<ref refid="struct_im_vector_1abbfd157947f66280d27b21d70a16df8d" kindref="member">Size</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="2763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pack_rects[i].was_packed)</highlight></codeline>
<codeline lineno="2764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>user_rects[i].X<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>short)pack_rects[i].x;</highlight></codeline>
<codeline lineno="2766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>user_rects[i].Y<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>short)pack_rects[i].y;</highlight></codeline>
<codeline lineno="2767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imgui_8h_1acb09e7dc42e8e3cefb0ecaa197978920" kindref="member">IM_ASSERT</ref>(pack_rects[i].w<sp/>==<sp/>user_rects[i].Width<sp/>&amp;&amp;<sp/>pack_rects[i].h<sp/>==<sp/>user_rects[i].Height);</highlight></codeline>
<codeline lineno="2768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atlas-&gt;<ref refid="struct_im_font_atlas_1a5ef74d37ec01d9e8aac5c57433296ce3" kindref="member">TexHeight</ref><sp/>=<sp/>ImMax(atlas-&gt;<ref refid="struct_im_font_atlas_1a5ef74d37ec01d9e8aac5c57433296ce3" kindref="member">TexHeight</ref>,<sp/>pack_rects[i].y<sp/>+<sp/>pack_rects[i].h);</highlight></codeline>
<codeline lineno="2769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2770"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2771"><highlight class="normal"></highlight></codeline>
<codeline lineno="2772"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="imgui__draw_8cpp_1acc7928ba77e5e06a342720ccf0a95ece" kindref="member">ImFontAtlasBuildRender8bppRectFromString</ref>(<ref refid="struct_im_font_atlas" kindref="compound">ImFontAtlas</ref>*<sp/>atlas,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>in_str,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>in_marker_char,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>in_marker_pixel_value)</highlight></codeline>
<codeline lineno="2773"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2774"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui_8h_1acb09e7dc42e8e3cefb0ecaa197978920" kindref="member">IM_ASSERT</ref>(x<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>x<sp/>+<sp/>w<sp/>&lt;=<sp/>atlas-&gt;TexWidth);</highlight></codeline>
<codeline lineno="2775"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui_8h_1acb09e7dc42e8e3cefb0ecaa197978920" kindref="member">IM_ASSERT</ref>(y<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>y<sp/>+<sp/>h<sp/>&lt;=<sp/>atlas-&gt;TexHeight);</highlight></codeline>
<codeline lineno="2776"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>out_pixel<sp/>=<sp/>atlas-&gt;<ref refid="struct_im_font_atlas_1a443ea9e7c4cf85ee791ffe891280eff3" kindref="member">TexPixelsAlpha8</ref><sp/>+<sp/>x<sp/>+<sp/>(y<sp/>*<sp/>atlas-&gt;<ref refid="struct_im_font_atlas_1a2d0662502433e7a87b3aa4681ba17aa3" kindref="member">TexWidth</ref>);</highlight></codeline>
<codeline lineno="2777"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>off_y<sp/>=<sp/>0;<sp/>off_y<sp/>&lt;<sp/>h;<sp/>off_y++,<sp/>out_pixel<sp/>+=<sp/>atlas-&gt;<ref refid="struct_im_font_atlas_1a2d0662502433e7a87b3aa4681ba17aa3" kindref="member">TexWidth</ref>,<sp/>in_str<sp/>+=<sp/>w)</highlight></codeline>
<codeline lineno="2778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>off_x<sp/>=<sp/>0;<sp/>off_x<sp/>&lt;<sp/>w;<sp/>off_x++)</highlight></codeline>
<codeline lineno="2779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_pixel[off_x]<sp/>=<sp/>(in_str[off_x]<sp/>==<sp/>in_marker_char)<sp/>?<sp/>in_marker_pixel_value<sp/>:<sp/>0x00;</highlight></codeline>
<codeline lineno="2780"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2781"><highlight class="normal"></highlight></codeline>
<codeline lineno="2782"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="imgui__draw_8cpp_1a66ac51ad223da84c7167d4c9f4cfb2fb" kindref="member">ImFontAtlasBuildRender32bppRectFromString</ref>(<ref refid="struct_im_font_atlas" kindref="compound">ImFontAtlas</ref>*<sp/>atlas,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>in_str,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>in_marker_char,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>in_marker_pixel_value)</highlight></codeline>
<codeline lineno="2783"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2784"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui_8h_1acb09e7dc42e8e3cefb0ecaa197978920" kindref="member">IM_ASSERT</ref>(x<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>x<sp/>+<sp/>w<sp/>&lt;=<sp/>atlas-&gt;TexWidth);</highlight></codeline>
<codeline lineno="2785"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui_8h_1acb09e7dc42e8e3cefb0ecaa197978920" kindref="member">IM_ASSERT</ref>(y<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>y<sp/>+<sp/>h<sp/>&lt;=<sp/>atlas-&gt;TexHeight);</highlight></codeline>
<codeline lineno="2786"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>out_pixel<sp/>=<sp/>atlas-&gt;<ref refid="struct_im_font_atlas_1a41163489a5b8060f405c56e22590cba5" kindref="member">TexPixelsRGBA32</ref><sp/>+<sp/>x<sp/>+<sp/>(y<sp/>*<sp/>atlas-&gt;<ref refid="struct_im_font_atlas_1a2d0662502433e7a87b3aa4681ba17aa3" kindref="member">TexWidth</ref>);</highlight></codeline>
<codeline lineno="2787"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>off_y<sp/>=<sp/>0;<sp/>off_y<sp/>&lt;<sp/>h;<sp/>off_y++,<sp/>out_pixel<sp/>+=<sp/>atlas-&gt;<ref refid="struct_im_font_atlas_1a2d0662502433e7a87b3aa4681ba17aa3" kindref="member">TexWidth</ref>,<sp/>in_str<sp/>+=<sp/>w)</highlight></codeline>
<codeline lineno="2788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>off_x<sp/>=<sp/>0;<sp/>off_x<sp/>&lt;<sp/>w;<sp/>off_x++)</highlight></codeline>
<codeline lineno="2789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_pixel[off_x]<sp/>=<sp/>(in_str[off_x]<sp/>==<sp/>in_marker_char)<sp/>?<sp/>in_marker_pixel_value<sp/>:<sp/><ref refid="imgui_8h_1a148ba3030783ce6495de7f573c89ddff" kindref="member">IM_COL32_BLACK_TRANS</ref>;</highlight></codeline>
<codeline lineno="2790"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2791"><highlight class="normal"></highlight></codeline>
<codeline lineno="2792"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImFontAtlasBuildRenderDefaultTexData(<ref refid="struct_im_font_atlas" kindref="compound">ImFontAtlas</ref>*<sp/>atlas)</highlight></codeline>
<codeline lineno="2793"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2794"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_font_atlas_custom_rect" kindref="compound">ImFontAtlasCustomRect</ref>*<sp/>r<sp/>=<sp/>atlas-&gt;<ref refid="struct_im_font_atlas_1a6a4c5f59c12c88a5c0429d6a6ec06481" kindref="member">GetCustomRectByIndex</ref>(atlas-&gt;<ref refid="struct_im_font_atlas_1afc92fd54d52cab4fe787e364e7e4f652" kindref="member">PackIdMouseCursors</ref>);</highlight></codeline>
<codeline lineno="2795"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui_8h_1acb09e7dc42e8e3cefb0ecaa197978920" kindref="member">IM_ASSERT</ref>(r-&gt;<ref refid="struct_im_font_atlas_custom_rect_1a8829c3c64981078ba03d75c2b07e2abc" kindref="member">IsPacked</ref>());</highlight></codeline>
<codeline lineno="2796"><highlight class="normal"></highlight></codeline>
<codeline lineno="2797"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w<sp/>=<sp/>atlas-&gt;<ref refid="struct_im_font_atlas_1a2d0662502433e7a87b3aa4681ba17aa3" kindref="member">TexWidth</ref>;</highlight></codeline>
<codeline lineno="2798"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(atlas-&gt;<ref refid="struct_im_font_atlas_1adf2f2d04b46911ad01cfbef0f59e1f11" kindref="member">Flags</ref><sp/>&amp;<sp/><ref refid="imgui_8h_1a80e2e7eb7dc9a76ac5384b9ce6786563abf2d3e7edd841daaa59af9eb8f2b35fa" kindref="member">ImFontAtlasFlags_NoMouseCursors</ref>))</highlight></codeline>
<codeline lineno="2799"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Render/copy<sp/>pixels</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imgui_8h_1acb09e7dc42e8e3cefb0ecaa197978920" kindref="member">IM_ASSERT</ref>(r-&gt;<ref refid="struct_im_font_atlas_custom_rect_1ada0c5ae3700d9074280c0801dd9ae20e" kindref="member">Width</ref><sp/>==<sp/><ref refid="imgui__draw_8cpp_1adf518fea7357febbb14eeecb692a8d95" kindref="member">FONT_ATLAS_DEFAULT_TEX_DATA_W</ref><sp/>*<sp/>2<sp/>+<sp/>1<sp/>&amp;&amp;<sp/>r-&gt;<ref refid="struct_im_font_atlas_custom_rect_1a94a6da45f46f0cc5abfd6580abfb2f0c" kindref="member">Height</ref><sp/>==<sp/><ref refid="imgui__draw_8cpp_1a2c96fc3febbe9f4f6c042a2f975a5b1d" kindref="member">FONT_ATLAS_DEFAULT_TEX_DATA_H</ref>);</highlight></codeline>
<codeline lineno="2802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x_for_white<sp/>=<sp/>r-&gt;<ref refid="struct_im_font_atlas_custom_rect_1a4e653e0c1855c48c4fc0b830ed696aed" kindref="member">X</ref>;</highlight></codeline>
<codeline lineno="2803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x_for_black<sp/>=<sp/>r-&gt;<ref refid="struct_im_font_atlas_custom_rect_1a4e653e0c1855c48c4fc0b830ed696aed" kindref="member">X</ref><sp/>+<sp/><ref refid="imgui__draw_8cpp_1adf518fea7357febbb14eeecb692a8d95" kindref="member">FONT_ATLAS_DEFAULT_TEX_DATA_W</ref><sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="2804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(atlas-&gt;<ref refid="struct_im_font_atlas_1a443ea9e7c4cf85ee791ffe891280eff3" kindref="member">TexPixelsAlpha8</ref><sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="2805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imgui__draw_8cpp_1acc7928ba77e5e06a342720ccf0a95ece" kindref="member">ImFontAtlasBuildRender8bppRectFromString</ref>(atlas,<sp/>x_for_white,<sp/>r-&gt;<ref refid="struct_im_font_atlas_custom_rect_1adda5fb1f5bfeb194bd5fc27b635db338" kindref="member">Y</ref>,<sp/><ref refid="imgui__draw_8cpp_1adf518fea7357febbb14eeecb692a8d95" kindref="member">FONT_ATLAS_DEFAULT_TEX_DATA_W</ref>,<sp/><ref refid="imgui__draw_8cpp_1a2c96fc3febbe9f4f6c042a2f975a5b1d" kindref="member">FONT_ATLAS_DEFAULT_TEX_DATA_H</ref>,<sp/>FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS,<sp/></highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal">,<sp/>0xFF);</highlight></codeline>
<codeline lineno="2807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imgui__draw_8cpp_1acc7928ba77e5e06a342720ccf0a95ece" kindref="member">ImFontAtlasBuildRender8bppRectFromString</ref>(atlas,<sp/>x_for_black,<sp/>r-&gt;<ref refid="struct_im_font_atlas_custom_rect_1adda5fb1f5bfeb194bd5fc27b635db338" kindref="member">Y</ref>,<sp/><ref refid="imgui__draw_8cpp_1adf518fea7357febbb14eeecb692a8d95" kindref="member">FONT_ATLAS_DEFAULT_TEX_DATA_W</ref>,<sp/><ref refid="imgui__draw_8cpp_1a2c96fc3febbe9f4f6c042a2f975a5b1d" kindref="member">FONT_ATLAS_DEFAULT_TEX_DATA_H</ref>,<sp/>FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS,<sp/></highlight><highlight class="charliteral">&apos;X&apos;</highlight><highlight class="normal">,<sp/>0xFF);</highlight></codeline>
<codeline lineno="2808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imgui__draw_8cpp_1a66ac51ad223da84c7167d4c9f4cfb2fb" kindref="member">ImFontAtlasBuildRender32bppRectFromString</ref>(atlas,<sp/>x_for_white,<sp/>r-&gt;<ref refid="struct_im_font_atlas_custom_rect_1adda5fb1f5bfeb194bd5fc27b635db338" kindref="member">Y</ref>,<sp/><ref refid="imgui__draw_8cpp_1adf518fea7357febbb14eeecb692a8d95" kindref="member">FONT_ATLAS_DEFAULT_TEX_DATA_W</ref>,<sp/><ref refid="imgui__draw_8cpp_1a2c96fc3febbe9f4f6c042a2f975a5b1d" kindref="member">FONT_ATLAS_DEFAULT_TEX_DATA_H</ref>,<sp/>FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS,<sp/></highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal">,<sp/><ref refid="imgui_8h_1a08fc9855cd3e3fcbb7fcd93b38bd7057" kindref="member">IM_COL32_WHITE</ref>);</highlight></codeline>
<codeline lineno="2812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imgui__draw_8cpp_1a66ac51ad223da84c7167d4c9f4cfb2fb" kindref="member">ImFontAtlasBuildRender32bppRectFromString</ref>(atlas,<sp/>x_for_black,<sp/>r-&gt;<ref refid="struct_im_font_atlas_custom_rect_1adda5fb1f5bfeb194bd5fc27b635db338" kindref="member">Y</ref>,<sp/><ref refid="imgui__draw_8cpp_1adf518fea7357febbb14eeecb692a8d95" kindref="member">FONT_ATLAS_DEFAULT_TEX_DATA_W</ref>,<sp/><ref refid="imgui__draw_8cpp_1a2c96fc3febbe9f4f6c042a2f975a5b1d" kindref="member">FONT_ATLAS_DEFAULT_TEX_DATA_H</ref>,<sp/>FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS,<sp/></highlight><highlight class="charliteral">&apos;X&apos;</highlight><highlight class="normal">,<sp/><ref refid="imgui_8h_1a08fc9855cd3e3fcbb7fcd93b38bd7057" kindref="member">IM_COL32_WHITE</ref>);</highlight></codeline>
<codeline lineno="2813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2814"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2815"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2816"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Render<sp/>4<sp/>white<sp/>pixels</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imgui_8h_1acb09e7dc42e8e3cefb0ecaa197978920" kindref="member">IM_ASSERT</ref>(r-&gt;<ref refid="struct_im_font_atlas_custom_rect_1ada0c5ae3700d9074280c0801dd9ae20e" kindref="member">Width</ref><sp/>==<sp/>2<sp/>&amp;&amp;<sp/>r-&gt;<ref refid="struct_im_font_atlas_custom_rect_1a94a6da45f46f0cc5abfd6580abfb2f0c" kindref="member">Height</ref><sp/>==<sp/>2);</highlight></codeline>
<codeline lineno="2819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offset<sp/>=<sp/>(int)r-&gt;<ref refid="struct_im_font_atlas_custom_rect_1a4e653e0c1855c48c4fc0b830ed696aed" kindref="member">X</ref><sp/>+<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)r-&gt;<ref refid="struct_im_font_atlas_custom_rect_1adda5fb1f5bfeb194bd5fc27b635db338" kindref="member">Y</ref><sp/>*<sp/>w;</highlight></codeline>
<codeline lineno="2820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(atlas-&gt;<ref refid="struct_im_font_atlas_1a443ea9e7c4cf85ee791ffe891280eff3" kindref="member">TexPixelsAlpha8</ref><sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="2821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atlas-&gt;<ref refid="struct_im_font_atlas_1a443ea9e7c4cf85ee791ffe891280eff3" kindref="member">TexPixelsAlpha8</ref>[offset]<sp/>=<sp/>atlas-&gt;<ref refid="struct_im_font_atlas_1a443ea9e7c4cf85ee791ffe891280eff3" kindref="member">TexPixelsAlpha8</ref>[offset<sp/>+<sp/>1]<sp/>=<sp/>atlas-&gt;<ref refid="struct_im_font_atlas_1a443ea9e7c4cf85ee791ffe891280eff3" kindref="member">TexPixelsAlpha8</ref>[offset<sp/>+<sp/>w]<sp/>=<sp/>atlas-&gt;<ref refid="struct_im_font_atlas_1a443ea9e7c4cf85ee791ffe891280eff3" kindref="member">TexPixelsAlpha8</ref>[offset<sp/>+<sp/>w<sp/>+<sp/>1]<sp/>=<sp/>0xFF;</highlight></codeline>
<codeline lineno="2823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atlas-&gt;<ref refid="struct_im_font_atlas_1a41163489a5b8060f405c56e22590cba5" kindref="member">TexPixelsRGBA32</ref>[offset]<sp/>=<sp/>atlas-&gt;<ref refid="struct_im_font_atlas_1a41163489a5b8060f405c56e22590cba5" kindref="member">TexPixelsRGBA32</ref>[offset<sp/>+<sp/>1]<sp/>=<sp/>atlas-&gt;<ref refid="struct_im_font_atlas_1a41163489a5b8060f405c56e22590cba5" kindref="member">TexPixelsRGBA32</ref>[offset<sp/>+<sp/>w]<sp/>=<sp/>atlas-&gt;<ref refid="struct_im_font_atlas_1a41163489a5b8060f405c56e22590cba5" kindref="member">TexPixelsRGBA32</ref>[offset<sp/>+<sp/>w<sp/>+<sp/>1]<sp/>=<sp/><ref refid="imgui_8h_1a08fc9855cd3e3fcbb7fcd93b38bd7057" kindref="member">IM_COL32_WHITE</ref>;</highlight></codeline>
<codeline lineno="2827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2828"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2829"><highlight class="normal"><sp/><sp/><sp/><sp/>atlas-&gt;<ref refid="struct_im_font_atlas_1af1d05221e9a1607d7f625df92a4f9b7e" kindref="member">TexUvWhitePixel</ref><sp/>=<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>((r-&gt;<ref refid="struct_im_font_atlas_custom_rect_1a4e653e0c1855c48c4fc0b830ed696aed" kindref="member">X</ref><sp/>+<sp/>0.5f)<sp/>*<sp/>atlas-&gt;<ref refid="struct_im_font_atlas_1adbe3a6b1fd501108649fe04f882b8664" kindref="member">TexUvScale</ref>.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref>,<sp/>(r-&gt;<ref refid="struct_im_font_atlas_custom_rect_1adda5fb1f5bfeb194bd5fc27b635db338" kindref="member">Y</ref><sp/>+<sp/>0.5f)<sp/>*<sp/>atlas-&gt;<ref refid="struct_im_font_atlas_1adbe3a6b1fd501108649fe04f882b8664" kindref="member">TexUvScale</ref>.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="2830"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2831"><highlight class="normal"></highlight></codeline>
<codeline lineno="2832"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImFontAtlasBuildRenderLinesTexData(<ref refid="struct_im_font_atlas" kindref="compound">ImFontAtlas</ref>*<sp/>atlas)</highlight></codeline>
<codeline lineno="2833"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2834"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(atlas-&gt;<ref refid="struct_im_font_atlas_1adf2f2d04b46911ad01cfbef0f59e1f11" kindref="member">Flags</ref><sp/>&amp;<sp/><ref refid="imgui_8h_1a80e2e7eb7dc9a76ac5384b9ce6786563a69694e359b87dc62b8cad71258b9d976" kindref="member">ImFontAtlasFlags_NoBakedLines</ref>)</highlight></codeline>
<codeline lineno="2835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2836"><highlight class="normal"></highlight></codeline>
<codeline lineno="2837"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>generates<sp/>a<sp/>triangular<sp/>shape<sp/>in<sp/>the<sp/>texture,<sp/>with<sp/>the<sp/>various<sp/>line<sp/>widths<sp/>stacked<sp/>on<sp/>top<sp/>of<sp/>each<sp/>other<sp/>to<sp/>allow<sp/>interpolation<sp/>between<sp/>them</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2838"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_font_atlas_custom_rect" kindref="compound">ImFontAtlasCustomRect</ref>*<sp/>r<sp/>=<sp/>atlas-&gt;<ref refid="struct_im_font_atlas_1a6a4c5f59c12c88a5c0429d6a6ec06481" kindref="member">GetCustomRectByIndex</ref>(atlas-&gt;<ref refid="struct_im_font_atlas_1a0964aa42e665dbd423066309b3c7461b" kindref="member">PackIdLines</ref>);</highlight></codeline>
<codeline lineno="2839"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui_8h_1acb09e7dc42e8e3cefb0ecaa197978920" kindref="member">IM_ASSERT</ref>(r-&gt;<ref refid="struct_im_font_atlas_custom_rect_1a8829c3c64981078ba03d75c2b07e2abc" kindref="member">IsPacked</ref>());</highlight></codeline>
<codeline lineno="2840"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/><ref refid="imgui_8h_1a2e0fd3c4182b90dfde08210254eaeccf" kindref="member">IM_DRAWLIST_TEX_LINES_WIDTH_MAX</ref><sp/>+<sp/>1;<sp/>n++)<sp/></highlight><highlight class="comment">//<sp/>+1<sp/>because<sp/>of<sp/>the<sp/>zero-width<sp/>row</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2841"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Each<sp/>line<sp/>consists<sp/>of<sp/>at<sp/>least<sp/>two<sp/>empty<sp/>pixels<sp/>at<sp/>the<sp/>ends,<sp/>with<sp/>a<sp/>line<sp/>of<sp/>solid<sp/>pixels<sp/>in<sp/>the<sp/>middle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>n;</highlight></codeline>
<codeline lineno="2844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>line_width<sp/>=<sp/>n;</highlight></codeline>
<codeline lineno="2845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pad_left<sp/>=<sp/>(r-&gt;<ref refid="struct_im_font_atlas_custom_rect_1ada0c5ae3700d9074280c0801dd9ae20e" kindref="member">Width</ref><sp/>-<sp/>line_width)<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="2846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pad_right<sp/>=<sp/>r-&gt;<ref refid="struct_im_font_atlas_custom_rect_1ada0c5ae3700d9074280c0801dd9ae20e" kindref="member">Width</ref><sp/>-<sp/>(pad_left<sp/>+<sp/>line_width);</highlight></codeline>
<codeline lineno="2847"><highlight class="normal"></highlight></codeline>
<codeline lineno="2848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Write<sp/>each<sp/>slice</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imgui_8h_1acb09e7dc42e8e3cefb0ecaa197978920" kindref="member">IM_ASSERT</ref>(pad_left<sp/>+<sp/>line_width<sp/>+<sp/>pad_right<sp/>==<sp/>r-&gt;<ref refid="struct_im_font_atlas_custom_rect_1ada0c5ae3700d9074280c0801dd9ae20e" kindref="member">Width</ref><sp/>&amp;&amp;<sp/>y<sp/>&lt;<sp/>r-&gt;Height);<sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>we&apos;re<sp/>inside<sp/>the<sp/>texture<sp/>bounds<sp/>before<sp/>we<sp/>start<sp/>writing<sp/>pixels</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(atlas-&gt;<ref refid="struct_im_font_atlas_1a443ea9e7c4cf85ee791ffe891280eff3" kindref="member">TexPixelsAlpha8</ref><sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="2851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>write_ptr<sp/>=<sp/>&amp;atlas-&gt;<ref refid="struct_im_font_atlas_1a443ea9e7c4cf85ee791ffe891280eff3" kindref="member">TexPixelsAlpha8</ref>[r-&gt;<ref refid="struct_im_font_atlas_custom_rect_1a4e653e0c1855c48c4fc0b830ed696aed" kindref="member">X</ref><sp/>+<sp/>((r-&gt;<ref refid="struct_im_font_atlas_custom_rect_1adda5fb1f5bfeb194bd5fc27b635db338" kindref="member">Y</ref><sp/>+<sp/>y)<sp/>*<sp/>atlas-&gt;<ref refid="struct_im_font_atlas_1a2d0662502433e7a87b3aa4681ba17aa3" kindref="member">TexWidth</ref>)];</highlight></codeline>
<codeline lineno="2853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>pad_left;<sp/>i++)</highlight></codeline>
<codeline lineno="2854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(write_ptr<sp/>+<sp/>i)<sp/>=<sp/>0x00;</highlight></codeline>
<codeline lineno="2855"><highlight class="normal"></highlight></codeline>
<codeline lineno="2856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>line_width;<sp/>i++)</highlight></codeline>
<codeline lineno="2857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(write_ptr<sp/>+<sp/>pad_left<sp/>+<sp/>i)<sp/>=<sp/>0xFF;</highlight></codeline>
<codeline lineno="2858"><highlight class="normal"></highlight></codeline>
<codeline lineno="2859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>pad_right;<sp/>i++)</highlight></codeline>
<codeline lineno="2860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(write_ptr<sp/>+<sp/>pad_left<sp/>+<sp/>line_width<sp/>+<sp/>i)<sp/>=<sp/>0x00;</highlight></codeline>
<codeline lineno="2861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>write_ptr<sp/>=<sp/>&amp;atlas-&gt;<ref refid="struct_im_font_atlas_1a41163489a5b8060f405c56e22590cba5" kindref="member">TexPixelsRGBA32</ref>[r-&gt;<ref refid="struct_im_font_atlas_custom_rect_1a4e653e0c1855c48c4fc0b830ed696aed" kindref="member">X</ref><sp/>+<sp/>((r-&gt;<ref refid="struct_im_font_atlas_custom_rect_1adda5fb1f5bfeb194bd5fc27b635db338" kindref="member">Y</ref><sp/>+<sp/>y)<sp/>*<sp/>atlas-&gt;<ref refid="struct_im_font_atlas_1a2d0662502433e7a87b3aa4681ba17aa3" kindref="member">TexWidth</ref>)];</highlight></codeline>
<codeline lineno="2865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>pad_left;<sp/>i++)</highlight></codeline>
<codeline lineno="2866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(write_ptr<sp/>+<sp/>i)<sp/>=<sp/><ref refid="imgui_8h_1a123bd4e23eb51ac9dced93eab78c4456" kindref="member">IM_COL32</ref>(255,<sp/>255,<sp/>255,<sp/>0);</highlight></codeline>
<codeline lineno="2867"><highlight class="normal"></highlight></codeline>
<codeline lineno="2868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>line_width;<sp/>i++)</highlight></codeline>
<codeline lineno="2869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(write_ptr<sp/>+<sp/>pad_left<sp/>+<sp/>i)<sp/>=<sp/><ref refid="imgui_8h_1a08fc9855cd3e3fcbb7fcd93b38bd7057" kindref="member">IM_COL32_WHITE</ref>;</highlight></codeline>
<codeline lineno="2870"><highlight class="normal"></highlight></codeline>
<codeline lineno="2871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>pad_right;<sp/>i++)</highlight></codeline>
<codeline lineno="2872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(write_ptr<sp/>+<sp/>pad_left<sp/>+<sp/>line_width<sp/>+<sp/>i)<sp/>=<sp/><ref refid="imgui_8h_1a123bd4e23eb51ac9dced93eab78c4456" kindref="member">IM_COL32</ref>(255,<sp/>255,<sp/>255,<sp/>0);</highlight></codeline>
<codeline lineno="2873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2874"><highlight class="normal"></highlight></codeline>
<codeline lineno="2875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>UVs<sp/>for<sp/>this<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>uv0<sp/>=<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)(r-&gt;<ref refid="struct_im_font_atlas_custom_rect_1a4e653e0c1855c48c4fc0b830ed696aed" kindref="member">X</ref><sp/>+<sp/>pad_left<sp/>-<sp/>1),<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)(r-&gt;<ref refid="struct_im_font_atlas_custom_rect_1adda5fb1f5bfeb194bd5fc27b635db338" kindref="member">Y</ref><sp/>+<sp/>y))<sp/>*<sp/>atlas-&gt;<ref refid="struct_im_font_atlas_1adbe3a6b1fd501108649fe04f882b8664" kindref="member">TexUvScale</ref>;</highlight></codeline>
<codeline lineno="2877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>uv1<sp/>=<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)(r-&gt;<ref refid="struct_im_font_atlas_custom_rect_1a4e653e0c1855c48c4fc0b830ed696aed" kindref="member">X</ref><sp/>+<sp/>pad_left<sp/>+<sp/>line_width<sp/>+<sp/>1),<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)(r-&gt;<ref refid="struct_im_font_atlas_custom_rect_1adda5fb1f5bfeb194bd5fc27b635db338" kindref="member">Y</ref><sp/>+<sp/>y<sp/>+<sp/>1))<sp/>*<sp/>atlas-&gt;<ref refid="struct_im_font_atlas_1adbe3a6b1fd501108649fe04f882b8664" kindref="member">TexUvScale</ref>;</highlight></codeline>
<codeline lineno="2878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>half_v<sp/>=<sp/>(uv0.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref><sp/>+<sp/>uv1.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref>)<sp/>*<sp/>0.5f;<sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>a<sp/>constant<sp/>V<sp/>in<sp/>the<sp/>middle<sp/>of<sp/>the<sp/>row<sp/>to<sp/>avoid<sp/>sampling<sp/>artifacts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atlas-&gt;<ref refid="struct_im_font_atlas_1abf794895d5fb9597bf2a96ab68eb7048" kindref="member">TexUvLines</ref>[n]<sp/>=<sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>(uv0.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref>,<sp/>half_v,<sp/>uv1.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref>,<sp/>half_v);</highlight></codeline>
<codeline lineno="2880"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2881"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2882"><highlight class="normal"></highlight></codeline>
<codeline lineno="2883"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Note:<sp/>this<sp/>is<sp/>called<sp/>/<sp/>shared<sp/>by<sp/>both<sp/>the<sp/>stb_truetype<sp/>and<sp/>the<sp/>FreeType<sp/>builder</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2884"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="imgui__draw_8cpp_1ac050ff181df43cec0b63d834b6039c3f" kindref="member">ImFontAtlasBuildInit</ref>(<ref refid="struct_im_font_atlas" kindref="compound">ImFontAtlas</ref>*<sp/>atlas)</highlight></codeline>
<codeline lineno="2885"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2886"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Round<sp/>font<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2887"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>We<sp/>started<sp/>rounding<sp/>in<sp/>1.90<sp/>WIP<sp/>(18991)<sp/>as<sp/>our<sp/>layout<sp/>system<sp/>currently<sp/>doesn&apos;t<sp/>support<sp/>non-rounded<sp/>font<sp/>size<sp/>well<sp/>yet.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2888"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Note<sp/>that<sp/>using<sp/>io.FontGlobalScale<sp/>or<sp/>SetWindowFontScale(),<sp/>with<sp/>are<sp/>legacy-ish,<sp/>partially<sp/>supported<sp/>features,<sp/>can<sp/>still<sp/>lead<sp/>to<sp/>unrounded<sp/>sizes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2889"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>We<sp/>may<sp/>support<sp/>it<sp/>better<sp/>later<sp/>and<sp/>remove<sp/>this<sp/>rounding.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2890"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="struct_im_font_config" kindref="compound">ImFontConfig</ref>&amp;<sp/>cfg<sp/>:<sp/>atlas-&gt;<ref refid="struct_im_font_atlas_1afa4f7459807763d032fe2d0022fc0823" kindref="member">ConfigData</ref>)</highlight></codeline>
<codeline lineno="2891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cfg.<ref refid="struct_im_font_config_1a2eff9cc7a11461414402f08ab910d277" kindref="member">SizePixels</ref><sp/>=<sp/>ImTrunc(cfg.<ref refid="struct_im_font_config_1a2eff9cc7a11461414402f08ab910d277" kindref="member">SizePixels</ref>);</highlight></codeline>
<codeline lineno="2892"><highlight class="normal"></highlight></codeline>
<codeline lineno="2893"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Register<sp/>texture<sp/>region<sp/>for<sp/>mouse<sp/>cursors<sp/>or<sp/>standard<sp/>white<sp/>pixels</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2894"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(atlas-&gt;<ref refid="struct_im_font_atlas_1afc92fd54d52cab4fe787e364e7e4f652" kindref="member">PackIdMouseCursors</ref><sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="2895"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(atlas-&gt;<ref refid="struct_im_font_atlas_1adf2f2d04b46911ad01cfbef0f59e1f11" kindref="member">Flags</ref><sp/>&amp;<sp/><ref refid="imgui_8h_1a80e2e7eb7dc9a76ac5384b9ce6786563abf2d3e7edd841daaa59af9eb8f2b35fa" kindref="member">ImFontAtlasFlags_NoMouseCursors</ref>))</highlight></codeline>
<codeline lineno="2897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atlas-&gt;<ref refid="struct_im_font_atlas_1afc92fd54d52cab4fe787e364e7e4f652" kindref="member">PackIdMouseCursors</ref><sp/>=<sp/>atlas-&gt;<ref refid="struct_im_font_atlas_1af048760e2d58ec93446e345deb887259" kindref="member">AddCustomRectRegular</ref>(<ref refid="imgui__draw_8cpp_1adf518fea7357febbb14eeecb692a8d95" kindref="member">FONT_ATLAS_DEFAULT_TEX_DATA_W</ref><sp/>*<sp/>2<sp/>+<sp/>1,<sp/><ref refid="imgui__draw_8cpp_1a2c96fc3febbe9f4f6c042a2f975a5b1d" kindref="member">FONT_ATLAS_DEFAULT_TEX_DATA_H</ref>);</highlight></codeline>
<codeline lineno="2898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atlas-&gt;<ref refid="struct_im_font_atlas_1afc92fd54d52cab4fe787e364e7e4f652" kindref="member">PackIdMouseCursors</ref><sp/>=<sp/>atlas-&gt;<ref refid="struct_im_font_atlas_1af048760e2d58ec93446e345deb887259" kindref="member">AddCustomRectRegular</ref>(2,<sp/>2);</highlight></codeline>
<codeline lineno="2900"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2901"><highlight class="normal"></highlight></codeline>
<codeline lineno="2902"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Register<sp/>texture<sp/>region<sp/>for<sp/>thick<sp/>lines</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2903"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>+2<sp/>here<sp/>is<sp/>to<sp/>give<sp/>space<sp/>for<sp/>the<sp/>end<sp/>caps,<sp/>whilst<sp/>height<sp/>+1<sp/>is<sp/>to<sp/>accommodate<sp/>the<sp/>fact<sp/>we<sp/>have<sp/>a<sp/>zero-width<sp/>row</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2904"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(atlas-&gt;<ref refid="struct_im_font_atlas_1a0964aa42e665dbd423066309b3c7461b" kindref="member">PackIdLines</ref><sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="2905"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(atlas-&gt;<ref refid="struct_im_font_atlas_1adf2f2d04b46911ad01cfbef0f59e1f11" kindref="member">Flags</ref><sp/>&amp;<sp/><ref refid="imgui_8h_1a80e2e7eb7dc9a76ac5384b9ce6786563a69694e359b87dc62b8cad71258b9d976" kindref="member">ImFontAtlasFlags_NoBakedLines</ref>))</highlight></codeline>
<codeline lineno="2907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atlas-&gt;<ref refid="struct_im_font_atlas_1a0964aa42e665dbd423066309b3c7461b" kindref="member">PackIdLines</ref><sp/>=<sp/>atlas-&gt;<ref refid="struct_im_font_atlas_1af048760e2d58ec93446e345deb887259" kindref="member">AddCustomRectRegular</ref>(<ref refid="imgui_8h_1a2e0fd3c4182b90dfde08210254eaeccf" kindref="member">IM_DRAWLIST_TEX_LINES_WIDTH_MAX</ref><sp/>+<sp/>2,<sp/><ref refid="imgui_8h_1a2e0fd3c4182b90dfde08210254eaeccf" kindref="member">IM_DRAWLIST_TEX_LINES_WIDTH_MAX</ref><sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="2908"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2909"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2910"><highlight class="normal"></highlight></codeline>
<codeline lineno="2911"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>called/shared<sp/>by<sp/>both<sp/>the<sp/>stb_truetype<sp/>and<sp/>the<sp/>FreeType<sp/>builder.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2912"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="imgui__draw_8cpp_1adbf0ee92b3ac86e30b9e81f552d15d37" kindref="member">ImFontAtlasBuildFinish</ref>(<ref refid="struct_im_font_atlas" kindref="compound">ImFontAtlas</ref>*<sp/>atlas)</highlight></codeline>
<codeline lineno="2913"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2914"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Render<sp/>into<sp/>our<sp/>custom<sp/>data<sp/>blocks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2915"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui_8h_1acb09e7dc42e8e3cefb0ecaa197978920" kindref="member">IM_ASSERT</ref>(atlas-&gt;<ref refid="struct_im_font_atlas_1a443ea9e7c4cf85ee791ffe891280eff3" kindref="member">TexPixelsAlpha8</ref><sp/>!=<sp/>NULL<sp/>||<sp/>atlas-&gt;<ref refid="struct_im_font_atlas_1a41163489a5b8060f405c56e22590cba5" kindref="member">TexPixelsRGBA32</ref><sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="2916"><highlight class="normal"><sp/><sp/><sp/><sp/>ImFontAtlasBuildRenderDefaultTexData(atlas);</highlight></codeline>
<codeline lineno="2917"><highlight class="normal"><sp/><sp/><sp/><sp/>ImFontAtlasBuildRenderLinesTexData(atlas);</highlight></codeline>
<codeline lineno="2918"><highlight class="normal"></highlight></codeline>
<codeline lineno="2919"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Register<sp/>custom<sp/>rectangle<sp/>glyphs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2920"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>atlas-&gt;<ref refid="struct_im_font_atlas_1ae3752e66f7454a42e5ae5ec052af537c" kindref="member">CustomRects</ref>.<ref refid="struct_im_vector_1abbfd157947f66280d27b21d70a16df8d" kindref="member">Size</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="2921"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_font_atlas_custom_rect" kindref="compound">ImFontAtlasCustomRect</ref>*<sp/>r<sp/>=<sp/>&amp;atlas-&gt;<ref refid="struct_im_font_atlas_1ae3752e66f7454a42e5ae5ec052af537c" kindref="member">CustomRects</ref>[i];</highlight></codeline>
<codeline lineno="2923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(r-&gt;<ref refid="struct_im_font_atlas_custom_rect_1ae0b05bcab100beb72c96c4a606c61b3a" kindref="member">Font</ref><sp/>==<sp/>NULL<sp/>||<sp/>r-&gt;<ref refid="struct_im_font_atlas_custom_rect_1a697df6d4ccdaac2077c43cdc1b5435a4" kindref="member">GlyphID</ref><sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="2924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2925"><highlight class="normal"></highlight></codeline>
<codeline lineno="2926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Will<sp/>ignore<sp/>ImFontConfig<sp/>settings:<sp/>GlyphMinAdvanceX,<sp/>GlyphMinAdvanceY,<sp/>GlyphExtraSpacing,<sp/>PixelSnapH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imgui_8h_1acb09e7dc42e8e3cefb0ecaa197978920" kindref="member">IM_ASSERT</ref>(r-&gt;<ref refid="struct_im_font_atlas_custom_rect_1ae0b05bcab100beb72c96c4a606c61b3a" kindref="member">Font</ref>-&gt;<ref refid="struct_im_font_1a8a5e0df6be5e3cabe91ae830524db960" kindref="member">ContainerAtlas</ref><sp/>==<sp/>atlas);</highlight></codeline>
<codeline lineno="2928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>uv0,<sp/>uv1;</highlight></codeline>
<codeline lineno="2929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atlas-&gt;<ref refid="struct_im_font_atlas_1a66bb70a3c3dab00bd714fc52e2195882" kindref="member">CalcCustomRectUV</ref>(r,<sp/>&amp;uv0,<sp/>&amp;uv1);</highlight></codeline>
<codeline lineno="2930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r-&gt;<ref refid="struct_im_font_atlas_custom_rect_1ae0b05bcab100beb72c96c4a606c61b3a" kindref="member">Font</ref>-&gt;<ref refid="struct_im_font_1a1badad96fa8d41b4754fc7bdb826e6b2" kindref="member">AddGlyph</ref>(NULL,<sp/>(<ref refid="imgui_8h_1a1ecb49ee827c39a982f1e1467910d020" kindref="member">ImWchar</ref>)r-&gt;<ref refid="struct_im_font_atlas_custom_rect_1a697df6d4ccdaac2077c43cdc1b5435a4" kindref="member">GlyphID</ref>,<sp/>r-&gt;<ref refid="struct_im_font_atlas_custom_rect_1a03f4d8c267b53dd7981560b0fb5b8b03" kindref="member">GlyphOffset</ref>.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref>,<sp/>r-&gt;<ref refid="struct_im_font_atlas_custom_rect_1a03f4d8c267b53dd7981560b0fb5b8b03" kindref="member">GlyphOffset</ref>.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref>,<sp/>r-&gt;<ref refid="struct_im_font_atlas_custom_rect_1a03f4d8c267b53dd7981560b0fb5b8b03" kindref="member">GlyphOffset</ref>.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref><sp/>+<sp/>r-&gt;<ref refid="struct_im_font_atlas_custom_rect_1ada0c5ae3700d9074280c0801dd9ae20e" kindref="member">Width</ref>,<sp/>r-&gt;<ref refid="struct_im_font_atlas_custom_rect_1a03f4d8c267b53dd7981560b0fb5b8b03" kindref="member">GlyphOffset</ref>.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref><sp/>+<sp/>r-&gt;<ref refid="struct_im_font_atlas_custom_rect_1a94a6da45f46f0cc5abfd6580abfb2f0c" kindref="member">Height</ref>,<sp/>uv0.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref>,<sp/>uv0.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref>,<sp/>uv1.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref>,<sp/>uv1.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref>,<sp/>r-&gt;<ref refid="struct_im_font_atlas_custom_rect_1a062a08fee260f08e669231e602682617" kindref="member">GlyphAdvanceX</ref>);</highlight></codeline>
<codeline lineno="2931"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2932"><highlight class="normal"></highlight></codeline>
<codeline lineno="2933"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Build<sp/>all<sp/>fonts<sp/>lookup<sp/>tables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2934"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="struct_im_font" kindref="compound">ImFont</ref>*<sp/>font<sp/>:<sp/>atlas-&gt;<ref refid="struct_im_font_atlas_1a0198aeb17ef8bb810ccc8db103b93b1f" kindref="member">Fonts</ref>)</highlight></codeline>
<codeline lineno="2935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(font-&gt;<ref refid="struct_im_font_1a3858e851f69b3abbbefad76030a546ff" kindref="member">DirtyLookupTables</ref>)</highlight></codeline>
<codeline lineno="2936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>font-&gt;<ref refid="struct_im_font_1a04b3a1437bd0032722bbbd3613941162" kindref="member">BuildLookupTable</ref>();</highlight></codeline>
<codeline lineno="2937"><highlight class="normal"></highlight></codeline>
<codeline lineno="2938"><highlight class="normal"><sp/><sp/><sp/><sp/>atlas-&gt;<ref refid="struct_im_font_atlas_1a9d28236e71f9a21a21d8f4f7eac39299" kindref="member">TexReady</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2939"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2940"><highlight class="normal"></highlight></codeline>
<codeline lineno="2941"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Retrieve<sp/>list<sp/>of<sp/>range<sp/>(2<sp/>int<sp/>per<sp/>range,<sp/>values<sp/>are<sp/>inclusive)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2942"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1a1ecb49ee827c39a982f1e1467910d020" kindref="member">ImWchar</ref>*<sp/><sp/><sp/><ref refid="struct_im_font_atlas_1adec0df140eb1dc01c2a22a5253d62820" kindref="member">ImFontAtlas::GetGlyphRangesDefault</ref>()</highlight></codeline>
<codeline lineno="2943"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2944"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1a1ecb49ee827c39a982f1e1467910d020" kindref="member">ImWchar</ref><sp/>ranges[]<sp/>=</highlight></codeline>
<codeline lineno="2945"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x0020,<sp/>0x00FF,<sp/></highlight><highlight class="comment">//<sp/>Basic<sp/>Latin<sp/>+<sp/>Latin<sp/>Supplement</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="2948"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="2949"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;ranges[0];</highlight></codeline>
<codeline lineno="2950"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2951"><highlight class="normal"></highlight></codeline>
<codeline lineno="2952"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1a1ecb49ee827c39a982f1e1467910d020" kindref="member">ImWchar</ref>*<sp/><sp/><sp/><ref refid="struct_im_font_atlas_1a46d65b05462b548396d3a8ee6644f3ee" kindref="member">ImFontAtlas::GetGlyphRangesGreek</ref>()</highlight></codeline>
<codeline lineno="2953"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2954"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1a1ecb49ee827c39a982f1e1467910d020" kindref="member">ImWchar</ref><sp/>ranges[]<sp/>=</highlight></codeline>
<codeline lineno="2955"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x0020,<sp/>0x00FF,<sp/></highlight><highlight class="comment">//<sp/>Basic<sp/>Latin<sp/>+<sp/>Latin<sp/>Supplement</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x0370,<sp/>0x03FF,<sp/></highlight><highlight class="comment">//<sp/>Greek<sp/>and<sp/>Coptic</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="2959"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="2960"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;ranges[0];</highlight></codeline>
<codeline lineno="2961"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2962"><highlight class="normal"></highlight></codeline>
<codeline lineno="2963"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1a1ecb49ee827c39a982f1e1467910d020" kindref="member">ImWchar</ref>*<sp/><sp/><ref refid="struct_im_font_atlas_1ac70e07bd35913661c8fc50413b3bf969" kindref="member">ImFontAtlas::GetGlyphRangesKorean</ref>()</highlight></codeline>
<codeline lineno="2964"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2965"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1a1ecb49ee827c39a982f1e1467910d020" kindref="member">ImWchar</ref><sp/>ranges[]<sp/>=</highlight></codeline>
<codeline lineno="2966"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x0020,<sp/>0x00FF,<sp/></highlight><highlight class="comment">//<sp/>Basic<sp/>Latin<sp/>+<sp/>Latin<sp/>Supplement</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x3131,<sp/>0x3163,<sp/></highlight><highlight class="comment">//<sp/>Korean<sp/>alphabets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0xAC00,<sp/>0xD7A3,<sp/></highlight><highlight class="comment">//<sp/>Korean<sp/>characters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0xFFFD,<sp/>0xFFFD,<sp/></highlight><highlight class="comment">//<sp/>Invalid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="2972"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="2973"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;ranges[0];</highlight></codeline>
<codeline lineno="2974"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2975"><highlight class="normal"></highlight></codeline>
<codeline lineno="2976"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1a1ecb49ee827c39a982f1e1467910d020" kindref="member">ImWchar</ref>*<sp/><sp/><ref refid="struct_im_font_atlas_1ab32e8e79cc4f3b36ef447f70034e7c57" kindref="member">ImFontAtlas::GetGlyphRangesChineseFull</ref>()</highlight></codeline>
<codeline lineno="2977"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2978"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1a1ecb49ee827c39a982f1e1467910d020" kindref="member">ImWchar</ref><sp/>ranges[]<sp/>=</highlight></codeline>
<codeline lineno="2979"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x0020,<sp/>0x00FF,<sp/></highlight><highlight class="comment">//<sp/>Basic<sp/>Latin<sp/>+<sp/>Latin<sp/>Supplement</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x2000,<sp/>0x206F,<sp/></highlight><highlight class="comment">//<sp/>General<sp/>Punctuation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x3000,<sp/>0x30FF,<sp/></highlight><highlight class="comment">//<sp/>CJK<sp/>Symbols<sp/>and<sp/>Punctuations,<sp/>Hiragana,<sp/>Katakana</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x31F0,<sp/>0x31FF,<sp/></highlight><highlight class="comment">//<sp/>Katakana<sp/>Phonetic<sp/>Extensions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0xFF00,<sp/>0xFFEF,<sp/></highlight><highlight class="comment">//<sp/>Half-width<sp/>characters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0xFFFD,<sp/>0xFFFD,<sp/></highlight><highlight class="comment">//<sp/>Invalid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x4e00,<sp/>0x9FAF,<sp/></highlight><highlight class="comment">//<sp/>CJK<sp/>Ideograms</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="2988"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="2989"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;ranges[0];</highlight></codeline>
<codeline lineno="2990"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2991"><highlight class="normal"></highlight></codeline>
<codeline lineno="2992"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UnpackAccumulativeOffsetsIntoRanges(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>base_codepoint,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal">*<sp/>accumulative_offsets,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>accumulative_offsets_count,<sp/><ref refid="imgui_8h_1a1ecb49ee827c39a982f1e1467910d020" kindref="member">ImWchar</ref>*<sp/>out_ranges)</highlight></codeline>
<codeline lineno="2993"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2994"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>accumulative_offsets_count;<sp/>n++,<sp/>out_ranges<sp/>+=<sp/>2)</highlight></codeline>
<codeline lineno="2995"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_ranges[0]<sp/>=<sp/>out_ranges[1]<sp/>=<sp/>(<ref refid="imgui_8h_1a1ecb49ee827c39a982f1e1467910d020" kindref="member">ImWchar</ref>)(base_codepoint<sp/>+<sp/>accumulative_offsets[n]);</highlight></codeline>
<codeline lineno="2997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base_codepoint<sp/>+=<sp/>accumulative_offsets[n];</highlight></codeline>
<codeline lineno="2998"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2999"><highlight class="normal"><sp/><sp/><sp/><sp/>out_ranges[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3000"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3001"><highlight class="normal"></highlight></codeline>
<codeline lineno="3002"><highlight class="normal"></highlight><highlight class="comment">//-------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3003"><highlight class="normal"></highlight><highlight class="comment">//<sp/>[SECTION]<sp/>ImFontAtlas<sp/>glyph<sp/>ranges<sp/>helpers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3004"><highlight class="normal"></highlight><highlight class="comment">//-------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3005"><highlight class="normal"></highlight></codeline>
<codeline lineno="3006"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1a1ecb49ee827c39a982f1e1467910d020" kindref="member">ImWchar</ref>*<sp/><sp/><ref refid="struct_im_font_atlas_1a3a6b1a8afb01ba5e7c4d86957d6d2625" kindref="member">ImFontAtlas::GetGlyphRangesChineseSimplifiedCommon</ref>()</highlight></codeline>
<codeline lineno="3007"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3008"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Store<sp/>2500<sp/>regularly<sp/>used<sp/>characters<sp/>for<sp/>Simplified<sp/>Chinese.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3009"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Sourced<sp/>from<sp/>https://zh.wiktionary.org/wiki/%E9%99%84%E5%BD%95:%E7%8E%B0%E4%BB%A3%E6%B1%89%E8%AF%AD%E5%B8%B8%E7%94%A8%E5%AD%97%E8%A1%A8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3010"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>table<sp/>covers<sp/>97.97%<sp/>of<sp/>all<sp/>characters<sp/>used<sp/>during<sp/>the<sp/>month<sp/>in<sp/>July,<sp/>1987.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3011"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>You<sp/>can<sp/>use<sp/>ImFontGlyphRangesBuilder<sp/>to<sp/>create<sp/>your<sp/>own<sp/>ranges<sp/>derived<sp/>from<sp/>this,<sp/>by<sp/>merging<sp/>existing<sp/>ranges<sp/>or<sp/>adding<sp/>new<sp/>characters.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3012"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(Stored<sp/>as<sp/>accumulative<sp/>offsets<sp/>from<sp/>the<sp/>initial<sp/>unicode<sp/>codepoint<sp/>0x4E00.<sp/>This<sp/>encoding<sp/>is<sp/>designed<sp/>to<sp/>helps<sp/>us<sp/>compact<sp/>the<sp/>source<sp/>code<sp/>size.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3013"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>accumulative_offsets_from_0x4E00[]<sp/>=</highlight></codeline>
<codeline lineno="3014"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,1,2,4,1,1,1,1,2,1,3,2,1,2,2,1,1,1,1,1,5,2,1,2,3,3,3,2,2,4,1,1,1,2,1,5,2,3,1,2,1,2,1,1,2,1,1,2,2,1,4,1,1,1,1,5,10,1,2,19,2,1,2,1,2,1,2,1,2,</highlight></codeline>
<codeline lineno="3016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,5,1,6,3,2,1,2,2,1,1,1,4,8,5,1,1,4,1,1,3,1,2,1,5,1,2,1,1,1,10,1,1,5,2,4,6,1,4,2,2,2,12,2,1,1,6,1,1,1,4,1,1,4,6,5,1,4,2,2,4,10,7,1,1,4,2,4,</highlight></codeline>
<codeline lineno="3017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2,1,4,3,6,10,12,5,7,2,14,2,9,1,1,6,7,10,4,7,13,1,5,4,8,4,1,1,2,28,5,6,1,1,5,2,5,20,2,2,9,8,11,2,9,17,1,8,6,8,27,4,6,9,20,11,27,6,68,2,2,1,1,</highlight></codeline>
<codeline lineno="3018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,2,1,2,2,7,6,11,3,3,1,1,3,1,2,1,1,1,1,1,3,1,1,8,3,4,1,5,7,2,1,4,4,8,4,2,1,2,1,1,4,5,6,3,6,2,12,3,1,3,9,2,4,3,4,1,5,3,3,1,3,7,1,5,1,1,1,1,2,</highlight></codeline>
<codeline lineno="3019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3,4,5,2,3,2,6,1,1,2,1,7,1,7,3,4,5,15,2,2,1,5,3,22,19,2,1,1,1,1,2,5,1,1,1,6,1,1,12,8,2,9,18,22,4,1,1,5,1,16,1,2,7,10,15,1,1,6,2,4,1,2,4,1,6,</highlight></codeline>
<codeline lineno="3020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,1,3,2,4,1,6,4,5,1,2,1,1,2,1,10,3,1,3,2,1,9,3,2,5,7,2,19,4,3,6,1,1,1,1,1,4,3,2,1,1,1,2,5,3,1,1,1,2,2,1,1,2,1,1,2,1,3,1,1,1,3,7,1,4,1,1,2,1,</highlight></codeline>
<codeline lineno="3021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,2,1,2,4,4,3,8,1,1,1,2,1,3,5,1,3,1,3,4,6,2,2,14,4,6,6,11,9,1,15,3,1,28,5,2,5,5,3,1,3,4,5,4,6,14,3,2,3,5,21,2,7,20,10,1,2,19,2,4,28,28,2,3,</highlight></codeline>
<codeline lineno="3022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2,1,14,4,1,26,28,42,12,40,3,52,79,5,14,17,3,2,2,11,3,4,6,3,1,8,2,23,4,5,8,10,4,2,7,3,5,1,1,6,3,1,2,2,2,5,28,1,1,7,7,20,5,3,29,3,17,26,1,8,4,</highlight></codeline>
<codeline lineno="3023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>27,3,6,11,23,5,3,4,6,13,24,16,6,5,10,25,35,7,3,2,3,3,14,3,6,2,6,1,4,2,3,8,2,1,1,3,3,3,4,1,1,13,2,2,4,5,2,1,14,14,1,2,2,1,4,5,2,3,1,14,3,12,</highlight></codeline>
<codeline lineno="3024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3,17,2,16,5,1,2,1,8,9,3,19,4,2,2,4,17,25,21,20,28,75,1,10,29,103,4,1,2,1,1,4,2,4,1,2,3,24,2,2,2,1,1,2,1,3,8,1,1,1,2,1,1,3,1,1,1,6,1,5,3,1,1,</highlight></codeline>
<codeline lineno="3025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,3,4,1,1,5,2,1,5,6,13,9,16,1,1,1,1,3,2,3,2,4,5,2,5,2,2,3,7,13,7,2,2,1,1,1,1,2,3,3,2,1,6,4,9,2,1,14,2,14,2,1,18,3,4,14,4,11,41,15,23,15,23,</highlight></codeline>
<codeline lineno="3026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>176,1,3,4,1,1,1,1,5,3,1,2,3,7,3,1,1,2,1,2,4,4,6,2,4,1,9,7,1,10,5,8,16,29,1,1,2,2,3,1,3,5,2,4,5,4,1,1,2,2,3,3,7,1,6,10,1,17,1,44,4,6,2,1,1,6,</highlight></codeline>
<codeline lineno="3027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>5,4,2,10,1,6,9,2,8,1,24,1,2,13,7,8,8,2,1,4,1,3,1,3,3,5,2,5,10,9,4,9,12,2,1,6,1,10,1,1,7,7,4,10,8,3,1,13,4,3,1,6,1,3,5,2,1,2,17,16,5,2,16,6,</highlight></codeline>
<codeline lineno="3028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,4,2,1,3,3,6,8,5,11,11,1,3,3,2,4,6,10,9,5,7,4,7,4,7,1,1,4,2,1,3,6,8,7,1,6,11,5,5,3,24,9,4,2,7,13,5,1,8,82,16,61,1,1,1,4,2,2,16,10,3,8,1,1,</highlight></codeline>
<codeline lineno="3029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>6,4,2,1,3,1,1,1,4,3,8,4,2,2,1,1,1,1,1,6,3,5,1,1,4,6,9,2,1,1,1,2,1,7,2,1,6,1,5,4,4,3,1,8,1,3,3,1,3,2,2,2,2,3,1,6,1,2,1,2,1,3,7,1,8,2,1,2,1,5,</highlight></codeline>
<codeline lineno="3030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2,5,3,5,10,1,2,1,1,3,2,5,11,3,9,3,5,1,1,5,9,1,2,1,5,7,9,9,8,1,3,3,3,6,8,2,3,2,1,1,32,6,1,2,15,9,3,7,13,1,3,10,13,2,14,1,13,10,2,1,3,10,4,15,</highlight></codeline>
<codeline lineno="3031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2,15,15,10,1,3,9,6,9,32,25,26,47,7,3,2,3,1,6,3,4,3,2,8,5,4,1,9,4,2,2,19,10,6,2,3,8,1,2,2,4,2,1,9,4,4,4,6,4,8,9,2,3,1,1,1,1,3,5,5,1,3,8,4,6,</highlight></codeline>
<codeline lineno="3032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2,1,4,12,1,5,3,7,13,2,5,8,1,6,1,2,5,14,6,1,5,2,4,8,15,5,1,23,6,62,2,10,1,1,8,1,2,2,10,4,2,2,9,2,1,1,3,2,3,1,5,3,3,2,1,3,8,1,1,1,11,3,1,1,4,</highlight></codeline>
<codeline lineno="3033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3,7,1,14,1,2,3,12,5,2,5,1,6,7,5,7,14,11,1,3,1,8,9,12,2,1,11,8,4,4,2,6,10,9,13,1,1,3,1,5,1,3,2,4,4,1,18,2,3,14,11,4,29,4,2,7,1,3,13,9,2,2,5,</highlight></codeline>
<codeline lineno="3034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3,5,20,7,16,8,5,72,34,6,4,22,12,12,28,45,36,9,7,39,9,191,1,1,1,4,11,8,4,9,2,3,22,1,1,1,1,4,17,1,7,7,1,11,31,10,2,4,8,2,3,2,1,4,2,16,4,32,2,</highlight></codeline>
<codeline lineno="3035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3,19,13,4,9,1,5,2,14,8,1,1,3,6,19,6,5,1,16,6,2,10,8,5,1,2,3,1,5,5,1,11,6,6,1,3,3,2,6,3,8,1,1,4,10,7,5,7,7,5,8,9,2,1,3,4,1,1,3,1,3,3,2,6,16,</highlight></codeline>
<codeline lineno="3036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,4,6,3,1,10,6,1,3,15,2,9,2,10,25,13,9,16,6,2,2,10,11,4,3,9,1,2,6,6,5,4,30,40,1,10,7,12,14,33,6,3,6,7,3,1,3,1,11,14,4,9,5,12,11,49,18,51,31,</highlight></codeline>
<codeline lineno="3037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>140,31,2,2,1,5,1,8,1,10,1,4,4,3,24,1,10,1,3,6,6,16,3,4,5,2,1,4,2,57,10,6,22,2,22,3,7,22,6,10,11,36,18,16,33,36,2,5,5,1,1,1,4,10,1,4,13,2,7,</highlight></codeline>
<codeline lineno="3038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>5,2,9,3,4,1,7,43,3,7,3,9,14,7,9,1,11,1,1,3,7,4,18,13,1,14,1,3,6,10,73,2,2,30,6,1,11,18,19,13,22,3,46,42,37,89,7,3,16,34,2,2,3,9,1,7,1,1,1,2,</highlight></codeline>
<codeline lineno="3039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2,4,10,7,3,10,3,9,5,28,9,2,6,13,7,3,1,3,10,2,7,2,11,3,6,21,54,85,2,1,4,2,2,1,39,3,21,2,2,5,1,1,1,4,1,1,3,4,15,1,3,2,4,4,2,3,8,2,20,1,8,7,13,</highlight></codeline>
<codeline lineno="3040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>4,1,26,6,2,9,34,4,21,52,10,4,4,1,5,12,2,11,1,7,2,30,12,44,2,30,1,1,3,6,16,9,17,39,82,2,2,24,7,1,7,3,16,9,14,44,2,1,2,1,2,3,5,2,4,1,6,7,5,3,</highlight></codeline>
<codeline lineno="3041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2,6,1,11,5,11,2,1,18,19,8,1,3,24,29,2,1,3,5,2,2,1,13,6,5,1,46,11,3,5,1,1,5,8,2,10,6,12,6,3,7,11,2,4,16,13,2,5,1,1,2,2,5,2,28,5,2,23,10,8,4,</highlight></codeline>
<codeline lineno="3042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>4,22,39,95,38,8,14,9,5,1,13,5,4,3,13,12,11,1,9,1,27,37,2,5,4,4,63,211,95,2,2,2,1,3,5,2,1,1,2,2,1,1,1,3,2,4,1,2,1,1,5,2,2,1,1,2,3,1,3,1,1,1,</highlight></codeline>
<codeline lineno="3043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3,1,4,2,1,3,6,1,1,3,7,15,5,3,2,5,3,9,11,4,2,22,1,6,3,8,7,1,4,28,4,16,3,3,25,4,4,27,27,1,4,1,2,2,7,1,3,5,2,28,8,2,14,1,8,6,16,25,3,3,3,14,3,</highlight></codeline>
<codeline lineno="3044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3,1,1,2,1,4,6,3,8,4,1,1,1,2,3,6,10,6,2,3,18,3,2,5,5,4,3,1,5,2,5,4,23,7,6,12,6,4,17,11,9,5,1,1,10,5,12,1,1,11,26,33,7,3,6,1,17,7,1,5,12,1,11,</highlight></codeline>
<codeline lineno="3045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2,4,1,8,14,17,23,1,2,1,7,8,16,11,9,6,5,2,6,4,16,2,8,14,1,11,8,9,1,1,1,9,25,4,11,19,7,2,15,2,12,8,52,7,5,19,2,16,4,36,8,1,16,8,24,26,4,6,2,9,</highlight></codeline>
<codeline lineno="3046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>5,4,36,3,28,12,25,15,37,27,17,12,59,38,5,32,127,1,2,9,17,14,4,1,2,1,1,8,11,50,4,14,2,19,16,4,17,5,4,5,26,12,45,2,23,45,104,30,12,8,3,10,2,2,</highlight></codeline>
<codeline lineno="3047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3,3,1,4,20,7,2,9,6,15,2,20,1,3,16,4,11,15,6,134,2,5,59,1,2,2,2,1,9,17,3,26,137,10,211,59,1,2,4,1,4,1,1,1,2,6,2,3,1,1,2,3,2,3,1,3,4,4,2,3,3,</highlight></codeline>
<codeline lineno="3048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,4,3,1,7,2,2,3,1,2,1,3,3,3,2,2,3,2,1,3,14,6,1,3,2,9,6,15,27,9,34,145,1,1,2,1,1,1,1,2,1,1,1,1,2,2,2,3,1,2,1,1,1,2,3,5,8,3,5,2,4,1,3,2,2,2,12,</highlight></codeline>
<codeline lineno="3049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>4,1,1,1,10,4,5,1,20,4,16,1,15,9,5,12,2,9,2,5,4,2,26,19,7,1,26,4,30,12,15,42,1,6,8,172,1,1,4,2,1,1,11,2,2,4,2,1,2,1,10,8,1,2,1,4,5,1,2,5,1,8,</highlight></codeline>
<codeline lineno="3050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>4,1,3,4,2,1,6,2,1,3,4,1,2,1,1,1,1,12,5,7,2,4,3,1,1,1,3,3,6,1,2,2,3,3,3,2,1,2,12,14,11,6,6,4,12,2,8,1,7,10,1,35,7,4,13,15,4,3,23,21,28,52,5,</highlight></codeline>
<codeline lineno="3051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>26,5,6,1,7,10,2,7,53,3,2,1,1,1,2,163,532,1,10,11,1,3,3,4,8,2,8,6,2,2,23,22,4,2,2,4,2,1,3,1,3,3,5,9,8,2,1,2,8,1,10,2,12,21,20,15,105,2,3,1,1,</highlight></codeline>
<codeline lineno="3052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3,2,3,1,1,2,5,1,4,15,11,19,1,1,1,1,5,4,5,1,1,2,5,3,5,12,1,2,5,1,11,1,1,15,9,1,4,5,3,26,8,2,1,3,1,1,15,19,2,12,1,2,5,2,7,2,19,2,20,6,26,7,5,</highlight></codeline>
<codeline lineno="3053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2,2,7,34,21,13,70,2,128,1,1,2,1,1,2,1,1,3,2,2,2,15,1,4,1,3,4,42,10,6,1,49,85,8,1,2,1,1,4,4,2,3,6,1,5,7,4,3,211,4,1,2,1,2,5,1,2,4,2,2,6,5,6,</highlight></codeline>
<codeline lineno="3054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>10,3,4,48,100,6,2,16,296,5,27,387,2,2,3,7,16,8,5,38,15,39,21,9,10,3,7,59,13,27,21,47,5,21,6</highlight></codeline>
<codeline lineno="3055"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3056"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1a1ecb49ee827c39a982f1e1467910d020" kindref="member">ImWchar</ref><sp/>base_ranges[]<sp/>=<sp/></highlight><highlight class="comment">//<sp/>not<sp/>zero-terminated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3057"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x0020,<sp/>0x00FF,<sp/></highlight><highlight class="comment">//<sp/>Basic<sp/>Latin<sp/>+<sp/>Latin<sp/>Supplement</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x2000,<sp/>0x206F,<sp/></highlight><highlight class="comment">//<sp/>General<sp/>Punctuation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x3000,<sp/>0x30FF,<sp/></highlight><highlight class="comment">//<sp/>CJK<sp/>Symbols<sp/>and<sp/>Punctuations,<sp/>Hiragana,<sp/>Katakana</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x31F0,<sp/>0x31FF,<sp/></highlight><highlight class="comment">//<sp/>Katakana<sp/>Phonetic<sp/>Extensions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0xFF00,<sp/>0xFFEF,<sp/></highlight><highlight class="comment">//<sp/>Half-width<sp/>characters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0xFFFD,<sp/>0xFFFD<sp/><sp/></highlight><highlight class="comment">//<sp/>Invalid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3064"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3065"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1a1ecb49ee827c39a982f1e1467910d020" kindref="member">ImWchar</ref><sp/>full_ranges[<ref refid="imgui_8h_1aeabe36f60fe45cf64cbc9641bcd58cca" kindref="member">IM_ARRAYSIZE</ref>(base_ranges)<sp/>+<sp/><ref refid="imgui_8h_1aeabe36f60fe45cf64cbc9641bcd58cca" kindref="member">IM_ARRAYSIZE</ref>(accumulative_offsets_from_0x4E00)<sp/>*<sp/>2<sp/>+<sp/>1]<sp/>=<sp/>{<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="3066"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!full_ranges[0])</highlight></codeline>
<codeline lineno="3067"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(full_ranges,<sp/>base_ranges,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(base_ranges));</highlight></codeline>
<codeline lineno="3069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnpackAccumulativeOffsetsIntoRanges(0x4E00,<sp/>accumulative_offsets_from_0x4E00,<sp/><ref refid="imgui_8h_1aeabe36f60fe45cf64cbc9641bcd58cca" kindref="member">IM_ARRAYSIZE</ref>(accumulative_offsets_from_0x4E00),<sp/>full_ranges<sp/>+<sp/><ref refid="imgui_8h_1aeabe36f60fe45cf64cbc9641bcd58cca" kindref="member">IM_ARRAYSIZE</ref>(base_ranges));</highlight></codeline>
<codeline lineno="3070"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3071"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;full_ranges[0];</highlight></codeline>
<codeline lineno="3072"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3073"><highlight class="normal"></highlight></codeline>
<codeline lineno="3074"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1a1ecb49ee827c39a982f1e1467910d020" kindref="member">ImWchar</ref>*<sp/><sp/><ref refid="struct_im_font_atlas_1a2654afbbf73835bf08278cdc6c181a96" kindref="member">ImFontAtlas::GetGlyphRangesJapanese</ref>()</highlight></codeline>
<codeline lineno="3075"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3076"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>2999<sp/>ideograms<sp/>code<sp/>points<sp/>for<sp/>Japanese</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3077"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>2136<sp/>Joyo<sp/>(meaning<sp/>&quot;for<sp/>regular<sp/>use&quot;<sp/>or<sp/>&quot;for<sp/>common<sp/>use&quot;)<sp/>Kanji<sp/>code<sp/>points</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3078"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>863<sp/>Jinmeiyo<sp/>(meaning<sp/>&quot;for<sp/>personal<sp/>name&quot;)<sp/>Kanji<sp/>code<sp/>points</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3079"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Sourced<sp/>from<sp/>official<sp/>information<sp/>provided<sp/>by<sp/>the<sp/>government<sp/>agencies<sp/>of<sp/>Japan:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3080"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>-<sp/>List<sp/>of<sp/>Joyo<sp/>Kanji<sp/>by<sp/>the<sp/>Agency<sp/>for<sp/>Cultural<sp/>Affairs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3081"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>-<sp/>https://www.bunka.go.jp/kokugo_nihongo/sisaku/joho/joho/kijun/naikaku/kanji/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3082"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>-<sp/>List<sp/>of<sp/>Jinmeiyo<sp/>Kanji<sp/>by<sp/>the<sp/>Ministry<sp/>of<sp/>Justice</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3083"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>-<sp/>http://www.moj.go.jp/MINJI/minji86.html</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3084"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>-<sp/>Available<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>Creative<sp/>Commons<sp/>Attribution<sp/>4.0<sp/>International<sp/>(CC<sp/>BY<sp/>4.0).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3085"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>-<sp/>https://creativecommons.org/licenses/by/4.0/legalcode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3086"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>You<sp/>can<sp/>generate<sp/>this<sp/>code<sp/>by<sp/>the<sp/>script<sp/>at:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3087"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>-<sp/>https://github.com/vaiorabbit/everyday_use_kanji</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3088"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>References:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3089"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>-<sp/>List<sp/>of<sp/>Joyo<sp/>Kanji</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3090"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>-<sp/>(Wikipedia)<sp/>https://en.wikipedia.org/wiki/List_of_j%C5%8Dy%C5%8D_kanji</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3091"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>-<sp/>List<sp/>of<sp/>Jinmeiyo<sp/>Kanji</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3092"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>-<sp/>(Wikipedia)<sp/>https://en.wikipedia.org/wiki/Jinmeiy%C5%8D_kanji</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3093"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Missing<sp/>1<sp/>Joyo<sp/>Kanji:<sp/>U+20B9F<sp/>(Kun&apos;yomi:<sp/>Shikaru,<sp/>On&apos;yomi:<sp/>Shitsu,shichi),<sp/>see<sp/>https://github.com/ocornut/imgui/pull/3627<sp/>for<sp/>details.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3094"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>You<sp/>can<sp/>use<sp/>ImFontGlyphRangesBuilder<sp/>to<sp/>create<sp/>your<sp/>own<sp/>ranges<sp/>derived<sp/>from<sp/>this,<sp/>by<sp/>merging<sp/>existing<sp/>ranges<sp/>or<sp/>adding<sp/>new<sp/>characters.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3095"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(Stored<sp/>as<sp/>accumulative<sp/>offsets<sp/>from<sp/>the<sp/>initial<sp/>unicode<sp/>codepoint<sp/>0x4E00.<sp/>This<sp/>encoding<sp/>is<sp/>designed<sp/>to<sp/>helps<sp/>us<sp/>compact<sp/>the<sp/>source<sp/>code<sp/>size.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3096"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>accumulative_offsets_from_0x4E00[]<sp/>=</highlight></codeline>
<codeline lineno="3097"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,1,2,4,1,1,1,1,2,1,3,3,2,2,1,5,3,5,7,5,6,1,2,1,7,2,6,3,1,8,1,1,4,1,1,18,2,11,2,6,2,1,2,1,5,1,2,1,3,1,2,1,2,3,3,1,1,2,3,1,1,1,12,7,9,1,4,5,1,</highlight></codeline>
<codeline lineno="3099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,2,1,10,1,1,9,2,2,4,5,6,9,3,1,1,1,1,9,3,18,5,2,2,2,2,1,6,3,7,1,1,1,1,2,2,4,2,1,23,2,10,4,3,5,2,4,10,2,4,13,1,6,1,9,3,1,1,6,6,7,6,3,1,2,11,3,</highlight></codeline>
<codeline lineno="3100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2,2,3,2,15,2,2,5,4,3,6,4,1,2,5,2,12,16,6,13,9,13,2,1,1,7,16,4,7,1,19,1,5,1,2,2,7,7,8,2,6,5,4,9,18,7,4,5,9,13,11,8,15,2,1,1,1,2,1,2,2,1,2,2,8,</highlight></codeline>
<codeline lineno="3101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2,9,3,3,1,1,4,4,1,1,1,4,9,1,4,3,5,5,2,7,5,3,4,8,2,1,13,2,3,3,1,14,1,1,4,5,1,3,6,1,5,2,1,1,3,3,3,3,1,1,2,7,6,6,7,1,4,7,6,1,1,1,1,1,12,3,3,9,5,</highlight></codeline>
<codeline lineno="3102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2,6,1,5,6,1,2,3,18,2,4,14,4,1,3,6,1,1,6,3,5,5,3,2,2,2,2,12,3,1,4,2,3,2,3,11,1,7,4,1,2,1,3,17,1,9,1,24,1,1,4,2,2,4,1,2,7,1,1,1,3,1,2,2,4,15,1,</highlight></codeline>
<codeline lineno="3103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,2,1,1,2,1,5,2,5,20,2,5,9,1,10,8,7,6,1,1,1,1,1,1,6,2,1,2,8,1,1,1,1,5,1,1,3,1,1,1,1,3,1,1,12,4,1,3,1,1,1,1,1,10,3,1,7,5,13,1,2,3,4,6,1,1,30,</highlight></codeline>
<codeline lineno="3104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2,9,9,1,15,38,11,3,1,8,24,7,1,9,8,10,2,1,9,31,2,13,6,2,9,4,49,5,2,15,2,1,10,2,1,1,1,2,2,6,15,30,35,3,14,18,8,1,16,10,28,12,19,45,38,1,3,2,3,</highlight></codeline>
<codeline lineno="3105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>13,2,1,7,3,6,5,3,4,3,1,5,7,8,1,5,3,18,5,3,6,1,21,4,24,9,24,40,3,14,3,21,3,2,1,2,4,2,3,1,15,15,6,5,1,1,3,1,5,6,1,9,7,3,3,2,1,4,3,8,21,5,16,4,</highlight></codeline>
<codeline lineno="3106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>5,2,10,11,11,3,6,3,2,9,3,6,13,1,2,1,1,1,1,11,12,6,6,1,4,2,6,5,2,1,1,3,3,6,13,3,1,1,5,1,2,3,3,14,2,1,2,2,2,5,1,9,5,1,1,6,12,3,12,3,4,13,2,14,</highlight></codeline>
<codeline lineno="3107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2,8,1,17,5,1,16,4,2,2,21,8,9,6,23,20,12,25,19,9,38,8,3,21,40,25,33,13,4,3,1,4,1,2,4,1,2,5,26,2,1,1,2,1,3,6,2,1,1,1,1,1,1,2,3,1,1,1,9,2,3,1,1,</highlight></codeline>
<codeline lineno="3108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,3,6,3,2,1,1,6,6,1,8,2,2,2,1,4,1,2,3,2,7,3,2,4,1,2,1,2,2,1,1,1,1,1,3,1,2,5,4,10,9,4,9,1,1,1,1,1,1,5,3,2,1,6,4,9,6,1,10,2,31,17,8,3,7,5,40,1,</highlight></codeline>
<codeline lineno="3109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>7,7,1,6,5,2,10,7,8,4,15,39,25,6,28,47,18,10,7,1,3,1,1,2,1,1,1,3,3,3,1,1,1,3,4,2,1,4,1,3,6,10,7,8,6,2,2,1,3,3,2,5,8,7,9,12,2,15,1,1,4,1,2,1,1,</highlight></codeline>
<codeline lineno="3110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,3,2,1,3,3,5,6,2,3,2,10,1,4,2,8,1,1,1,11,6,1,21,4,16,3,1,3,1,4,2,3,6,5,1,3,1,1,3,3,4,6,1,1,10,4,2,7,10,4,7,4,2,9,4,3,1,1,1,4,1,8,3,4,1,3,1,</highlight></codeline>
<codeline lineno="3111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>6,1,4,2,1,4,7,2,1,8,1,4,5,1,1,2,2,4,6,2,7,1,10,1,1,3,4,11,10,8,21,4,6,1,3,5,2,1,2,28,5,5,2,3,13,1,2,3,1,4,2,1,5,20,3,8,11,1,3,3,3,1,8,10,9,2,</highlight></codeline>
<codeline lineno="3112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>10,9,2,3,1,1,2,4,1,8,3,6,1,7,8,6,11,1,4,29,8,4,3,1,2,7,13,1,4,1,6,2,6,12,12,2,20,3,2,3,6,4,8,9,2,7,34,5,1,18,6,1,1,4,4,5,7,9,1,2,2,4,3,4,1,7,</highlight></codeline>
<codeline lineno="3113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2,2,2,6,2,3,25,5,3,6,1,4,6,7,4,2,1,4,2,13,6,4,4,3,1,5,3,4,4,3,2,1,1,4,1,2,1,1,3,1,11,1,6,3,1,7,3,6,2,8,8,6,9,3,4,11,3,2,10,12,2,5,11,1,6,4,5,</highlight></codeline>
<codeline lineno="3114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3,1,8,5,4,6,6,3,5,1,1,3,2,1,2,2,6,17,12,1,10,1,6,12,1,6,6,19,9,6,16,1,13,4,4,15,7,17,6,11,9,15,12,6,7,2,1,2,2,15,9,3,21,4,6,49,18,7,3,2,3,1,</highlight></codeline>
<codeline lineno="3115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>6,8,2,2,6,2,9,1,3,6,4,4,1,2,16,2,5,2,1,6,2,3,5,3,1,2,5,1,2,1,9,3,1,8,6,4,8,11,3,1,1,1,1,3,1,13,8,4,1,3,2,2,1,4,1,11,1,5,2,1,5,2,5,8,6,1,1,7,</highlight></codeline>
<codeline lineno="3116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>4,3,8,3,2,7,2,1,5,1,5,2,4,7,6,2,8,5,1,11,4,5,3,6,18,1,2,13,3,3,1,21,1,1,4,1,4,1,1,1,8,1,2,2,7,1,2,4,2,2,9,2,1,1,1,4,3,6,3,12,5,1,1,1,5,6,3,2,</highlight></codeline>
<codeline lineno="3117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>4,8,2,2,4,2,7,1,8,9,5,2,3,2,1,3,2,13,7,14,6,5,1,1,2,1,4,2,23,2,1,1,6,3,1,4,1,15,3,1,7,3,9,14,1,3,1,4,1,1,5,8,1,3,8,3,8,15,11,4,14,4,4,2,5,5,</highlight></codeline>
<codeline lineno="3118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,7,1,6,14,7,7,8,5,15,4,8,6,5,6,2,1,13,1,20,15,11,9,2,5,6,2,11,2,6,2,5,1,5,8,4,13,19,25,4,1,1,11,1,34,2,5,9,14,6,2,2,6,1,1,14,1,3,14,13,1,6,</highlight></codeline>
<codeline lineno="3119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>12,21,14,14,6,32,17,8,32,9,28,1,2,4,11,8,3,1,14,2,5,15,1,1,1,1,3,6,4,1,3,4,11,3,1,1,11,30,1,5,1,4,1,5,8,1,1,3,2,4,3,17,35,2,6,12,17,3,1,6,2,</highlight></codeline>
<codeline lineno="3120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,1,12,2,7,3,3,2,1,16,2,8,3,6,5,4,7,3,3,8,1,9,8,5,1,2,1,3,2,8,1,2,9,12,1,1,2,3,8,3,24,12,4,3,7,5,8,3,3,3,3,3,3,1,23,10,3,1,2,2,6,3,1,16,1,16,</highlight></codeline>
<codeline lineno="3121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>22,3,10,4,11,6,9,7,7,3,6,2,2,2,4,10,2,1,1,2,8,7,1,6,4,1,3,3,3,5,10,12,12,2,3,12,8,15,1,1,16,6,6,1,5,9,11,4,11,4,2,6,12,1,17,5,13,1,4,9,5,1,11,</highlight></codeline>
<codeline lineno="3122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2,1,8,1,5,7,28,8,3,5,10,2,17,3,38,22,1,2,18,12,10,4,38,18,1,4,44,19,4,1,8,4,1,12,1,4,31,12,1,14,7,75,7,5,10,6,6,13,3,2,11,11,3,2,5,28,15,6,18,</highlight></codeline>
<codeline lineno="3123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>18,5,6,4,3,16,1,7,18,7,36,3,5,3,1,7,1,9,1,10,7,2,4,2,6,2,9,7,4,3,32,12,3,7,10,2,23,16,3,1,12,3,31,4,11,1,3,8,9,5,1,30,15,6,12,3,2,2,11,19,9,</highlight></codeline>
<codeline lineno="3124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>14,2,6,2,3,19,13,17,5,3,3,25,3,14,1,1,1,36,1,3,2,19,3,13,36,9,13,31,6,4,16,34,2,5,4,2,3,3,5,1,1,1,4,3,1,17,3,2,3,5,3,1,3,2,3,5,6,3,12,11,1,3,</highlight></codeline>
<codeline lineno="3125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,2,26,7,12,7,2,14,3,3,7,7,11,25,25,28,16,4,36,1,2,1,6,2,1,9,3,27,17,4,3,4,13,4,1,3,2,2,1,10,4,2,4,6,3,8,2,1,18,1,1,24,2,2,4,33,2,3,63,7,1,6,</highlight></codeline>
<codeline lineno="3126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>40,7,3,4,4,2,4,15,18,1,16,1,1,11,2,41,14,1,3,18,13,3,2,4,16,2,17,7,15,24,7,18,13,44,2,2,3,6,1,1,7,5,1,7,1,4,3,3,5,10,8,2,3,1,8,1,1,27,4,2,1,</highlight></codeline>
<codeline lineno="3127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>12,1,2,1,10,6,1,6,7,5,2,3,7,11,5,11,3,6,6,2,3,15,4,9,1,1,2,1,2,11,2,8,12,8,5,4,2,3,1,5,2,2,1,14,1,12,11,4,1,11,17,17,4,3,2,5,5,7,3,1,5,9,9,8,</highlight></codeline>
<codeline lineno="3128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2,5,6,6,13,13,2,1,2,6,1,2,2,49,4,9,1,2,10,16,7,8,4,3,2,23,4,58,3,29,1,14,19,19,11,11,2,7,5,1,3,4,6,2,18,5,12,12,17,17,3,3,2,4,1,6,2,3,4,3,1,</highlight></codeline>
<codeline lineno="3129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,1,1,5,1,1,9,1,3,1,3,6,1,8,1,1,2,6,4,14,3,1,4,11,4,1,3,32,1,2,4,13,4,1,2,4,2,1,3,1,11,1,4,2,1,4,4,6,3,5,1,6,5,7,6,3,23,3,5,3,5,3,3,13,3,9,10,</highlight></codeline>
<codeline lineno="3130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,12,10,2,3,18,13,7,160,52,4,2,2,3,2,14,5,4,12,4,6,4,1,20,4,11,6,2,12,27,1,4,1,2,2,7,4,5,2,28,3,7,25,8,3,19,3,6,10,2,2,1,10,2,5,4,1,3,4,1,5,</highlight></codeline>
<codeline lineno="3131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3,2,6,9,3,6,2,16,3,3,16,4,5,5,3,2,1,2,16,15,8,2,6,21,2,4,1,22,5,8,1,1,21,11,2,1,11,11,19,13,12,4,2,3,2,3,6,1,8,11,1,4,2,9,5,2,1,11,2,9,1,1,2,</highlight></codeline>
<codeline lineno="3132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>14,31,9,3,4,21,14,4,8,1,7,2,2,2,5,1,4,20,3,3,4,10,1,11,9,8,2,1,4,5,14,12,14,2,17,9,6,31,4,14,1,20,13,26,5,2,7,3,6,13,2,4,2,19,6,2,2,18,9,3,5,</highlight></codeline>
<codeline lineno="3133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>12,12,14,4,6,2,3,6,9,5,22,4,5,25,6,4,8,5,2,6,27,2,35,2,16,3,7,8,8,6,6,5,9,17,2,20,6,19,2,13,3,1,1,1,4,17,12,2,14,7,1,4,18,12,38,33,2,10,1,1,</highlight></codeline>
<codeline lineno="3134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2,13,14,17,11,50,6,33,20,26,74,16,23,45,50,13,38,33,6,6,7,4,4,2,1,3,2,5,8,7,8,9,3,11,21,9,13,1,3,10,6,7,1,2,2,18,5,5,1,9,9,2,68,9,19,13,2,5,</highlight></codeline>
<codeline lineno="3135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,4,4,7,4,13,3,9,10,21,17,3,26,2,1,5,2,4,5,4,1,7,4,7,3,4,2,1,6,1,1,20,4,1,9,2,2,1,3,3,2,3,2,1,1,1,20,2,3,1,6,2,3,6,2,4,8,1,3,2,10,3,5,3,4,4,</highlight></codeline>
<codeline lineno="3136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3,4,16,1,6,1,10,2,4,2,1,1,2,10,11,2,2,3,1,24,31,4,10,10,2,5,12,16,164,15,4,16,7,9,15,19,17,1,2,1,1,5,1,1,1,1,1,3,1,4,3,1,3,1,3,1,2,1,1,3,3,7,</highlight></codeline>
<codeline lineno="3137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2,8,1,2,2,2,1,3,4,3,7,8,12,92,2,10,3,1,3,14,5,25,16,42,4,7,7,4,2,21,5,27,26,27,21,25,30,31,2,1,5,13,3,22,5,6,6,11,9,12,1,5,9,7,5,5,22,60,3,5,</highlight></codeline>
<codeline lineno="3138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>13,1,1,8,1,1,3,3,2,1,9,3,3,18,4,1,2,3,7,6,3,1,2,3,9,1,3,1,3,2,1,3,1,1,1,2,1,11,3,1,6,9,1,3,2,3,1,2,1,5,1,1,4,3,4,1,2,2,4,4,1,7,2,1,2,2,3,5,13,</highlight></codeline>
<codeline lineno="3139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>18,3,4,14,9,9,4,16,3,7,5,8,2,6,48,28,3,1,1,4,2,14,8,2,9,2,1,15,2,4,3,2,10,16,12,8,7,1,1,3,1,1,1,2,7,4,1,6,4,38,39,16,23,7,15,15,3,2,12,7,21,</highlight></codeline>
<codeline lineno="3140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>37,27,6,5,4,8,2,10,8,8,6,5,1,2,1,3,24,1,16,17,9,23,10,17,6,1,51,55,44,13,294,9,3,6,2,4,2,2,15,1,1,1,13,21,17,68,14,8,9,4,1,4,9,3,11,7,1,1,1,</highlight></codeline>
<codeline lineno="3141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>5,6,3,2,1,1,1,2,3,8,1,2,2,4,1,5,5,2,1,4,3,7,13,4,1,4,1,3,1,1,1,5,5,10,1,6,1,5,2,1,5,2,4,1,4,5,7,3,18,2,9,11,32,4,3,3,2,4,7,11,16,9,11,8,13,38,</highlight></codeline>
<codeline lineno="3142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>32,8,4,2,1,1,2,1,2,4,4,1,1,1,4,1,21,3,11,1,16,1,1,6,1,3,2,4,9,8,57,7,44,1,3,3,13,3,10,1,1,7,5,2,7,21,47,63,3,15,4,7,1,16,1,1,2,8,2,3,42,15,4,</highlight></codeline>
<codeline lineno="3143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,29,7,22,10,3,78,16,12,20,18,4,67,11,5,1,3,15,6,21,31,32,27,18,13,71,35,5,142,4,10,1,2,50,19,33,16,35,37,16,19,27,7,1,133,19,1,4,8,7,20,1,4,</highlight></codeline>
<codeline lineno="3144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>4,1,10,3,1,6,1,2,51,5,40,15,24,43,22928,11,1,13,154,70,3,1,1,7,4,10,1,2,1,1,2,1,2,1,2,2,1,1,2,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,</highlight></codeline>
<codeline lineno="3145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3,2,1,1,1,1,2,1,1,</highlight></codeline>
<codeline lineno="3146"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1a1ecb49ee827c39a982f1e1467910d020" kindref="member">ImWchar</ref><sp/>base_ranges[]<sp/>=<sp/></highlight><highlight class="comment">//<sp/>not<sp/>zero-terminated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3148"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x0020,<sp/>0x00FF,<sp/></highlight><highlight class="comment">//<sp/>Basic<sp/>Latin<sp/>+<sp/>Latin<sp/>Supplement</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x3000,<sp/>0x30FF,<sp/></highlight><highlight class="comment">//<sp/>CJK<sp/>Symbols<sp/>and<sp/>Punctuations,<sp/>Hiragana,<sp/>Katakana</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x31F0,<sp/>0x31FF,<sp/></highlight><highlight class="comment">//<sp/>Katakana<sp/>Phonetic<sp/>Extensions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0xFF00,<sp/>0xFFEF,<sp/></highlight><highlight class="comment">//<sp/>Half-width<sp/>characters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0xFFFD,<sp/>0xFFFD<sp/><sp/></highlight><highlight class="comment">//<sp/>Invalid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3154"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1a1ecb49ee827c39a982f1e1467910d020" kindref="member">ImWchar</ref><sp/>full_ranges[<ref refid="imgui_8h_1aeabe36f60fe45cf64cbc9641bcd58cca" kindref="member">IM_ARRAYSIZE</ref>(base_ranges)<sp/>+<sp/><ref refid="imgui_8h_1aeabe36f60fe45cf64cbc9641bcd58cca" kindref="member">IM_ARRAYSIZE</ref>(accumulative_offsets_from_0x4E00)*2<sp/>+<sp/>1]<sp/>=<sp/>{<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="3156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!full_ranges[0])</highlight></codeline>
<codeline lineno="3157"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(full_ranges,<sp/>base_ranges,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(base_ranges));</highlight></codeline>
<codeline lineno="3159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnpackAccumulativeOffsetsIntoRanges(0x4E00,<sp/>accumulative_offsets_from_0x4E00,<sp/><ref refid="imgui_8h_1aeabe36f60fe45cf64cbc9641bcd58cca" kindref="member">IM_ARRAYSIZE</ref>(accumulative_offsets_from_0x4E00),<sp/>full_ranges<sp/>+<sp/><ref refid="imgui_8h_1aeabe36f60fe45cf64cbc9641bcd58cca" kindref="member">IM_ARRAYSIZE</ref>(base_ranges));</highlight></codeline>
<codeline lineno="3160"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;full_ranges[0];</highlight></codeline>
<codeline lineno="3162"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3163"><highlight class="normal"></highlight></codeline>
<codeline lineno="3164"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1a1ecb49ee827c39a982f1e1467910d020" kindref="member">ImWchar</ref>*<sp/><sp/><ref refid="struct_im_font_atlas_1a5aaff3357d9ed401ce451c39942e869e" kindref="member">ImFontAtlas::GetGlyphRangesCyrillic</ref>()</highlight></codeline>
<codeline lineno="3165"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1a1ecb49ee827c39a982f1e1467910d020" kindref="member">ImWchar</ref><sp/>ranges[]<sp/>=</highlight></codeline>
<codeline lineno="3167"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x0020,<sp/>0x00FF,<sp/></highlight><highlight class="comment">//<sp/>Basic<sp/>Latin<sp/>+<sp/>Latin<sp/>Supplement</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x0400,<sp/>0x052F,<sp/></highlight><highlight class="comment">//<sp/>Cyrillic<sp/>+<sp/>Cyrillic<sp/>Supplement</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x2DE0,<sp/>0x2DFF,<sp/></highlight><highlight class="comment">//<sp/>Cyrillic<sp/>Extended-A</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0xA640,<sp/>0xA69F,<sp/></highlight><highlight class="comment">//<sp/>Cyrillic<sp/>Extended-B</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="3173"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;ranges[0];</highlight></codeline>
<codeline lineno="3175"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3176"><highlight class="normal"></highlight></codeline>
<codeline lineno="3177"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1a1ecb49ee827c39a982f1e1467910d020" kindref="member">ImWchar</ref>*<sp/><sp/><ref refid="struct_im_font_atlas_1a4985c51d8a5270ff027f13fa44a14371" kindref="member">ImFontAtlas::GetGlyphRangesThai</ref>()</highlight></codeline>
<codeline lineno="3178"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1a1ecb49ee827c39a982f1e1467910d020" kindref="member">ImWchar</ref><sp/>ranges[]<sp/>=</highlight></codeline>
<codeline lineno="3180"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x0020,<sp/>0x00FF,<sp/></highlight><highlight class="comment">//<sp/>Basic<sp/>Latin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x2010,<sp/>0x205E,<sp/></highlight><highlight class="comment">//<sp/>Punctuations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x0E00,<sp/>0x0E7F,<sp/></highlight><highlight class="comment">//<sp/>Thai</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="3185"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;ranges[0];</highlight></codeline>
<codeline lineno="3187"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3188"><highlight class="normal"></highlight></codeline>
<codeline lineno="3189"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1a1ecb49ee827c39a982f1e1467910d020" kindref="member">ImWchar</ref>*<sp/><sp/><ref refid="struct_im_font_atlas_1acc0e66fd4637600ad344c2f415a0ef60" kindref="member">ImFontAtlas::GetGlyphRangesVietnamese</ref>()</highlight></codeline>
<codeline lineno="3190"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1a1ecb49ee827c39a982f1e1467910d020" kindref="member">ImWchar</ref><sp/>ranges[]<sp/>=</highlight></codeline>
<codeline lineno="3192"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x0020,<sp/>0x00FF,<sp/></highlight><highlight class="comment">//<sp/>Basic<sp/>Latin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x0102,<sp/>0x0103,</highlight></codeline>
<codeline lineno="3195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x0110,<sp/>0x0111,</highlight></codeline>
<codeline lineno="3196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x0128,<sp/>0x0129,</highlight></codeline>
<codeline lineno="3197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x0168,<sp/>0x0169,</highlight></codeline>
<codeline lineno="3198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x01A0,<sp/>0x01A1,</highlight></codeline>
<codeline lineno="3199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x01AF,<sp/>0x01B0,</highlight></codeline>
<codeline lineno="3200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x1EA0,<sp/>0x1EF9,</highlight></codeline>
<codeline lineno="3201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="3202"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;ranges[0];</highlight></codeline>
<codeline lineno="3204"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3205"><highlight class="normal"></highlight></codeline>
<codeline lineno="3206"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3207"><highlight class="normal"></highlight><highlight class="comment">//<sp/>[SECTION]<sp/>ImFontGlyphRangesBuilder</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3208"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3209"><highlight class="normal"></highlight></codeline>
<codeline lineno="3210"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_im_font_glyph_ranges_builder_1ade9770bde0f63b4630df30402f3619cf" kindref="member">ImFontGlyphRangesBuilder::AddText</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>text,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>text_end)</highlight></codeline>
<codeline lineno="3211"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(text_end<sp/>?<sp/>(text<sp/>&lt;<sp/>text_end)<sp/>:<sp/>*text)</highlight></codeline>
<codeline lineno="3213"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c_len<sp/>=<sp/><ref refid="imgui_8cpp_1abee86973b9888938f748a7850c2c0ff3" kindref="member">ImTextCharFromUtf8</ref>(&amp;c,<sp/>text,<sp/>text_end);</highlight></codeline>
<codeline lineno="3216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>text<sp/>+=<sp/>c_len;</highlight></codeline>
<codeline lineno="3217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c_len<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="3218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_font_glyph_ranges_builder_1a6d3f5e3e377a73f4f4324c4cf98600dd" kindref="member">AddChar</ref>((<ref refid="imgui_8h_1a1ecb49ee827c39a982f1e1467910d020" kindref="member">ImWchar</ref>)c);</highlight></codeline>
<codeline lineno="3220"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3221"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3222"><highlight class="normal"></highlight></codeline>
<codeline lineno="3223"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_im_font_glyph_ranges_builder_1ac28bc574d4d34d3a2889cda34470ae71" kindref="member">ImFontGlyphRangesBuilder::AddRanges</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1a1ecb49ee827c39a982f1e1467910d020" kindref="member">ImWchar</ref>*<sp/>ranges)</highlight></codeline>
<codeline lineno="3224"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>ranges[0];<sp/>ranges<sp/>+=<sp/>2)</highlight></codeline>
<codeline lineno="3226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>ranges[0];<sp/>c<sp/>&lt;=<sp/>ranges[1]<sp/>&amp;&amp;<sp/>c<sp/>&lt;=<sp/><ref refid="imgui_8h_1aefe19804994a49c4e39032acbfe49e0d" kindref="member">IM_UNICODE_CODEPOINT_MAX</ref>;<sp/>c++)<sp/></highlight><highlight class="comment">//-V560</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_font_glyph_ranges_builder_1a6d3f5e3e377a73f4f4324c4cf98600dd" kindref="member">AddChar</ref>((<ref refid="imgui_8h_1a1ecb49ee827c39a982f1e1467910d020" kindref="member">ImWchar</ref>)c);</highlight></codeline>
<codeline lineno="3228"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3229"><highlight class="normal"></highlight></codeline>
<codeline lineno="3230"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_im_font_glyph_ranges_builder_1abc11a683e1b345299c42abd8b6c422a5" kindref="member">ImFontGlyphRangesBuilder::BuildRanges</ref>(<ref refid="struct_im_vector" kindref="compound">ImVector&lt;ImWchar&gt;</ref>*<sp/>out_ranges)</highlight></codeline>
<codeline lineno="3231"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_codepoint<sp/>=<sp/><ref refid="imgui_8h_1aefe19804994a49c4e39032acbfe49e0d" kindref="member">IM_UNICODE_CODEPOINT_MAX</ref>;</highlight></codeline>
<codeline lineno="3233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;=<sp/>max_codepoint;<sp/>n++)</highlight></codeline>
<codeline lineno="3234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="struct_im_font_glyph_ranges_builder_1a6b1480f843b82db098205872b1309f47" kindref="member">GetBit</ref>(n))</highlight></codeline>
<codeline lineno="3235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_ranges-&gt;<ref refid="struct_im_vector_1aab5df48e0711a48bd12f3206e08c4108" kindref="member">push_back</ref>((<ref refid="imgui_8h_1a1ecb49ee827c39a982f1e1467910d020" kindref="member">ImWchar</ref>)n);</highlight></codeline>
<codeline lineno="3237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(n<sp/>&lt;<sp/>max_codepoint<sp/>&amp;&amp;<sp/><ref refid="struct_im_font_glyph_ranges_builder_1a6b1480f843b82db098205872b1309f47" kindref="member">GetBit</ref>(n<sp/>+<sp/>1))</highlight></codeline>
<codeline lineno="3238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n++;</highlight></codeline>
<codeline lineno="3239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_ranges-&gt;<ref refid="struct_im_vector_1aab5df48e0711a48bd12f3206e08c4108" kindref="member">push_back</ref>((<ref refid="imgui_8h_1a1ecb49ee827c39a982f1e1467910d020" kindref="member">ImWchar</ref>)n);</highlight></codeline>
<codeline lineno="3240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3241"><highlight class="normal"><sp/><sp/><sp/><sp/>out_ranges-&gt;<ref refid="struct_im_vector_1aab5df48e0711a48bd12f3206e08c4108" kindref="member">push_back</ref>(0);</highlight></codeline>
<codeline lineno="3242"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3243"><highlight class="normal"></highlight></codeline>
<codeline lineno="3244"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3245"><highlight class="normal"></highlight><highlight class="comment">//<sp/>[SECTION]<sp/>ImFont</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3246"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3247"><highlight class="normal"></highlight></codeline>
<codeline lineno="3248"><highlight class="normal"><ref refid="struct_im_font_1a1d35b1eb7c2f6a3a648308531e88e7f1" kindref="member">ImFont::ImFont</ref>()</highlight></codeline>
<codeline lineno="3249"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3250"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_font_1a423e36d1594281f1a5a537e5b0d0a3d4" kindref="member">FontSize</ref><sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="3251"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_font_1ad58a5ee4492a3a9fa56f73e5a40d728d" kindref="member">FallbackAdvanceX</ref><sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="3252"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_font_1ae54c2c4184bfcbc7b8f6da9cbc4f93c0" kindref="member">FallbackChar</ref><sp/>=<sp/>(<ref refid="imgui_8h_1a1ecb49ee827c39a982f1e1467910d020" kindref="member">ImWchar</ref>)-1;</highlight></codeline>
<codeline lineno="3253"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_font_1a51df9d341917235207db60e775b11621" kindref="member">EllipsisChar</ref><sp/>=<sp/>(<ref refid="imgui_8h_1a1ecb49ee827c39a982f1e1467910d020" kindref="member">ImWchar</ref>)-1;</highlight></codeline>
<codeline lineno="3254"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_font_1a202f2f33154765d3691f6302a13b66b7" kindref="member">EllipsisWidth</ref><sp/>=<sp/><ref refid="struct_im_font_1aa2e7621a68f75b00c16d2f5f73f722f6" kindref="member">EllipsisCharStep</ref><sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="3255"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_font_1aaf3f1365b09c4e1c97d912df42b128ee" kindref="member">EllipsisCharCount</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3256"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_font_1a0e666b0c49646bd294103f4d288df4b8" kindref="member">FallbackGlyph</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3257"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_font_1a8a5e0df6be5e3cabe91ae830524db960" kindref="member">ContainerAtlas</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3258"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_font_1afff4a317b215a37599589941d6131fd0" kindref="member">ConfigData</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3259"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_font_1a4a30fc7711d628ad582ccb3188a51ddd" kindref="member">ConfigDataCount</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3260"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_font_1a3858e851f69b3abbbefad76030a546ff" kindref="member">DirtyLookupTables</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3261"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_font_1ae98fb07fd8862a7243d77b11f38bba19" kindref="member">Scale</ref><sp/>=<sp/>1.0f;</highlight></codeline>
<codeline lineno="3262"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_font_1a5238ef18f8ad02b783fb8b3a195b708e" kindref="member">Ascent</ref><sp/>=<sp/><ref refid="struct_im_font_1abcca12aa908bf7105433e7db6088a5e5" kindref="member">Descent</ref><sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="3263"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_font_1a8087b2ee8b27dcf5c6e30a8318f87cc7" kindref="member">MetricsTotalSurface</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3264"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(<ref refid="struct_im_font_1a95184d1095ecc7da9c843579052e1009" kindref="member">Used4kPagesMap</ref>,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_im_font_1a95184d1095ecc7da9c843579052e1009" kindref="member">Used4kPagesMap</ref>));</highlight></codeline>
<codeline lineno="3265"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3266"><highlight class="normal"></highlight></codeline>
<codeline lineno="3267"><highlight class="normal"><ref refid="struct_im_font_1a377366ed7c5d076363ad4760aeff63ec" kindref="member">ImFont::~ImFont</ref>()</highlight></codeline>
<codeline lineno="3268"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3269"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_font_1aecf7773b1c40b433f91ee245f463de12" kindref="member">ClearOutputData</ref>();</highlight></codeline>
<codeline lineno="3270"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3271"><highlight class="normal"></highlight></codeline>
<codeline lineno="3272"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_font_1aecf7773b1c40b433f91ee245f463de12" kindref="member">ImFont::ClearOutputData</ref>()</highlight></codeline>
<codeline lineno="3273"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3274"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_font_1a423e36d1594281f1a5a537e5b0d0a3d4" kindref="member">FontSize</ref><sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="3275"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_font_1ad58a5ee4492a3a9fa56f73e5a40d728d" kindref="member">FallbackAdvanceX</ref><sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="3276"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_font_1a1a0901fc1a8cbd41d582d6cef4946bc9" kindref="member">Glyphs</ref>.clear();</highlight></codeline>
<codeline lineno="3277"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_font_1af906476eda06d8a842d0a843a247f530" kindref="member">IndexAdvanceX</ref>.clear();</highlight></codeline>
<codeline lineno="3278"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_font_1a0c948f3741da03da9bc1731e236173c8" kindref="member">IndexLookup</ref>.clear();</highlight></codeline>
<codeline lineno="3279"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_font_1a0e666b0c49646bd294103f4d288df4b8" kindref="member">FallbackGlyph</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3280"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_font_1a8a5e0df6be5e3cabe91ae830524db960" kindref="member">ContainerAtlas</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3281"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_font_1a3858e851f69b3abbbefad76030a546ff" kindref="member">DirtyLookupTables</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3282"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_font_1a5238ef18f8ad02b783fb8b3a195b708e" kindref="member">Ascent</ref><sp/>=<sp/><ref refid="struct_im_font_1abcca12aa908bf7105433e7db6088a5e5" kindref="member">Descent</ref><sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="3283"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_font_1a8087b2ee8b27dcf5c6e30a8318f87cc7" kindref="member">MetricsTotalSurface</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3284"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3285"><highlight class="normal"></highlight></codeline>
<codeline lineno="3286"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1a1ecb49ee827c39a982f1e1467910d020" kindref="member">ImWchar</ref><sp/>FindFirstExistingGlyph(<ref refid="struct_im_font" kindref="compound">ImFont</ref>*<sp/>font,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1a1ecb49ee827c39a982f1e1467910d020" kindref="member">ImWchar</ref>*<sp/>candidate_chars,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>candidate_chars_count)</highlight></codeline>
<codeline lineno="3287"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>candidate_chars_count;<sp/>n++)</highlight></codeline>
<codeline lineno="3289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(font-&gt;<ref refid="struct_im_font_1aa9ce4765070dfdee66bf5e5e81acaac3" kindref="member">FindGlyphNoFallback</ref>(candidate_chars[n])<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="3290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>candidate_chars[n];</highlight></codeline>
<codeline lineno="3291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="imgui_8h_1a1ecb49ee827c39a982f1e1467910d020" kindref="member">ImWchar</ref>)-1;</highlight></codeline>
<codeline lineno="3292"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3293"><highlight class="normal"></highlight></codeline>
<codeline lineno="3294"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_im_font_1a04b3a1437bd0032722bbbd3613941162" kindref="member">ImFont::BuildLookupTable</ref>()</highlight></codeline>
<codeline lineno="3295"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_codepoint<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>!=<sp/><ref refid="struct_im_font_1a1a0901fc1a8cbd41d582d6cef4946bc9" kindref="member">Glyphs</ref>.Size;<sp/>i++)</highlight></codeline>
<codeline lineno="3298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_codepoint<sp/>=<sp/>ImMax(max_codepoint,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<ref refid="struct_im_font_1a1a0901fc1a8cbd41d582d6cef4946bc9" kindref="member">Glyphs</ref>[i].Codepoint);</highlight></codeline>
<codeline lineno="3299"><highlight class="normal"></highlight></codeline>
<codeline lineno="3300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Build<sp/>lookup<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3301"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui_8h_1acb09e7dc42e8e3cefb0ecaa197978920" kindref="member">IM_ASSERT</ref>(<ref refid="struct_im_font_1a1a0901fc1a8cbd41d582d6cef4946bc9" kindref="member">Glyphs</ref>.Size<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;Font<sp/>has<sp/>not<sp/>loaded<sp/>glyph!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3302"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui_8h_1acb09e7dc42e8e3cefb0ecaa197978920" kindref="member">IM_ASSERT</ref>(<ref refid="struct_im_font_1a1a0901fc1a8cbd41d582d6cef4946bc9" kindref="member">Glyphs</ref>.Size<sp/>&lt;<sp/>0xFFFF);<sp/></highlight><highlight class="comment">//<sp/>-1<sp/>is<sp/>reserved</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3303"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_font_1af906476eda06d8a842d0a843a247f530" kindref="member">IndexAdvanceX</ref>.clear();</highlight></codeline>
<codeline lineno="3304"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_font_1a0c948f3741da03da9bc1731e236173c8" kindref="member">IndexLookup</ref>.clear();</highlight></codeline>
<codeline lineno="3305"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_font_1a3858e851f69b3abbbefad76030a546ff" kindref="member">DirtyLookupTables</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3306"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(<ref refid="struct_im_font_1a95184d1095ecc7da9c843579052e1009" kindref="member">Used4kPagesMap</ref>,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_im_font_1a95184d1095ecc7da9c843579052e1009" kindref="member">Used4kPagesMap</ref>));</highlight></codeline>
<codeline lineno="3307"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_font_1ab7865a365d9653b4636b198d2f222fd6" kindref="member">GrowIndex</ref>(max_codepoint<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="3308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="struct_im_font_1a1a0901fc1a8cbd41d582d6cef4946bc9" kindref="member">Glyphs</ref>.Size;<sp/>i++)</highlight></codeline>
<codeline lineno="3309"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>codepoint<sp/>=<sp/>(int)<ref refid="struct_im_font_1a1a0901fc1a8cbd41d582d6cef4946bc9" kindref="member">Glyphs</ref>[i].Codepoint;</highlight></codeline>
<codeline lineno="3311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_font_1af906476eda06d8a842d0a843a247f530" kindref="member">IndexAdvanceX</ref>[codepoint]<sp/>=<sp/><ref refid="struct_im_font_1a1a0901fc1a8cbd41d582d6cef4946bc9" kindref="member">Glyphs</ref>[i].AdvanceX;</highlight></codeline>
<codeline lineno="3312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_font_1a0c948f3741da03da9bc1731e236173c8" kindref="member">IndexLookup</ref>[codepoint]<sp/>=<sp/>(<ref refid="imgui_8h_1a1ecb49ee827c39a982f1e1467910d020" kindref="member">ImWchar</ref>)i;</highlight></codeline>
<codeline lineno="3313"><highlight class="normal"></highlight></codeline>
<codeline lineno="3314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Mark<sp/>4K<sp/>page<sp/>as<sp/>used</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>page_n<sp/>=<sp/>codepoint<sp/>/<sp/>4096;</highlight></codeline>
<codeline lineno="3316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_font_1a95184d1095ecc7da9c843579052e1009" kindref="member">Used4kPagesMap</ref>[page_n<sp/>&gt;&gt;<sp/>3]<sp/>|=<sp/>1<sp/>&lt;&lt;<sp/>(page_n<sp/>&amp;<sp/>7);</highlight></codeline>
<codeline lineno="3317"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3318"><highlight class="normal"></highlight></codeline>
<codeline lineno="3319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>glyph<sp/>to<sp/>handle<sp/>TAB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME:<sp/>Needs<sp/>proper<sp/>TAB<sp/>handling<sp/>but<sp/>it<sp/>needs<sp/>to<sp/>be<sp/>contextualized<sp/>(or<sp/>we<sp/>could<sp/>arbitrary<sp/>say<sp/>that<sp/>each<sp/>string<sp/>starts<sp/>at<sp/>&quot;column<sp/>0&quot;<sp/>?)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="struct_im_font_1ac6a773b73c6406fd8f08c4c93213a501" kindref="member">FindGlyph</ref>((<ref refid="imgui_8h_1a1ecb49ee827c39a982f1e1467910d020" kindref="member">ImWchar</ref>)</highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="3322"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="struct_im_font_1a1a0901fc1a8cbd41d582d6cef4946bc9" kindref="member">Glyphs</ref>.back().Codepoint<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\t&apos;</highlight><highlight class="normal">)<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>So<sp/>we<sp/>can<sp/>call<sp/>this<sp/>function<sp/>multiple<sp/>times<sp/>(FIXME:<sp/>Flaky)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_font_1a1a0901fc1a8cbd41d582d6cef4946bc9" kindref="member">Glyphs</ref>.resize(<ref refid="struct_im_font_1a1a0901fc1a8cbd41d582d6cef4946bc9" kindref="member">Glyphs</ref>.Size<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="3325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImFontGlyph&amp;<sp/>tab_glyph<sp/>=<sp/><ref refid="struct_im_font_1a1a0901fc1a8cbd41d582d6cef4946bc9" kindref="member">Glyphs</ref>.back();</highlight></codeline>
<codeline lineno="3326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tab_glyph<sp/>=<sp/>*<ref refid="struct_im_font_1ac6a773b73c6406fd8f08c4c93213a501" kindref="member">FindGlyph</ref>((<ref refid="imgui_8h_1a1ecb49ee827c39a982f1e1467910d020" kindref="member">ImWchar</ref>)</highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tab_glyph.<ref refid="struct_im_font_glyph_1a2016b685049bf375f7c045ed8e24d6b7" kindref="member">Codepoint</ref><sp/>=<sp/></highlight><highlight class="charliteral">&apos;\t&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tab_glyph.<ref refid="struct_im_font_glyph_1a11bfab7bcdb497fe2d649745c7d39b33" kindref="member">AdvanceX</ref><sp/>*=<sp/><ref refid="imgui__internal_8h_1af913a6a3d1f42d6b137cb6733c763569" kindref="member">IM_TABSIZE</ref>;</highlight></codeline>
<codeline lineno="3329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_font_1af906476eda06d8a842d0a843a247f530" kindref="member">IndexAdvanceX</ref>[(int)tab_glyph.<ref refid="struct_im_font_glyph_1a2016b685049bf375f7c045ed8e24d6b7" kindref="member">Codepoint</ref>]<sp/>=<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)tab_glyph.<ref refid="struct_im_font_glyph_1a11bfab7bcdb497fe2d649745c7d39b33" kindref="member">AdvanceX</ref>;</highlight></codeline>
<codeline lineno="3330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_font_1a0c948f3741da03da9bc1731e236173c8" kindref="member">IndexLookup</ref>[(int)tab_glyph.<ref refid="struct_im_font_glyph_1a2016b685049bf375f7c045ed8e24d6b7" kindref="member">Codepoint</ref>]<sp/>=<sp/>(<ref refid="imgui_8h_1a1ecb49ee827c39a982f1e1467910d020" kindref="member">ImWchar</ref>)(<ref refid="struct_im_font_1a1a0901fc1a8cbd41d582d6cef4946bc9" kindref="member">Glyphs</ref>.Size<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="3331"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3332"><highlight class="normal"></highlight></codeline>
<codeline lineno="3333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Mark<sp/>special<sp/>glyphs<sp/>as<sp/>not<sp/>visible<sp/>(note<sp/>that<sp/>AddGlyph<sp/>already<sp/>mark<sp/>as<sp/>non-visible<sp/>glyphs<sp/>with<sp/>zero-size<sp/>polygons)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3334"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_font_1a52fbd5caef22c68bb8e0e251c6bfcc53" kindref="member">SetGlyphVisible</ref>((<ref refid="imgui_8h_1a1ecb49ee827c39a982f1e1467910d020" kindref="member">ImWchar</ref>)</highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3335"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_font_1a52fbd5caef22c68bb8e0e251c6bfcc53" kindref="member">SetGlyphVisible</ref>((<ref refid="imgui_8h_1a1ecb49ee827c39a982f1e1467910d020" kindref="member">ImWchar</ref>)</highlight><highlight class="charliteral">&apos;\t&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3336"><highlight class="normal"></highlight></codeline>
<codeline lineno="3337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Setup<sp/>Fallback<sp/>character</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1a1ecb49ee827c39a982f1e1467910d020" kindref="member">ImWchar</ref><sp/>fallback_chars[]<sp/>=<sp/>{<sp/>(<ref refid="imgui_8h_1a1ecb49ee827c39a982f1e1467910d020" kindref="member">ImWchar</ref>)<ref refid="imgui_8h_1a9c1f8d18f7861f798d431ddb01115183" kindref="member">IM_UNICODE_CODEPOINT_INVALID</ref>,<sp/>(<ref refid="imgui_8h_1a1ecb49ee827c39a982f1e1467910d020" kindref="member">ImWchar</ref>)</highlight><highlight class="charliteral">&apos;?&apos;</highlight><highlight class="normal">,<sp/>(<ref refid="imgui_8h_1a1ecb49ee827c39a982f1e1467910d020" kindref="member">ImWchar</ref>)</highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal"><sp/>};</highlight></codeline>
<codeline lineno="3339"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_font_1a0e666b0c49646bd294103f4d288df4b8" kindref="member">FallbackGlyph</ref><sp/>=<sp/><ref refid="struct_im_font_1aa9ce4765070dfdee66bf5e5e81acaac3" kindref="member">FindGlyphNoFallback</ref>(<ref refid="struct_im_font_1ae54c2c4184bfcbc7b8f6da9cbc4f93c0" kindref="member">FallbackChar</ref>);</highlight></codeline>
<codeline lineno="3340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="struct_im_font_1a0e666b0c49646bd294103f4d288df4b8" kindref="member">FallbackGlyph</ref><sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="3341"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_font_1ae54c2c4184bfcbc7b8f6da9cbc4f93c0" kindref="member">FallbackChar</ref><sp/>=<sp/>FindFirstExistingGlyph(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>fallback_chars,<sp/><ref refid="imgui_8h_1aeabe36f60fe45cf64cbc9641bcd58cca" kindref="member">IM_ARRAYSIZE</ref>(fallback_chars));</highlight></codeline>
<codeline lineno="3343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_font_1a0e666b0c49646bd294103f4d288df4b8" kindref="member">FallbackGlyph</ref><sp/>=<sp/><ref refid="struct_im_font_1aa9ce4765070dfdee66bf5e5e81acaac3" kindref="member">FindGlyphNoFallback</ref>(<ref refid="struct_im_font_1ae54c2c4184bfcbc7b8f6da9cbc4f93c0" kindref="member">FallbackChar</ref>);</highlight></codeline>
<codeline lineno="3344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="struct_im_font_1a0e666b0c49646bd294103f4d288df4b8" kindref="member">FallbackGlyph</ref><sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="3345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_font_1a0e666b0c49646bd294103f4d288df4b8" kindref="member">FallbackGlyph</ref><sp/>=<sp/>&amp;<ref refid="struct_im_font_1a1a0901fc1a8cbd41d582d6cef4946bc9" kindref="member">Glyphs</ref>.back();</highlight></codeline>
<codeline lineno="3347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_font_1ae54c2c4184bfcbc7b8f6da9cbc4f93c0" kindref="member">FallbackChar</ref><sp/>=<sp/>(<ref refid="imgui_8h_1a1ecb49ee827c39a982f1e1467910d020" kindref="member">ImWchar</ref>)<ref refid="struct_im_font_1a0e666b0c49646bd294103f4d288df4b8" kindref="member">FallbackGlyph</ref>-&gt;Codepoint;</highlight></codeline>
<codeline lineno="3348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3349"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3350"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_font_1ad58a5ee4492a3a9fa56f73e5a40d728d" kindref="member">FallbackAdvanceX</ref><sp/>=<sp/><ref refid="struct_im_font_1a0e666b0c49646bd294103f4d288df4b8" kindref="member">FallbackGlyph</ref>-&gt;AdvanceX;</highlight></codeline>
<codeline lineno="3351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>max_codepoint<sp/>+<sp/>1;<sp/>i++)</highlight></codeline>
<codeline lineno="3352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="struct_im_font_1af906476eda06d8a842d0a843a247f530" kindref="member">IndexAdvanceX</ref>[i]<sp/>&lt;<sp/>0.0f)</highlight></codeline>
<codeline lineno="3353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_font_1af906476eda06d8a842d0a843a247f530" kindref="member">IndexAdvanceX</ref>[i]<sp/>=<sp/><ref refid="struct_im_font_1ad58a5ee4492a3a9fa56f73e5a40d728d" kindref="member">FallbackAdvanceX</ref>;</highlight></codeline>
<codeline lineno="3354"><highlight class="normal"></highlight></codeline>
<codeline lineno="3355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Setup<sp/>Ellipsis<sp/>character.<sp/>It<sp/>is<sp/>required<sp/>for<sp/>rendering<sp/>elided<sp/>text.<sp/>We<sp/>prefer<sp/>using<sp/>U+2026<sp/>(horizontal<sp/>ellipsis).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>However<sp/>some<sp/>old<sp/>fonts<sp/>may<sp/>contain<sp/>ellipsis<sp/>at<sp/>U+0085.<sp/>Here<sp/>we<sp/>auto-detect<sp/>most<sp/>suitable<sp/>ellipsis<sp/>character.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME:<sp/>Note<sp/>that<sp/>0x2026<sp/>is<sp/>rarely<sp/>included<sp/>in<sp/>our<sp/>font<sp/>ranges.<sp/>Because<sp/>of<sp/>this<sp/>we<sp/>are<sp/>more<sp/>likely<sp/>to<sp/>use<sp/>three<sp/>individual<sp/>dots.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1a1ecb49ee827c39a982f1e1467910d020" kindref="member">ImWchar</ref><sp/>ellipsis_chars[]<sp/>=<sp/>{<sp/>(<ref refid="imgui_8h_1a1ecb49ee827c39a982f1e1467910d020" kindref="member">ImWchar</ref>)0x2026,<sp/>(<ref refid="imgui_8h_1a1ecb49ee827c39a982f1e1467910d020" kindref="member">ImWchar</ref>)0x0085<sp/>};</highlight></codeline>
<codeline lineno="3359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1a1ecb49ee827c39a982f1e1467910d020" kindref="member">ImWchar</ref><sp/>dots_chars[]<sp/>=<sp/>{<sp/>(<ref refid="imgui_8h_1a1ecb49ee827c39a982f1e1467910d020" kindref="member">ImWchar</ref>)</highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal">,<sp/>(<ref refid="imgui_8h_1a1ecb49ee827c39a982f1e1467910d020" kindref="member">ImWchar</ref>)0xFF0E<sp/>};</highlight></codeline>
<codeline lineno="3360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="struct_im_font_1a51df9d341917235207db60e775b11621" kindref="member">EllipsisChar</ref><sp/>==<sp/>(<ref refid="imgui_8h_1a1ecb49ee827c39a982f1e1467910d020" kindref="member">ImWchar</ref>)-1)</highlight></codeline>
<codeline lineno="3361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_font_1a51df9d341917235207db60e775b11621" kindref="member">EllipsisChar</ref><sp/>=<sp/>FindFirstExistingGlyph(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>ellipsis_chars,<sp/><ref refid="imgui_8h_1aeabe36f60fe45cf64cbc9641bcd58cca" kindref="member">IM_ARRAYSIZE</ref>(ellipsis_chars));</highlight></codeline>
<codeline lineno="3362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1a1ecb49ee827c39a982f1e1467910d020" kindref="member">ImWchar</ref><sp/>dot_char<sp/>=<sp/>FindFirstExistingGlyph(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>dots_chars,<sp/><ref refid="imgui_8h_1aeabe36f60fe45cf64cbc9641bcd58cca" kindref="member">IM_ARRAYSIZE</ref>(dots_chars));</highlight></codeline>
<codeline lineno="3363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="struct_im_font_1a51df9d341917235207db60e775b11621" kindref="member">EllipsisChar</ref><sp/>!=<sp/>(<ref refid="imgui_8h_1a1ecb49ee827c39a982f1e1467910d020" kindref="member">ImWchar</ref>)-1)</highlight></codeline>
<codeline lineno="3364"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_font_1aaf3f1365b09c4e1c97d912df42b128ee" kindref="member">EllipsisCharCount</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="3366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_font_1a202f2f33154765d3691f6302a13b66b7" kindref="member">EllipsisWidth</ref><sp/>=<sp/><ref refid="struct_im_font_1aa2e7621a68f75b00c16d2f5f73f722f6" kindref="member">EllipsisCharStep</ref><sp/>=<sp/><ref refid="struct_im_font_1ac6a773b73c6406fd8f08c4c93213a501" kindref="member">FindGlyph</ref>(<ref refid="struct_im_font_1a51df9d341917235207db60e775b11621" kindref="member">EllipsisChar</ref>)-&gt;<ref refid="struct_im_font_glyph_1a1d907170d807c5e5f2a43d74b99f0d89" kindref="member">X1</ref>;</highlight></codeline>
<codeline lineno="3367"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dot_char<sp/>!=<sp/>(<ref refid="imgui_8h_1a1ecb49ee827c39a982f1e1467910d020" kindref="member">ImWchar</ref>)-1)</highlight></codeline>
<codeline lineno="3369"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImFontGlyph*<sp/>glyph<sp/>=<sp/><ref refid="struct_im_font_1ac6a773b73c6406fd8f08c4c93213a501" kindref="member">FindGlyph</ref>(dot_char);</highlight></codeline>
<codeline lineno="3371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_font_1a51df9d341917235207db60e775b11621" kindref="member">EllipsisChar</ref><sp/>=<sp/>dot_char;</highlight></codeline>
<codeline lineno="3372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_font_1aaf3f1365b09c4e1c97d912df42b128ee" kindref="member">EllipsisCharCount</ref><sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="3373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_font_1aa2e7621a68f75b00c16d2f5f73f722f6" kindref="member">EllipsisCharStep</ref><sp/>=<sp/>(glyph-&gt;<ref refid="struct_im_font_glyph_1a1d907170d807c5e5f2a43d74b99f0d89" kindref="member">X1</ref><sp/>-<sp/>glyph-&gt;<ref refid="struct_im_font_glyph_1a1e93bf7292c052549972fc46646ff104" kindref="member">X0</ref>)<sp/>+<sp/>1.0f;</highlight></codeline>
<codeline lineno="3374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_font_1a202f2f33154765d3691f6302a13b66b7" kindref="member">EllipsisWidth</ref><sp/>=<sp/><ref refid="struct_im_font_1aa2e7621a68f75b00c16d2f5f73f722f6" kindref="member">EllipsisCharStep</ref><sp/>*<sp/>3.0f<sp/>-<sp/>1.0f;</highlight></codeline>
<codeline lineno="3375"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3376"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3377"><highlight class="normal"></highlight></codeline>
<codeline lineno="3378"><highlight class="normal"></highlight><highlight class="comment">//<sp/>API<sp/>is<sp/>designed<sp/>this<sp/>way<sp/>to<sp/>avoid<sp/>exposing<sp/>the<sp/>4K<sp/>page<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3379"><highlight class="normal"></highlight><highlight class="comment">//<sp/>e.g.<sp/>use<sp/>with<sp/>IsGlyphRangeUnused(0,<sp/>255)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3380"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_im_font_1a4374ffca4f2d9a23599aac21c57e2a66" kindref="member">ImFont::IsGlyphRangeUnused</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c_begin,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c_last)</highlight></codeline>
<codeline lineno="3381"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>page_begin<sp/>=<sp/>(c_begin<sp/>/<sp/>4096);</highlight></codeline>
<codeline lineno="3383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>page_last<sp/>=<sp/>(c_last<sp/>/<sp/>4096);</highlight></codeline>
<codeline lineno="3384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>page_n<sp/>=<sp/>page_begin;<sp/>page_n<sp/>&lt;=<sp/>page_last;<sp/>page_n++)</highlight></codeline>
<codeline lineno="3385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((page_n<sp/>&gt;&gt;<sp/>3)<sp/>&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_im_font_1a95184d1095ecc7da9c843579052e1009" kindref="member">Used4kPagesMap</ref>))</highlight></codeline>
<codeline lineno="3386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="struct_im_font_1a95184d1095ecc7da9c843579052e1009" kindref="member">Used4kPagesMap</ref>[page_n<sp/>&gt;&gt;<sp/>3]<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>(page_n<sp/>&amp;<sp/>7)))</highlight></codeline>
<codeline lineno="3387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3389"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3390"><highlight class="normal"></highlight></codeline>
<codeline lineno="3391"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_im_font_1a52fbd5caef22c68bb8e0e251c6bfcc53" kindref="member">ImFont::SetGlyphVisible</ref>(<ref refid="imgui_8h_1a1ecb49ee827c39a982f1e1467910d020" kindref="member">ImWchar</ref><sp/>c,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>visible)</highlight></codeline>
<codeline lineno="3392"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ImFontGlyph*<sp/>glyph<sp/>=<sp/>(ImFontGlyph*)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)<ref refid="struct_im_font_1ac6a773b73c6406fd8f08c4c93213a501" kindref="member">FindGlyph</ref>((<ref refid="imgui_8h_1a1ecb49ee827c39a982f1e1467910d020" kindref="member">ImWchar</ref>)c))</highlight></codeline>
<codeline lineno="3394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glyph-&gt;Visible<sp/>=<sp/>visible<sp/>?<sp/>1<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="3395"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3396"><highlight class="normal"></highlight></codeline>
<codeline lineno="3397"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_im_font_1ab7865a365d9653b4636b198d2f222fd6" kindref="member">ImFont::GrowIndex</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>new_size)</highlight></codeline>
<codeline lineno="3398"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3399"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui_8h_1acb09e7dc42e8e3cefb0ecaa197978920" kindref="member">IM_ASSERT</ref>(<ref refid="struct_im_font_1af906476eda06d8a842d0a843a247f530" kindref="member">IndexAdvanceX</ref>.Size<sp/>==<sp/><ref refid="struct_im_font_1a0c948f3741da03da9bc1731e236173c8" kindref="member">IndexLookup</ref>.Size);</highlight></codeline>
<codeline lineno="3400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(new_size<sp/>&lt;=<sp/><ref refid="struct_im_font_1a0c948f3741da03da9bc1731e236173c8" kindref="member">IndexLookup</ref>.Size)</highlight></codeline>
<codeline lineno="3401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3402"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_font_1af906476eda06d8a842d0a843a247f530" kindref="member">IndexAdvanceX</ref>.resize(new_size,<sp/>-1.0f);</highlight></codeline>
<codeline lineno="3403"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_font_1a0c948f3741da03da9bc1731e236173c8" kindref="member">IndexLookup</ref>.resize(new_size,<sp/>(<ref refid="imgui_8h_1a1ecb49ee827c39a982f1e1467910d020" kindref="member">ImWchar</ref>)-1);</highlight></codeline>
<codeline lineno="3404"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3405"><highlight class="normal"></highlight></codeline>
<codeline lineno="3406"><highlight class="normal"></highlight><highlight class="comment">//<sp/>x0/y0/x1/y1<sp/>are<sp/>offset<sp/>from<sp/>the<sp/>character<sp/>upper-left<sp/>layout<sp/>position,<sp/>in<sp/>pixels.<sp/>Therefore<sp/>x0/y0<sp/>are<sp/>often<sp/>fairly<sp/>close<sp/>to<sp/>zero.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3407"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Not<sp/>to<sp/>be<sp/>mistaken<sp/>with<sp/>texture<sp/>coordinates,<sp/>which<sp/>are<sp/>held<sp/>by<sp/>u0/v0/u1/v1<sp/>in<sp/>normalized<sp/>format<sp/>(0.0..1.0<sp/>on<sp/>each<sp/>texture<sp/>axis).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3408"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&apos;cfg&apos;<sp/>is<sp/>not<sp/>necessarily<sp/>==<sp/>&apos;this-&gt;ConfigData&apos;<sp/>because<sp/>multiple<sp/>source<sp/>fonts+configs<sp/>can<sp/>be<sp/>used<sp/>to<sp/>build<sp/>one<sp/>target<sp/>font.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3409"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_im_font_1a1badad96fa8d41b4754fc7bdb826e6b2" kindref="member">ImFont::AddGlyph</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_font_config" kindref="compound">ImFontConfig</ref>*<sp/>cfg,<sp/><ref refid="imgui_8h_1a1ecb49ee827c39a982f1e1467910d020" kindref="member">ImWchar</ref><sp/>codepoint,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x0,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y0,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x1,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y1,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>u0,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>v0,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>u1,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>v1,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>advance_x)</highlight></codeline>
<codeline lineno="3410"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cfg<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="3412"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clamp<sp/>&amp;<sp/>recenter<sp/>if<sp/>needed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>advance_x_original<sp/>=<sp/>advance_x;</highlight></codeline>
<codeline lineno="3415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>advance_x<sp/>=<sp/>ImClamp(advance_x,<sp/>cfg-&gt;<ref refid="struct_im_font_config_1a3015c4ad464a7b5abeb5b926e8896bf6" kindref="member">GlyphMinAdvanceX</ref>,<sp/>cfg-&gt;<ref refid="struct_im_font_config_1af9040efaa5998aef3add4b629d7dc255" kindref="member">GlyphMaxAdvanceX</ref>);</highlight></codeline>
<codeline lineno="3416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(advance_x<sp/>!=<sp/>advance_x_original)</highlight></codeline>
<codeline lineno="3417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>char_off_x<sp/>=<sp/>cfg-&gt;<ref refid="struct_im_font_config_1a635b5fa03934467891fa949a037b5b89" kindref="member">PixelSnapH</ref><sp/>?<sp/>ImTrunc((advance_x<sp/>-<sp/>advance_x_original)<sp/>*<sp/>0.5f)<sp/>:<sp/>(advance_x<sp/>-<sp/>advance_x_original)<sp/>*<sp/>0.5f;</highlight></codeline>
<codeline lineno="3419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x0<sp/>+=<sp/>char_off_x;</highlight></codeline>
<codeline lineno="3420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x1<sp/>+=<sp/>char_off_x;</highlight></codeline>
<codeline lineno="3421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3422"><highlight class="normal"></highlight></codeline>
<codeline lineno="3423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Snap<sp/>to<sp/>pixel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cfg-&gt;<ref refid="struct_im_font_config_1a635b5fa03934467891fa949a037b5b89" kindref="member">PixelSnapH</ref>)</highlight></codeline>
<codeline lineno="3425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>advance_x<sp/>=<sp/><ref refid="imgui__internal_8h_1aca6e2273580ccf447bcde493e6292043" kindref="member">IM_ROUND</ref>(advance_x);</highlight></codeline>
<codeline lineno="3426"><highlight class="normal"></highlight></codeline>
<codeline lineno="3427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Bake<sp/>spacing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>advance_x<sp/>+=<sp/>cfg-&gt;<ref refid="struct_im_font_config_1a82db103689b1c434ec92875721967c07" kindref="member">GlyphExtraSpacing</ref>.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="3429"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3430"><highlight class="normal"></highlight></codeline>
<codeline lineno="3431"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_font_1a1a0901fc1a8cbd41d582d6cef4946bc9" kindref="member">Glyphs</ref>.resize(<ref refid="struct_im_font_1a1a0901fc1a8cbd41d582d6cef4946bc9" kindref="member">Glyphs</ref>.Size<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="3432"><highlight class="normal"><sp/><sp/><sp/><sp/>ImFontGlyph&amp;<sp/>glyph<sp/>=<sp/><ref refid="struct_im_font_1a1a0901fc1a8cbd41d582d6cef4946bc9" kindref="member">Glyphs</ref>.back();</highlight></codeline>
<codeline lineno="3433"><highlight class="normal"><sp/><sp/><sp/><sp/>glyph.<ref refid="struct_im_font_glyph_1a2016b685049bf375f7c045ed8e24d6b7" kindref="member">Codepoint</ref><sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>int)codepoint;</highlight></codeline>
<codeline lineno="3434"><highlight class="normal"><sp/><sp/><sp/><sp/>glyph.<ref refid="struct_im_font_glyph_1a4e7d64945eeb9cf823c2ce7bb66a1e85" kindref="member">Visible</ref><sp/>=<sp/>(x0<sp/>!=<sp/>x1)<sp/>&amp;&amp;<sp/>(y0<sp/>!=<sp/>y1);</highlight></codeline>
<codeline lineno="3435"><highlight class="normal"><sp/><sp/><sp/><sp/>glyph.<ref refid="struct_im_font_glyph_1a6dca72bfeb40ba1cf6ceae007894f665" kindref="member">Colored</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3436"><highlight class="normal"><sp/><sp/><sp/><sp/>glyph.<ref refid="struct_im_font_glyph_1a1e93bf7292c052549972fc46646ff104" kindref="member">X0</ref><sp/>=<sp/>x0;</highlight></codeline>
<codeline lineno="3437"><highlight class="normal"><sp/><sp/><sp/><sp/>glyph.<ref refid="struct_im_font_glyph_1ac1deecd5b352949f30d396a58b68dd09" kindref="member">Y0</ref><sp/>=<sp/>y0;</highlight></codeline>
<codeline lineno="3438"><highlight class="normal"><sp/><sp/><sp/><sp/>glyph.<ref refid="struct_im_font_glyph_1a1d907170d807c5e5f2a43d74b99f0d89" kindref="member">X1</ref><sp/>=<sp/>x1;</highlight></codeline>
<codeline lineno="3439"><highlight class="normal"><sp/><sp/><sp/><sp/>glyph.<ref refid="struct_im_font_glyph_1aa6a0440694ae06c4cf03316498327bd2" kindref="member">Y1</ref><sp/>=<sp/>y1;</highlight></codeline>
<codeline lineno="3440"><highlight class="normal"><sp/><sp/><sp/><sp/>glyph.<ref refid="struct_im_font_glyph_1a3c9d90fb39f6beaf9d69413fa4c8366f" kindref="member">U0</ref><sp/>=<sp/>u0;</highlight></codeline>
<codeline lineno="3441"><highlight class="normal"><sp/><sp/><sp/><sp/>glyph.<ref refid="struct_im_font_glyph_1a26b7b7b9ee43ab67e98af9ea1131ce20" kindref="member">V0</ref><sp/>=<sp/>v0;</highlight></codeline>
<codeline lineno="3442"><highlight class="normal"><sp/><sp/><sp/><sp/>glyph.<ref refid="struct_im_font_glyph_1aaca9625f2d6972016e05fed583db85b0" kindref="member">U1</ref><sp/>=<sp/>u1;</highlight></codeline>
<codeline lineno="3443"><highlight class="normal"><sp/><sp/><sp/><sp/>glyph.<ref refid="struct_im_font_glyph_1a3d28904aad639835cdff3e4416663d7c" kindref="member">V1</ref><sp/>=<sp/>v1;</highlight></codeline>
<codeline lineno="3444"><highlight class="normal"><sp/><sp/><sp/><sp/>glyph.<ref refid="struct_im_font_glyph_1a11bfab7bcdb497fe2d649745c7d39b33" kindref="member">AdvanceX</ref><sp/>=<sp/>advance_x;</highlight></codeline>
<codeline lineno="3445"><highlight class="normal"></highlight></codeline>
<codeline lineno="3446"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>rough<sp/>surface<sp/>usage<sp/>metrics<sp/>(+1<sp/>to<sp/>account<sp/>for<sp/>average<sp/>padding,<sp/>+0.99<sp/>to<sp/>round)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>use<sp/>(U1-U0)*TexWidth<sp/>instead<sp/>of<sp/>X1-X0<sp/>to<sp/>account<sp/>for<sp/>oversampling.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>pad<sp/>=<sp/><ref refid="struct_im_font_1a8a5e0df6be5e3cabe91ae830524db960" kindref="member">ContainerAtlas</ref>-&gt;TexGlyphPadding<sp/>+<sp/>0.99f;</highlight></codeline>
<codeline lineno="3449"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_font_1a3858e851f69b3abbbefad76030a546ff" kindref="member">DirtyLookupTables</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3450"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_font_1a8087b2ee8b27dcf5c6e30a8318f87cc7" kindref="member">MetricsTotalSurface</ref><sp/>+=<sp/>(int)((glyph.<ref refid="struct_im_font_glyph_1aaca9625f2d6972016e05fed583db85b0" kindref="member">U1</ref><sp/>-<sp/>glyph.<ref refid="struct_im_font_glyph_1a3c9d90fb39f6beaf9d69413fa4c8366f" kindref="member">U0</ref>)<sp/>*<sp/><ref refid="struct_im_font_1a8a5e0df6be5e3cabe91ae830524db960" kindref="member">ContainerAtlas</ref>-&gt;TexWidth<sp/>+<sp/>pad)<sp/>*<sp/>(int)((glyph.<ref refid="struct_im_font_glyph_1a3d28904aad639835cdff3e4416663d7c" kindref="member">V1</ref><sp/>-<sp/>glyph.<ref refid="struct_im_font_glyph_1a26b7b7b9ee43ab67e98af9ea1131ce20" kindref="member">V0</ref>)<sp/>*<sp/><ref refid="struct_im_font_1a8a5e0df6be5e3cabe91ae830524db960" kindref="member">ContainerAtlas</ref>-&gt;TexHeight<sp/>+<sp/>pad);</highlight></codeline>
<codeline lineno="3451"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3452"><highlight class="normal"></highlight></codeline>
<codeline lineno="3453"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_im_font_1aba8cd20f14ba47175d45d3f2063aa329" kindref="member">ImFont::AddRemapChar</ref>(<ref refid="imgui_8h_1a1ecb49ee827c39a982f1e1467910d020" kindref="member">ImWchar</ref><sp/>dst,<sp/><ref refid="imgui_8h_1a1ecb49ee827c39a982f1e1467910d020" kindref="member">ImWchar</ref><sp/>src,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>overwrite_dst)</highlight></codeline>
<codeline lineno="3454"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3455"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui_8h_1acb09e7dc42e8e3cefb0ecaa197978920" kindref="member">IM_ASSERT</ref>(<ref refid="struct_im_font_1a0c948f3741da03da9bc1731e236173c8" kindref="member">IndexLookup</ref>.Size<sp/>&gt;<sp/>0);<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Currently<sp/>this<sp/>can<sp/>only<sp/>be<sp/>called<sp/>AFTER<sp/>the<sp/>font<sp/>has<sp/>been<sp/>built,<sp/>aka<sp/>after<sp/>calling<sp/>ImFontAtlas::GetTexDataAs*()<sp/>function.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3456"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index_size<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>int)<ref refid="struct_im_font_1a0c948f3741da03da9bc1731e236173c8" kindref="member">IndexLookup</ref>.Size;</highlight></codeline>
<codeline lineno="3457"><highlight class="normal"></highlight></codeline>
<codeline lineno="3458"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dst<sp/>&lt;<sp/>index_size<sp/>&amp;&amp;<sp/><ref refid="struct_im_font_1a0c948f3741da03da9bc1731e236173c8" kindref="member">IndexLookup</ref>.Data[dst]<sp/>==<sp/>(<ref refid="imgui_8h_1a1ecb49ee827c39a982f1e1467910d020" kindref="member">ImWchar</ref>)-1<sp/>&amp;&amp;<sp/>!overwrite_dst)<sp/></highlight><highlight class="comment">//<sp/>&apos;dst&apos;<sp/>already<sp/>exists</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3460"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(src<sp/>&gt;=<sp/>index_size<sp/>&amp;&amp;<sp/>dst<sp/>&gt;=<sp/>index_size)<sp/></highlight><highlight class="comment">//<sp/>both<sp/>&apos;dst&apos;<sp/>and<sp/>&apos;src&apos;<sp/>don&apos;t<sp/>exist<sp/>-&gt;<sp/>no-op</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3462"><highlight class="normal"></highlight></codeline>
<codeline lineno="3463"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_font_1ab7865a365d9653b4636b198d2f222fd6" kindref="member">GrowIndex</ref>(dst<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="3464"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_font_1a0c948f3741da03da9bc1731e236173c8" kindref="member">IndexLookup</ref>[dst]<sp/>=<sp/>(src<sp/>&lt;<sp/>index_size)<sp/>?<sp/><ref refid="struct_im_font_1a0c948f3741da03da9bc1731e236173c8" kindref="member">IndexLookup</ref>.Data[src]<sp/>:<sp/>(<ref refid="imgui_8h_1a1ecb49ee827c39a982f1e1467910d020" kindref="member">ImWchar</ref>)-1;</highlight></codeline>
<codeline lineno="3465"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_font_1af906476eda06d8a842d0a843a247f530" kindref="member">IndexAdvanceX</ref>[dst]<sp/>=<sp/>(src<sp/>&lt;<sp/>index_size)<sp/>?<sp/><ref refid="struct_im_font_1af906476eda06d8a842d0a843a247f530" kindref="member">IndexAdvanceX</ref>.Data[src]<sp/>:<sp/>1.0f;</highlight></codeline>
<codeline lineno="3466"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3467"><highlight class="normal"></highlight></codeline>
<codeline lineno="3468"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_font_glyph" kindref="compound">ImFontGlyph</ref>*<sp/><ref refid="struct_im_font_1ac6a773b73c6406fd8f08c4c93213a501" kindref="member">ImFont::FindGlyph</ref>(<ref refid="imgui_8h_1a1ecb49ee827c39a982f1e1467910d020" kindref="member">ImWchar</ref><sp/>c)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="3469"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>&gt;=<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)<ref refid="struct_im_font_1a0c948f3741da03da9bc1731e236173c8" kindref="member">IndexLookup</ref>.Size)</highlight></codeline>
<codeline lineno="3471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_im_font_1a0e666b0c49646bd294103f4d288df4b8" kindref="member">FallbackGlyph</ref>;</highlight></codeline>
<codeline lineno="3472"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1a1ecb49ee827c39a982f1e1467910d020" kindref="member">ImWchar</ref><sp/>i<sp/>=<sp/><ref refid="struct_im_font_1a0c948f3741da03da9bc1731e236173c8" kindref="member">IndexLookup</ref>.Data[c];</highlight></codeline>
<codeline lineno="3473"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>(<ref refid="imgui_8h_1a1ecb49ee827c39a982f1e1467910d020" kindref="member">ImWchar</ref>)-1)</highlight></codeline>
<codeline lineno="3474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_im_font_1a0e666b0c49646bd294103f4d288df4b8" kindref="member">FallbackGlyph</ref>;</highlight></codeline>
<codeline lineno="3475"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;<ref refid="struct_im_font_1a1a0901fc1a8cbd41d582d6cef4946bc9" kindref="member">Glyphs</ref>.Data[i];</highlight></codeline>
<codeline lineno="3476"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3477"><highlight class="normal"></highlight></codeline>
<codeline lineno="3478"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_font_glyph" kindref="compound">ImFontGlyph</ref>*<sp/><ref refid="struct_im_font_1aa9ce4765070dfdee66bf5e5e81acaac3" kindref="member">ImFont::FindGlyphNoFallback</ref>(<ref refid="imgui_8h_1a1ecb49ee827c39a982f1e1467910d020" kindref="member">ImWchar</ref><sp/>c)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="3479"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3480"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>&gt;=<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)<ref refid="struct_im_font_1a0c948f3741da03da9bc1731e236173c8" kindref="member">IndexLookup</ref>.Size)</highlight></codeline>
<codeline lineno="3481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="3482"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1a1ecb49ee827c39a982f1e1467910d020" kindref="member">ImWchar</ref><sp/>i<sp/>=<sp/><ref refid="struct_im_font_1a0c948f3741da03da9bc1731e236173c8" kindref="member">IndexLookup</ref>.Data[c];</highlight></codeline>
<codeline lineno="3483"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>(<ref refid="imgui_8h_1a1ecb49ee827c39a982f1e1467910d020" kindref="member">ImWchar</ref>)-1)</highlight></codeline>
<codeline lineno="3484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="3485"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;<ref refid="struct_im_font_1a1a0901fc1a8cbd41d582d6cef4946bc9" kindref="member">Glyphs</ref>.Data[i];</highlight></codeline>
<codeline lineno="3486"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3487"><highlight class="normal"></highlight></codeline>
<codeline lineno="3488"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Wrapping<sp/>skips<sp/>upcoming<sp/>blanks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3489"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>CalcWordWrapNextLineStartA(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>text,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>text_end)</highlight></codeline>
<codeline lineno="3490"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3491"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(text<sp/>&lt;<sp/>text_end<sp/>&amp;&amp;<sp/>ImCharIsBlankA(*text))</highlight></codeline>
<codeline lineno="3492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>text++;</highlight></codeline>
<codeline lineno="3493"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*text<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>text++;</highlight></codeline>
<codeline lineno="3495"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>text;</highlight></codeline>
<codeline lineno="3496"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3497"><highlight class="normal"></highlight></codeline>
<codeline lineno="3498"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Simple<sp/>word-wrapping<sp/>for<sp/>English,<sp/>not<sp/>full-featured.<sp/>Please<sp/>submit<sp/>failing<sp/>cases!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3499"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>will<sp/>return<sp/>the<sp/>next<sp/>location<sp/>to<sp/>wrap<sp/>from.<sp/>If<sp/>no<sp/>wrapping<sp/>if<sp/>necessary,<sp/>this<sp/>will<sp/>fast-forward<sp/>to<sp/>e.g.<sp/>text_end.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3500"><highlight class="normal"></highlight><highlight class="comment">//<sp/>FIXME:<sp/>Much<sp/>possible<sp/>improvements<sp/>(don&apos;t<sp/>cut<sp/>things<sp/>like<sp/>&quot;word<sp/>!&quot;,<sp/>&quot;word!!!&quot;<sp/>but<sp/>cut<sp/>within<sp/>&quot;word,,,,&quot;,<sp/>more<sp/>sensible<sp/>support<sp/>for<sp/>punctuations,<sp/>support<sp/>for<sp/>Unicode<sp/>punctuations,<sp/>etc.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3501"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="struct_im_font_1a3781bb82a1ceba919cb6c98a398c7a67" kindref="member">ImFont::CalcWordWrapPositionA</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>text,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>text_end,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>wrap_width)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="3502"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3503"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>references,<sp/>possible<sp/>wrap<sp/>point<sp/>marked<sp/>with<sp/>^</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3504"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>&quot;aaa<sp/>bbb,<sp/>ccc,ddd.<sp/>eee<sp/><sp/><sp/>fff.<sp/>ggg!&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3505"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>^<sp/><sp/><sp/><sp/>^<sp/><sp/><sp/><sp/>^<sp/><sp/><sp/>^<sp/><sp/><sp/>^__<sp/><sp/><sp/><sp/>^<sp/><sp/><sp/><sp/>^</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3506"><highlight class="normal"></highlight></codeline>
<codeline lineno="3507"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>List<sp/>of<sp/>hardcoded<sp/>separators:<sp/>.,;!?&apos;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3508"><highlight class="normal"></highlight></codeline>
<codeline lineno="3509"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Skip<sp/>extra<sp/>blanks<sp/>after<sp/>a<sp/>line<sp/>returns<sp/>(that<sp/>includes<sp/>not<sp/>counting<sp/>them<sp/>in<sp/>width<sp/>computation)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3510"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>e.g.<sp/>&quot;Hello<sp/><sp/><sp/><sp/>world&quot;<sp/>--&gt;<sp/>&quot;Hello&quot;<sp/>&quot;World&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3511"><highlight class="normal"></highlight></codeline>
<codeline lineno="3512"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Cut<sp/>words<sp/>that<sp/>cannot<sp/>possibly<sp/>fit<sp/>within<sp/>one<sp/>line.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3513"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>e.g.:<sp/>&quot;The<sp/>tropical<sp/>fish&quot;<sp/>with<sp/>~5<sp/>characters<sp/>worth<sp/>of<sp/>width<sp/>--&gt;<sp/>&quot;The<sp/>tr&quot;<sp/>&quot;opical&quot;<sp/>&quot;fish&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3514"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>line_width<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="3515"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>word_width<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="3516"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>blank_width<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="3517"><highlight class="normal"><sp/><sp/><sp/><sp/>wrap_width<sp/>/=<sp/>scale;<sp/></highlight><highlight class="comment">//<sp/>We<sp/>work<sp/>with<sp/>unscaled<sp/>widths<sp/>to<sp/>avoid<sp/>scaling<sp/>every<sp/>characters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3518"><highlight class="normal"></highlight></codeline>
<codeline lineno="3519"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>word_end<sp/>=<sp/>text;</highlight></codeline>
<codeline lineno="3520"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>prev_word_end<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3521"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>inside_word<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3522"><highlight class="normal"></highlight></codeline>
<codeline lineno="3523"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>s<sp/>=<sp/>text;</highlight></codeline>
<codeline lineno="3524"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui_8h_1acb09e7dc42e8e3cefb0ecaa197978920" kindref="member">IM_ASSERT</ref>(text_end<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="3525"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(s<sp/>&lt;<sp/>text_end)</highlight></codeline>
<codeline lineno="3526"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>int)*s;</highlight></codeline>
<codeline lineno="3528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>next_s;</highlight></codeline>
<codeline lineno="3529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>&lt;<sp/>0x80)</highlight></codeline>
<codeline lineno="3530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next_s<sp/>=<sp/>s<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="3531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next_s<sp/>=<sp/>s<sp/>+<sp/><ref refid="imgui_8cpp_1abee86973b9888938f748a7850c2c0ff3" kindref="member">ImTextCharFromUtf8</ref>(&amp;c,<sp/>s,<sp/>text_end);</highlight></codeline>
<codeline lineno="3533"><highlight class="normal"></highlight></codeline>
<codeline lineno="3534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>&lt;<sp/>32)</highlight></codeline>
<codeline lineno="3535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line_width<sp/>=<sp/>word_width<sp/>=<sp/>blank_width<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="3539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inside_word<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>next_s;</highlight></codeline>
<codeline lineno="3541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\r&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>next_s;</highlight></codeline>
<codeline lineno="3546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3549"><highlight class="normal"></highlight></codeline>
<codeline lineno="3550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>char_width<sp/>=<sp/>((int)c<sp/>&lt;<sp/><ref refid="struct_im_font_1af906476eda06d8a842d0a843a247f530" kindref="member">IndexAdvanceX</ref>.Size<sp/>?<sp/><ref refid="struct_im_font_1af906476eda06d8a842d0a843a247f530" kindref="member">IndexAdvanceX</ref>.Data[c]<sp/>:<sp/><ref refid="struct_im_font_1ad58a5ee4492a3a9fa56f73e5a40d728d" kindref="member">FallbackAdvanceX</ref>);</highlight></codeline>
<codeline lineno="3551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ImCharIsBlankW(c))</highlight></codeline>
<codeline lineno="3552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inside_word)</highlight></codeline>
<codeline lineno="3554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line_width<sp/>+=<sp/>blank_width;</highlight></codeline>
<codeline lineno="3556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blank_width<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="3557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>word_end<sp/>=<sp/>s;</highlight></codeline>
<codeline lineno="3558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blank_width<sp/>+=<sp/>char_width;</highlight></codeline>
<codeline lineno="3560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inside_word<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>word_width<sp/>+=<sp/>char_width;</highlight></codeline>
<codeline lineno="3565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inside_word)</highlight></codeline>
<codeline lineno="3566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>word_end<sp/>=<sp/>next_s;</highlight></codeline>
<codeline lineno="3568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prev_word_end<sp/>=<sp/>word_end;</highlight></codeline>
<codeline lineno="3572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line_width<sp/>+=<sp/>word_width<sp/>+<sp/>blank_width;</highlight></codeline>
<codeline lineno="3573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>word_width<sp/>=<sp/>blank_width<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="3574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3575"><highlight class="normal"></highlight></codeline>
<codeline lineno="3576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Allow<sp/>wrapping<sp/>after<sp/>punctuation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inside_word<sp/>=<sp/>(c<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>c<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>c<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;;&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>c<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;!&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>c<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;?&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>c<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\&quot;&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3579"><highlight class="normal"></highlight></codeline>
<codeline lineno="3580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>ignore<sp/>blank<sp/>width<sp/>at<sp/>the<sp/>end<sp/>of<sp/>the<sp/>line<sp/>(they<sp/>can<sp/>be<sp/>skipped)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(line_width<sp/>+<sp/>word_width<sp/>&gt;<sp/>wrap_width)</highlight></codeline>
<codeline lineno="3582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Words<sp/>that<sp/>cannot<sp/>possibly<sp/>fit<sp/>within<sp/>an<sp/>entire<sp/>line<sp/>will<sp/>be<sp/>cut<sp/>anywhere.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(word_width<sp/>&lt;<sp/>wrap_width)</highlight></codeline>
<codeline lineno="3585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>prev_word_end<sp/>?<sp/>prev_word_end<sp/>:<sp/>word_end;</highlight></codeline>
<codeline lineno="3586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3588"><highlight class="normal"></highlight></codeline>
<codeline lineno="3589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>next_s;</highlight></codeline>
<codeline lineno="3590"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3591"><highlight class="normal"></highlight></codeline>
<codeline lineno="3592"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Wrap_width<sp/>is<sp/>too<sp/>small<sp/>to<sp/>fit<sp/>anything.<sp/>Force<sp/>displaying<sp/>1<sp/>character<sp/>to<sp/>minimize<sp/>the<sp/>height<sp/>discontinuity.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3593"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>+1<sp/>may<sp/>not<sp/>be<sp/>a<sp/>character<sp/>start<sp/>point<sp/>in<sp/>UTF-8<sp/>but<sp/>it&apos;s<sp/>ok<sp/>because<sp/>caller<sp/>loops<sp/>use<sp/>(text<sp/>&gt;=<sp/>word_wrap_eol).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3594"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s<sp/>==<sp/>text<sp/>&amp;&amp;<sp/>text<sp/>&lt;<sp/>text_end)</highlight></codeline>
<codeline lineno="3595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="3596"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s;</highlight></codeline>
<codeline lineno="3597"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3598"><highlight class="normal"></highlight></codeline>
<codeline lineno="3599"><highlight class="normal"><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/><ref refid="struct_im_font_1ad67f64fd206ad197f4b93b1a1ae27cfe" kindref="member">ImFont::CalcTextSizeA</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>size,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>max_width,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>wrap_width,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>text_begin,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>text_end,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>remaining)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="3600"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3601"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!text_end)</highlight></codeline>
<codeline lineno="3602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>text_end<sp/>=<sp/>text_begin<sp/>+<sp/>strlen(text_begin);<sp/></highlight><highlight class="comment">//<sp/>FIXME-OPT:<sp/>Need<sp/>to<sp/>avoid<sp/>this.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3603"><highlight class="normal"></highlight></codeline>
<codeline lineno="3604"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>line_height<sp/>=<sp/>size;</highlight></codeline>
<codeline lineno="3605"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale<sp/>=<sp/>size<sp/>/<sp/><ref refid="struct_im_font_1a423e36d1594281f1a5a537e5b0d0a3d4" kindref="member">FontSize</ref>;</highlight></codeline>
<codeline lineno="3606"><highlight class="normal"></highlight></codeline>
<codeline lineno="3607"><highlight class="normal"><sp/><sp/><sp/><sp/>ImVec2<sp/>text_size<sp/>=<sp/>ImVec2(0,<sp/>0);</highlight></codeline>
<codeline lineno="3608"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>line_width<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="3609"><highlight class="normal"></highlight></codeline>
<codeline lineno="3610"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>word_wrap_enabled<sp/>=<sp/>(wrap_width<sp/>&gt;<sp/>0.0f);</highlight></codeline>
<codeline lineno="3611"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>word_wrap_eol<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3612"><highlight class="normal"></highlight></codeline>
<codeline lineno="3613"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>s<sp/>=<sp/>text_begin;</highlight></codeline>
<codeline lineno="3614"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(s<sp/>&lt;<sp/>text_end)</highlight></codeline>
<codeline lineno="3615"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(word_wrap_enabled)</highlight></codeline>
<codeline lineno="3617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>how<sp/>far<sp/>we<sp/>can<sp/>render.<sp/>Requires<sp/>two<sp/>passes<sp/>on<sp/>the<sp/>string<sp/>data<sp/>but<sp/>keeps<sp/>the<sp/>code<sp/>simple<sp/>and<sp/>not<sp/>intrusive<sp/>for<sp/>what&apos;s<sp/>essentially<sp/>an<sp/>uncommon<sp/>feature.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!word_wrap_eol)</highlight></codeline>
<codeline lineno="3620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>word_wrap_eol<sp/>=<sp/><ref refid="struct_im_font_1a3781bb82a1ceba919cb6c98a398c7a67" kindref="member">CalcWordWrapPositionA</ref>(scale,<sp/>s,<sp/>text_end,<sp/>wrap_width<sp/>-<sp/>line_width);</highlight></codeline>
<codeline lineno="3621"><highlight class="normal"></highlight></codeline>
<codeline lineno="3622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s<sp/>&gt;=<sp/>word_wrap_eol)</highlight></codeline>
<codeline lineno="3623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(text_size.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref><sp/>&lt;<sp/>line_width)</highlight></codeline>
<codeline lineno="3625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>text_size.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref><sp/>=<sp/>line_width;</highlight></codeline>
<codeline lineno="3626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>text_size.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref><sp/>+=<sp/>line_height;</highlight></codeline>
<codeline lineno="3627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line_width<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="3628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>word_wrap_eol<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>CalcWordWrapNextLineStartA(s,<sp/>text_end);<sp/></highlight><highlight class="comment">//<sp/>Wrapping<sp/>skips<sp/>upcoming<sp/>blanks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3633"><highlight class="normal"></highlight></codeline>
<codeline lineno="3634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Decode<sp/>and<sp/>advance<sp/>source</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>prev_s<sp/>=<sp/>s;</highlight></codeline>
<codeline lineno="3636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>int)*s;</highlight></codeline>
<codeline lineno="3637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>&lt;<sp/>0x80)</highlight></codeline>
<codeline lineno="3638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="3639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>+=<sp/><ref refid="imgui_8cpp_1abee86973b9888938f748a7850c2c0ff3" kindref="member">ImTextCharFromUtf8</ref>(&amp;c,<sp/>s,<sp/>text_end);</highlight></codeline>
<codeline lineno="3641"><highlight class="normal"></highlight></codeline>
<codeline lineno="3642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>&lt;<sp/>32)</highlight></codeline>
<codeline lineno="3643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>text_size.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref><sp/>=<sp/>ImMax(text_size.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref>,<sp/>line_width);</highlight></codeline>
<codeline lineno="3647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>text_size.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref><sp/>+=<sp/>line_height;</highlight></codeline>
<codeline lineno="3648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line_width<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="3649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\r&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3654"><highlight class="normal"></highlight></codeline>
<codeline lineno="3655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>char_width<sp/>=<sp/>((int)c<sp/>&lt;<sp/><ref refid="struct_im_font_1af906476eda06d8a842d0a843a247f530" kindref="member">IndexAdvanceX</ref>.Size<sp/>?<sp/><ref refid="struct_im_font_1af906476eda06d8a842d0a843a247f530" kindref="member">IndexAdvanceX</ref>.Data[c]<sp/>:<sp/><ref refid="struct_im_font_1ad58a5ee4492a3a9fa56f73e5a40d728d" kindref="member">FallbackAdvanceX</ref>)<sp/>*<sp/>scale;</highlight></codeline>
<codeline lineno="3656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(line_width<sp/>+<sp/>char_width<sp/>&gt;=<sp/>max_width)</highlight></codeline>
<codeline lineno="3657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>prev_s;</highlight></codeline>
<codeline lineno="3659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3661"><highlight class="normal"></highlight></codeline>
<codeline lineno="3662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line_width<sp/>+=<sp/>char_width;</highlight></codeline>
<codeline lineno="3663"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3664"><highlight class="normal"></highlight></codeline>
<codeline lineno="3665"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(text_size.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref><sp/>&lt;<sp/>line_width)</highlight></codeline>
<codeline lineno="3666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>text_size.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref><sp/>=<sp/>line_width;</highlight></codeline>
<codeline lineno="3667"><highlight class="normal"></highlight></codeline>
<codeline lineno="3668"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(line_width<sp/>&gt;<sp/>0<sp/>||<sp/>text_size.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref><sp/>==<sp/>0.0f)</highlight></codeline>
<codeline lineno="3669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>text_size.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref><sp/>+=<sp/>line_height;</highlight></codeline>
<codeline lineno="3670"><highlight class="normal"></highlight></codeline>
<codeline lineno="3671"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(remaining)</highlight></codeline>
<codeline lineno="3672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*remaining<sp/>=<sp/>s;</highlight></codeline>
<codeline lineno="3673"><highlight class="normal"></highlight></codeline>
<codeline lineno="3674"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>text_size;</highlight></codeline>
<codeline lineno="3675"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3676"><highlight class="normal"></highlight></codeline>
<codeline lineno="3677"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Note:<sp/>as<sp/>with<sp/>every<sp/>ImDrawList<sp/>drawing<sp/>function,<sp/>this<sp/>expects<sp/>that<sp/>the<sp/>font<sp/>atlas<sp/>texture<sp/>is<sp/>bound.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3678"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_im_font_1a56d4d67f36cbabafd20b95ae55541a3d" kindref="member">ImFont::RenderChar</ref>(<ref refid="struct_im_draw_list" kindref="compound">ImDrawList</ref>*<sp/>draw_list,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>size,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>pos,<sp/><ref refid="imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36" kindref="member">ImU32</ref><sp/>col,<sp/><ref refid="imgui_8h_1a1ecb49ee827c39a982f1e1467910d020" kindref="member">ImWchar</ref><sp/>c)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="3679"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3680"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImFontGlyph*<sp/>glyph<sp/>=<sp/><ref refid="struct_im_font_1ac6a773b73c6406fd8f08c4c93213a501" kindref="member">FindGlyph</ref>(c);</highlight></codeline>
<codeline lineno="3681"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!glyph<sp/>||<sp/>!glyph-&gt;<ref refid="struct_im_font_glyph_1a4e7d64945eeb9cf823c2ce7bb66a1e85" kindref="member">Visible</ref>)</highlight></codeline>
<codeline lineno="3682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3683"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(glyph-&gt;<ref refid="struct_im_font_glyph_1a6dca72bfeb40ba1cf6ceae007894f665" kindref="member">Colored</ref>)</highlight></codeline>
<codeline lineno="3684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>col<sp/>|=<sp/>~IM_COL32_A_MASK;</highlight></codeline>
<codeline lineno="3685"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale<sp/>=<sp/>(size<sp/>&gt;=<sp/>0.0f)<sp/>?<sp/>(size<sp/>/<sp/><ref refid="struct_im_font_1a423e36d1594281f1a5a537e5b0d0a3d4" kindref="member">FontSize</ref>)<sp/>:<sp/>1.0f;</highlight></codeline>
<codeline lineno="3686"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x<sp/>=<sp/><ref refid="imgui__internal_8h_1a7ed216e24ac2d184f538765c01a763e6" kindref="member">IM_TRUNC</ref>(pos.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="3687"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y<sp/>=<sp/><ref refid="imgui__internal_8h_1a7ed216e24ac2d184f538765c01a763e6" kindref="member">IM_TRUNC</ref>(pos.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="3688"><highlight class="normal"><sp/><sp/><sp/><sp/>draw_list-&gt;<ref refid="struct_im_draw_list_1a879aa38dbfb0344e3e023d65c002c7d7" kindref="member">PrimReserve</ref>(6,<sp/>4);</highlight></codeline>
<codeline lineno="3689"><highlight class="normal"><sp/><sp/><sp/><sp/>draw_list-&gt;<ref refid="struct_im_draw_list_1a77d48ed5b33ccdd908824c0a3bebfff8" kindref="member">PrimRectUV</ref>(ImVec2(x<sp/>+<sp/>glyph-&gt;<ref refid="struct_im_font_glyph_1a1e93bf7292c052549972fc46646ff104" kindref="member">X0</ref><sp/>*<sp/>scale,<sp/>y<sp/>+<sp/>glyph-&gt;<ref refid="struct_im_font_glyph_1ac1deecd5b352949f30d396a58b68dd09" kindref="member">Y0</ref><sp/>*<sp/>scale),<sp/>ImVec2(x<sp/>+<sp/>glyph-&gt;<ref refid="struct_im_font_glyph_1a1d907170d807c5e5f2a43d74b99f0d89" kindref="member">X1</ref><sp/>*<sp/>scale,<sp/>y<sp/>+<sp/>glyph-&gt;<ref refid="struct_im_font_glyph_1aa6a0440694ae06c4cf03316498327bd2" kindref="member">Y1</ref><sp/>*<sp/>scale),<sp/>ImVec2(glyph-&gt;<ref refid="struct_im_font_glyph_1a3c9d90fb39f6beaf9d69413fa4c8366f" kindref="member">U0</ref>,<sp/>glyph-&gt;<ref refid="struct_im_font_glyph_1a26b7b7b9ee43ab67e98af9ea1131ce20" kindref="member">V0</ref>),<sp/>ImVec2(glyph-&gt;<ref refid="struct_im_font_glyph_1aaca9625f2d6972016e05fed583db85b0" kindref="member">U1</ref>,<sp/>glyph-&gt;<ref refid="struct_im_font_glyph_1a3d28904aad639835cdff3e4416663d7c" kindref="member">V1</ref>),<sp/>col);</highlight></codeline>
<codeline lineno="3690"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3691"><highlight class="normal"></highlight></codeline>
<codeline lineno="3692"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Note:<sp/>as<sp/>with<sp/>every<sp/>ImDrawList<sp/>drawing<sp/>function,<sp/>this<sp/>expects<sp/>that<sp/>the<sp/>font<sp/>atlas<sp/>texture<sp/>is<sp/>bound.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3693"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_im_font_1a3259517a0d648a40d77beb0c2817382a" kindref="member">ImFont::RenderText</ref>(<ref refid="struct_im_draw_list" kindref="compound">ImDrawList</ref>*<sp/>draw_list,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>size,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>&amp;<sp/>pos,<sp/><ref refid="imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36" kindref="member">ImU32</ref><sp/>col,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_vec4" kindref="compound">ImVec4</ref>&amp;<sp/>clip_rect,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>text_begin,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>text_end,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>wrap_width,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>cpu_fine_clip)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="3694"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3695"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!text_end)</highlight></codeline>
<codeline lineno="3696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>text_end<sp/>=<sp/>text_begin<sp/>+<sp/>strlen(text_begin);<sp/></highlight><highlight class="comment">//<sp/>ImGui::<sp/>functions<sp/>generally<sp/>already<sp/>provides<sp/>a<sp/>valid<sp/>text_end,<sp/>so<sp/>this<sp/>is<sp/>merely<sp/>to<sp/>handle<sp/>direct<sp/>calls.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3697"><highlight class="normal"></highlight></codeline>
<codeline lineno="3698"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Align<sp/>to<sp/>be<sp/>pixel<sp/>perfect</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3699"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x<sp/>=<sp/><ref refid="imgui__internal_8h_1a7ed216e24ac2d184f538765c01a763e6" kindref="member">IM_TRUNC</ref>(pos.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="3700"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y<sp/>=<sp/><ref refid="imgui__internal_8h_1a7ed216e24ac2d184f538765c01a763e6" kindref="member">IM_TRUNC</ref>(pos.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="3701"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y<sp/>&gt;<sp/>clip_rect.<ref refid="struct_im_vec4_1afeed5acd9f0d2043175f4da229d12a38" kindref="member">w</ref>)</highlight></codeline>
<codeline lineno="3702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3703"><highlight class="normal"></highlight></codeline>
<codeline lineno="3704"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>start_x<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="3705"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale<sp/>=<sp/>size<sp/>/<sp/><ref refid="struct_im_font_1a423e36d1594281f1a5a537e5b0d0a3d4" kindref="member">FontSize</ref>;</highlight></codeline>
<codeline lineno="3706"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>line_height<sp/>=<sp/><ref refid="struct_im_font_1a423e36d1594281f1a5a537e5b0d0a3d4" kindref="member">FontSize</ref><sp/>*<sp/>scale;</highlight></codeline>
<codeline lineno="3707"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>word_wrap_enabled<sp/>=<sp/>(wrap_width<sp/>&gt;<sp/>0.0f);</highlight></codeline>
<codeline lineno="3708"><highlight class="normal"></highlight></codeline>
<codeline lineno="3709"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fast-forward<sp/>to<sp/>first<sp/>visible<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3710"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>s<sp/>=<sp/>text_begin;</highlight></codeline>
<codeline lineno="3711"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y<sp/>+<sp/>line_height<sp/>&lt;<sp/>clip_rect.<ref refid="struct_im_vec4_1a6b4d00ae261be4fe54353c759c561fe7" kindref="member">y</ref>)</highlight></codeline>
<codeline lineno="3712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(y<sp/>+<sp/>line_height<sp/>&lt;<sp/>clip_rect.<ref refid="struct_im_vec4_1a6b4d00ae261be4fe54353c759c561fe7" kindref="member">y</ref><sp/>&amp;&amp;<sp/>s<sp/>&lt;<sp/>text_end)</highlight></codeline>
<codeline lineno="3713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>line_end<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)memchr(s,<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">,<sp/>text_end<sp/>-<sp/>s);</highlight></codeline>
<codeline lineno="3715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(word_wrap_enabled)</highlight></codeline>
<codeline lineno="3716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME-OPT:<sp/>This<sp/>is<sp/>not<sp/>optimal<sp/>as<sp/>do<sp/>first<sp/>do<sp/>a<sp/>search<sp/>for<sp/>\n<sp/>before<sp/>calling<sp/>CalcWordWrapPositionA().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>specs<sp/>for<sp/>CalcWordWrapPositionA()<sp/>were<sp/>reworked<sp/>to<sp/>optionally<sp/>return<sp/>on<sp/>\n<sp/>we<sp/>could<sp/>combine<sp/>both.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>However<sp/>it<sp/>is<sp/>still<sp/>better<sp/>than<sp/>nothing<sp/>performing<sp/>the<sp/>fast-forward!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/><ref refid="struct_im_font_1a3781bb82a1ceba919cb6c98a398c7a67" kindref="member">CalcWordWrapPositionA</ref>(scale,<sp/>s,<sp/>line_end<sp/>?<sp/>line_end<sp/>:<sp/>text_end,<sp/>wrap_width);</highlight></codeline>
<codeline lineno="3721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>CalcWordWrapNextLineStartA(s,<sp/>text_end);</highlight></codeline>
<codeline lineno="3722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>line_end<sp/>?<sp/>line_end<sp/>+<sp/>1<sp/>:<sp/>text_end;</highlight></codeline>
<codeline lineno="3726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>+=<sp/>line_height;</highlight></codeline>
<codeline lineno="3728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3729"><highlight class="normal"></highlight></codeline>
<codeline lineno="3730"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>large<sp/>text,<sp/>scan<sp/>for<sp/>the<sp/>last<sp/>visible<sp/>line<sp/>in<sp/>order<sp/>to<sp/>avoid<sp/>over-reserving<sp/>in<sp/>the<sp/>call<sp/>to<sp/>PrimReserve()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3731"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>very<sp/>large<sp/>horizontal<sp/>line<sp/>will<sp/>still<sp/>be<sp/>affected<sp/>by<sp/>the<sp/>issue<sp/>(e.g.<sp/>a<sp/>one<sp/>megabyte<sp/>string<sp/>buffer<sp/>without<sp/>a<sp/>newline<sp/>will<sp/>likely<sp/>crash<sp/>atm)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3732"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(text_end<sp/>-<sp/>s<sp/>&gt;<sp/>10000<sp/>&amp;&amp;<sp/>!word_wrap_enabled)</highlight></codeline>
<codeline lineno="3733"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>s_end<sp/>=<sp/>s;</highlight></codeline>
<codeline lineno="3735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y_end<sp/>=<sp/>y;</highlight></codeline>
<codeline lineno="3736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(y_end<sp/>&lt;<sp/>clip_rect.<ref refid="struct_im_vec4_1afeed5acd9f0d2043175f4da229d12a38" kindref="member">w</ref><sp/>&amp;&amp;<sp/>s_end<sp/>&lt;<sp/>text_end)</highlight></codeline>
<codeline lineno="3737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s_end<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)memchr(s_end,<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">,<sp/>text_end<sp/>-<sp/>s_end);</highlight></codeline>
<codeline lineno="3739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s_end<sp/>=<sp/>s_end<sp/>?<sp/>s_end<sp/>+<sp/>1<sp/>:<sp/>text_end;</highlight></codeline>
<codeline lineno="3740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_end<sp/>+=<sp/>line_height;</highlight></codeline>
<codeline lineno="3741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>text_end<sp/>=<sp/>s_end;</highlight></codeline>
<codeline lineno="3743"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3744"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s<sp/>==<sp/>text_end)</highlight></codeline>
<codeline lineno="3745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3746"><highlight class="normal"></highlight></codeline>
<codeline lineno="3747"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reserve<sp/>vertices<sp/>for<sp/>remaining<sp/>worse<sp/>case<sp/>(over-reserving<sp/>is<sp/>useful<sp/>and<sp/>easily<sp/>amortized)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3748"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vtx_count_max<sp/>=<sp/>(int)(text_end<sp/>-<sp/>s)<sp/>*<sp/>4;</highlight></codeline>
<codeline lineno="3749"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx_count_max<sp/>=<sp/>(int)(text_end<sp/>-<sp/>s)<sp/>*<sp/>6;</highlight></codeline>
<codeline lineno="3750"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx_expected_size<sp/>=<sp/>draw_list-&gt;<ref refid="struct_im_draw_list_1adf292ff70a954d82daf061c609e75dfc" kindref="member">IdxBuffer</ref>.<ref refid="struct_im_vector_1abbfd157947f66280d27b21d70a16df8d" kindref="member">Size</ref><sp/>+<sp/>idx_count_max;</highlight></codeline>
<codeline lineno="3751"><highlight class="normal"><sp/><sp/><sp/><sp/>draw_list-&gt;<ref refid="struct_im_draw_list_1a879aa38dbfb0344e3e023d65c002c7d7" kindref="member">PrimReserve</ref>(idx_count_max,<sp/>vtx_count_max);</highlight></codeline>
<codeline lineno="3752"><highlight class="normal"><sp/><sp/><sp/><sp/>ImDrawVert*<sp/><sp/>vtx_write<sp/>=<sp/>draw_list-&gt;<ref refid="struct_im_draw_list_1a67f870f5140bf1cab14b8515b7386073" kindref="member">_VtxWritePtr</ref>;</highlight></codeline>
<codeline lineno="3753"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui_8h_1afdc8744a5ac1a968b1ddfa47e13b2fa1" kindref="member">ImDrawIdx</ref>*<sp/><sp/><sp/>idx_write<sp/>=<sp/>draw_list-&gt;<ref refid="struct_im_draw_list_1a771f4c7f71873852fe030c3e498e5843" kindref="member">_IdxWritePtr</ref>;</highlight></codeline>
<codeline lineno="3754"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vtx_index<sp/>=<sp/>draw_list-&gt;<ref refid="struct_im_draw_list_1a2228793183665bc3d8612795555fe505" kindref="member">_VtxCurrentIdx</ref>;</highlight></codeline>
<codeline lineno="3755"><highlight class="normal"></highlight></codeline>
<codeline lineno="3756"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36" kindref="member">ImU32</ref><sp/>col_untinted<sp/>=<sp/>col<sp/>|<sp/>~IM_COL32_A_MASK;</highlight></codeline>
<codeline lineno="3757"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>word_wrap_eol<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3758"><highlight class="normal"></highlight></codeline>
<codeline lineno="3759"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(s<sp/>&lt;<sp/>text_end)</highlight></codeline>
<codeline lineno="3760"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(word_wrap_enabled)</highlight></codeline>
<codeline lineno="3762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>how<sp/>far<sp/>we<sp/>can<sp/>render.<sp/>Requires<sp/>two<sp/>passes<sp/>on<sp/>the<sp/>string<sp/>data<sp/>but<sp/>keeps<sp/>the<sp/>code<sp/>simple<sp/>and<sp/>not<sp/>intrusive<sp/>for<sp/>what&apos;s<sp/>essentially<sp/>an<sp/>uncommon<sp/>feature.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!word_wrap_eol)</highlight></codeline>
<codeline lineno="3765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>word_wrap_eol<sp/>=<sp/><ref refid="struct_im_font_1a3781bb82a1ceba919cb6c98a398c7a67" kindref="member">CalcWordWrapPositionA</ref>(scale,<sp/>s,<sp/>text_end,<sp/>wrap_width<sp/>-<sp/>(x<sp/>-<sp/>start_x));</highlight></codeline>
<codeline lineno="3766"><highlight class="normal"></highlight></codeline>
<codeline lineno="3767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s<sp/>&gt;=<sp/>word_wrap_eol)</highlight></codeline>
<codeline lineno="3768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>start_x;</highlight></codeline>
<codeline lineno="3770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>+=<sp/>line_height;</highlight></codeline>
<codeline lineno="3771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>word_wrap_eol<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>CalcWordWrapNextLineStartA(s,<sp/>text_end);<sp/></highlight><highlight class="comment">//<sp/>Wrapping<sp/>skips<sp/>upcoming<sp/>blanks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3776"><highlight class="normal"></highlight></codeline>
<codeline lineno="3777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Decode<sp/>and<sp/>advance<sp/>source</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>int)*s;</highlight></codeline>
<codeline lineno="3779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>&lt;<sp/>0x80)</highlight></codeline>
<codeline lineno="3780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="3781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>+=<sp/><ref refid="imgui_8cpp_1abee86973b9888938f748a7850c2c0ff3" kindref="member">ImTextCharFromUtf8</ref>(&amp;c,<sp/>s,<sp/>text_end);</highlight></codeline>
<codeline lineno="3783"><highlight class="normal"></highlight></codeline>
<codeline lineno="3784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>&lt;<sp/>32)</highlight></codeline>
<codeline lineno="3785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>start_x;</highlight></codeline>
<codeline lineno="3789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>+=<sp/>line_height;</highlight></codeline>
<codeline lineno="3790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y<sp/>&gt;<sp/>clip_rect.<ref refid="struct_im_vec4_1afeed5acd9f0d2043175f4da229d12a38" kindref="member">w</ref>)</highlight></codeline>
<codeline lineno="3791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>break<sp/>out<sp/>of<sp/>main<sp/>loop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\r&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3797"><highlight class="normal"></highlight></codeline>
<codeline lineno="3798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImFontGlyph*<sp/>glyph<sp/>=<sp/><ref refid="struct_im_font_1ac6a773b73c6406fd8f08c4c93213a501" kindref="member">FindGlyph</ref>((<ref refid="imgui_8h_1a1ecb49ee827c39a982f1e1467910d020" kindref="member">ImWchar</ref>)c);</highlight></codeline>
<codeline lineno="3799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(glyph<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="3800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3801"><highlight class="normal"></highlight></codeline>
<codeline lineno="3802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>char_width<sp/>=<sp/>glyph-&gt;<ref refid="struct_im_font_glyph_1a11bfab7bcdb497fe2d649745c7d39b33" kindref="member">AdvanceX</ref><sp/>*<sp/>scale;</highlight></codeline>
<codeline lineno="3803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(glyph-&gt;<ref refid="struct_im_font_glyph_1a4e7d64945eeb9cf823c2ce7bb66a1e85" kindref="member">Visible</ref>)</highlight></codeline>
<codeline lineno="3804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>don&apos;t<sp/>do<sp/>a<sp/>second<sp/>finer<sp/>clipping<sp/>test<sp/>on<sp/>the<sp/>Y<sp/>axis<sp/>as<sp/>we&apos;ve<sp/>already<sp/>skipped<sp/>anything<sp/>before<sp/>clip_rect.y<sp/>and<sp/>exit<sp/>once<sp/>we<sp/>pass<sp/>clip_rect.w</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x1<sp/>=<sp/>x<sp/>+<sp/>glyph-&gt;<ref refid="struct_im_font_glyph_1a1e93bf7292c052549972fc46646ff104" kindref="member">X0</ref><sp/>*<sp/>scale;</highlight></codeline>
<codeline lineno="3807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x2<sp/>=<sp/>x<sp/>+<sp/>glyph-&gt;<ref refid="struct_im_font_glyph_1a1d907170d807c5e5f2a43d74b99f0d89" kindref="member">X1</ref><sp/>*<sp/>scale;</highlight></codeline>
<codeline lineno="3808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y1<sp/>=<sp/>y<sp/>+<sp/>glyph-&gt;<ref refid="struct_im_font_glyph_1ac1deecd5b352949f30d396a58b68dd09" kindref="member">Y0</ref><sp/>*<sp/>scale;</highlight></codeline>
<codeline lineno="3809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y2<sp/>=<sp/>y<sp/>+<sp/>glyph-&gt;<ref refid="struct_im_font_glyph_1aa6a0440694ae06c4cf03316498327bd2" kindref="member">Y1</ref><sp/>*<sp/>scale;</highlight></codeline>
<codeline lineno="3810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x1<sp/>&lt;=<sp/>clip_rect.z<sp/>&amp;&amp;<sp/>x2<sp/>&gt;=<sp/>clip_rect.<ref refid="struct_im_vec4_1a2090f651f5e5b78fedae8dab87343db6" kindref="member">x</ref>)</highlight></codeline>
<codeline lineno="3811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Render<sp/>a<sp/>character</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>u1<sp/>=<sp/>glyph-&gt;<ref refid="struct_im_font_glyph_1a3c9d90fb39f6beaf9d69413fa4c8366f" kindref="member">U0</ref>;</highlight></codeline>
<codeline lineno="3814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>v1<sp/>=<sp/>glyph-&gt;<ref refid="struct_im_font_glyph_1a26b7b7b9ee43ab67e98af9ea1131ce20" kindref="member">V0</ref>;</highlight></codeline>
<codeline lineno="3815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>u2<sp/>=<sp/>glyph-&gt;<ref refid="struct_im_font_glyph_1aaca9625f2d6972016e05fed583db85b0" kindref="member">U1</ref>;</highlight></codeline>
<codeline lineno="3816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>v2<sp/>=<sp/>glyph-&gt;<ref refid="struct_im_font_glyph_1a3d28904aad639835cdff3e4416663d7c" kindref="member">V1</ref>;</highlight></codeline>
<codeline lineno="3817"><highlight class="normal"></highlight></codeline>
<codeline lineno="3818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>CPU<sp/>side<sp/>clipping<sp/>used<sp/>to<sp/>fit<sp/>text<sp/>in<sp/>their<sp/>frame<sp/>when<sp/>the<sp/>frame<sp/>is<sp/>too<sp/>small.<sp/>Only<sp/>does<sp/>clipping<sp/>for<sp/>axis<sp/>aligned<sp/>quads.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cpu_fine_clip)</highlight></codeline>
<codeline lineno="3820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x1<sp/>&lt;<sp/>clip_rect.<ref refid="struct_im_vec4_1a2090f651f5e5b78fedae8dab87343db6" kindref="member">x</ref>)</highlight></codeline>
<codeline lineno="3822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u1<sp/>=<sp/>u1<sp/>+<sp/>(1.0f<sp/>-<sp/>(x2<sp/>-<sp/>clip_rect.<ref refid="struct_im_vec4_1a2090f651f5e5b78fedae8dab87343db6" kindref="member">x</ref>)<sp/>/<sp/>(x2<sp/>-<sp/>x1))<sp/>*<sp/>(u2<sp/>-<sp/>u1);</highlight></codeline>
<codeline lineno="3824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x1<sp/>=<sp/>clip_rect.<ref refid="struct_im_vec4_1a2090f651f5e5b78fedae8dab87343db6" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="3825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y1<sp/>&lt;<sp/>clip_rect.<ref refid="struct_im_vec4_1a6b4d00ae261be4fe54353c759c561fe7" kindref="member">y</ref>)</highlight></codeline>
<codeline lineno="3827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v1<sp/>=<sp/>v1<sp/>+<sp/>(1.0f<sp/>-<sp/>(y2<sp/>-<sp/>clip_rect.<ref refid="struct_im_vec4_1a6b4d00ae261be4fe54353c759c561fe7" kindref="member">y</ref>)<sp/>/<sp/>(y2<sp/>-<sp/>y1))<sp/>*<sp/>(v2<sp/>-<sp/>v1);</highlight></codeline>
<codeline lineno="3829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y1<sp/>=<sp/>clip_rect.<ref refid="struct_im_vec4_1a6b4d00ae261be4fe54353c759c561fe7" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="3830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x2<sp/>&gt;<sp/>clip_rect.<ref refid="struct_im_vec4_1aba6a75356917a28c967954bb29133a1a" kindref="member">z</ref>)</highlight></codeline>
<codeline lineno="3832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u2<sp/>=<sp/>u1<sp/>+<sp/>((clip_rect.<ref refid="struct_im_vec4_1aba6a75356917a28c967954bb29133a1a" kindref="member">z</ref><sp/>-<sp/>x1)<sp/>/<sp/>(x2<sp/>-<sp/>x1))<sp/>*<sp/>(u2<sp/>-<sp/>u1);</highlight></codeline>
<codeline lineno="3834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x2<sp/>=<sp/>clip_rect.<ref refid="struct_im_vec4_1aba6a75356917a28c967954bb29133a1a" kindref="member">z</ref>;</highlight></codeline>
<codeline lineno="3835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y2<sp/>&gt;<sp/>clip_rect.<ref refid="struct_im_vec4_1afeed5acd9f0d2043175f4da229d12a38" kindref="member">w</ref>)</highlight></codeline>
<codeline lineno="3837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v2<sp/>=<sp/>v1<sp/>+<sp/>((clip_rect.<ref refid="struct_im_vec4_1afeed5acd9f0d2043175f4da229d12a38" kindref="member">w</ref><sp/>-<sp/>y1)<sp/>/<sp/>(y2<sp/>-<sp/>y1))<sp/>*<sp/>(v2<sp/>-<sp/>v1);</highlight></codeline>
<codeline lineno="3839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y2<sp/>=<sp/>clip_rect.<ref refid="struct_im_vec4_1afeed5acd9f0d2043175f4da229d12a38" kindref="member">w</ref>;</highlight></codeline>
<codeline lineno="3840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y1<sp/>&gt;=<sp/>y2)</highlight></codeline>
<codeline lineno="3842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>+=<sp/>char_width;</highlight></codeline>
<codeline lineno="3844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3847"><highlight class="normal"></highlight></codeline>
<codeline lineno="3848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Support<sp/>for<sp/>untinted<sp/>glyphs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36" kindref="member">ImU32</ref><sp/>glyph_col<sp/>=<sp/>glyph-&gt;<ref refid="struct_im_font_glyph_1a6dca72bfeb40ba1cf6ceae007894f665" kindref="member">Colored</ref><sp/>?<sp/>col_untinted<sp/>:<sp/>col;</highlight></codeline>
<codeline lineno="3850"><highlight class="normal"></highlight></codeline>
<codeline lineno="3851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>are<sp/>NOT<sp/>calling<sp/>PrimRectUV()<sp/>here<sp/>because<sp/>non-inlined<sp/>causes<sp/>too<sp/>much<sp/>overhead<sp/>in<sp/>a<sp/>debug<sp/>builds.<sp/>Inlined<sp/>here:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vtx_write[0].<ref refid="struct_im_draw_vert_1aedc578bbf364ddea71be12b4f177a5b4" kindref="member">pos</ref>.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref><sp/>=<sp/>x1;<sp/>vtx_write[0].<ref refid="struct_im_draw_vert_1aedc578bbf364ddea71be12b4f177a5b4" kindref="member">pos</ref>.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref><sp/>=<sp/>y1;<sp/>vtx_write[0].<ref refid="struct_im_draw_vert_1ab98ba53ce2690b56f5ba94682ed83940" kindref="member">col</ref><sp/>=<sp/>glyph_col;<sp/>vtx_write[0].<ref refid="struct_im_draw_vert_1abdf3183529055a6c3f709b23a4bf06b1" kindref="member">uv</ref>.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref><sp/>=<sp/>u1;<sp/>vtx_write[0].<ref refid="struct_im_draw_vert_1abdf3183529055a6c3f709b23a4bf06b1" kindref="member">uv</ref>.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref><sp/>=<sp/>v1;</highlight></codeline>
<codeline lineno="3854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vtx_write[1].<ref refid="struct_im_draw_vert_1aedc578bbf364ddea71be12b4f177a5b4" kindref="member">pos</ref>.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref><sp/>=<sp/>x2;<sp/>vtx_write[1].<ref refid="struct_im_draw_vert_1aedc578bbf364ddea71be12b4f177a5b4" kindref="member">pos</ref>.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref><sp/>=<sp/>y1;<sp/>vtx_write[1].<ref refid="struct_im_draw_vert_1ab98ba53ce2690b56f5ba94682ed83940" kindref="member">col</ref><sp/>=<sp/>glyph_col;<sp/>vtx_write[1].<ref refid="struct_im_draw_vert_1abdf3183529055a6c3f709b23a4bf06b1" kindref="member">uv</ref>.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref><sp/>=<sp/>u2;<sp/>vtx_write[1].<ref refid="struct_im_draw_vert_1abdf3183529055a6c3f709b23a4bf06b1" kindref="member">uv</ref>.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref><sp/>=<sp/>v1;</highlight></codeline>
<codeline lineno="3855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vtx_write[2].<ref refid="struct_im_draw_vert_1aedc578bbf364ddea71be12b4f177a5b4" kindref="member">pos</ref>.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref><sp/>=<sp/>x2;<sp/>vtx_write[2].<ref refid="struct_im_draw_vert_1aedc578bbf364ddea71be12b4f177a5b4" kindref="member">pos</ref>.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref><sp/>=<sp/>y2;<sp/>vtx_write[2].<ref refid="struct_im_draw_vert_1ab98ba53ce2690b56f5ba94682ed83940" kindref="member">col</ref><sp/>=<sp/>glyph_col;<sp/>vtx_write[2].<ref refid="struct_im_draw_vert_1abdf3183529055a6c3f709b23a4bf06b1" kindref="member">uv</ref>.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref><sp/>=<sp/>u2;<sp/>vtx_write[2].<ref refid="struct_im_draw_vert_1abdf3183529055a6c3f709b23a4bf06b1" kindref="member">uv</ref>.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref><sp/>=<sp/>v2;</highlight></codeline>
<codeline lineno="3856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vtx_write[3].<ref refid="struct_im_draw_vert_1aedc578bbf364ddea71be12b4f177a5b4" kindref="member">pos</ref>.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref><sp/>=<sp/>x1;<sp/>vtx_write[3].<ref refid="struct_im_draw_vert_1aedc578bbf364ddea71be12b4f177a5b4" kindref="member">pos</ref>.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref><sp/>=<sp/>y2;<sp/>vtx_write[3].<ref refid="struct_im_draw_vert_1ab98ba53ce2690b56f5ba94682ed83940" kindref="member">col</ref><sp/>=<sp/>glyph_col;<sp/>vtx_write[3].<ref refid="struct_im_draw_vert_1abdf3183529055a6c3f709b23a4bf06b1" kindref="member">uv</ref>.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref><sp/>=<sp/>u1;<sp/>vtx_write[3].<ref refid="struct_im_draw_vert_1abdf3183529055a6c3f709b23a4bf06b1" kindref="member">uv</ref>.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref><sp/>=<sp/>v2;</highlight></codeline>
<codeline lineno="3857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>idx_write[0]<sp/>=<sp/>(<ref refid="imgui_8h_1afdc8744a5ac1a968b1ddfa47e13b2fa1" kindref="member">ImDrawIdx</ref>)(vtx_index);<sp/>idx_write[1]<sp/>=<sp/>(<ref refid="imgui_8h_1afdc8744a5ac1a968b1ddfa47e13b2fa1" kindref="member">ImDrawIdx</ref>)(vtx_index<sp/>+<sp/>1);<sp/>idx_write[2]<sp/>=<sp/>(<ref refid="imgui_8h_1afdc8744a5ac1a968b1ddfa47e13b2fa1" kindref="member">ImDrawIdx</ref>)(vtx_index<sp/>+<sp/>2);</highlight></codeline>
<codeline lineno="3858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>idx_write[3]<sp/>=<sp/>(<ref refid="imgui_8h_1afdc8744a5ac1a968b1ddfa47e13b2fa1" kindref="member">ImDrawIdx</ref>)(vtx_index);<sp/>idx_write[4]<sp/>=<sp/>(<ref refid="imgui_8h_1afdc8744a5ac1a968b1ddfa47e13b2fa1" kindref="member">ImDrawIdx</ref>)(vtx_index<sp/>+<sp/>2);<sp/>idx_write[5]<sp/>=<sp/>(<ref refid="imgui_8h_1afdc8744a5ac1a968b1ddfa47e13b2fa1" kindref="member">ImDrawIdx</ref>)(vtx_index<sp/>+<sp/>3);</highlight></codeline>
<codeline lineno="3859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vtx_write<sp/>+=<sp/>4;</highlight></codeline>
<codeline lineno="3860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vtx_index<sp/>+=<sp/>4;</highlight></codeline>
<codeline lineno="3861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>idx_write<sp/>+=<sp/>6;</highlight></codeline>
<codeline lineno="3862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>+=<sp/>char_width;</highlight></codeline>
<codeline lineno="3866"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3867"><highlight class="normal"></highlight></codeline>
<codeline lineno="3868"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Give<sp/>back<sp/>unused<sp/>vertices<sp/>(clipped<sp/>ones,<sp/>blanks)<sp/>~<sp/>this<sp/>is<sp/>essentially<sp/>a<sp/>PrimUnreserve()<sp/>action.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3869"><highlight class="normal"><sp/><sp/><sp/><sp/>draw_list-&gt;<ref refid="struct_im_draw_list_1aa8ff4aee39cf3c3791b7e29a7b4264be" kindref="member">VtxBuffer</ref>.<ref refid="struct_im_vector_1abbfd157947f66280d27b21d70a16df8d" kindref="member">Size</ref><sp/>=<sp/>(int)(vtx_write<sp/>-<sp/>draw_list-&gt;<ref refid="struct_im_draw_list_1aa8ff4aee39cf3c3791b7e29a7b4264be" kindref="member">VtxBuffer</ref>.<ref refid="struct_im_vector_1ac0e46e8b30cb079d93c8f0aad7d7cbd0" kindref="member">Data</ref>);<sp/></highlight><highlight class="comment">//<sp/>Same<sp/>as<sp/>calling<sp/>shrink()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3870"><highlight class="normal"><sp/><sp/><sp/><sp/>draw_list-&gt;<ref refid="struct_im_draw_list_1adf292ff70a954d82daf061c609e75dfc" kindref="member">IdxBuffer</ref>.<ref refid="struct_im_vector_1abbfd157947f66280d27b21d70a16df8d" kindref="member">Size</ref><sp/>=<sp/>(int)(idx_write<sp/>-<sp/>draw_list-&gt;<ref refid="struct_im_draw_list_1adf292ff70a954d82daf061c609e75dfc" kindref="member">IdxBuffer</ref>.<ref refid="struct_im_vector_1ac0e46e8b30cb079d93c8f0aad7d7cbd0" kindref="member">Data</ref>);</highlight></codeline>
<codeline lineno="3871"><highlight class="normal"><sp/><sp/><sp/><sp/>draw_list-&gt;<ref refid="struct_im_draw_list_1a67a4b5cc4c83bc3b81d96c46cbd38a07" kindref="member">CmdBuffer</ref>[draw_list-&gt;<ref refid="struct_im_draw_list_1a67a4b5cc4c83bc3b81d96c46cbd38a07" kindref="member">CmdBuffer</ref>.<ref refid="struct_im_vector_1abbfd157947f66280d27b21d70a16df8d" kindref="member">Size</ref><sp/>-<sp/>1].ElemCount<sp/>-=<sp/>(idx_expected_size<sp/>-<sp/>draw_list-&gt;<ref refid="struct_im_draw_list_1adf292ff70a954d82daf061c609e75dfc" kindref="member">IdxBuffer</ref>.<ref refid="struct_im_vector_1abbfd157947f66280d27b21d70a16df8d" kindref="member">Size</ref>);</highlight></codeline>
<codeline lineno="3872"><highlight class="normal"><sp/><sp/><sp/><sp/>draw_list-&gt;<ref refid="struct_im_draw_list_1a67f870f5140bf1cab14b8515b7386073" kindref="member">_VtxWritePtr</ref><sp/>=<sp/>vtx_write;</highlight></codeline>
<codeline lineno="3873"><highlight class="normal"><sp/><sp/><sp/><sp/>draw_list-&gt;<ref refid="struct_im_draw_list_1a771f4c7f71873852fe030c3e498e5843" kindref="member">_IdxWritePtr</ref><sp/>=<sp/>idx_write;</highlight></codeline>
<codeline lineno="3874"><highlight class="normal"><sp/><sp/><sp/><sp/>draw_list-&gt;<ref refid="struct_im_draw_list_1a2228793183665bc3d8612795555fe505" kindref="member">_VtxCurrentIdx</ref><sp/>=<sp/>vtx_index;</highlight></codeline>
<codeline lineno="3875"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3876"><highlight class="normal"></highlight></codeline>
<codeline lineno="3877"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3878"><highlight class="normal"></highlight><highlight class="comment">//<sp/>[SECTION]<sp/>ImGui<sp/>Internal<sp/>Render<sp/>Helpers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3879"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3880"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Vaguely<sp/>redesigned<sp/>to<sp/>stop<sp/>accessing<sp/>ImGui<sp/>global<sp/>state:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3881"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>RenderArrow()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3882"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>RenderBullet()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3883"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>RenderCheckMark()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3884"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>RenderArrowPointingAt()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3885"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>RenderRectFilledRangeH()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3886"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>RenderRectFilledWithHole()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3887"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3888"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Function<sp/>in<sp/>need<sp/>of<sp/>a<sp/>redesign<sp/>(legacy<sp/>mess)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3889"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>RenderColorRectWithAlphaCheckerboard()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3890"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3891"><highlight class="normal"></highlight></codeline>
<codeline lineno="3892"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Render<sp/>an<sp/>arrow<sp/>aimed<sp/>to<sp/>be<sp/>aligned<sp/>with<sp/>text<sp/>(p_min<sp/>is<sp/>a<sp/>position<sp/>in<sp/>the<sp/>same<sp/>space<sp/>text<sp/>would<sp/>be<sp/>positioned).<sp/>To<sp/>e.g.<sp/>denote<sp/>expanded/collapsed<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3893"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespace_im_gui_1a7ec12551caa737505087c80e38b94937" kindref="member">ImGui::RenderArrow</ref>(<ref refid="struct_im_draw_list" kindref="compound">ImDrawList</ref>*<sp/>draw_list,<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>pos,<sp/><ref refid="imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36" kindref="member">ImU32</ref><sp/>col,<sp/><ref refid="imgui_8h_1a874086389bc27cc9647118d22a806403" kindref="member">ImGuiDir</ref><sp/>dir,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale)</highlight></codeline>
<codeline lineno="3894"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3895"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>h<sp/>=<sp/>draw_list-&gt;<ref refid="struct_im_draw_list_1ad5a67c6f1487a812410e9979d1cf4a02" kindref="member">_Data</ref>-&gt;<ref refid="struct_im_draw_list_shared_data_1a189a412fcd4f66a1d60501ad758d04bd" kindref="member">FontSize</ref><sp/>*<sp/>1.00f;</highlight></codeline>
<codeline lineno="3896"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>h<sp/>*<sp/>0.40f<sp/>*<sp/>scale;</highlight></codeline>
<codeline lineno="3897"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>center<sp/>=<sp/>pos<sp/>+<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(h<sp/>*<sp/>0.50f,<sp/>h<sp/>*<sp/>0.50f<sp/>*<sp/>scale);</highlight></codeline>
<codeline lineno="3898"><highlight class="normal"></highlight></codeline>
<codeline lineno="3899"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>,<sp/>b,<sp/>c;</highlight></codeline>
<codeline lineno="3900"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(dir)</highlight></codeline>
<codeline lineno="3901"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3902"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1ad4378a8980544770927c8f2692d45f54a3c7ce31d7687cd324d4c27e2bbc76102" kindref="member">ImGuiDir_Up</ref>:</highlight></codeline>
<codeline lineno="3903"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1ad4378a8980544770927c8f2692d45f54a0e2b819d9de4f8407294899c1ed64cdb" kindref="member">ImGuiDir_Down</ref>:</highlight></codeline>
<codeline lineno="3904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dir<sp/>==<sp/><ref refid="imgui_8h_1ad4378a8980544770927c8f2692d45f54a3c7ce31d7687cd324d4c27e2bbc76102" kindref="member">ImGuiDir_Up</ref>)<sp/>r<sp/>=<sp/>-r;</highlight></codeline>
<codeline lineno="3905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref><sp/>=<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(+0.000f,<sp/>+0.750f)<sp/>*<sp/>r;</highlight></codeline>
<codeline lineno="3906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>=<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(-0.866f,<sp/>-0.750f)<sp/>*<sp/>r;</highlight></codeline>
<codeline lineno="3907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(+0.866f,<sp/>-0.750f)<sp/>*<sp/>r;</highlight></codeline>
<codeline lineno="3908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3909"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1ad4378a8980544770927c8f2692d45f54ae4546da01d2e3e5f4a3ae095863f6070" kindref="member">ImGuiDir_Left</ref>:</highlight></codeline>
<codeline lineno="3910"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1ad4378a8980544770927c8f2692d45f54a1e5d1c4f7c9208e8d3565ca6c76bfbca" kindref="member">ImGuiDir_Right</ref>:</highlight></codeline>
<codeline lineno="3911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dir<sp/>==<sp/><ref refid="imgui_8h_1ad4378a8980544770927c8f2692d45f54ae4546da01d2e3e5f4a3ae095863f6070" kindref="member">ImGuiDir_Left</ref>)<sp/>r<sp/>=<sp/>-r;</highlight></codeline>
<codeline lineno="3912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref><sp/>=<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(+0.750f,<sp/>+0.000f)<sp/>*<sp/>r;</highlight></codeline>
<codeline lineno="3913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>=<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(-0.750f,<sp/>+0.866f)<sp/>*<sp/>r;</highlight></codeline>
<codeline lineno="3914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(-0.750f,<sp/>-0.866f)<sp/>*<sp/>r;</highlight></codeline>
<codeline lineno="3915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3916"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1ad4378a8980544770927c8f2692d45f54ac3e4ffe37474258ffd7079289f6761cc" kindref="member">ImGuiDir_None</ref>:</highlight></codeline>
<codeline lineno="3917"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1ad4378a8980544770927c8f2692d45f54a331b37e5a7a8930171545e181bd630fe" kindref="member">ImGuiDir_COUNT</ref>:</highlight></codeline>
<codeline lineno="3918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imgui_8h_1acb09e7dc42e8e3cefb0ecaa197978920" kindref="member">IM_ASSERT</ref>(0);</highlight></codeline>
<codeline lineno="3919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3920"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3921"><highlight class="normal"><sp/><sp/><sp/><sp/>draw_list-&gt;<ref refid="struct_im_draw_list_1af1dd4a3888034c5f71b66a38e44edf31" kindref="member">AddTriangleFilled</ref>(center<sp/>+<sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>,<sp/>center<sp/>+<sp/>b,<sp/>center<sp/>+<sp/>c,<sp/>col);</highlight></codeline>
<codeline lineno="3922"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3923"><highlight class="normal"></highlight></codeline>
<codeline lineno="3924"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespace_im_gui_1a46189f75b2e25d595f1e71060d2a2633" kindref="member">ImGui::RenderBullet</ref>(<ref refid="struct_im_draw_list" kindref="compound">ImDrawList</ref>*<sp/>draw_list,<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>pos,<sp/><ref refid="imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36" kindref="member">ImU32</ref><sp/>col)</highlight></codeline>
<codeline lineno="3925"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3926"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME-OPT:<sp/>This<sp/>should<sp/>be<sp/>baked<sp/>in<sp/>font.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3927"><highlight class="normal"><sp/><sp/><sp/><sp/>draw_list-&gt;<ref refid="struct_im_draw_list_1aef950cf8b0293b2c5e4708af72de045b" kindref="member">AddCircleFilled</ref>(pos,<sp/>draw_list-&gt;<ref refid="struct_im_draw_list_1ad5a67c6f1487a812410e9979d1cf4a02" kindref="member">_Data</ref>-&gt;<ref refid="struct_im_draw_list_shared_data_1a189a412fcd4f66a1d60501ad758d04bd" kindref="member">FontSize</ref><sp/>*<sp/>0.20f,<sp/>col,<sp/>8);</highlight></codeline>
<codeline lineno="3928"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3929"><highlight class="normal"></highlight></codeline>
<codeline lineno="3930"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespace_im_gui_1a32d6e6c359b59df1e4f9517d65e443b8" kindref="member">ImGui::RenderCheckMark</ref>(<ref refid="struct_im_draw_list" kindref="compound">ImDrawList</ref>*<sp/>draw_list,<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>pos,<sp/><ref refid="imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36" kindref="member">ImU32</ref><sp/>col,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>sz)</highlight></codeline>
<codeline lineno="3931"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3932"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>thickness<sp/>=<sp/>ImMax(sz<sp/>/<sp/>5.0f,<sp/>1.0f);</highlight></codeline>
<codeline lineno="3933"><highlight class="normal"><sp/><sp/><sp/><sp/>sz<sp/>-=<sp/>thickness<sp/>*<sp/>0.5f;</highlight></codeline>
<codeline lineno="3934"><highlight class="normal"><sp/><sp/><sp/><sp/>pos<sp/>+=<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(thickness<sp/>*<sp/>0.25f,<sp/>thickness<sp/>*<sp/>0.25f);</highlight></codeline>
<codeline lineno="3935"><highlight class="normal"></highlight></codeline>
<codeline lineno="3936"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>third<sp/>=<sp/>sz<sp/>/<sp/>3.0f;</highlight></codeline>
<codeline lineno="3937"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>bx<sp/>=<sp/>pos.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref><sp/>+<sp/>third;</highlight></codeline>
<codeline lineno="3938"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>by<sp/>=<sp/>pos.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref><sp/>+<sp/>sz<sp/>-<sp/>third<sp/>*<sp/>0.5f;</highlight></codeline>
<codeline lineno="3939"><highlight class="normal"><sp/><sp/><sp/><sp/>draw_list-&gt;<ref refid="struct_im_draw_list_1a828d944325ed58d8b57abd3647bffaaf" kindref="member">PathLineTo</ref>(<ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(bx<sp/>-<sp/>third,<sp/>by<sp/>-<sp/>third));</highlight></codeline>
<codeline lineno="3940"><highlight class="normal"><sp/><sp/><sp/><sp/>draw_list-&gt;<ref refid="struct_im_draw_list_1a828d944325ed58d8b57abd3647bffaaf" kindref="member">PathLineTo</ref>(<ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(bx,<sp/>by));</highlight></codeline>
<codeline lineno="3941"><highlight class="normal"><sp/><sp/><sp/><sp/>draw_list-&gt;<ref refid="struct_im_draw_list_1a828d944325ed58d8b57abd3647bffaaf" kindref="member">PathLineTo</ref>(<ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(bx<sp/>+<sp/>third<sp/>*<sp/>2.0f,<sp/>by<sp/>-<sp/>third<sp/>*<sp/>2.0f));</highlight></codeline>
<codeline lineno="3942"><highlight class="normal"><sp/><sp/><sp/><sp/>draw_list-&gt;<ref refid="struct_im_draw_list_1a60bf9040ef3d09b39c4ba8f5a2a68ae9" kindref="member">PathStroke</ref>(col,<sp/>0,<sp/>thickness);</highlight></codeline>
<codeline lineno="3943"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3944"><highlight class="normal"></highlight></codeline>
<codeline lineno="3945"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Render<sp/>an<sp/>arrow.<sp/>&apos;pos&apos;<sp/>is<sp/>position<sp/>of<sp/>the<sp/>arrow<sp/>tip.<sp/>half_sz.x<sp/>is<sp/>length<sp/>from<sp/>base<sp/>to<sp/>tip.<sp/>half_sz.y<sp/>is<sp/>length<sp/>on<sp/>each<sp/>side.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3946"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespace_im_gui_1af1ea568bffa58ec26100de3bf60af5f2" kindref="member">ImGui::RenderArrowPointingAt</ref>(<ref refid="struct_im_draw_list" kindref="compound">ImDrawList</ref>*<sp/>draw_list,<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>pos,<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>half_sz,<sp/><ref refid="imgui_8h_1a874086389bc27cc9647118d22a806403" kindref="member">ImGuiDir</ref><sp/>direction,<sp/><ref refid="imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36" kindref="member">ImU32</ref><sp/>col)</highlight></codeline>
<codeline lineno="3947"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3948"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(direction)</highlight></codeline>
<codeline lineno="3949"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3950"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1ad4378a8980544770927c8f2692d45f54ae4546da01d2e3e5f4a3ae095863f6070" kindref="member">ImGuiDir_Left</ref>:<sp/><sp/>draw_list-&gt;<ref refid="struct_im_draw_list_1af1dd4a3888034c5f71b66a38e44edf31" kindref="member">AddTriangleFilled</ref>(<ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(pos.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref><sp/>+<sp/>half_sz.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref>,<sp/>pos.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref><sp/>-<sp/>half_sz.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref>),<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(pos.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref><sp/>+<sp/>half_sz.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref>,<sp/>pos.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref><sp/>+<sp/>half_sz.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref>),<sp/>pos,<sp/>col);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3951"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1ad4378a8980544770927c8f2692d45f54a1e5d1c4f7c9208e8d3565ca6c76bfbca" kindref="member">ImGuiDir_Right</ref>:<sp/>draw_list-&gt;<ref refid="struct_im_draw_list_1af1dd4a3888034c5f71b66a38e44edf31" kindref="member">AddTriangleFilled</ref>(<ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(pos.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref><sp/>-<sp/>half_sz.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref>,<sp/>pos.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref><sp/>+<sp/>half_sz.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref>),<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(pos.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref><sp/>-<sp/>half_sz.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref>,<sp/>pos.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref><sp/>-<sp/>half_sz.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref>),<sp/>pos,<sp/>col);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3952"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1ad4378a8980544770927c8f2692d45f54a3c7ce31d7687cd324d4c27e2bbc76102" kindref="member">ImGuiDir_Up</ref>:<sp/><sp/><sp/><sp/>draw_list-&gt;<ref refid="struct_im_draw_list_1af1dd4a3888034c5f71b66a38e44edf31" kindref="member">AddTriangleFilled</ref>(<ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(pos.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref><sp/>+<sp/>half_sz.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref>,<sp/>pos.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref><sp/>+<sp/>half_sz.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref>),<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(pos.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref><sp/>-<sp/>half_sz.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref>,<sp/>pos.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref><sp/>+<sp/>half_sz.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref>),<sp/>pos,<sp/>col);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3953"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1ad4378a8980544770927c8f2692d45f54a0e2b819d9de4f8407294899c1ed64cdb" kindref="member">ImGuiDir_Down</ref>:<sp/><sp/>draw_list-&gt;<ref refid="struct_im_draw_list_1af1dd4a3888034c5f71b66a38e44edf31" kindref="member">AddTriangleFilled</ref>(<ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(pos.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref><sp/>-<sp/>half_sz.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref>,<sp/>pos.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref><sp/>-<sp/>half_sz.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref>),<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(pos.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref><sp/>+<sp/>half_sz.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref>,<sp/>pos.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref><sp/>-<sp/>half_sz.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref>),<sp/>pos,<sp/>col);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3954"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1ad4378a8980544770927c8f2692d45f54ac3e4ffe37474258ffd7079289f6761cc" kindref="member">ImGuiDir_None</ref>:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1ad4378a8980544770927c8f2692d45f54a331b37e5a7a8930171545e181bd630fe" kindref="member">ImGuiDir_COUNT</ref>:<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>Fix<sp/>warnings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3955"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3956"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3957"><highlight class="normal"></highlight></codeline>
<codeline lineno="3958"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ImAcos01(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="3959"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3960"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x<sp/>&lt;=<sp/>0.0f)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui__internal_8h_1ab8de43e3f17a4f0081fa6c2def6af1c1" kindref="member">IM_PI</ref><sp/>*<sp/>0.5f;</highlight></codeline>
<codeline lineno="3961"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x<sp/>&gt;=<sp/>1.0f)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.0f;</highlight></codeline>
<codeline lineno="3962"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui__internal_8h_1a2b9b8e68466b8175e03ca1d7d36c4e33" kindref="member">ImAcos</ref>(x);</highlight></codeline>
<codeline lineno="3963"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//return<sp/>(-0.69813170079773212f<sp/>*<sp/>x<sp/>*<sp/>x<sp/>-<sp/>0.87266462599716477f)<sp/>*<sp/>x<sp/>+<sp/>1.5707963267948966f;<sp/>//<sp/>Cheap<sp/>approximation,<sp/>may<sp/>be<sp/>enough<sp/>for<sp/>what<sp/>we<sp/>do.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3964"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3965"><highlight class="normal"></highlight></codeline>
<codeline lineno="3966"><highlight class="normal"></highlight><highlight class="comment">//<sp/>FIXME:<sp/>Cleanup<sp/>and<sp/>move<sp/>code<sp/>to<sp/>ImDrawList.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3967"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespace_im_gui_1af311762331bda4508b25e05f6afc7f45" kindref="member">ImGui::RenderRectFilledRangeH</ref>(<ref refid="struct_im_draw_list" kindref="compound">ImDrawList</ref>*<sp/>draw_list,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref>&amp;<sp/>rect,<sp/><ref refid="imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36" kindref="member">ImU32</ref><sp/>col,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x_start_norm,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x_end_norm,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>rounding)</highlight></codeline>
<codeline lineno="3968"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3969"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x_end_norm<sp/>==<sp/>x_start_norm)</highlight></codeline>
<codeline lineno="3970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3971"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x_start_norm<sp/>&gt;<sp/>x_end_norm)</highlight></codeline>
<codeline lineno="3972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImSwap(x_start_norm,<sp/>x_end_norm);</highlight></codeline>
<codeline lineno="3973"><highlight class="normal"></highlight></codeline>
<codeline lineno="3974"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>p0<sp/>=<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(ImLerp(rect.<ref refid="struct_im_rect_1af8f3fbf7ec983e03548b88e14ba68aa8" kindref="member">Min</ref>.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref>,<sp/>rect.<ref refid="struct_im_rect_1aad58c13340d320b350a72a037e3f7628" kindref="member">Max</ref>.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref>,<sp/>x_start_norm),<sp/>rect.<ref refid="struct_im_rect_1af8f3fbf7ec983e03548b88e14ba68aa8" kindref="member">Min</ref>.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="3975"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>p1<sp/>=<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(ImLerp(rect.<ref refid="struct_im_rect_1af8f3fbf7ec983e03548b88e14ba68aa8" kindref="member">Min</ref>.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref>,<sp/>rect.<ref refid="struct_im_rect_1aad58c13340d320b350a72a037e3f7628" kindref="member">Max</ref>.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref>,<sp/>x_end_norm),<sp/>rect.<ref refid="struct_im_rect_1aad58c13340d320b350a72a037e3f7628" kindref="member">Max</ref>.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="3976"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rounding<sp/>==<sp/>0.0f)</highlight></codeline>
<codeline lineno="3977"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>draw_list-&gt;<ref refid="struct_im_draw_list_1a6b16ab764160b0251d2e7b3bd08c1ffc" kindref="member">AddRectFilled</ref>(p0,<sp/>p1,<sp/>col,<sp/>0.0f);</highlight></codeline>
<codeline lineno="3979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3980"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3981"><highlight class="normal"></highlight></codeline>
<codeline lineno="3982"><highlight class="normal"><sp/><sp/><sp/><sp/>rounding<sp/>=<sp/>ImClamp(ImMin((rect.<ref refid="struct_im_rect_1aad58c13340d320b350a72a037e3f7628" kindref="member">Max</ref>.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref><sp/>-<sp/>rect.<ref refid="struct_im_rect_1af8f3fbf7ec983e03548b88e14ba68aa8" kindref="member">Min</ref>.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref>)<sp/>*<sp/>0.5f,<sp/>(rect.<ref refid="struct_im_rect_1aad58c13340d320b350a72a037e3f7628" kindref="member">Max</ref>.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref><sp/>-<sp/>rect.<ref refid="struct_im_rect_1af8f3fbf7ec983e03548b88e14ba68aa8" kindref="member">Min</ref>.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref>)<sp/>*<sp/>0.5f)<sp/>-<sp/>1.0f,<sp/>0.0f,<sp/>rounding);</highlight></codeline>
<codeline lineno="3983"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>inv_rounding<sp/>=<sp/>1.0f<sp/>/<sp/>rounding;</highlight></codeline>
<codeline lineno="3984"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>arc0_b<sp/>=<sp/>ImAcos01(1.0f<sp/>-<sp/>(p0.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref><sp/>-<sp/>rect.<ref refid="struct_im_rect_1af8f3fbf7ec983e03548b88e14ba68aa8" kindref="member">Min</ref>.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref>)<sp/>*<sp/>inv_rounding);</highlight></codeline>
<codeline lineno="3985"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>arc0_e<sp/>=<sp/>ImAcos01(1.0f<sp/>-<sp/>(p1.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref><sp/>-<sp/>rect.<ref refid="struct_im_rect_1af8f3fbf7ec983e03548b88e14ba68aa8" kindref="member">Min</ref>.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref>)<sp/>*<sp/>inv_rounding);</highlight></codeline>
<codeline lineno="3986"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>half_pi<sp/>=<sp/><ref refid="imgui__internal_8h_1ab8de43e3f17a4f0081fa6c2def6af1c1" kindref="member">IM_PI</ref><sp/>*<sp/>0.5f;<sp/></highlight><highlight class="comment">//<sp/>We<sp/>will<sp/>==<sp/>compare<sp/>to<sp/>this<sp/>because<sp/>we<sp/>know<sp/>this<sp/>is<sp/>the<sp/>exact<sp/>value<sp/>ImAcos01<sp/>can<sp/>return.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3987"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x0<sp/>=<sp/>ImMax(p0.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref>,<sp/>rect.<ref refid="struct_im_rect_1af8f3fbf7ec983e03548b88e14ba68aa8" kindref="member">Min</ref>.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref><sp/>+<sp/>rounding);</highlight></codeline>
<codeline lineno="3988"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(arc0_b<sp/>==<sp/>arc0_e)</highlight></codeline>
<codeline lineno="3989"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>draw_list-&gt;<ref refid="struct_im_draw_list_1a828d944325ed58d8b57abd3647bffaaf" kindref="member">PathLineTo</ref>(<ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(x0,<sp/>p1.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref>));</highlight></codeline>
<codeline lineno="3991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>draw_list-&gt;<ref refid="struct_im_draw_list_1a828d944325ed58d8b57abd3647bffaaf" kindref="member">PathLineTo</ref>(<ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(x0,<sp/>p0.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref>));</highlight></codeline>
<codeline lineno="3992"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3993"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(arc0_b<sp/>==<sp/>0.0f<sp/>&amp;&amp;<sp/>arc0_e<sp/>==<sp/>half_pi)</highlight></codeline>
<codeline lineno="3994"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>draw_list-&gt;<ref refid="struct_im_draw_list_1a6d307c6de1a6522e76fa410e8fe96fcc" kindref="member">PathArcToFast</ref>(<ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(x0,<sp/>p1.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref><sp/>-<sp/>rounding),<sp/>rounding,<sp/>3,<sp/>6);<sp/></highlight><highlight class="comment">//<sp/>BL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>draw_list-&gt;<ref refid="struct_im_draw_list_1a6d307c6de1a6522e76fa410e8fe96fcc" kindref="member">PathArcToFast</ref>(<ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(x0,<sp/>p0.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref><sp/>+<sp/>rounding),<sp/>rounding,<sp/>6,<sp/>9);<sp/></highlight><highlight class="comment">//<sp/>TR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3997"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3998"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3999"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>draw_list-&gt;<ref refid="struct_im_draw_list_1af86073403f1557cccb4ff45dfad0a74a" kindref="member">PathArcTo</ref>(<ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(x0,<sp/>p1.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref><sp/>-<sp/>rounding),<sp/>rounding,<sp/><ref refid="imgui__internal_8h_1ab8de43e3f17a4f0081fa6c2def6af1c1" kindref="member">IM_PI</ref><sp/>-<sp/>arc0_e,<sp/><ref refid="imgui__internal_8h_1ab8de43e3f17a4f0081fa6c2def6af1c1" kindref="member">IM_PI</ref><sp/>-<sp/>arc0_b,<sp/>3);<sp/></highlight><highlight class="comment">//<sp/>BL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>draw_list-&gt;<ref refid="struct_im_draw_list_1af86073403f1557cccb4ff45dfad0a74a" kindref="member">PathArcTo</ref>(<ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(x0,<sp/>p0.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref><sp/>+<sp/>rounding),<sp/>rounding,<sp/><ref refid="imgui__internal_8h_1ab8de43e3f17a4f0081fa6c2def6af1c1" kindref="member">IM_PI</ref><sp/>+<sp/>arc0_b,<sp/><ref refid="imgui__internal_8h_1ab8de43e3f17a4f0081fa6c2def6af1c1" kindref="member">IM_PI</ref><sp/>+<sp/>arc0_e,<sp/>3);<sp/></highlight><highlight class="comment">//<sp/>TR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4002"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4003"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p1.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref><sp/>&gt;<sp/>rect.<ref refid="struct_im_rect_1af8f3fbf7ec983e03548b88e14ba68aa8" kindref="member">Min</ref>.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref><sp/>+<sp/>rounding)</highlight></codeline>
<codeline lineno="4004"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>arc1_b<sp/>=<sp/>ImAcos01(1.0f<sp/>-<sp/>(rect.<ref refid="struct_im_rect_1aad58c13340d320b350a72a037e3f7628" kindref="member">Max</ref>.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref><sp/>-<sp/>p1.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref>)<sp/>*<sp/>inv_rounding);</highlight></codeline>
<codeline lineno="4006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>arc1_e<sp/>=<sp/>ImAcos01(1.0f<sp/>-<sp/>(rect.<ref refid="struct_im_rect_1aad58c13340d320b350a72a037e3f7628" kindref="member">Max</ref>.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref><sp/>-<sp/>p0.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref>)<sp/>*<sp/>inv_rounding);</highlight></codeline>
<codeline lineno="4007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x1<sp/>=<sp/>ImMin(p1.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref>,<sp/>rect.<ref refid="struct_im_rect_1aad58c13340d320b350a72a037e3f7628" kindref="member">Max</ref>.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref><sp/>-<sp/>rounding);</highlight></codeline>
<codeline lineno="4008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(arc1_b<sp/>==<sp/>arc1_e)</highlight></codeline>
<codeline lineno="4009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>draw_list-&gt;<ref refid="struct_im_draw_list_1a828d944325ed58d8b57abd3647bffaaf" kindref="member">PathLineTo</ref>(<ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(x1,<sp/>p0.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref>));</highlight></codeline>
<codeline lineno="4011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>draw_list-&gt;<ref refid="struct_im_draw_list_1a828d944325ed58d8b57abd3647bffaaf" kindref="member">PathLineTo</ref>(<ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(x1,<sp/>p1.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref>));</highlight></codeline>
<codeline lineno="4012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(arc1_b<sp/>==<sp/>0.0f<sp/>&amp;&amp;<sp/>arc1_e<sp/>==<sp/>half_pi)</highlight></codeline>
<codeline lineno="4014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>draw_list-&gt;<ref refid="struct_im_draw_list_1a6d307c6de1a6522e76fa410e8fe96fcc" kindref="member">PathArcToFast</ref>(<ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(x1,<sp/>p0.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref><sp/>+<sp/>rounding),<sp/>rounding,<sp/>9,<sp/>12);<sp/></highlight><highlight class="comment">//<sp/>TR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>draw_list-&gt;<ref refid="struct_im_draw_list_1a6d307c6de1a6522e76fa410e8fe96fcc" kindref="member">PathArcToFast</ref>(<ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(x1,<sp/>p1.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref><sp/>-<sp/>rounding),<sp/>rounding,<sp/>0,<sp/>3);<sp/><sp/></highlight><highlight class="comment">//<sp/>BR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>draw_list-&gt;<ref refid="struct_im_draw_list_1af86073403f1557cccb4ff45dfad0a74a" kindref="member">PathArcTo</ref>(<ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(x1,<sp/>p0.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref><sp/>+<sp/>rounding),<sp/>rounding,<sp/>-arc1_e,<sp/>-arc1_b,<sp/>3);<sp/></highlight><highlight class="comment">//<sp/>TR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>draw_list-&gt;<ref refid="struct_im_draw_list_1af86073403f1557cccb4ff45dfad0a74a" kindref="member">PathArcTo</ref>(<ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(x1,<sp/>p1.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref><sp/>-<sp/>rounding),<sp/>rounding,<sp/>+arc1_b,<sp/>+arc1_e,<sp/>3);<sp/></highlight><highlight class="comment">//<sp/>BR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4023"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4024"><highlight class="normal"><sp/><sp/><sp/><sp/>draw_list-&gt;<ref refid="struct_im_draw_list_1aea9301cb99ebf4b27f5d3959017567c9" kindref="member">PathFillConvex</ref>(col);</highlight></codeline>
<codeline lineno="4025"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4026"><highlight class="normal"></highlight></codeline>
<codeline lineno="4027"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespace_im_gui_1a3579615f926c34c5de220f655d535d61" kindref="member">ImGui::RenderRectFilledWithHole</ref>(<ref refid="struct_im_draw_list" kindref="compound">ImDrawList</ref>*<sp/>draw_list,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref>&amp;<sp/>outer,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_im_rect" kindref="compound">ImRect</ref>&amp;<sp/>inner,<sp/><ref refid="imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36" kindref="member">ImU32</ref><sp/>col,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>rounding)</highlight></codeline>
<codeline lineno="4028"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4029"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fill_L<sp/>=<sp/>(inner.<ref refid="struct_im_rect_1af8f3fbf7ec983e03548b88e14ba68aa8" kindref="member">Min</ref>.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref><sp/>&gt;<sp/>outer.<ref refid="struct_im_rect_1af8f3fbf7ec983e03548b88e14ba68aa8" kindref="member">Min</ref>.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="4030"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fill_R<sp/>=<sp/>(inner.<ref refid="struct_im_rect_1aad58c13340d320b350a72a037e3f7628" kindref="member">Max</ref>.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref><sp/>&lt;<sp/>outer.<ref refid="struct_im_rect_1aad58c13340d320b350a72a037e3f7628" kindref="member">Max</ref>.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="4031"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fill_U<sp/>=<sp/>(inner.<ref refid="struct_im_rect_1af8f3fbf7ec983e03548b88e14ba68aa8" kindref="member">Min</ref>.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref><sp/>&gt;<sp/>outer.<ref refid="struct_im_rect_1af8f3fbf7ec983e03548b88e14ba68aa8" kindref="member">Min</ref>.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="4032"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fill_D<sp/>=<sp/>(inner.<ref refid="struct_im_rect_1aad58c13340d320b350a72a037e3f7628" kindref="member">Max</ref>.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref><sp/>&lt;<sp/>outer.<ref refid="struct_im_rect_1aad58c13340d320b350a72a037e3f7628" kindref="member">Max</ref>.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="4033"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fill_L)<sp/>draw_list-&gt;<ref refid="struct_im_draw_list_1a6b16ab764160b0251d2e7b3bd08c1ffc" kindref="member">AddRectFilled</ref>(<ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(outer.<ref refid="struct_im_rect_1af8f3fbf7ec983e03548b88e14ba68aa8" kindref="member">Min</ref>.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref>,<sp/>inner.<ref refid="struct_im_rect_1af8f3fbf7ec983e03548b88e14ba68aa8" kindref="member">Min</ref>.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref>),<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(inner.<ref refid="struct_im_rect_1af8f3fbf7ec983e03548b88e14ba68aa8" kindref="member">Min</ref>.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref>,<sp/>inner.<ref refid="struct_im_rect_1aad58c13340d320b350a72a037e3f7628" kindref="member">Max</ref>.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref>),<sp/>col,<sp/>rounding,<sp/><ref refid="imgui_8h_1af42aea565fd5eb55fdb4c85c24e3c582a3110e31bfaa3ab35cae269eaf24fc546" kindref="member">ImDrawFlags_RoundCornersNone</ref><sp/>|<sp/>(fill_U<sp/>?<sp/>0<sp/>:<sp/><ref refid="imgui_8h_1af42aea565fd5eb55fdb4c85c24e3c582a061f928851785c7eff16663e7fcc02a6" kindref="member">ImDrawFlags_RoundCornersTopLeft</ref>)<sp/><sp/><sp/><sp/>|<sp/>(fill_D<sp/>?<sp/>0<sp/>:<sp/><ref refid="imgui_8h_1af42aea565fd5eb55fdb4c85c24e3c582a1b5e764680b7f8f4ff4d6b9ff955f7f4" kindref="member">ImDrawFlags_RoundCornersBottomLeft</ref>));</highlight></codeline>
<codeline lineno="4034"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fill_R)<sp/>draw_list-&gt;<ref refid="struct_im_draw_list_1a6b16ab764160b0251d2e7b3bd08c1ffc" kindref="member">AddRectFilled</ref>(<ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(inner.<ref refid="struct_im_rect_1aad58c13340d320b350a72a037e3f7628" kindref="member">Max</ref>.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref>,<sp/>inner.<ref refid="struct_im_rect_1af8f3fbf7ec983e03548b88e14ba68aa8" kindref="member">Min</ref>.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref>),<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(outer.<ref refid="struct_im_rect_1aad58c13340d320b350a72a037e3f7628" kindref="member">Max</ref>.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref>,<sp/>inner.<ref refid="struct_im_rect_1aad58c13340d320b350a72a037e3f7628" kindref="member">Max</ref>.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref>),<sp/>col,<sp/>rounding,<sp/><ref refid="imgui_8h_1af42aea565fd5eb55fdb4c85c24e3c582a3110e31bfaa3ab35cae269eaf24fc546" kindref="member">ImDrawFlags_RoundCornersNone</ref><sp/>|<sp/>(fill_U<sp/>?<sp/>0<sp/>:<sp/><ref refid="imgui_8h_1af42aea565fd5eb55fdb4c85c24e3c582a2b2f2532f7993f484005da8cbaa83290" kindref="member">ImDrawFlags_RoundCornersTopRight</ref>)<sp/><sp/><sp/>|<sp/>(fill_D<sp/>?<sp/>0<sp/>:<sp/><ref refid="imgui_8h_1af42aea565fd5eb55fdb4c85c24e3c582a50c188768e2b0fceab5b7c702bac2af7" kindref="member">ImDrawFlags_RoundCornersBottomRight</ref>));</highlight></codeline>
<codeline lineno="4035"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fill_U)<sp/>draw_list-&gt;<ref refid="struct_im_draw_list_1a6b16ab764160b0251d2e7b3bd08c1ffc" kindref="member">AddRectFilled</ref>(<ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(inner.<ref refid="struct_im_rect_1af8f3fbf7ec983e03548b88e14ba68aa8" kindref="member">Min</ref>.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref>,<sp/>outer.<ref refid="struct_im_rect_1af8f3fbf7ec983e03548b88e14ba68aa8" kindref="member">Min</ref>.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref>),<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(inner.<ref refid="struct_im_rect_1aad58c13340d320b350a72a037e3f7628" kindref="member">Max</ref>.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref>,<sp/>inner.<ref refid="struct_im_rect_1af8f3fbf7ec983e03548b88e14ba68aa8" kindref="member">Min</ref>.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref>),<sp/>col,<sp/>rounding,<sp/><ref refid="imgui_8h_1af42aea565fd5eb55fdb4c85c24e3c582a3110e31bfaa3ab35cae269eaf24fc546" kindref="member">ImDrawFlags_RoundCornersNone</ref><sp/>|<sp/>(fill_L<sp/>?<sp/>0<sp/>:<sp/><ref refid="imgui_8h_1af42aea565fd5eb55fdb4c85c24e3c582a061f928851785c7eff16663e7fcc02a6" kindref="member">ImDrawFlags_RoundCornersTopLeft</ref>)<sp/><sp/><sp/><sp/>|<sp/>(fill_R<sp/>?<sp/>0<sp/>:<sp/><ref refid="imgui_8h_1af42aea565fd5eb55fdb4c85c24e3c582a2b2f2532f7993f484005da8cbaa83290" kindref="member">ImDrawFlags_RoundCornersTopRight</ref>));</highlight></codeline>
<codeline lineno="4036"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fill_D)<sp/>draw_list-&gt;<ref refid="struct_im_draw_list_1a6b16ab764160b0251d2e7b3bd08c1ffc" kindref="member">AddRectFilled</ref>(<ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(inner.<ref refid="struct_im_rect_1af8f3fbf7ec983e03548b88e14ba68aa8" kindref="member">Min</ref>.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref>,<sp/>inner.<ref refid="struct_im_rect_1aad58c13340d320b350a72a037e3f7628" kindref="member">Max</ref>.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref>),<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(inner.<ref refid="struct_im_rect_1aad58c13340d320b350a72a037e3f7628" kindref="member">Max</ref>.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref>,<sp/>outer.<ref refid="struct_im_rect_1aad58c13340d320b350a72a037e3f7628" kindref="member">Max</ref>.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref>),<sp/>col,<sp/>rounding,<sp/><ref refid="imgui_8h_1af42aea565fd5eb55fdb4c85c24e3c582a3110e31bfaa3ab35cae269eaf24fc546" kindref="member">ImDrawFlags_RoundCornersNone</ref><sp/>|<sp/>(fill_L<sp/>?<sp/>0<sp/>:<sp/><ref refid="imgui_8h_1af42aea565fd5eb55fdb4c85c24e3c582a1b5e764680b7f8f4ff4d6b9ff955f7f4" kindref="member">ImDrawFlags_RoundCornersBottomLeft</ref>)<sp/>|<sp/>(fill_R<sp/>?<sp/>0<sp/>:<sp/><ref refid="imgui_8h_1af42aea565fd5eb55fdb4c85c24e3c582a50c188768e2b0fceab5b7c702bac2af7" kindref="member">ImDrawFlags_RoundCornersBottomRight</ref>));</highlight></codeline>
<codeline lineno="4037"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fill_L<sp/>&amp;&amp;<sp/>fill_U)<sp/>draw_list-&gt;<ref refid="struct_im_draw_list_1a6b16ab764160b0251d2e7b3bd08c1ffc" kindref="member">AddRectFilled</ref>(<ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(outer.<ref refid="struct_im_rect_1af8f3fbf7ec983e03548b88e14ba68aa8" kindref="member">Min</ref>.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref>,<sp/>outer.<ref refid="struct_im_rect_1af8f3fbf7ec983e03548b88e14ba68aa8" kindref="member">Min</ref>.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref>),<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(inner.<ref refid="struct_im_rect_1af8f3fbf7ec983e03548b88e14ba68aa8" kindref="member">Min</ref>.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref>,<sp/>inner.<ref refid="struct_im_rect_1af8f3fbf7ec983e03548b88e14ba68aa8" kindref="member">Min</ref>.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref>),<sp/>col,<sp/>rounding,<sp/><ref refid="imgui_8h_1af42aea565fd5eb55fdb4c85c24e3c582a061f928851785c7eff16663e7fcc02a6" kindref="member">ImDrawFlags_RoundCornersTopLeft</ref>);</highlight></codeline>
<codeline lineno="4038"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fill_R<sp/>&amp;&amp;<sp/>fill_U)<sp/>draw_list-&gt;<ref refid="struct_im_draw_list_1a6b16ab764160b0251d2e7b3bd08c1ffc" kindref="member">AddRectFilled</ref>(<ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(inner.<ref refid="struct_im_rect_1aad58c13340d320b350a72a037e3f7628" kindref="member">Max</ref>.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref>,<sp/>outer.<ref refid="struct_im_rect_1af8f3fbf7ec983e03548b88e14ba68aa8" kindref="member">Min</ref>.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref>),<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(outer.<ref refid="struct_im_rect_1aad58c13340d320b350a72a037e3f7628" kindref="member">Max</ref>.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref>,<sp/>inner.<ref refid="struct_im_rect_1af8f3fbf7ec983e03548b88e14ba68aa8" kindref="member">Min</ref>.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref>),<sp/>col,<sp/>rounding,<sp/><ref refid="imgui_8h_1af42aea565fd5eb55fdb4c85c24e3c582a2b2f2532f7993f484005da8cbaa83290" kindref="member">ImDrawFlags_RoundCornersTopRight</ref>);</highlight></codeline>
<codeline lineno="4039"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fill_L<sp/>&amp;&amp;<sp/>fill_D)<sp/>draw_list-&gt;<ref refid="struct_im_draw_list_1a6b16ab764160b0251d2e7b3bd08c1ffc" kindref="member">AddRectFilled</ref>(<ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(outer.<ref refid="struct_im_rect_1af8f3fbf7ec983e03548b88e14ba68aa8" kindref="member">Min</ref>.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref>,<sp/>inner.<ref refid="struct_im_rect_1aad58c13340d320b350a72a037e3f7628" kindref="member">Max</ref>.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref>),<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(inner.<ref refid="struct_im_rect_1af8f3fbf7ec983e03548b88e14ba68aa8" kindref="member">Min</ref>.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref>,<sp/>outer.<ref refid="struct_im_rect_1aad58c13340d320b350a72a037e3f7628" kindref="member">Max</ref>.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref>),<sp/>col,<sp/>rounding,<sp/><ref refid="imgui_8h_1af42aea565fd5eb55fdb4c85c24e3c582a1b5e764680b7f8f4ff4d6b9ff955f7f4" kindref="member">ImDrawFlags_RoundCornersBottomLeft</ref>);</highlight></codeline>
<codeline lineno="4040"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fill_R<sp/>&amp;&amp;<sp/>fill_D)<sp/>draw_list-&gt;<ref refid="struct_im_draw_list_1a6b16ab764160b0251d2e7b3bd08c1ffc" kindref="member">AddRectFilled</ref>(<ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(inner.<ref refid="struct_im_rect_1aad58c13340d320b350a72a037e3f7628" kindref="member">Max</ref>.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref>,<sp/>inner.<ref refid="struct_im_rect_1aad58c13340d320b350a72a037e3f7628" kindref="member">Max</ref>.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref>),<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(outer.<ref refid="struct_im_rect_1aad58c13340d320b350a72a037e3f7628" kindref="member">Max</ref>.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref>,<sp/>outer.<ref refid="struct_im_rect_1aad58c13340d320b350a72a037e3f7628" kindref="member">Max</ref>.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref>),<sp/>col,<sp/>rounding,<sp/><ref refid="imgui_8h_1af42aea565fd5eb55fdb4c85c24e3c582a50c188768e2b0fceab5b7c702bac2af7" kindref="member">ImDrawFlags_RoundCornersBottomRight</ref>);</highlight></codeline>
<codeline lineno="4041"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4042"><highlight class="normal"></highlight></codeline>
<codeline lineno="4043"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helper<sp/>for<sp/>ColorPicker4()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4044"><highlight class="normal"></highlight><highlight class="comment">//<sp/>NB:<sp/>This<sp/>is<sp/>rather<sp/>brittle<sp/>and<sp/>will<sp/>show<sp/>artifact<sp/>when<sp/>rounding<sp/>this<sp/>enabled<sp/>if<sp/>rounded<sp/>corners<sp/>overlap<sp/>multiple<sp/>cells.<sp/>Caller<sp/>currently<sp/>responsible<sp/>for<sp/>avoiding<sp/>that.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4045"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Spent<sp/>a<sp/>non<sp/>reasonable<sp/>amount<sp/>of<sp/>time<sp/>trying<sp/>to<sp/>getting<sp/>this<sp/>right<sp/>for<sp/>ColorButton<sp/>with<sp/>rounding+anti-aliasing+ImGuiColorEditFlags_HalfAlphaPreview<sp/>flag<sp/>+<sp/>various<sp/>grid<sp/>sizes<sp/>and<sp/>offsets,<sp/>and<sp/>eventually<sp/>gave<sp/>up...<sp/>probably<sp/>more<sp/>reasonable<sp/>to<sp/>disable<sp/>rounding<sp/>altogether.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4046"><highlight class="normal"></highlight><highlight class="comment">//<sp/>FIXME:<sp/>uses<sp/>ImGui::GetColorU32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4047"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespace_im_gui_1acb797d49686531bd146b5a7a71897506" kindref="member">ImGui::RenderColorRectWithAlphaCheckerboard</ref>(<ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>*<sp/>ctx,<sp/><ref refid="struct_im_draw_list" kindref="compound">ImDrawList</ref>*<sp/>draw_list,<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>p_min,<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>p_max,<sp/><ref refid="imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36" kindref="member">ImU32</ref><sp/>col,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>grid_step,<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref><sp/>grid_off,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>rounding,<sp/><ref refid="imgui_8h_1af2ef7e1341558a1d39aa244c1257780a" kindref="member">ImDrawFlags</ref><sp/>flags)</highlight></codeline>
<codeline lineno="4048"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4049"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((flags<sp/>&amp;<sp/><ref refid="imgui_8h_1af42aea565fd5eb55fdb4c85c24e3c582a637ceb6728a109dcea4995acb3e3a425" kindref="member">ImDrawFlags_RoundCornersMask_</ref>)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="4050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flags<sp/>=<sp/><ref refid="imgui_8h_1af42aea565fd5eb55fdb4c85c24e3c582ad460d95c125b644f6855d555ebb083fd" kindref="member">ImDrawFlags_RoundCornersDefault_</ref>;</highlight></codeline>
<codeline lineno="4051"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((col<sp/>&amp;<sp/><ref refid="imgui_8h_1a870161cddae56908e81835588fcf35cd" kindref="member">IM_COL32_A_MASK</ref>)<sp/>&gt;&gt;<sp/><ref refid="imgui_8h_1afb678549e2c69bf52a4e3831ed368eb8" kindref="member">IM_COL32_A_SHIFT</ref>)<sp/>&lt;<sp/>0xFF)</highlight></codeline>
<codeline lineno="4052"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36" kindref="member">ImU32</ref><sp/>col_bg1<sp/>=<sp/><ref refid="namespace_im_gui_1ac965e3edb0de20c9f67998ab1abf1478" kindref="member">GetColorU32</ref>(ctx,<sp/><ref refid="imgui_8cpp_1a8443a92b89839183c25f2b6a21599039" kindref="member">ImAlphaBlendColors</ref>(<ref refid="imgui_8h_1a123bd4e23eb51ac9dced93eab78c4456" kindref="member">IM_COL32</ref>(204,<sp/>204,<sp/>204,<sp/>255),<sp/>col));</highlight></codeline>
<codeline lineno="4054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imgui_8h_1a118cff4eeb8d00e7d07ce3d6460eed36" kindref="member">ImU32</ref><sp/>col_bg2<sp/>=<sp/><ref refid="namespace_im_gui_1ac965e3edb0de20c9f67998ab1abf1478" kindref="member">GetColorU32</ref>(ctx,<sp/><ref refid="imgui_8cpp_1a8443a92b89839183c25f2b6a21599039" kindref="member">ImAlphaBlendColors</ref>(<ref refid="imgui_8h_1a123bd4e23eb51ac9dced93eab78c4456" kindref="member">IM_COL32</ref>(128,<sp/>128,<sp/>128,<sp/>255),<sp/>col));</highlight></codeline>
<codeline lineno="4055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>draw_list-&gt;<ref refid="struct_im_draw_list_1a6b16ab764160b0251d2e7b3bd08c1ffc" kindref="member">AddRectFilled</ref>(p_min,<sp/>p_max,<sp/>col_bg1,<sp/>rounding,<sp/>flags);</highlight></codeline>
<codeline lineno="4056"><highlight class="normal"></highlight></codeline>
<codeline lineno="4057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yi<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>p_min.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref><sp/>+<sp/>grid_off.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref>;<sp/>y<sp/>&lt;<sp/>p_max.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref>;<sp/>y<sp/>+=<sp/>grid_step,<sp/>yi++)</highlight></codeline>
<codeline lineno="4059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y1<sp/>=<sp/>ImClamp(y,<sp/>p_min.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref>,<sp/>p_max.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref>),<sp/>y2<sp/>=<sp/>ImMin(y<sp/>+<sp/>grid_step,<sp/>p_max.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="4061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y2<sp/>&lt;=<sp/>y1)</highlight></codeline>
<codeline lineno="4062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>p_min.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref><sp/>+<sp/>grid_off.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref><sp/>+<sp/>(yi<sp/>&amp;<sp/>1)<sp/>*<sp/>grid_step;<sp/>x<sp/>&lt;<sp/>p_max.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref>;<sp/>x<sp/>+=<sp/>grid_step<sp/>*<sp/>2.0f)</highlight></codeline>
<codeline lineno="4064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x1<sp/>=<sp/>ImClamp(x,<sp/>p_min.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref>,<sp/>p_max.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref>),<sp/>x2<sp/>=<sp/>ImMin(x<sp/>+<sp/>grid_step,<sp/>p_max.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="4066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x2<sp/>&lt;=<sp/>x1)</highlight></codeline>
<codeline lineno="4067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imgui_8h_1af2ef7e1341558a1d39aa244c1257780a" kindref="member">ImDrawFlags</ref><sp/>cell_flags<sp/>=<sp/><ref refid="imgui_8h_1af42aea565fd5eb55fdb4c85c24e3c582a3110e31bfaa3ab35cae269eaf24fc546" kindref="member">ImDrawFlags_RoundCornersNone</ref>;</highlight></codeline>
<codeline lineno="4069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y1<sp/>&lt;=<sp/>p_min.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref>)<sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x1<sp/>&lt;=<sp/>p_min.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref>)<sp/>cell_flags<sp/>|=<sp/><ref refid="imgui_8h_1af42aea565fd5eb55fdb4c85c24e3c582a061f928851785c7eff16663e7fcc02a6" kindref="member">ImDrawFlags_RoundCornersTopLeft</ref>;<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x2<sp/>&gt;=<sp/>p_max.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref>)<sp/>cell_flags<sp/>|=<sp/><ref refid="imgui_8h_1af42aea565fd5eb55fdb4c85c24e3c582a2b2f2532f7993f484005da8cbaa83290" kindref="member">ImDrawFlags_RoundCornersTopRight</ref>;<sp/>}</highlight></codeline>
<codeline lineno="4070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y2<sp/>&gt;=<sp/>p_max.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref>)<sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x1<sp/>&lt;=<sp/>p_min.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref>)<sp/>cell_flags<sp/>|=<sp/><ref refid="imgui_8h_1af42aea565fd5eb55fdb4c85c24e3c582a1b5e764680b7f8f4ff4d6b9ff955f7f4" kindref="member">ImDrawFlags_RoundCornersBottomLeft</ref>;<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x2<sp/>&gt;=<sp/>p_max.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref>)<sp/>cell_flags<sp/>|=<sp/><ref refid="imgui_8h_1af42aea565fd5eb55fdb4c85c24e3c582a50c188768e2b0fceab5b7c702bac2af7" kindref="member">ImDrawFlags_RoundCornersBottomRight</ref>;<sp/>}</highlight></codeline>
<codeline lineno="4071"><highlight class="normal"></highlight></codeline>
<codeline lineno="4072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Combine<sp/>flags</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cell_flags<sp/>=<sp/>(flags<sp/>==<sp/><ref refid="imgui_8h_1af42aea565fd5eb55fdb4c85c24e3c582a3110e31bfaa3ab35cae269eaf24fc546" kindref="member">ImDrawFlags_RoundCornersNone</ref><sp/>||<sp/>cell_flags<sp/>==<sp/><ref refid="imgui_8h_1af42aea565fd5eb55fdb4c85c24e3c582a3110e31bfaa3ab35cae269eaf24fc546" kindref="member">ImDrawFlags_RoundCornersNone</ref>)<sp/>?<sp/><ref refid="imgui_8h_1af42aea565fd5eb55fdb4c85c24e3c582a3110e31bfaa3ab35cae269eaf24fc546" kindref="member">ImDrawFlags_RoundCornersNone</ref><sp/>:<sp/>(cell_flags<sp/>&amp;<sp/>flags);</highlight></codeline>
<codeline lineno="4074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>draw_list-&gt;<ref refid="struct_im_draw_list_1a6b16ab764160b0251d2e7b3bd08c1ffc" kindref="member">AddRectFilled</ref>(<ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(x1,<sp/>y1),<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>(x2,<sp/>y2),<sp/>col_bg2,<sp/>rounding,<sp/>cell_flags);</highlight></codeline>
<codeline lineno="4075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4077"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4078"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4079"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>draw_list-&gt;<ref refid="struct_im_draw_list_1a6b16ab764160b0251d2e7b3bd08c1ffc" kindref="member">AddRectFilled</ref>(p_min,<sp/>p_max,<sp/>col,<sp/>rounding,<sp/>flags);</highlight></codeline>
<codeline lineno="4081"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4082"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4083"><highlight class="normal"></highlight></codeline>
<codeline lineno="4084"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4085"><highlight class="normal"></highlight><highlight class="comment">//<sp/>[SECTION]<sp/>Decompression<sp/>code</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4086"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4087"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Compressed<sp/>with<sp/>stb_compress()<sp/>then<sp/>converted<sp/>to<sp/>a<sp/>C<sp/>array<sp/>and<sp/>encoded<sp/>as<sp/>base85.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4088"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Use<sp/>the<sp/>program<sp/>in<sp/>misc/fonts/binary_to_compressed_c.cpp<sp/>to<sp/>create<sp/>the<sp/>array<sp/>from<sp/>a<sp/>TTF<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4089"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>purpose<sp/>of<sp/>encoding<sp/>as<sp/>base85<sp/>instead<sp/>of<sp/>&quot;0x00,0x01,...&quot;<sp/>style<sp/>is<sp/>only<sp/>save<sp/>on<sp/>_source<sp/>code_<sp/>size.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4090"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Decompression<sp/>from<sp/>stb.h<sp/>(public<sp/>domain)<sp/>by<sp/>Sean<sp/>Barrett<sp/>https://github.com/nothings/stb/blob/master/stb.h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4091"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4092"><highlight class="normal"></highlight></codeline>
<codeline lineno="4093"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stb_decompress_length(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*input)</highlight></codeline>
<codeline lineno="4094"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4095"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(input[8]<sp/>&lt;&lt;<sp/>24)<sp/>+<sp/>(input[9]<sp/>&lt;&lt;<sp/>16)<sp/>+<sp/>(input[10]<sp/>&lt;&lt;<sp/>8)<sp/>+<sp/>input[11];</highlight></codeline>
<codeline lineno="4096"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4097"><highlight class="normal"></highlight></codeline>
<codeline lineno="4098"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*stb__barrier_out_e,<sp/>*stb__barrier_out_b;</highlight></codeline>
<codeline lineno="4099"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*stb__barrier_in_b;</highlight></codeline>
<codeline lineno="4100"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*stb__dout;</highlight></codeline>
<codeline lineno="4101"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stb__match(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length)</highlight></codeline>
<codeline lineno="4102"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>INVERSE<sp/>of<sp/>memmove...<sp/>write<sp/>each<sp/>byte<sp/>before<sp/>copying<sp/>the<sp/>next...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4104"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui_8h_1acb09e7dc42e8e3cefb0ecaa197978920" kindref="member">IM_ASSERT</ref>(stb__dout<sp/>+<sp/>length<sp/>&lt;=<sp/>stb__barrier_out_e);</highlight></codeline>
<codeline lineno="4105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stb__dout<sp/>+<sp/>length<sp/>&gt;<sp/>stb__barrier_out_e)<sp/>{<sp/>stb__dout<sp/>+=<sp/>length;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="4106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data<sp/>&lt;<sp/>stb__barrier_out_b)<sp/>{<sp/>stb__dout<sp/>=<sp/>stb__barrier_out_e+1;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="4107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(length--)<sp/>*stb__dout++<sp/>=<sp/>*data++;</highlight></codeline>
<codeline lineno="4108"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4109"><highlight class="normal"></highlight></codeline>
<codeline lineno="4110"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stb__lit(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length)</highlight></codeline>
<codeline lineno="4111"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4112"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui_8h_1acb09e7dc42e8e3cefb0ecaa197978920" kindref="member">IM_ASSERT</ref>(stb__dout<sp/>+<sp/>length<sp/>&lt;=<sp/>stb__barrier_out_e);</highlight></codeline>
<codeline lineno="4113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stb__dout<sp/>+<sp/>length<sp/>&gt;<sp/>stb__barrier_out_e)<sp/>{<sp/>stb__dout<sp/>+=<sp/>length;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="4114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data<sp/>&lt;<sp/>stb__barrier_in_b)<sp/>{<sp/>stb__dout<sp/>=<sp/>stb__barrier_out_e+1;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="4115"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(stb__dout,<sp/>data,<sp/>length);</highlight></codeline>
<codeline lineno="4116"><highlight class="normal"><sp/><sp/><sp/><sp/>stb__dout<sp/>+=<sp/>length;</highlight></codeline>
<codeline lineno="4117"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4118"><highlight class="normal"></highlight></codeline>
<codeline lineno="4119"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>stb__in2(x)<sp/><sp/><sp/>((i[x]<sp/>&lt;&lt;<sp/>8)<sp/>+<sp/>i[(x)+1])</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4120"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>stb__in3(x)<sp/><sp/><sp/>((i[x]<sp/>&lt;&lt;<sp/>16)<sp/>+<sp/>stb__in2((x)+1))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4121"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>stb__in4(x)<sp/><sp/><sp/>((i[x]<sp/>&lt;&lt;<sp/>24)<sp/>+<sp/>stb__in3((x)+1))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4122"><highlight class="normal"></highlight></codeline>
<codeline lineno="4123"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*stb_decompress_token(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*i)</highlight></codeline>
<codeline lineno="4124"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*i<sp/>&gt;=<sp/>0x20)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>use<sp/>fewer<sp/>if&apos;s<sp/>for<sp/>cases<sp/>that<sp/>expand<sp/>small</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*i<sp/>&gt;=<sp/>0x80)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>stb__match(stb__dout-i[1]-1,<sp/>i[0]<sp/>-<sp/>0x80<sp/>+<sp/>1),<sp/>i<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="4127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*i<sp/>&gt;=<sp/>0x40)<sp/><sp/>stb__match(stb__dout-(<ref refid="imgui__draw_8cpp_1a8abf98f5e58a4b3dbbdf35bb1d5ee872" kindref="member">stb__in2</ref>(0)<sp/>-<sp/>0x4000<sp/>+<sp/>1),<sp/>i[2]+1),<sp/>i<sp/>+=<sp/>3;</highlight></codeline>
<codeline lineno="4128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>*i<sp/>&gt;=<sp/>0x20<sp/>*/</highlight><highlight class="normal"><sp/>stb__lit(i+1,<sp/>i[0]<sp/>-<sp/>0x20<sp/>+<sp/>1),<sp/>i<sp/>+=<sp/>1<sp/>+<sp/>(i[0]<sp/>-<sp/>0x20<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="4129"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">//<sp/>more<sp/>ifs<sp/>for<sp/>cases<sp/>that<sp/>expand<sp/>large,<sp/>since<sp/>overhead<sp/>is<sp/>amortized</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*i<sp/>&gt;=<sp/>0x18)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>stb__match(stb__dout-(<ref refid="imgui__draw_8cpp_1acdc23c4b28788003d2841185775661ff" kindref="member">stb__in3</ref>(0)<sp/>-<sp/>0x180000<sp/>+<sp/>1),<sp/>i[3]+1),<sp/>i<sp/>+=<sp/>4;</highlight></codeline>
<codeline lineno="4131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*i<sp/>&gt;=<sp/>0x10)<sp/><sp/>stb__match(stb__dout-(<ref refid="imgui__draw_8cpp_1acdc23c4b28788003d2841185775661ff" kindref="member">stb__in3</ref>(0)<sp/>-<sp/>0x100000<sp/>+<sp/>1),<sp/><ref refid="imgui__draw_8cpp_1a8abf98f5e58a4b3dbbdf35bb1d5ee872" kindref="member">stb__in2</ref>(3)+1),<sp/>i<sp/>+=<sp/>5;</highlight></codeline>
<codeline lineno="4132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*i<sp/>&gt;=<sp/>0x08)<sp/><sp/>stb__lit(i+2,<sp/><ref refid="imgui__draw_8cpp_1a8abf98f5e58a4b3dbbdf35bb1d5ee872" kindref="member">stb__in2</ref>(0)<sp/>-<sp/>0x0800<sp/>+<sp/>1),<sp/>i<sp/>+=<sp/>2<sp/>+<sp/>(<ref refid="imgui__draw_8cpp_1a8abf98f5e58a4b3dbbdf35bb1d5ee872" kindref="member">stb__in2</ref>(0)<sp/>-<sp/>0x0800<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="4133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*i<sp/>==<sp/>0x07)<sp/><sp/>stb__lit(i+3,<sp/><ref refid="imgui__draw_8cpp_1a8abf98f5e58a4b3dbbdf35bb1d5ee872" kindref="member">stb__in2</ref>(1)<sp/>+<sp/>1),<sp/>i<sp/>+=<sp/>3<sp/>+<sp/>(<ref refid="imgui__draw_8cpp_1a8abf98f5e58a4b3dbbdf35bb1d5ee872" kindref="member">stb__in2</ref>(1)<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="4134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*i<sp/>==<sp/>0x06)<sp/><sp/>stb__match(stb__dout-(<ref refid="imgui__draw_8cpp_1acdc23c4b28788003d2841185775661ff" kindref="member">stb__in3</ref>(1)+1),<sp/>i[4]+1),<sp/>i<sp/>+=<sp/>5;</highlight></codeline>
<codeline lineno="4135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*i<sp/>==<sp/>0x04)<sp/><sp/>stb__match(stb__dout-(<ref refid="imgui__draw_8cpp_1acdc23c4b28788003d2841185775661ff" kindref="member">stb__in3</ref>(1)+1),<sp/><ref refid="imgui__draw_8cpp_1a8abf98f5e58a4b3dbbdf35bb1d5ee872" kindref="member">stb__in2</ref>(4)+1),<sp/>i<sp/>+=<sp/>6;</highlight></codeline>
<codeline lineno="4136"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="4138"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4139"><highlight class="normal"></highlight></codeline>
<codeline lineno="4140"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stb_adler32(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>adler32,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buffer,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>buflen)</highlight></codeline>
<codeline lineno="4141"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>ADLER_MOD<sp/>=<sp/>65521;</highlight></codeline>
<codeline lineno="4143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>s1<sp/>=<sp/>adler32<sp/>&amp;<sp/>0xffff,<sp/>s2<sp/>=<sp/>adler32<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="4144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>blocklen<sp/>=<sp/>buflen<sp/>%<sp/>5552;</highlight></codeline>
<codeline lineno="4145"><highlight class="normal"></highlight></codeline>
<codeline lineno="4146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="4147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(buflen)<sp/>{</highlight></codeline>
<codeline lineno="4148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>+<sp/>7<sp/>&lt;<sp/>blocklen;<sp/>i<sp/>+=<sp/>8)<sp/>{</highlight></codeline>
<codeline lineno="4149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s1<sp/>+=<sp/>buffer[0],<sp/>s2<sp/>+=<sp/>s1;</highlight></codeline>
<codeline lineno="4150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s1<sp/>+=<sp/>buffer[1],<sp/>s2<sp/>+=<sp/>s1;</highlight></codeline>
<codeline lineno="4151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s1<sp/>+=<sp/>buffer[2],<sp/>s2<sp/>+=<sp/>s1;</highlight></codeline>
<codeline lineno="4152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s1<sp/>+=<sp/>buffer[3],<sp/>s2<sp/>+=<sp/>s1;</highlight></codeline>
<codeline lineno="4153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s1<sp/>+=<sp/>buffer[4],<sp/>s2<sp/>+=<sp/>s1;</highlight></codeline>
<codeline lineno="4154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s1<sp/>+=<sp/>buffer[5],<sp/>s2<sp/>+=<sp/>s1;</highlight></codeline>
<codeline lineno="4155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s1<sp/>+=<sp/>buffer[6],<sp/>s2<sp/>+=<sp/>s1;</highlight></codeline>
<codeline lineno="4156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s1<sp/>+=<sp/>buffer[7],<sp/>s2<sp/>+=<sp/>s1;</highlight></codeline>
<codeline lineno="4157"><highlight class="normal"></highlight></codeline>
<codeline lineno="4158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer<sp/>+=<sp/>8;</highlight></codeline>
<codeline lineno="4159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4160"><highlight class="normal"></highlight></codeline>
<codeline lineno="4161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>i<sp/>&lt;<sp/>blocklen;<sp/>++i)</highlight></codeline>
<codeline lineno="4162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s1<sp/>+=<sp/>*buffer++,<sp/>s2<sp/>+=<sp/>s1;</highlight></codeline>
<codeline lineno="4163"><highlight class="normal"></highlight></codeline>
<codeline lineno="4164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s1<sp/>%=<sp/>ADLER_MOD,<sp/>s2<sp/>%=<sp/>ADLER_MOD;</highlight></codeline>
<codeline lineno="4165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buflen<sp/>-=<sp/>blocklen;</highlight></codeline>
<codeline lineno="4166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blocklen<sp/>=<sp/>5552;</highlight></codeline>
<codeline lineno="4167"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(s2<sp/>&lt;&lt;<sp/>16)<sp/>+<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)s1;</highlight></codeline>
<codeline lineno="4169"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4170"><highlight class="normal"></highlight></codeline>
<codeline lineno="4171"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stb_decompress(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*output,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*i,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*length*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="4172"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="imgui__draw_8cpp_1a26702caa0fd7846cb92e8ba4d80446c3" kindref="member">stb__in4</ref>(0)<sp/>!=<sp/>0x57bC0000)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="imgui__draw_8cpp_1a26702caa0fd7846cb92e8ba4d80446c3" kindref="member">stb__in4</ref>(4)<sp/>!=<sp/>0)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/></highlight><highlight class="comment">//<sp/>error!<sp/>stream<sp/>is<sp/>&gt;<sp/>4GB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>olen<sp/>=<sp/>stb_decompress_length(i);</highlight></codeline>
<codeline lineno="4176"><highlight class="normal"><sp/><sp/><sp/><sp/>stb__barrier_in_b<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="4177"><highlight class="normal"><sp/><sp/><sp/><sp/>stb__barrier_out_e<sp/>=<sp/>output<sp/>+<sp/>olen;</highlight></codeline>
<codeline lineno="4178"><highlight class="normal"><sp/><sp/><sp/><sp/>stb__barrier_out_b<sp/>=<sp/>output;</highlight></codeline>
<codeline lineno="4179"><highlight class="normal"><sp/><sp/><sp/><sp/>i<sp/>+=<sp/>16;</highlight></codeline>
<codeline lineno="4180"><highlight class="normal"></highlight></codeline>
<codeline lineno="4181"><highlight class="normal"><sp/><sp/><sp/><sp/>stb__dout<sp/>=<sp/>output;</highlight></codeline>
<codeline lineno="4182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;;)<sp/>{</highlight></codeline>
<codeline lineno="4183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*old_i<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="4184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>stb_decompress_token(i);</highlight></codeline>
<codeline lineno="4185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>old_i)<sp/>{</highlight></codeline>
<codeline lineno="4186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*i<sp/>==<sp/>0x05<sp/>&amp;&amp;<sp/>i[1]<sp/>==<sp/>0xfa)<sp/>{</highlight></codeline>
<codeline lineno="4187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imgui_8h_1acb09e7dc42e8e3cefb0ecaa197978920" kindref="member">IM_ASSERT</ref>(stb__dout<sp/>==<sp/>output<sp/>+<sp/>olen);</highlight></codeline>
<codeline lineno="4188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stb__dout<sp/>!=<sp/>output<sp/>+<sp/>olen)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stb_adler32(1,<sp/>output,<sp/>olen)<sp/>!=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/><ref refid="imgui__draw_8cpp_1a26702caa0fd7846cb92e8ba4d80446c3" kindref="member">stb__in4</ref>(2))</highlight></codeline>
<codeline lineno="4190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>olen;</highlight></codeline>
<codeline lineno="4192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imgui_8h_1acb09e7dc42e8e3cefb0ecaa197978920" kindref="member">IM_ASSERT</ref>(0);<sp/></highlight><highlight class="comment">/*<sp/>NOTREACHED<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imgui_8h_1acb09e7dc42e8e3cefb0ecaa197978920" kindref="member">IM_ASSERT</ref>(stb__dout<sp/>&lt;=<sp/>output<sp/>+<sp/>olen);</highlight></codeline>
<codeline lineno="4198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stb__dout<sp/>&gt;<sp/>output<sp/>+<sp/>olen)</highlight></codeline>
<codeline lineno="4199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4200"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4201"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4202"><highlight class="normal"></highlight></codeline>
<codeline lineno="4203"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4204"><highlight class="normal"></highlight><highlight class="comment">//<sp/>[SECTION]<sp/>Default<sp/>font<sp/>data<sp/>(ProggyClean.ttf)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4205"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4206"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ProggyClean.ttf</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4207"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2004,<sp/>2005<sp/>Tristan<sp/>Grimmer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4208"><highlight class="normal"></highlight><highlight class="comment">//<sp/>MIT<sp/>license<sp/>(see<sp/>License.txt<sp/>in<sp/>http://www.upperbounds.net/download/ProggyClean.ttf.zip)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4209"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Download<sp/>and<sp/>more<sp/>information<sp/>at<sp/>http://upperbounds.net</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4210"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4211"><highlight class="normal"></highlight><highlight class="comment">//<sp/>File:<sp/>&apos;ProggyClean.ttf&apos;<sp/>(41208<sp/>bytes)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4212"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Exported<sp/>using<sp/>misc/fonts/binary_to_compressed_c.cpp<sp/>(with<sp/>compression<sp/>+<sp/>base85<sp/>string<sp/>encoding).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4213"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>purpose<sp/>of<sp/>encoding<sp/>as<sp/>base85<sp/>instead<sp/>of<sp/>&quot;0x00,0x01,...&quot;<sp/>style<sp/>is<sp/>only<sp/>save<sp/>on<sp/>_source<sp/>code_<sp/>size.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4214"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4215"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>proggy_clean_ttf_compressed_data_base85[11980<sp/>+<sp/>1]<sp/>=</highlight></codeline>
<codeline lineno="4216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;7])#######hV0qs&apos;/###[),##/l:$#Q6&gt;##5[n42&gt;c-TH`-&gt;&gt;#/e&gt;11NNV=Bv(*:.F?uu#(gRU.o0XGH`$vhLG1hxt9?W`#,5LsCp#-i&gt;.r$&lt;$6pD&gt;Lb&apos;;9Crc6tgXmKVeU2cD4Eo3R/&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;2*&gt;]b(MC;$jPfY.;h^`IWM9&lt;Lh2TlS+f-s$o6Q&lt;BWH`YiU.xfLq$N;$0iR/GX:U(jcW2p/W*q?-qmnUCI;jHSAiFWM.R*kU@C=GH?a9wp8f$e.-4^Qg1)Q-GL(lf(r/7GrRgwV%MS=C#&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;`8ND&gt;Qo#t&apos;X#(v#Y9w0#1D$CIf;W&apos;#pWUPXOuxXuU(H9M(1&lt;q-UE31#^-V&apos;8IRUo7Qf./L&gt;=Ke$$&apos;5F%)]0^#0X@U.a&lt;r:QLtFsLcL6##lOj)#.Y5&lt;-R&amp;KgLwqJfLgN&amp;;Q?gI^#DY2uL&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;i@^rMl9t=cWq6##weg&gt;$FBjVQTSDgEKnIS7EM9&gt;ZY9w0#L;&gt;&gt;#Mx&amp;4Mvt//L[MkA#W@lK.N&apos;[0#7RL_&amp;#w+F%HtG9M#XL`N&amp;.,GM4Pg;-&lt;nLENhvx&gt;-VsM.M0rJfLH2eTM`*oJMHRC`N&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;kfimM2J,W-jXS:)r0wK#@Fge$U&gt;`w&apos;N7G#$#fB#$E^$#:9:hk+eOe--6x)F7*E%?76%^GMHePW-Z5l&apos;&amp;GiF#$956:rS?dA#fiK:)Yr+`&amp;#0j@&apos;DbG&amp;#^$PG.Ll+DNa&lt;XCMKEV*N)LN/N&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;*b=%Q6pia-Xg8I$&lt;MR&amp;,VdJe$&lt;(7G;Ckl&apos;&amp;hF;;$&lt;_=X(b.RS%%)###MPBuuE1V:v&amp;cX&amp;#2m#(&amp;cV]`k9OhLMbn%s$G2,B$BfD3X*sp5#l,$R#]x_X1xKX%b5U*[r5iMfUo9U`N99hG)&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;tm+/Us9pG)XPu`&lt;0s-)WTt(gCRxIg(%6sfh=ktMKn3j)&lt;6&lt;b5Sk_/0(^]AaN#(p/L&gt;&amp;VZ&gt;1i%h1S9u5o@YaaW$e+b&lt;TWFn/Z:Oh(Cx2$lNEoN^e)#CFY@@I;BOQ*sRwZtZxRcU7uW6CX&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;ow0i(?$Q[cjOd[P4d)]&gt;ROPOpxTO7Stwi1::iB1q)C_=dV26J;2,]7op$]uQr@_V7$q^%lQwtuHY]=DX,n3L#0PHDO4f9&gt;dC@O&gt;HBuKPpP*E,N+b3L#lpR/MrTEH.IAQk.a&gt;D[.e;mc.&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;x]Ip.PH^&apos;/aqUO/$1WxLoW0[iLA&lt;QT;5HKD+@qQ&apos;NQ(3_PLhE48R.qAPSwQ0/WK?Z,[x?-J;jQTWA0X@KJ(_Y8N-:/M74:/-ZpKrUss?d#dZq]DAbkU*JqkL+nwX@@47`5&gt;w=4h(9.`G&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;CRUxHPeR`5Mjol(dUWxZa(&gt;STrPkrJiWx`5U7F#.g*jrohGg`cg:lSTvEY/EV_7H4Q9[Z%cnv;JQYZ5q.l7Zeas:HOIZOB?G&lt;Nald$qs]@]L&lt;J7bR*&gt;gv:[7MI2k).&apos;2($5FNP&amp;EQ(,)&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;U]W]+fh18.vsai00);D3@4ku5P?DP8aJt+;qUM]=+b&apos;8@;mViBKx0DE[-auGl8:PJ&amp;Dj+M6OC]O^((##]`0i)drT;-7X`=-H3[igUnPG-NZlo.#k@h#=Ork$m&gt;a&gt;$-?Tm$UV(?#P6YY#&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&apos;/###xe7q.73rI3*pP/$1&gt;s9)W,JrM7SN]&apos;/4C#v$U`0#V.[0&gt;xQsH$fEmPMgY2u7Kh(G%siIfLSoS+MK2eTM$=5,M8p`A.;_R%#u[K#$x4AG8.kK/HSB==-&apos;Ie/QTtG?-.*^N-4B/ZM&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;_3YlQC7(p7q)&amp;](`6_c)$/*JL(L-^(]$wIM`dPtOdGA,U3:w2M-0&lt;q-]L_?^)1vw&apos;.,MRsqVr.L;aN&amp;#/EgJ)PBc[-f&gt;+WomX2u7lqM2iEumMTcsF?-aT=Z-97UEnXglEn1K-bnEO`gu&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Ft(c%=;Am_Qs@jLooI&amp;NX;]0#j4#F14;gl8-GQpgwhrq8&apos;=l_f-b49&apos;UOqkLu7-##oDY2L(te+Mch&amp;gLYtJ,MEtJfLh&apos;x&apos;M=$CS-ZZ%P]8bZ&gt;#S?YY#%Q&amp;q&apos;3^Fw&amp;?D)UDNrocM3A76/&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;/oL?#h7gl85[qW/NDOk%16ij;+:1a&apos;iNIdb-ou8.P*w,v5#EI$TWS&gt;Pot-R*H&apos;-SEpA:g)f+O$%%`kA#G=8RMmG1&amp;O`&gt;to8bC]T&amp;$,n.LoO&gt;29sp3dt-52U%VM#q7&apos;DHpg+#Z9%H[K&lt;L&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%a2E-grWVM3@2=-k22tL]4$##6We&apos;8UJCKE[d_=%wI;&apos;6X-GsLX4j^SgJ$##R*w,vP3wK#iiW&amp;#*h^D&amp;R?jp7+/u&amp;#(AP##XU8c$fSYW-J95_-Dp[g9wcO&amp;#M-h1OcJlc-*vpw0xUX&amp;#&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;OQFKNX@QI&apos;IoPp7nb,QU//MQ&amp;ZDkKP)X&lt;WSVL(68uVl&amp;#c&apos;[0#(s1X&amp;xm$Y%B7*K:eDA323j998GXbA#pwMs-jgD$9QISB-A_(aN4xoFM^@C58D0+Q+q3n0#3U1InDjF682-SjMXJK)(&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;h$hxua_K]ul92%&apos;BOU&amp;#BRRh-slg8KDlr:%L71Ka:.A;%YULjDPmL&lt;LYs8i#XwJOYaKPKc1h:&apos;9Ke,g)b),78=I39B;xiY$bgGw-&amp;.Zi9InXDuYa%G*f2Bq7mn9^#p1vv%#(Wi-;/Z5h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;o;#2:;%d&amp;#x9v68C5g?ntX0X)pT`;%pB3q7mgGN)3%(P8nTd5L7GeA-GL@+%J3u2:(Yf&gt;et`e;)f#Km8&amp;+DC$I46&gt;#Kr]]u-[=99tts1.qb#q72g1WJO81q+eN&apos;03&apos;eM&gt;&amp;1XxY-caEnO&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;j%2n8)),?ILR5^.Ibn&lt;-X-Mq7[a82Lq:F&amp;#ce+S9wsCK*x`569E8ew&apos;He]h:sI[2LM$[guka3ZRd6:t%IG:;$%YiJ:Nq=?eAw;/:nnDq0(CYcMpG)qLN4$##&amp;J&lt;j$UpK&lt;Q4a1]MupW^-&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;sj_$%[HK%&apos;F####QRZJ::Y3EGl4&apos;@%FkiAOg#p[##O`gukTfBHagL&lt;LHw%q&amp;OV0##F=6/:chIm0@eCP8X]:kFI%hl8hgO@RcBhS-@Qb$%+m=hPDLg*%K8ln(wcf3/&apos;DW-$.lR?n[nCH-&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;eXOONTJlh:.RYF%3&apos;p6sq:UIMA945&amp;^HFS87@$EP2iG&lt;-lCO$%c`uKGD3rC$x0BL8aFn--`ke%#HMP&apos;vh1/R&amp;O_J9&apos;um,.&lt;tx[@%wsJk&amp;bUT2`0uMv7gg#qp/ij.L56&apos;hl;.s5CUrxjO&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;M7-##.l+Au&apos;A&amp;O:-T72L]P`&amp;=;ctp&apos;XScX*rU.&gt;-XTt,%OVU4)S1+R-#dg0/Nn?Ku1^0f$B*P:Rowwm-`0PKjYDDM&apos;3]d39VZHEl4,.j&apos;]Pk-M.h^&amp;:0FACm$maq-&amp;sgw0t7/6(^xtk%&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;LuH88Fj-ekm&gt;GA#_&gt;568x6(OFRl-IZp`&amp;b,_P&apos;$M&lt;Jnq79VsJW/mWS*PUiq76;]/NM_&gt;hLbxfc$mj`,O;&amp;%W2m`Zh:/)Uetw:aJ%]K9h:TcF]u_-Sj9,VK3M.*&apos;&amp;0D[Ca]J9gp8,kAW]&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%(?A%R$f&lt;-&gt;Zts&apos;^kn=-^@c4%-pY6qI%J%1IGxfLU9CP8cbPlXv);C=b),&lt;2mOvP8up,UVf3839acAWAW-W?#ao/^#%KYo8fRULNd2.&gt;%m]UK:n%r$&apos;sw]J;5pAoO_#2mO3n,&apos;=H5(et&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Hg*`+RLgv&gt;=4U8guD$I%D:W&gt;-r5V*%j*W:Kvej.Lp$&lt;M-SGZ&apos;:+Q_k+uvOSLiEo(&lt;aD/K&lt;CCc`&apos;Lx&gt;&apos;?;++O&apos;&gt;()jLR-^u68PHm8ZFWe+ej8h:9r6L*0//c&amp;iH&amp;R8pRbA#Kjm%upV1g:&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;a_#Ur7FuA#(tRh#.Y5K+@?3&lt;-8m0$PEn;J:rh6?I6uG&lt;-`wMU&apos;ircp0LaE_OtlMb&amp;1#6T.#FDKu#1Lw%u%+GM+X&apos;e?YLfjM[VO0MbuFp7;&gt;Q&amp;#WIo)0@F%q7c#4XAXN-U&amp;VB&lt;HFF*qL(&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;$/V,;(kXZejWO`&lt;[5?\?ewY(*9=%wDc;,u&lt;&apos;9t3W-(H1th3+G]ucQ]kLs7df($/*JL]@*t7Bu_G3_7mp7&lt;iaQjO@.kLg;x3B0lqp7Hf,^Ze7-##@/c58Mo(3;knp0%)A7?-W+eI&apos;o8)b&lt;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;nKnw&apos;Ho8C=Y&gt;pqB&gt;0ie&amp;jhZ[?iLR@@_AvA-iQC(=ksRZRVp7`.=+NpBC%rh&amp;3]R:8XDmE5^V8O(x&lt;&lt;aG/1N$#FX$0V5Y6x&apos;aErI3I$7x%E`v&lt;-BY,)%-?Psf*l?%C3.mM(=/M0:JxG&apos;?&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;7WhH%o&apos;a&lt;-80g0NBxoO(GH&lt;dM]n.+%q@jH?f.UsJ2Ggs&amp;4&lt;-e47&amp;Kl+f//9@`b+?.TeN_&amp;B8Ss?v;^Trk;f#YvJkl&amp;w$]&gt;-+k?&apos;(&lt;S:68tq*WoDfZu&apos;;mM?8X[ma8W%*`-=;D.(nc7/;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;)g:T1=^J$&amp;BRV(-lTmNB6xqB[@0*o.erM*&lt;SWF]u2=st-*(6v&gt;^](H.aREZSi,#1:[IXaZFOm&lt;-ui#qUq2$##Ri;u75OK#(RtaW-K-F`S+cF]uN`-KMQ%rP/Xri.LRcB##=YL3BgM/3M&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;D?@f&amp;1&apos;BW-)Ju&lt;L25gl8uhVm1hL$##*8###&apos;A3/LkKW+(^rWX?5W_8g)a(m&amp;K8P&gt;#bmmWCMkk&amp;#TR`C,5d&gt;g)F;t,4:@_l8G/5h4vUd%&amp;%950:VXD&apos;QdWoY-F$BtUwmfe$YqL&apos;8(PWX(&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;P?^@Po3$##`MSs?DWBZ/S&gt;+4%&gt;fX,VWv/w&apos;KD`LP5IbH;rTV&gt;n3cEK8U#bX]l-/V+^lj3;vlMb&amp;[5YQ8#pekX9JP3XUC72L,,?+Ni&amp;co7ApnO*5NK,((W-i:$,kp&apos;UDAO(G0Sq7MVjJs&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;bIu)&apos;Z,*[&gt;br5fX^:FPAWr-m2KgL&lt;LUN098kTF&amp;#lvo58=/vjDo;.;)Ka*hLR#/k=rKbxuV`&gt;Q_nN6&apos;8uTG&amp;#1T5g)uLv:873UpTLgH+#FgpH&apos;_o1780Ph8KmxQJ8#H72L4@768@Tm&amp;Q&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;h4CB/5OvmA&amp;,Q&amp;QbUoi$a_%3M01H)4x7I^&amp;KQVgtFnV+;[Pc&gt;[m4k//,]1?#`VY[Jr*3&amp;&amp;slRfLiVZJ:]?=K3Sw=[$=uRB?3xk48@aeg&lt;Z&apos;&lt;$#4H)6,&gt;e0jT6&apos;N#(q%.O=?2S]u*(m&lt;-&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;V8J&apos;(1)G][68hW$5&apos;q[GC&amp;5j`TE?m&apos;esFGNRM)j,ffZ?-qx8;-&gt;g4t*:CIP/[Qap7/9&apos;#(1sao7w-.qNUdkJ)tCF&amp;#B^;xGvn2r9FEPFFFcL@.iFNkTve$m%#QvQS8U@)2Z+3K:AKM5i&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;sZ88+dKQ)W6&gt;J%CL&lt;KE&gt;`.d*(B`-n8D9oK&lt;Up]c$X$(,)M8Zt7/[rdkqTgl-0cuGMv&apos;?&gt;-XV1q[&apos;-5k&apos;cAZ69e;D_?$ZPP&amp;s^+7])$*$#@QYi9,5P&amp;#9r+$%CE=68&gt;K8r0=dSC%%(@p7&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;.m7jilQ02&apos;0-VWAg&lt;a/&apos;&apos;3u.=4L$Y)6k/K:_[3=&amp;jvL&lt;L0C/2&apos;v:^;-DIBW,B4E68:kZ;%?8(Q8BH=kO65BW?xSG&amp;#@uU,DS*,?.+(o(#1vCS8#CHF&gt;TlGW&apos;b)Tq7VT9q^*^$$.:&amp;N@@&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;$&amp;)WHtPm*5_rO0&amp;e%K&amp;#-30j(E4#&apos;Zb.o/(Tpm$&gt;K&apos;f@[PvFl,hfINTNU6u&apos;0pao7%XUp9]5.&gt;%h`8_=VYbxuel.NTSsJfLacFu3B&apos;lQSu/m6-Oqem8T+oE--$0a/k]uj9EwsG&gt;%veR*&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;hv^BFpQj:K&apos;#SJ,sB-&apos;#](j.Lg92rTw-*n%@/;39rrJF,l#qV%OrtBeC6/,;qB3ebNW[?,Hqj2L.1NP&amp;GjUR=1D8QaS3Up&amp;@*9wP?+lo7b?@%&apos;k4`p0Z$22%K3+iCZj?XJN4Nm&amp;+YF]u&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;@-W$U%VEQ/,,&gt;&gt;#)D&lt;h#`)h0:&lt;Q6909ua+&amp;VU%n2:cG3FJ-%@Bj-DgLr`Hw&amp;HAKjKjseK&lt;/xKT*)B,N9X3]krc12t&apos;pgTV(Lv-tL[xg_%=M_q7a^x?7Ubd&gt;#%8cY#YZ?=,`Wdxu/ae&amp;#&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;w6)R89tI#6@s&apos;(6Bf7a&amp;?S=^ZI_kS&amp;ai`&amp;=tE72L_D,;^R)7[$s&lt;Eh#c&amp;)q.MXI%#v9ROa5FZO%sF7q7Nwb&amp;#ptUJ:aqJe$Sl68%.D###EC&gt;&lt;?-aF&amp;#RNQv&gt;o8lKN%5/$(vdfq7+ebA#&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;u1p]ovUKW&amp;Y%q]&apos;&gt;$1@-[xfn$7ZTp7mM,G,Ko7a&amp;Gu%G[RMxJs[0MM%wci.LFDK)(&lt;c`Q8N)jEIF*+?P2a8g%)$q]o2aH8C&amp;&lt;SibC/q,(e:v;-b#6[$NtDZ84Je2KNvB#$P5?tQ3nt(0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;d=j.LQf./Ll33+(;q3L-w=8dX$#WF&amp;uIJ@-bfI&gt;%:_i2B5CsR8&amp;9Z&amp;#=mPEnm0f`&lt;&amp;c)QL5uJ#%u%lJj+D-r;BoF&amp;#4DoS97h5g)E#o:&amp;S4weDF,9^Hoe`h*L+_a*NrLW-1pG_&amp;2UdB8&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;6e%B/:=&gt;)N4xeW.*wft-;$&apos;58-ESqr&lt;b?UI(_%@[P46&gt;#U`&apos;6AQ]m&amp;6/`Z&gt;#S?YY#Vc;r7U2&amp;326d=w&amp;H####?TZ`*4?&amp;.MK?LP8Vxg&gt;$[QXc%QJv92.(Db*B)gb*BM9dM*hJMAo*c&amp;#&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;b0v=Pjer]$gG&amp;JXDf-&gt;&apos;StvU7505l9$AFvgYRI^&amp;&lt;^b68?j#q9QX4SM&apos;RO#&amp;sL1IM.rJfLUAj221]d##DW=m83u5;&apos;bYx,*Sl0hL(W;;$doB&amp;O/TQ:(Z^xBdLjL&lt;Lni;&apos;&apos;X.`$#8+1GD&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;:k$YUWsbn8ogh6rxZ2Z9]%nd+&gt;V#*8U_72Lh+2Q8Cj0i:6hp&amp;$C/:p(HK&gt;T8Y[gHQ4`4)&apos;$Ab(Nof%V&apos;8hL&amp;#&lt;NEdtg(n&apos;=S1A(Q1/I&amp;4([%dM`,Iu&apos;1:_hL&gt;SfD07&amp;6D&lt;fp8dHM7/g+&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;tlPN9J*rKaPct&amp;?&apos;uBCem^jn%9_K)&lt;,C5K3s=5g&amp;GmJb*[SYq7K;TRLGCsM-$$;S%:Y@r7AK0pprpL&lt;Lrh,q7e/%KWK:50I^+m&apos;vi`3?%Zp+&lt;-d+$L-Sv:@.o19n$s0&amp;39;kn;S%BSq*&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;$3WoJSCLweV[aZ&apos;MQIjO&lt;7;X-X;&amp;+dMLvu#^UsGEC9WEc[X(wI7#2.(F0jV*eZf&lt;-Qv3J-c+J5AlrB#$p(H68LvEA&apos;q3n0#m,[`*8Ft)FcYgEud]CWfm68,(aLA$@EFTgLXoBq/UPlp7&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;:d[/;r_ix=:TF`S5H-b&lt;LI&amp;HY(K=h#)]Lk$K14lVfm:x$H&lt;3^Ql&lt;M`$OhapBnkup&apos;D#L$Pb_`N*g]2e;X/Dtg,bsj&amp;K#2[-:iYr&apos;_wgH)NUIR8a1n#S?Yej&apos;h8^58UbZd+^FKD*T@;6A&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;7aQC[K8d-(v6GI$x:T&lt;&amp;&apos;Gp5Uf&gt;@M.*J:;$-rv29&apos;M]8qMv-tLp,&apos;886iaC=Hb*YJoKJ,(j%K=H`K.v9HggqBIiZu&apos;QvBT.#=)0ukruV&amp;.)3=(^1`o*Pj4&lt;-&lt;aN((^7(&apos;#Z0wK#5GX@7&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;u][`*S^43933A4rl][`*O4CgLEl]v$1Q3AeF37dbXk,.)vj#x&apos;d`;qgbQR%FW,2(?LO=s%Sc68%NP&apos;##Aotl8x=BE#j1UD([3$M(]UI2LX3RpKN@;/#f&apos;f/&amp;_mt&amp;F)XdF&lt;9t4)Qa.*kT&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;LwQ&apos;(TTB9.xH&apos;&gt;#MJ+gLq9-##@HuZPN0]u:h7.T..G:;$/Usj(T7`Q8tT72LnYl&lt;-qx8;-HV7Q-&amp;Xdx%1a,hC=0u+HlsV&gt;nuIQL-5&lt;N?)NBS)QN*_I,?&amp;)2&apos;IM%L3I)X((e/dl2&amp;8&apos;&lt;M&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;:^#M*Q+[T.Xri.LYS3v%fF`68h;b-X[/En&apos;CR.q7E)p&apos;/kle2HM,u;^%OKC-N+Ll%F9CF&lt;Nf&apos;^#t2L,;27W:0O@6##U6W7:$rJfLWHj$#)woqBefIZ.PK&lt;b*t7ed;p*_m;4ExK#h@&amp;]&gt;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;_&gt;@kXQtMacfD.m-VAb8;IReM3$wf0&apos;&apos;hra*so568&apos;Ip&amp;vRs849&apos;MRYSp%:t:h5qSgwpEr$B&gt;Q,;s(C#$)`svQuF$##-D,##,g68@2[T;.XSdN9Qe)rpt._K-#5wF)sP&apos;##p#C0c%-Gb%&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;hd+&lt;-j&apos;Ai*x&amp;&amp;HMkT]C&apos;OSl##5RG[JXaHN;d&apos;uA#x._U;.`PU@(Z3dt4r152@:v,&apos;R.Sj&apos;w#0&lt;-;kPI)FfJ&amp;#AYJ&amp;#//)&gt;-k=m=*XnK$&gt;=)72L]0I%&gt;.G690a:$##&lt;,);?;72#?x9+d;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;^V&apos;9;jY@;)br#q^YQpx:X#Te$Z^&apos;=-=bGhLf:D6&amp;bNwZ9-ZD#n^9HhLMr5G;&apos;]d&amp;6&apos;wYmTFmL&lt;LD)F^%[tC&apos;8;+9E#C$g%#5Y&gt;q9wI&gt;P(9mI[&gt;kC-ekLC/R&amp;CH+s&apos;B;K-M6$EB%is00:&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;+A4[7xks.LrNk0&amp;E)wILYF@2L&apos;0Nb$+pv&lt;(2.768/FrY&amp;h$^3i&amp;@+G%JT&apos;&lt;-,v`3;_)I9M^AE]CN?Cl2AZg+%4iTpT3&lt;n-&amp;%H%b&lt;FDj2M&lt;hH=&amp;Eh&lt;2Len$b*aTX=-8QxN)k11IM1c^j%&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;9s&lt;L&lt;NFSo)B?+&lt;-(GxsF,^-Eh@$4dXhN$+#rxK8&apos;je&apos;D7k`e;)2pYwPA&apos;_p9&amp;@^18ml1^[@g4t*[JOa*[=Qp7(qJ_oOL^(&apos;7fB&amp;Hq-:sf,sNj8xq^&gt;$U4O]GKx&apos;m9)b@p7YsvK3w^YR-&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;CdQ*:Ir&lt;($u&amp;)#(&amp;?L9Rg3H)4fiEp^iI9O8KnTj,]H?D*r7&apos;M;PwZ9K0E^k&amp;-cpI;.p/6_vwoFMV&lt;-&gt;#%Xi.LxVnrU(4&amp;8/P+:hLSKj$#U%]49t&apos;I:rgMi&apos;FL@a:0Y-uA[39&apos;,(vbma*&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;hU%&lt;-SRF`Tt:542R_VV$p@[p8DV[A,?1839FWdF&lt;TddF&lt;9Ah-6&amp;9tWoDlh]&amp;1SpGMq&gt;Ti1O*H&amp;#(AL8[_P%.M&gt;v^-))qOT*F5Cq0`Ye%+$B6i:7@0IX&lt;N+T+0MlMBPQ*Vj&gt;SsD&lt;U4JHY&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;8kD2)2fU/M#$e.)T4,_=8hLim[&amp;);?UkK&apos;-x?&apos;(:siIfL&lt;$pFM`i&lt;?%W(mGDHM%&gt;iWP,##P`%/L&lt;eXi:@Z9C.7o=@(pXdAO/NLQ8lPl+HPOQa8wD8=^GlPa8TKI1CjhsCTSLJM&apos;/Wl&gt;-&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;S(qw%sf/@%#B6;/U7K]uZbi^Oc^2n&lt;bhPmUkMw&gt;%t&lt;)&apos;mEVE&apos;&apos;n`WnJra$^TKvX5B&gt;;_aSEK&apos;,(hwa0:i4G?.Bci.(X[?b*($,=-n&lt;.Q%`(X=?+@Am*Js0&amp;=3bh8K]mL&lt;LoNs&apos;6,&apos;85`&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;0?t/&apos;_U59@]ddF&lt;#LdF&lt;eWdF&lt;OuN/45rY&lt;-L@&amp;#+fm&gt;69=Lb,OcZV/);TTm8VI;?%OtJ&lt;(b4mq7M6:u?KRdF&lt;gR@2L=FNU-&lt;b[(9c/ML3m;Z[$oF3g)GAWqpARc=&lt;ROu7cL5l;-[A]%/&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;+fsd;l#SafT/f*W]0=O&apos;$(Tb&lt;[)*@e775R-:Yob%g*&gt;l*:xP?Yb.5)%w_I?7uk5JC+FS(m#i&apos;k.&apos;a0i)9&lt;7b&apos;fs&apos;59hq$*5Uhv##pi^8+hIEBF`nvo`;&apos;l0.^S1&lt;-wUK2/Coh58KKhLj&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;M=SO*rfO`+qC`W-On.=AJ56&gt;&gt;i2@2LH6A:&amp;5q`?9I3@@&apos;04&amp;p2/LVa*T-4&lt;-i3;M9UvZd+N7&gt;b*eIwg:CC)c&lt;&gt;nO&amp;#&lt;IGe;__.thjZl&lt;%w(Wk2xmp4Q@I#I9,DF]u7-P=.-_:YJ]aS@V&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;?6*C()dOp7:WL,b&amp;3Rg/.cmM9&amp;r^&gt;$(&gt;.Z-I&amp;J(Q0Hd5Q%7Co-b`-c&lt;N(6r@ip+AurK&lt;m86QIth*#v;-OBqi+L7wDE-Ir8K[&apos;m+DDSLwK&amp;/.?-V%U_%3:qKNu$_b*B-kp7NaD&apos;QdWQPK&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Yq[@&gt;P)hI;*_F]u`Rb[.j8_Q/&lt;&amp;&gt;uu+VsH$sM9TA%?)(vmJ80),P7E&gt;)tjD%2L=-t#fK[%`v=Q8&lt;FfNkgg^oIbah*#8/Qt$F&amp;:K*-(N/&apos;+1vMB,u()-a.VUU*#[e%gAAO(S&gt;WlA2);Sa&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&gt;gXm8YB`1d@K#n]76-a$U,mF&lt;fX]idqd)&lt;3,]J7JmW4`6]uks=4-72L(jEk+:bJ0M^q-8Dm_Z?0olP1C9Sa&amp;H[d&amp;c$ooQUj]Exd*3ZM@-WGW2%s&apos;,B-_M%&gt;%Ul:#/&apos;xoFM9QX-$.QN&apos;&gt;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;[%$Z$uF6pA6Ki2O5:8w*vP1&lt;-1`[G,)-m#&gt;0`P&amp;#eb#.3i)rtB61(o&apos;$?X3B&lt;/R90;eZ]%Ncq;-Tl]#F&gt;2Qft^ae_5tKL9MUe9b*sLEQ95C&amp;`=G?@Mj=wh*&apos;3E&gt;=-&lt;)Gt*Iw)&apos;QG:`@I&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;wOf7&amp;]1i&apos;S01B+Ev/Nac#9S;=;YQpg_6U`*kVY39xK,[/6Aj7:&apos;1Bm-_1EYfa1+o&amp;o4hp7KN_Q(OlIo@S%;jVdn0&apos;1&lt;Vc52=u`3^o-n1&apos;g4v58Hj&amp;6_t7$##?M)c&lt;$bgQ_&apos;SY((-xkA#&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Y(,p&apos;H9rIVY-b,&apos;%bCPF7.J&lt;Up^,(dU1VY*5#WkTU&gt;h19w,WQhLI)3S#f$2(eb,jr*b;3Vw]*7NH%$c4Vs,eD9&gt;XW8?N]o+(*pgC%/72LV-u&lt;Hp,3@e^9UB1J+ak9-TN/mhKPg+AJYd$&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;MlvAF_jCK*.O-^(63adMT-&gt;W%iewS8W6m2rtCpo&apos;RS1R84=@paTKt)&gt;=%&amp;1[)*vp&apos;u+x,VrwN;&amp;]kuO9JDbg=pO$J*.jVe;u&apos;m0dr9l,&lt;*wMK*Oe=g8lV_KEBFkO&apos;oU]^=[-792#ok,)&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;i]lR8qQ2oA8wcRCZ^7w/Njh;?.stX?Q1&gt;S1q4Bn$)K1&lt;-rGdO&apos;$Wr.Lc.CG)$/*JL4tNR/,SVO3,aUw&apos;DJN:)Ss;wGn9A32ijw%FL+Z0Fn.U9;reSq)bmI32U==5ALuG&amp;#Vf1398/pVo&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;1*c-(aY168o&lt;`JsSbk-,1N;$&gt;0:OUas(3:8Z972LSfF8eb=c-;&gt;SPw7.6hn3m`9^Xkn(r.qS[0;T%&amp;Qc=+STRxX&apos;q1BNk3&amp;*eu2;&amp;8q$&amp;x&gt;Q#Q7^Tf+6&lt;(d%ZVmj2bDi%.3L2n+4W&apos;$P&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;iDDG)g,r%+?,$@?uou5tSe2aN_AQU*&lt;h`e-GI7)?OK2A.d7_c)?wQ5AS@DL3r#7fSkgl6-++D:&apos;A,uq7SvlB$pcpH&apos;q3n0#_%dY#xCpr-l&lt;F0NR@-##FEV6NTF6##$l84N1w?AO&gt;&apos;IAO&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;URQ##V^Fv-XFbGM7Fl(N&lt;3DhLGF%q.1rC$#:T__&amp;Pi68%0xi_&amp;[qFJ(77j_&amp;JWoF.V735&amp;T,[R*:xFR*K5&gt;&gt;#`bW-?4Ne_&amp;6Ne_&amp;6Ne_&amp;n`kr-#GJcM6X;uM6X;uM(.a..^2TkL%oR(#&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;;u.T%fAr%4tJ8&amp;&gt;&lt;1=GHZ_+m9/#H1F^R#SC#*N=BA9(D?v[UiFY&gt;&gt;^8p,KKF.W]L29uLkLlu/+4T&lt;XoIB&amp;hx=T1PcDaB&amp;;HH+-AFr?(m9HZV)FKS8JCw;SD=6[^/DZUL`EUDf]GGlG&amp;&gt;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;w$)F./^n3+rlo+DB;5sIYGNk+i1t-69Jg--0pao7Sm#K)pdHW&amp;;LuDNH@H&gt;#/X-TI(;P&gt;#,Gc&gt;#0Su&gt;#4`1?#8lC?#&lt;xU?#@.i?#D:%@#HF7@#LRI@#P_[@#Tkn@#Xw*A#]-=A#a9OA#&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;d&lt;F&amp;#*;G##.GY##2Sl##6`($#:l:$#&gt;xL$#B.`$#F:r$#JF.%#NR@%#R_R%#Vke%#Zww%#_-4&amp;#3^Rh%Sflr-k&apos;MS.o?.5/sWel/wpEM0%3&apos;/1)K^f1-d&gt;G21&amp;v(35&gt;V`39V7A4=onx4&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;A1OY5EI0;6Ibgr6M$HS7Q&lt;)58C5w,;WoA*#[%T*#`1g*#d=#+#hI5+#lUG+#pbY+#tnl+#x$),#&amp;1;,#*=M,#.I`,#2Ur,#6b.-#;w[H#iQtA#m^0B#qjBB#uvTB##-hB#&apos;9$C#+E6C#&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;/QHC#3^ZC#7jmC#;v)D#?,&lt;D#C8ND#GDaD#KPsD#O]/E#g1A5#KA*1#gC17#MGd;#8(02#L-d3#rWM4#Hga1#,&lt;w0#T.j&lt;#O#&apos;2#CYN1#qa^:#_4m3#o@/=#eG8=#t8J5#`+78#4uI-#&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;m3B2#SB[8#Q0@8#i[*9#iOn8#1Nm;#^sN9#qh&lt;9#:=x-#P;K2#$%X9#bC+.#Rg;&lt;#mN=.#MTF.#RZO.#2?)4#Y#(/#[)1/#b;L/#dAU/#0Sv;#lY$0#n`-0#sf60#(F24#wrH0#%/e0#&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;TmD&lt;#%JSMFove:CTBEXI:&lt;eh2g)B,3h2^G3i;#d3jD&gt;)4kMYD4lVu`4m`:&amp;5niUA5@(A5BA1]PBB:xlBCC=2CDLXMCEUtiCf&amp;0g2&apos;tN?PGT4CPGT4CPGT4CPGT4CPGT4CPGT4CPGT4CP&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;GT4CPGT4CPGT4CPGT4CPGT4CPGT4CP-qekC`.9kEg^+F$kwViFJTB&amp;5KTB&amp;5KTB&amp;5KTB&amp;5KTB&amp;5KTB&amp;5KTB&amp;5KTB&amp;5KTB&amp;5KTB&amp;5KTB&amp;5KTB&amp;5KTB&amp;5KTB&amp;5KTB&amp;5o,^&lt;-28ZI&apos;O?;xp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;O?;xpO?;xpO?;xpO?;xpO?;xpO?;xpO?;xpO?;xpO?;xpO?;xpO?;xpO?;xpO?;xp;7q-#lLYI:xvD=#&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4302"><highlight class="normal"></highlight></codeline>
<codeline lineno="4303"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>GetDefaultCompressedFontDataTTFBase85()</highlight></codeline>
<codeline lineno="4304"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>proggy_clean_ttf_compressed_data_base85;</highlight></codeline>
<codeline lineno="4306"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4307"><highlight class="normal"></highlight></codeline>
<codeline lineno="4308"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>#ifndef<sp/>IMGUI_DISABLE</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="graphics/imgui/imgui_draw.cpp"/>
  </compounddef>
</doxygen>
