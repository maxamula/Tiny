<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="imgui__impl__win32_8cpp" kind="file" language="C++">
    <compoundname>imgui_impl_win32.cpp</compoundname>
    <includes refid="imgui_8h" local="yes">imgui.h</includes>
    <includes refid="imgui__impl__win32_8h" local="yes">imgui_impl_win32.h</includes>
    <includes local="no">windows.h</includes>
    <includes local="no">windowsx.h</includes>
    <includes local="no">tchar.h</includes>
    <includes local="no">dwmapi.h</includes>
    <includes local="no">xinput.h</includes>
    <incdepgraph>
      <node id="3">
        <label>imconfig.h</label>
        <link refid="imconfig_8h"/>
      </node>
      <node id="2">
        <label>imgui.h</label>
        <link refid="imgui_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>graphics/imgui/imgui_impl_win32.cpp</label>
        <link refid="imgui__impl__win32_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>imgui_impl_win32.h</label>
        <link refid="imgui__impl__win32_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>assert.h</label>
      </node>
      <node id="13">
        <label>dwmapi.h</label>
      </node>
      <node id="4">
        <label>float.h</label>
      </node>
      <node id="5">
        <label>stdarg.h</label>
      </node>
      <node id="6">
        <label>stddef.h</label>
      </node>
      <node id="7">
        <label>string.h</label>
      </node>
      <node id="12">
        <label>tchar.h</label>
      </node>
      <node id="10">
        <label>windows.h</label>
      </node>
      <node id="11">
        <label>windowsx.h</label>
      </node>
      <node id="14">
        <label>xinput.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="struct_im_gui___impl_win32___data" prot="public">ImGui_ImplWin32_Data</innerclass>
    <sectiondef kind="define">
      <memberdef kind="define" id="imgui__impl__win32_8cpp_1ac7bef5d85e3dcd73eef56ad39ffc84a9" prot="public" static="no">
        <name>WIN32_LEAN_AND_MEAN</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imgui_impl_win32.cpp" line="23" column="9" bodyfile="graphics/imgui/imgui_impl_win32.cpp" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__impl__win32_8cpp_1abfc205127accf0adc131007017a20442" prot="public" static="no">
        <name>IM_SATURATE</name>
        <param><defname>V</defname></param>
        <initializer>(V &lt; 0.0f ? 0.0f : V &gt; 1.0f ? 1.0f : V)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imgui_impl_win32.cpp" line="341" column="13"/>
      </memberdef>
      <memberdef kind="define" id="imgui__impl__win32_8cpp_1a2836771b67b5a6453c60b139320d255c" prot="public" static="no">
        <name>MAP_BUTTON</name>
        <param><defname>KEY_NO</defname></param>
        <param><defname>BUTTON_ENUM</defname></param>
        <initializer>{ io.AddKeyEvent(KEY_NO, (gamepad.wButtons &amp; BUTTON_ENUM) != 0); }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imgui_impl_win32.cpp" line="342" column="13"/>
      </memberdef>
      <memberdef kind="define" id="imgui__impl__win32_8cpp_1ab9e788661f93cea16f50bdd44f7228f2" prot="public" static="no">
        <name>MAP_ANALOG</name>
        <param><defname>KEY_NO</defname></param>
        <param><defname>VALUE</defname></param>
        <param><defname>V0</defname></param>
        <param><defname>V1</defname></param>
        <initializer>{ float vn = (float)(VALUE - V0) / (float)(V1 - V0); io.AddKeyAnalogEvent(KEY_NO, vn &gt; 0.10f, <ref refid="imgui__impl__win32_8cpp_1abfc205127accf0adc131007017a20442" kindref="member">IM_SATURATE</ref>(vn)); }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imgui_impl_win32.cpp" line="343" column="13"/>
      </memberdef>
      <memberdef kind="define" id="imgui__impl__win32_8cpp_1aa2e13f774782031f8b49ae0edca83d69" prot="public" static="no">
        <name>IM_VK_KEYPAD_ENTER</name>
        <initializer>(VK_RETURN + 256)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imgui_impl_win32.cpp" line="409" column="9" bodyfile="graphics/imgui/imgui_impl_win32.cpp" bodystart="409" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__impl__win32_8cpp_1a7b2918d422b3a1fe86a641f74818bb55" prot="public" static="no">
        <name>WM_MOUSEHWHEEL</name>
        <initializer>0x020E</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imgui_impl_win32.cpp" line="540" column="9" bodyfile="graphics/imgui/imgui_impl_win32.cpp" bodystart="540" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__impl__win32_8cpp_1a454522b0cfb3a366cc14230e62be3e94" prot="public" static="no">
        <name>DBT_DEVNODES_CHANGED</name>
        <initializer>0x0007</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imgui_impl_win32.cpp" line="543" column="9" bodyfile="graphics/imgui/imgui_impl_win32.cpp" bodystart="543" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__impl__win32_8cpp_1a742997db6a6fe03581d2244ea085618e" prot="public" static="no">
        <name>_IsWindowsVistaOrGreater</name>
        <param></param>
        <initializer>_IsWindowsVersionOrGreater(HIBYTE(0x0600), LOBYTE(0x0600), 0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imgui_impl_win32.cpp" line="778" column="9" bodyfile="graphics/imgui/imgui_impl_win32.cpp" bodystart="778" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__impl__win32_8cpp_1ae8ca9bc7824bd084363ae25af2df8991" prot="public" static="no">
        <name>_IsWindows8OrGreater</name>
        <param></param>
        <initializer>_IsWindowsVersionOrGreater(HIBYTE(0x0602), LOBYTE(0x0602), 0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imgui_impl_win32.cpp" line="779" column="9" bodyfile="graphics/imgui/imgui_impl_win32.cpp" bodystart="779" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__impl__win32_8cpp_1a7befc644ed0e43855853f48c1045e9d3" prot="public" static="no">
        <name>_IsWindows8Point1OrGreater</name>
        <param></param>
        <initializer>_IsWindowsVersionOrGreater(HIBYTE(0x0603), LOBYTE(0x0603), 0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imgui_impl_win32.cpp" line="780" column="9" bodyfile="graphics/imgui/imgui_impl_win32.cpp" bodystart="780" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__impl__win32_8cpp_1a2b8cd4078bf40e54b53124033cf274a4" prot="public" static="no">
        <name>_IsWindows10OrGreater</name>
        <param></param>
        <initializer>_IsWindowsVersionOrGreater(HIBYTE(0x0A00), LOBYTE(0x0A00), 0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imgui_impl_win32.cpp" line="781" column="9" bodyfile="graphics/imgui/imgui_impl_win32.cpp" bodystart="781" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__impl__win32_8cpp_1a9272fbff584df35213a9076e900c24c1" prot="public" static="no">
        <name>DPI_AWARENESS_CONTEXT_PER_MONITOR_AWARE</name>
        <initializer>(DPI_AWARENESS_CONTEXT)-3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imgui_impl_win32.cpp" line="789" column="9" bodyfile="graphics/imgui/imgui_impl_win32.cpp" bodystart="789" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imgui__impl__win32_8cpp_1ac007743843b15f477f33dc5c3dd0507a" prot="public" static="no">
        <name>DPI_AWARENESS_CONTEXT_PER_MONITOR_AWARE_V2</name>
        <initializer>(DPI_AWARENESS_CONTEXT)-4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imgui_impl_win32.cpp" line="792" column="9" bodyfile="graphics/imgui/imgui_impl_win32.cpp" bodystart="792" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="enum">
      <memberdef kind="enum" id="imgui__impl__win32_8cpp_1a0b4072c3e306aab56e4b1f41f66ecfd0" prot="public" static="no" strong="no">
        <type></type>
        <name>PROCESS_DPI_AWARENESS</name>
        <enumvalue id="imgui__impl__win32_8cpp_1a0b4072c3e306aab56e4b1f41f66ecfd0ab42f9fa8bef80716253ff5732f98d019" prot="public">
          <name>PROCESS_DPI_UNAWARE</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__impl__win32_8cpp_1a0b4072c3e306aab56e4b1f41f66ecfd0a2690b1d0f73cd71a24c38dbccc99be8b" prot="public">
          <name>PROCESS_SYSTEM_DPI_AWARE</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__impl__win32_8cpp_1a0b4072c3e306aab56e4b1f41f66ecfd0aad0077e9938715939b18fc533eeae097" prot="public">
          <name>PROCESS_PER_MONITOR_DPI_AWARE</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imgui_impl_win32.cpp" line="784" column="1" bodyfile="graphics/imgui/imgui_impl_win32.cpp" bodystart="784" bodyend="784"/>
      </memberdef>
      <memberdef kind="enum" id="imgui__impl__win32_8cpp_1a6d3b6e6160452fd0315bf529461dadcf" prot="public" static="no" strong="no">
        <type></type>
        <name>MONITOR_DPI_TYPE</name>
        <enumvalue id="imgui__impl__win32_8cpp_1a6d3b6e6160452fd0315bf529461dadcfa75d3ba3b96559377e5cac23d6e380162" prot="public">
          <name>MDT_EFFECTIVE_DPI</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__impl__win32_8cpp_1a6d3b6e6160452fd0315bf529461dadcfa7c555ba8472b1bcc44a2b8b7da7bc1c3" prot="public">
          <name>MDT_ANGULAR_DPI</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__impl__win32_8cpp_1a6d3b6e6160452fd0315bf529461dadcfa3a8c01568cf5b17569b53587783e9851" prot="public">
          <name>MDT_RAW_DPI</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="imgui__impl__win32_8cpp_1a6d3b6e6160452fd0315bf529461dadcfacf96ef9f03d6fbbef385b67cfbe2578f" prot="public">
          <name>MDT_DEFAULT</name>
          <initializer>= MDT_EFFECTIVE_DPI</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imgui_impl_win32.cpp" line="785" column="1" bodyfile="graphics/imgui/imgui_impl_win32.cpp" bodystart="785" bodyend="785"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="typedef">
      <memberdef kind="typedef" id="imgui__impl__win32_8cpp_1ab894020cfaceec8e0a7e24a2b8cf003a" prot="public" static="no">
        <type>DWORD(WINAPI *</type>
        <definition>typedef DWORD(WINAPI * PFN_XInputGetCapabilities) (DWORD, DWORD, XINPUT_CAPABILITIES *)</definition>
        <argsstring>)(DWORD, DWORD, XINPUT_CAPABILITIES *)</argsstring>
        <name>PFN_XInputGetCapabilities</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imgui_impl_win32.cpp" line="36" column="9" bodyfile="graphics/imgui/imgui_impl_win32.cpp" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="imgui__impl__win32_8cpp_1a0554b333dae0845c369b9d7234c695e9" prot="public" static="no">
        <type>DWORD(WINAPI *</type>
        <definition>typedef DWORD(WINAPI * PFN_XInputGetState) (DWORD, XINPUT_STATE *)</definition>
        <argsstring>)(DWORD, XINPUT_STATE *)</argsstring>
        <name>PFN_XInputGetState</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imgui_impl_win32.cpp" line="37" column="9" bodyfile="graphics/imgui/imgui_impl_win32.cpp" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="imgui__impl__win32_8cpp_1a36d30a5f5f7942a50b272fa13058cf96" prot="public" static="no">
        <type>HRESULT(WINAPI *</type>
        <definition>typedef HRESULT(WINAPI * PFN_SetProcessDpiAwareness) (PROCESS_DPI_AWARENESS)</definition>
        <argsstring>)(PROCESS_DPI_AWARENESS)</argsstring>
        <name>PFN_SetProcessDpiAwareness</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imgui_impl_win32.cpp" line="794" column="9" bodyfile="graphics/imgui/imgui_impl_win32.cpp" bodystart="794" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="imgui__impl__win32_8cpp_1a411247e61a6621babce2d06bb8a434db" prot="public" static="no">
        <type>HRESULT(WINAPI *</type>
        <definition>typedef HRESULT(WINAPI * PFN_GetDpiForMonitor) (HMONITOR, MONITOR_DPI_TYPE, UINT *, UINT *)</definition>
        <argsstring>)(HMONITOR, MONITOR_DPI_TYPE, UINT *, UINT *)</argsstring>
        <name>PFN_GetDpiForMonitor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imgui_impl_win32.cpp" line="795" column="9" bodyfile="graphics/imgui/imgui_impl_win32.cpp" bodystart="795" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="imgui__impl__win32_8cpp_1ac4fd09e8ec8568aa443549a1286800b1" prot="public" static="no">
        <type>DPI_AWARENESS_CONTEXT(WINAPI *</type>
        <definition>typedef DPI_AWARENESS_CONTEXT(WINAPI * PFN_SetThreadDpiAwarenessContext) (DPI_AWARENESS_CONTEXT)</definition>
        <argsstring>)(DPI_AWARENESS_CONTEXT)</argsstring>
        <name>PFN_SetThreadDpiAwarenessContext</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imgui_impl_win32.cpp" line="796" column="9" bodyfile="graphics/imgui/imgui_impl_win32.cpp" bodystart="796" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="imgui__impl__win32_8cpp_1a03307dac9a598a87cda466b3ca3d49dd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_im_gui___impl_win32___data" kindref="compound">ImGui_ImplWin32_Data</ref> *</type>
        <definition>static ImGui_ImplWin32_Data * ImGui_ImplWin32_GetBackendData</definition>
        <argsstring>(ImGuiContext *ctx)</argsstring>
        <name>ImGui_ImplWin32_GetBackendData</name>
        <param>
          <type><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imgui_impl_win32.cpp" line="120" column="29" bodyfile="graphics/imgui/imgui_impl_win32.cpp" bodystart="120" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__win32_8cpp_1a066e65c322a9d7bdea955b6f8076d31d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ImGui_ImplWin32_UpdateKeyboardCodePage</definition>
        <argsstring>(ImGuiContext *ctx)</argsstring>
        <name>ImGui_ImplWin32_UpdateKeyboardCodePage</name>
        <param>
          <type><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imgui_impl_win32.cpp" line="126" column="13" bodyfile="graphics/imgui/imgui_impl_win32.cpp" bodystart="126" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__win32_8cpp_1a1c050c9a3cc316f2dbe63572b2f072ea" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool ImGui_ImplWin32_InitEx</definition>
        <argsstring>(ImGuiContext *ctx, void *hwnd, bool platform_has_own_dc)</argsstring>
        <name>ImGui_ImplWin32_InitEx</name>
        <param>
          <type><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>hwnd</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>platform_has_own_dc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imgui_impl_win32.cpp" line="136" column="13" bodyfile="graphics/imgui/imgui_impl_win32.cpp" bodystart="136" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__win32_8cpp_1afc1bec3634a6b4db30efeaf74c50d1ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="imgui_8h_1a665f6b404eea9a640b1222a87236fe19" kindref="member">IMGUI_IMPL_API</ref> bool</type>
        <definition>IMGUI_IMPL_API bool ImGui_ImplWin32_Init</definition>
        <argsstring>(ImGuiContext *ctx, void *hwnd)</argsstring>
        <name>ImGui_ImplWin32_Init</name>
        <param>
          <type><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>hwnd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imgui_impl_win32.cpp" line="188" column="25" bodyfile="graphics/imgui/imgui_impl_win32.cpp" bodystart="188" bodyend="191"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__win32_8cpp_1a2895bb0414a96097220f24c89279b95c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="imgui_8h_1a665f6b404eea9a640b1222a87236fe19" kindref="member">IMGUI_IMPL_API</ref> bool</type>
        <definition>IMGUI_IMPL_API bool ImGui_ImplWin32_InitForOpenGL</definition>
        <argsstring>(ImGuiContext *ctx, void *hwnd)</argsstring>
        <name>ImGui_ImplWin32_InitForOpenGL</name>
        <param>
          <type><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>hwnd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imgui_impl_win32.cpp" line="193" column="25" bodyfile="graphics/imgui/imgui_impl_win32.cpp" bodystart="193" bodyend="197"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__win32_8cpp_1a6156a5053a8b51add010850b4ade30a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ImGui_ImplWin32_Shutdown</definition>
        <argsstring>(ImGuiContext *ctx)</argsstring>
        <name>ImGui_ImplWin32_Shutdown</name>
        <param>
          <type><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imgui_impl_win32.cpp" line="199" column="9" bodyfile="graphics/imgui/imgui_impl_win32.cpp" bodystart="199" bodyend="215"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__win32_8cpp_1aa09e513c76599f68cb313ac1140d9cb8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool ImGui_ImplWin32_UpdateMouseCursor</definition>
        <argsstring>(ImGuiContext *ctx)</argsstring>
        <name>ImGui_ImplWin32_UpdateMouseCursor</name>
        <param>
          <type><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imgui_impl_win32.cpp" line="217" column="13" bodyfile="graphics/imgui/imgui_impl_win32.cpp" bodystart="217" bodyend="248"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__win32_8cpp_1ab053b258f642136586dd18c8acf7e520" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool IsVkDown</definition>
        <argsstring>(int vk)</argsstring>
        <name>IsVkDown</name>
        <param>
          <type>int</type>
          <declname>vk</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imgui_impl_win32.cpp" line="250" column="13" bodyfile="graphics/imgui/imgui_impl_win32.cpp" bodystart="250" bodyend="253"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__win32_8cpp_1a7d6875a620f9d0f3a0d8a43d3d5d1e47" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ImGui_ImplWin32_AddKeyEvent</definition>
        <argsstring>(ImGuiContext *ctx, ImGuiKey key, bool down, int native_keycode, int native_scancode=-1)</argsstring>
        <name>ImGui_ImplWin32_AddKeyEvent</name>
        <param>
          <type><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4" kindref="member">ImGuiKey</ref></type>
          <declname>key</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>down</declname>
        </param>
        <param>
          <type>int</type>
          <declname>native_keycode</declname>
        </param>
        <param>
          <type>int</type>
          <declname>native_scancode</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imgui_impl_win32.cpp" line="255" column="13" bodyfile="graphics/imgui/imgui_impl_win32.cpp" bodystart="255" bodyend="261"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__win32_8cpp_1ab3968019c780eb3a4d0ea1262491dc33" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ImGui_ImplWin32_ProcessKeyEventsWorkarounds</definition>
        <argsstring>(ImGuiContext *ctx)</argsstring>
        <name>ImGui_ImplWin32_ProcessKeyEventsWorkarounds</name>
        <param>
          <type><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imgui_impl_win32.cpp" line="263" column="13" bodyfile="graphics/imgui/imgui_impl_win32.cpp" bodystart="263" bodyend="276"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__win32_8cpp_1a9b7036ddec5ae74e19b932dba045c9fd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ImGui_ImplWin32_UpdateKeyModifiers</definition>
        <argsstring>(ImGuiContext *ctx)</argsstring>
        <name>ImGui_ImplWin32_UpdateKeyModifiers</name>
        <param>
          <type><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imgui_impl_win32.cpp" line="278" column="13" bodyfile="graphics/imgui/imgui_impl_win32.cpp" bodystart="278" bodyend="285"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__win32_8cpp_1a749fdb3b2b68142240b33b6e8f7baec3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ImGui_ImplWin32_UpdateMouseData</definition>
        <argsstring>(ImGuiContext *ctx)</argsstring>
        <name>ImGui_ImplWin32_UpdateMouseData</name>
        <param>
          <type><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imgui_impl_win32.cpp" line="287" column="13" bodyfile="graphics/imgui/imgui_impl_win32.cpp" bodystart="287" bodyend="314"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__win32_8cpp_1ae63a0970b23bddec286974eaf8a0b6b1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ImGui_ImplWin32_UpdateGamepads</definition>
        <argsstring>(ImGuiContext *ctx)</argsstring>
        <name>ImGui_ImplWin32_UpdateGamepads</name>
        <param>
          <type><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imgui_impl_win32.cpp" line="317" column="13" bodyfile="graphics/imgui/imgui_impl_win32.cpp" bodystart="317" bodyend="371"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__win32_8cpp_1a1dffd4f9df71d362a4745000eb2e6c5a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ImGui_ImplWin32_NewFrame</definition>
        <argsstring>(ImGuiContext *ctx)</argsstring>
        <name>ImGui_ImplWin32_NewFrame</name>
        <param>
          <type><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imgui_impl_win32.cpp" line="373" column="9" bodyfile="graphics/imgui/imgui_impl_win32.cpp" bodystart="373" bodyend="406"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__win32_8cpp_1a8566e972d0873b585b377750355a3c23" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4" kindref="member">ImGuiKey</ref></type>
        <definition>static ImGuiKey ImGui_ImplWin32_VirtualKeyToImGuiKey</definition>
        <argsstring>(WPARAM wParam)</argsstring>
        <name>ImGui_ImplWin32_VirtualKeyToImGuiKey</name>
        <param>
          <type>WPARAM</type>
          <declname>wParam</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imgui_impl_win32.cpp" line="412" column="17" bodyfile="graphics/imgui/imgui_impl_win32.cpp" bodystart="412" bodyend="536"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__win32_8cpp_1a302290f7f50a396ddf8d192b0f5595d8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="imgui_8h_1a3a993a8d676ceae7ca25c4957be9600b" kindref="member">ImGuiMouseSource</ref></type>
        <definition>static ImGuiMouseSource GetMouseSourceFromMessageExtraInfo</definition>
        <argsstring>()</argsstring>
        <name>GetMouseSourceFromMessageExtraInfo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imgui_impl_win32.cpp" line="561" column="25" bodyfile="graphics/imgui/imgui_impl_win32.cpp" bodystart="561" bodyend="569"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__win32_8cpp_1ab9ddbf7758dbd8965e0f6a9ac8c0ea1a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="imgui_8h_1a665f6b404eea9a640b1222a87236fe19" kindref="member">IMGUI_IMPL_API</ref> LRESULT</type>
        <definition>IMGUI_IMPL_API LRESULT ImGui_ImplWin32_WndProcHandler</definition>
        <argsstring>(ImGuiContext *ctx, HWND hwnd, UINT msg, WPARAM wParam, LPARAM lParam)</argsstring>
        <name>ImGui_ImplWin32_WndProcHandler</name>
        <param>
          <type><ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>HWND</type>
          <declname>hwnd</declname>
        </param>
        <param>
          <type>UINT</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>WPARAM</type>
          <declname>wParam</declname>
        </param>
        <param>
          <type>LPARAM</type>
          <declname>lParam</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imgui_impl_win32.cpp" line="571" column="24" bodyfile="graphics/imgui/imgui_impl_win32.cpp" bodystart="571" bodyend="739"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__win32_8cpp_1ae74539483f765cd9089c618bdc5d1015" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BOOL</type>
        <definition>static BOOL _IsWindowsVersionOrGreater</definition>
        <argsstring>(WORD major, WORD minor, WORD)</argsstring>
        <name>_IsWindowsVersionOrGreater</name>
        <param>
          <type>WORD</type>
          <declname>major</declname>
        </param>
        <param>
          <type>WORD</type>
          <declname>minor</declname>
        </param>
        <param>
          <type>WORD</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imgui_impl_win32.cpp" line="758" column="13" bodyfile="graphics/imgui/imgui_impl_win32.cpp" bodystart="758" bodyend="776"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__win32_8cpp_1a3d68bc19ea52dbb5682b42f9a3316189" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>DECLARE_HANDLE</definition>
        <argsstring>(DPI_AWARENESS_CONTEXT)</argsstring>
        <name>DECLARE_HANDLE</name>
        <param>
          <type>DPI_AWARENESS_CONTEXT</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imgui_impl_win32.cpp" line="788" column="1" declfile="graphics/imgui/imgui_impl_win32.cpp" declline="788" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__win32_8cpp_1afda525ac1c8a2b4e357f19488f661014" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ImGui_ImplWin32_EnableDpiAwareness</definition>
        <argsstring>()</argsstring>
        <name>ImGui_ImplWin32_EnableDpiAwareness</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imgui_impl_win32.cpp" line="799" column="6" bodyfile="graphics/imgui/imgui_impl_win32.cpp" bodystart="799" bodyend="822"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__win32_8cpp_1a765356269dc7e4f7f521d5f9c9bc42a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float ImGui_ImplWin32_GetDpiScaleForMonitor</definition>
        <argsstring>(void *monitor)</argsstring>
        <name>ImGui_ImplWin32_GetDpiScaleForMonitor</name>
        <param>
          <type>void *</type>
          <declname>monitor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imgui_impl_win32.cpp" line="828" column="7" bodyfile="graphics/imgui/imgui_impl_win32.cpp" bodystart="828" bodyend="852"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__win32_8cpp_1a63408fa92e0f85dcf74b27ba6b81f7f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float ImGui_ImplWin32_GetDpiScaleForHwnd</definition>
        <argsstring>(void *hwnd)</argsstring>
        <name>ImGui_ImplWin32_GetDpiScaleForHwnd</name>
        <param>
          <type>void *</type>
          <declname>hwnd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imgui_impl_win32.cpp" line="854" column="7" bodyfile="graphics/imgui/imgui_impl_win32.cpp" bodystart="854" bodyend="858"/>
      </memberdef>
      <memberdef kind="function" id="imgui__impl__win32_8cpp_1a726a328080634cc7b808de6b7e1cec9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ImGui_ImplWin32_EnableAlphaCompositing</definition>
        <argsstring>(void *hwnd)</argsstring>
        <name>ImGui_ImplWin32_EnableAlphaCompositing</name>
        <param>
          <type>void *</type>
          <declname>hwnd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/imgui/imgui_impl_win32.cpp" line="871" column="6" bodyfile="graphics/imgui/imgui_impl_win32.cpp" bodystart="871" bodyend="898"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>dear<sp/>imgui:<sp/>Platform<sp/>Backend<sp/>for<sp/>Windows<sp/>(standard<sp/>windows<sp/>API<sp/>for<sp/>32-bits<sp/>AND<sp/>64-bits<sp/>applications)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>needs<sp/>to<sp/>be<sp/>used<sp/>along<sp/>with<sp/>a<sp/>Renderer<sp/>(e.g.<sp/>DirectX11,<sp/>OpenGL3,<sp/>Vulkan..)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Implemented<sp/>features:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>[X]<sp/>Platform:<sp/>Clipboard<sp/>support<sp/>(for<sp/>Win32<sp/>this<sp/>is<sp/>actually<sp/>part<sp/>of<sp/>core<sp/>dear<sp/>imgui)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>[X]<sp/>Platform:<sp/>Mouse<sp/>support.<sp/>Can<sp/>discriminate<sp/>Mouse/TouchScreen/Pen.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>[X]<sp/>Platform:<sp/>Keyboard<sp/>support.<sp/>Since<sp/>1.87<sp/>we<sp/>are<sp/>using<sp/>the<sp/>io.AddKeyEvent()<sp/>function.<sp/>Pass<sp/>ImGuiKey<sp/>values<sp/>to<sp/>all<sp/>key<sp/>functions<sp/>e.g.<sp/>ImGui::IsKeyPressed(ImGuiKey_Space).<sp/>[Legacy<sp/>VK_*<sp/>values<sp/>will<sp/>also<sp/>be<sp/>supported<sp/>unless<sp/>IMGUI_DISABLE_OBSOLETE_KEYIO<sp/>is<sp/>set]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>[X]<sp/>Platform:<sp/>Gamepad<sp/>support.<sp/>Enabled<sp/>with<sp/>&apos;io.ConfigFlags<sp/>|=<sp/>ImGuiConfigFlags_NavEnableGamepad&apos;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>[X]<sp/>Platform:<sp/>Mouse<sp/>cursor<sp/>shape<sp/>and<sp/>visibility.<sp/>Disable<sp/>with<sp/>&apos;io.ConfigFlags<sp/>|=<sp/>ImGuiConfigFlags_NoMouseCursorChange&apos;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>can<sp/>use<sp/>unmodified<sp/>imgui_impl_*<sp/>files<sp/>in<sp/>your<sp/>project.<sp/>See<sp/>examples/<sp/>folder<sp/>for<sp/>examples<sp/>of<sp/>using<sp/>this.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Prefer<sp/>including<sp/>the<sp/>entire<sp/>imgui/<sp/>repository<sp/>into<sp/>your<sp/>project<sp/>(either<sp/>as<sp/>a<sp/>copy<sp/>or<sp/>as<sp/>a<sp/>submodule),<sp/>and<sp/>only<sp/>build<sp/>the<sp/>backends<sp/>you<sp/>need.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Learn<sp/>about<sp/>Dear<sp/>ImGui:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>FAQ<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>https://dearimgui.com/faq</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>Getting<sp/>Started<sp/><sp/><sp/><sp/><sp/><sp/>https://dearimgui.com/getting-started</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>Documentation<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>https://dearimgui.com/docs<sp/>(same<sp/>as<sp/>your<sp/>local<sp/>docs/<sp/>folder).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>Introduction,<sp/>links<sp/>and<sp/>more<sp/>at<sp/>the<sp/>top<sp/>of<sp/>imgui.cpp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="imgui_8h" kindref="compound">imgui.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>IMGUI_DISABLE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="imgui__impl__win32_8h" kindref="compound">imgui_impl_win32.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>WIN32_LEAN_AND_MEAN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>WIN32_LEAN_AND_MEAN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;windows.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;windowsx.h&gt;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>GET_X_LPARAM(),<sp/>GET_Y_LPARAM()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;tchar.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;dwmapi.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Configuration<sp/>flags<sp/>to<sp/>add<sp/>in<sp/>your<sp/>imconfig.h<sp/>file:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>IMGUI_IMPL_WIN32_DISABLE_GAMEPAD<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Disable<sp/>gamepad<sp/>support.<sp/>This<sp/>was<sp/>meaningful<sp/>before<sp/>&lt;1.81<sp/>but<sp/>we<sp/>now<sp/>load<sp/>XInput<sp/>dynamically<sp/>so<sp/>the<sp/>option<sp/>is<sp/>now<sp/>less<sp/>relevant.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Using<sp/>XInput<sp/>for<sp/>gamepad<sp/>(will<sp/>load<sp/>DLL<sp/>dynamically)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>IMGUI_IMPL_WIN32_DISABLE_GAMEPAD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;xinput.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>DWORD<sp/>(WINAPI<sp/>*<ref refid="imgui__impl__win32_8cpp_1ab894020cfaceec8e0a7e24a2b8cf003a" kindref="member">PFN_XInputGetCapabilities</ref>)(DWORD,<sp/>DWORD,<sp/>XINPUT_CAPABILITIES*);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>DWORD<sp/>(WINAPI<sp/>*<ref refid="imgui__impl__win32_8cpp_1a0554b333dae0845c369b9d7234c695e9" kindref="member">PFN_XInputGetState</ref>)(DWORD,<sp/>XINPUT_STATE*);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">//<sp/>CHANGELOG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(minor<sp/>and<sp/>older<sp/>changes<sp/>stripped<sp/>away,<sp/>please<sp/>see<sp/>git<sp/>history<sp/>for<sp/>details)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2023-10-05:<sp/>Inputs:<sp/>Added<sp/>support<sp/>for<sp/>extra<sp/>ImGuiKey<sp/>values:<sp/>F13<sp/>to<sp/>F24<sp/>function<sp/>keys,<sp/>app<sp/>back/forward<sp/>keys.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2023-09-25:<sp/>Inputs:<sp/>Synthesize<sp/>key-down<sp/>event<sp/>on<sp/>key-up<sp/>for<sp/>VK_SNAPSHOT<sp/>/<sp/>ImGuiKey_PrintScreen<sp/>as<sp/>Windows<sp/>doesn&apos;t<sp/>emit<sp/>it<sp/>(same<sp/>behavior<sp/>as<sp/>GLFW/SDL).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2023-09-07:<sp/>Inputs:<sp/>Added<sp/>support<sp/>for<sp/>keyboard<sp/>codepage<sp/>conversion<sp/>for<sp/>when<sp/>application<sp/>is<sp/>compiled<sp/>in<sp/>MBCS<sp/>mode<sp/>and<sp/>using<sp/>a<sp/>non-Unicode<sp/>window.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2023-04-19:<sp/>Added<sp/>ImGui_ImplWin32_InitForOpenGL()<sp/>to<sp/>facilitate<sp/>combining<sp/>raw<sp/>Win32/Winapi<sp/>with<sp/>OpenGL.<sp/>(#3218)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2023-04-04:<sp/>Inputs:<sp/>Added<sp/>support<sp/>for<sp/>io.AddMouseSourceEvent()<sp/>to<sp/>discriminate<sp/>ImGuiMouseSource_Mouse/ImGuiMouseSource_TouchScreen/ImGuiMouseSource_Pen.<sp/>(#2702)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2023-02-15:<sp/>Inputs:<sp/>Use<sp/>WM_NCMOUSEMOVE<sp/>/<sp/>WM_NCMOUSELEAVE<sp/>to<sp/>track<sp/>mouse<sp/>position<sp/>over<sp/>non-client<sp/>area<sp/>(e.g.<sp/>OS<sp/>decorations)<sp/>when<sp/>app<sp/>is<sp/>not<sp/>focused.<sp/>(#6045,<sp/>#6162)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2023-02-02:<sp/>Inputs:<sp/>Flipping<sp/>WM_MOUSEHWHEEL<sp/>(horizontal<sp/>mouse-wheel)<sp/>value<sp/>to<sp/>match<sp/>other<sp/>backends<sp/>and<sp/>offer<sp/>consistent<sp/>horizontal<sp/>scrolling<sp/>direction.<sp/>(#4019,<sp/>#6096,<sp/>#1463)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2022-10-11:<sp/>Using<sp/>&apos;nullptr&apos;<sp/>instead<sp/>of<sp/>&apos;NULL&apos;<sp/>as<sp/>per<sp/>our<sp/>switch<sp/>to<sp/>C++11.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2022-09-28:<sp/>Inputs:<sp/>Convert<sp/>WM_CHAR<sp/>values<sp/>with<sp/>MultiByteToWideChar()<sp/>when<sp/>window<sp/>class<sp/>was<sp/>registered<sp/>as<sp/>MBCS<sp/>(not<sp/>Unicode).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2022-09-26:<sp/>Inputs:<sp/>Renamed<sp/>ImGuiKey_ModXXX<sp/>introduced<sp/>in<sp/>1.87<sp/>to<sp/>ImGuiMod_XXX<sp/>(old<sp/>names<sp/>still<sp/>supported).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2022-01-26:<sp/>Inputs:<sp/>replaced<sp/>short-lived<sp/>io.AddKeyModsEvent()<sp/>(added<sp/>two<sp/>weeks<sp/>ago)<sp/>with<sp/>io.AddKeyEvent()<sp/>using<sp/>ImGuiKey_ModXXX<sp/>flags.<sp/>Sorry<sp/>for<sp/>the<sp/>confusion.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2021-01-20:<sp/>Inputs:<sp/>calling<sp/>new<sp/>io.AddKeyAnalogEvent()<sp/>for<sp/>gamepad<sp/>support,<sp/>instead<sp/>of<sp/>writing<sp/>directly<sp/>to<sp/>io.NavInputs[].</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2022-01-17:<sp/>Inputs:<sp/>calling<sp/>new<sp/>io.AddMousePosEvent(),<sp/>io.AddMouseButtonEvent(),<sp/>io.AddMouseWheelEvent()<sp/>API<sp/>(1.87+).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2022-01-17:<sp/>Inputs:<sp/>always<sp/>update<sp/>key<sp/>mods<sp/>next<sp/>and<sp/>before<sp/>a<sp/>key<sp/>event<sp/>(not<sp/>in<sp/>NewFrame)<sp/>to<sp/>fix<sp/>input<sp/>queue<sp/>with<sp/>very<sp/>low<sp/>framerates.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2022-01-12:<sp/>Inputs:<sp/>Update<sp/>mouse<sp/>inputs<sp/>using<sp/>WM_MOUSEMOVE/WM_MOUSELEAVE<sp/>+<sp/>fallback<sp/>to<sp/>provide<sp/>it<sp/>when<sp/>focused<sp/>but<sp/>not<sp/>hovered/captured.<sp/>More<sp/>standard<sp/>and<sp/>will<sp/>allow<sp/>us<sp/>to<sp/>pass<sp/>it<sp/>to<sp/>future<sp/>input<sp/>queue<sp/>API.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2022-01-12:<sp/>Inputs:<sp/>Maintain<sp/>our<sp/>own<sp/>copy<sp/>of<sp/>MouseButtonsDown<sp/>mask<sp/>instead<sp/>of<sp/>using<sp/>ImGui::IsAnyMouseDown()<sp/>which<sp/>will<sp/>be<sp/>obsoleted.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2022-01-10:<sp/>Inputs:<sp/>calling<sp/>new<sp/>io.AddKeyEvent(),<sp/>io.AddKeyModsEvent()<sp/>+<sp/>io.SetKeyEventNativeData()<sp/>API<sp/>(1.87+).<sp/>Support<sp/>for<sp/>full<sp/>ImGuiKey<sp/>range.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2021-12-16:<sp/>Inputs:<sp/>Fill<sp/>VK_LCONTROL/VK_RCONTROL/VK_LSHIFT/VK_RSHIFT/VK_LMENU/VK_RMENU<sp/>for<sp/>completeness.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2021-08-17:<sp/>Calling<sp/>io.AddFocusEvent()<sp/>on<sp/>WM_SETFOCUS/WM_KILLFOCUS<sp/>messages.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2021-08-02:<sp/>Inputs:<sp/>Fixed<sp/>keyboard<sp/>modifiers<sp/>being<sp/>reported<sp/>when<sp/>host<sp/>window<sp/>doesn&apos;t<sp/>have<sp/>focus.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2021-07-29:<sp/>Inputs:<sp/>MousePos<sp/>is<sp/>correctly<sp/>reported<sp/>when<sp/>the<sp/>host<sp/>platform<sp/>window<sp/>is<sp/>hovered<sp/>but<sp/>not<sp/>focused<sp/>(using<sp/>TrackMouseEvent()<sp/>to<sp/>receive<sp/>WM_MOUSELEAVE<sp/>events).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2021-06-29:<sp/>Reorganized<sp/>backend<sp/>to<sp/>pull<sp/>data<sp/>from<sp/>a<sp/>single<sp/>structure<sp/>to<sp/>facilitate<sp/>usage<sp/>with<sp/>multiple-contexts<sp/>(all<sp/>g_XXXX<sp/>access<sp/>changed<sp/>to<sp/>bd-&gt;XXXX).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2021-06-08:<sp/>Fixed<sp/>ImGui_ImplWin32_EnableDpiAwareness()<sp/>and<sp/>ImGui_ImplWin32_GetDpiScaleForMonitor()<sp/>to<sp/>handle<sp/>Windows<sp/>8.1/10<sp/>features<sp/>without<sp/>a<sp/>manifest<sp/>(per-monitor<sp/>DPI,<sp/>and<sp/>properly<sp/>calls<sp/>SetProcessDpiAwareness()<sp/>on<sp/>8.1).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2021-03-23:<sp/>Inputs:<sp/>Clearing<sp/>keyboard<sp/>down<sp/>array<sp/>when<sp/>losing<sp/>focus<sp/>(WM_KILLFOCUS).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2021-02-18:<sp/>Added<sp/>ImGui_ImplWin32_EnableAlphaCompositing().<sp/>Non<sp/>Visual<sp/>Studio<sp/>users<sp/>will<sp/>need<sp/>to<sp/>link<sp/>with<sp/>dwmapi.lib<sp/>(MinGW/gcc:<sp/>use<sp/>-ldwmapi).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2021-02-17:<sp/>Fixed<sp/>ImGui_ImplWin32_EnableDpiAwareness()<sp/>attempting<sp/>to<sp/>get<sp/>SetProcessDpiAwareness<sp/>from<sp/>shcore.dll<sp/>on<sp/>Windows<sp/>8<sp/>whereas<sp/>it<sp/>is<sp/>only<sp/>supported<sp/>on<sp/>Windows<sp/>8.1.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2021-01-25:<sp/>Inputs:<sp/>Dynamically<sp/>loading<sp/>XInput<sp/>DLL.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2020-12-04:<sp/>Misc:<sp/>Fixed<sp/>setting<sp/>of<sp/>io.DisplaySize<sp/>to<sp/>invalid/uninitialized<sp/>data<sp/>when<sp/>after<sp/>hwnd<sp/>has<sp/>been<sp/>closed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2020-03-03:<sp/>Inputs:<sp/>Calling<sp/>AddInputCharacterUTF16()<sp/>to<sp/>support<sp/>surrogate<sp/>pairs<sp/>leading<sp/>to<sp/>codepoint<sp/>&gt;=<sp/>0x10000<sp/>(for<sp/>more<sp/>complete<sp/>CJK<sp/>inputs)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2020-02-17:<sp/>Added<sp/>ImGui_ImplWin32_EnableDpiAwareness(),<sp/>ImGui_ImplWin32_GetDpiScaleForHwnd(),<sp/>ImGui_ImplWin32_GetDpiScaleForMonitor()<sp/>helper<sp/>functions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2020-01-14:<sp/>Inputs:<sp/>Added<sp/>support<sp/>for<sp/>#define<sp/>IMGUI_IMPL_WIN32_DISABLE_GAMEPAD/IMGUI_IMPL_WIN32_DISABLE_LINKING_XINPUT.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2019-12-05:<sp/>Inputs:<sp/>Added<sp/>support<sp/>for<sp/>ImGuiMouseCursor_NotAllowed<sp/>mouse<sp/>cursor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2019-05-11:<sp/>Inputs:<sp/>Don&apos;t<sp/>filter<sp/>value<sp/>from<sp/>WM_CHAR<sp/>before<sp/>calling<sp/>AddInputCharacter().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2019-01-17:<sp/>Misc:<sp/>Using<sp/>GetForegroundWindow()+IsChild()<sp/>instead<sp/>of<sp/>GetActiveWindow()<sp/>to<sp/>be<sp/>compatible<sp/>with<sp/>windows<sp/>created<sp/>in<sp/>a<sp/>different<sp/>thread<sp/>or<sp/>parent.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2019-01-17:<sp/>Inputs:<sp/>Added<sp/>support<sp/>for<sp/>mouse<sp/>buttons<sp/>4<sp/>and<sp/>5<sp/>via<sp/>WM_XBUTTON*<sp/>messages.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2019-01-15:<sp/>Inputs:<sp/>Added<sp/>support<sp/>for<sp/>XInput<sp/>gamepads<sp/>(if<sp/>ImGuiConfigFlags_NavEnableGamepad<sp/>is<sp/>set<sp/>by<sp/>user<sp/>application).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2018-11-30:<sp/>Misc:<sp/>Setting<sp/>up<sp/>io.BackendPlatformName<sp/>so<sp/>it<sp/>can<sp/>be<sp/>displayed<sp/>in<sp/>the<sp/>About<sp/>Window.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2018-06-29:<sp/>Inputs:<sp/>Added<sp/>support<sp/>for<sp/>the<sp/>ImGuiMouseCursor_Hand<sp/>cursor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2018-06-10:<sp/>Inputs:<sp/>Fixed<sp/>handling<sp/>of<sp/>mouse<sp/>wheel<sp/>messages<sp/>to<sp/>support<sp/>fine<sp/>position<sp/>messages<sp/>(typically<sp/>sent<sp/>by<sp/>track-pads).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2018-06-08:<sp/>Misc:<sp/>Extracted<sp/>imgui_impl_win32.cpp/.h<sp/>away<sp/>from<sp/>the<sp/>old<sp/>combined<sp/>DX9/DX10/DX11/DX12<sp/>examples.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2018-03-20:<sp/>Misc:<sp/>Setup<sp/>io.BackendFlags<sp/>ImGuiBackendFlags_HasMouseCursors<sp/>and<sp/>ImGuiBackendFlags_HasSetMousePos<sp/>flags<sp/>+<sp/>honor<sp/>ImGuiConfigFlags_NoMouseCursorChange<sp/>flag.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2018-02-20:<sp/>Inputs:<sp/>Added<sp/>support<sp/>for<sp/>mouse<sp/>cursors<sp/>(ImGui::GetMouseCursor()<sp/>value<sp/>and<sp/>WM_SETCURSOR<sp/>message<sp/>handling).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2018-02-06:<sp/>Inputs:<sp/>Added<sp/>mapping<sp/>for<sp/>ImGuiKey_Space.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2018-02-06:<sp/>Inputs:<sp/>Honoring<sp/>the<sp/>io.WantSetMousePos<sp/>by<sp/>repositioning<sp/>the<sp/>mouse<sp/>(when<sp/>using<sp/>navigation<sp/>and<sp/>ImGuiConfigFlags_NavMoveMouse<sp/>is<sp/>set).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2018-02-06:<sp/>Misc:<sp/>Removed<sp/>call<sp/>to<sp/>ImGui::Shutdown()<sp/>which<sp/>is<sp/>not<sp/>available<sp/>from<sp/>1.60<sp/>WIP,<sp/>user<sp/>needs<sp/>to<sp/>call<sp/>CreateContext/DestroyContext<sp/>themselves.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2018-01-20:<sp/>Inputs:<sp/>Added<sp/>Horizontal<sp/>Mouse<sp/>Wheel<sp/>support.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2018-01-08:<sp/>Inputs:<sp/>Added<sp/>mapping<sp/>for<sp/>ImGuiKey_Insert.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2018-01-05:<sp/>Inputs:<sp/>Added<sp/>WM_LBUTTONDBLCLK<sp/>double-click<sp/>handlers<sp/>for<sp/>window<sp/>classes<sp/>with<sp/>the<sp/>CS_DBLCLKS<sp/>flag.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2017-10-23:<sp/>Inputs:<sp/>Added<sp/>WM_SYSKEYDOWN<sp/>/<sp/>WM_SYSKEYUP<sp/>handlers<sp/>so<sp/>e.g.<sp/>the<sp/>VK_MENU<sp/>key<sp/>can<sp/>be<sp/>read.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2017-10-23:<sp/>Inputs:<sp/>Using<sp/>Win32<sp/>::SetCapture/::GetCapture()<sp/>to<sp/>retrieve<sp/>mouse<sp/>positions<sp/>outside<sp/>the<sp/>client<sp/>area<sp/>when<sp/>dragging.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2016-11-12:<sp/>Inputs:<sp/>Only<sp/>call<sp/>Win32<sp/>::SetCursor(nullptr)<sp/>when<sp/>io.MouseDrawCursor<sp/>is<sp/>set.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94" refid="struct_im_gui___impl_win32___data" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_im_gui___impl_win32___data_1aa490709a4e589c87a70df8aa7e97fea4" kindref="member">ImGui_ImplWin32_Data</ref></highlight></codeline>
<codeline lineno="95"><highlight class="normal">{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>HWND<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_win32___data_1a73c8b66f6315225a32f5143165d61df4" kindref="member">hWnd</ref>;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>HWND<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_win32___data_1adb9a1c9aec249e376290c7ae37ebca8a" kindref="member">MouseHwnd</ref>;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_win32___data_1a8e4cc11ebc1b86988195fab10dff3c38" kindref="member">MouseTrackedArea</ref>;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>0:<sp/>not<sp/>tracked,<sp/>1:<sp/>client<sp/>are,<sp/>2:<sp/>non-client<sp/>area</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_win32___data_1a56520b5fef030910fe4fe9af03a31bf8" kindref="member">MouseButtonsDown</ref>;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>INT64<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_win32___data_1a0315351258bfd91d5263214c2549b8ce" kindref="member">Time</ref>;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>INT64<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_win32___data_1a5972f4dac8c637341fd4ef430b197e40" kindref="member">TicksPerSecond</ref>;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui_8h_1a9223d6c82bb5d12c2eab5f829ca520ef" kindref="member">ImGuiMouseCursor</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_win32___data_1abe5e7a0c85bcc474f44efc6b2238fdc0" kindref="member">LastMouseCursor</ref>;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>UINT32<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_win32___data_1a47341927f3324620368575f0888b32d6" kindref="member">KeyboardCodePage</ref>;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>IMGUI_IMPL_WIN32_DISABLE_GAMEPAD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_win32___data_1a3ebc71caf46955c90bb8d6f4f94c08ce" kindref="member">HasGamepad</ref>;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_win32___data_1a8ef3569b604731a30016d042121f30e0" kindref="member">WantUpdateHasGamepad</ref>;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>HMODULE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_win32___data_1a7d7d8913825fdbb5d02784e3b6bb13d4" kindref="member">XInputDLL</ref>;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui__impl__win32_8cpp_1ab894020cfaceec8e0a7e24a2b8cf003a" kindref="member">PFN_XInputGetCapabilities</ref><sp/><sp/><sp/><ref refid="struct_im_gui___impl_win32___data_1ae895ba0fc430d1641a8d2ca2e97ef6fa" kindref="member">XInputGetCapabilities</ref>;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui__impl__win32_8cpp_1a0554b333dae0845c369b9d7234c695e9" kindref="member">PFN_XInputGetState</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_win32___data_1aa2964c950cda44c731557c5b1fb5e278" kindref="member">XInputGetState</ref>;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_win32___data_1aa490709a4e589c87a70df8aa7e97fea4" kindref="member">ImGui_ImplWin32_Data</ref>()<sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>memset((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">));<sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal">};</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Backend<sp/>data<sp/>stored<sp/>in<sp/>io.BackendPlatformUserData<sp/>to<sp/>allow<sp/>support<sp/>for<sp/>multiple<sp/>Dear<sp/>ImGui<sp/>contexts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="comment">//<sp/>It<sp/>is<sp/>STRONGLY<sp/>preferred<sp/>that<sp/>you<sp/>use<sp/>docking<sp/>branch<sp/>with<sp/>multi-viewports<sp/>(==<sp/>single<sp/>Dear<sp/>ImGui<sp/>context<sp/>+<sp/>multiple<sp/>windows)<sp/>instead<sp/>of<sp/>multiple<sp/>Dear<sp/>ImGui<sp/>contexts.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="comment">//<sp/>FIXME:<sp/>multi-context<sp/>support<sp/>is<sp/>not<sp/>well<sp/>tested<sp/>and<sp/>probably<sp/>dysfunctional<sp/>in<sp/>this<sp/>backend.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="comment">//<sp/>FIXME:<sp/>some<sp/>shared<sp/>resources<sp/>(mouse<sp/>cursor<sp/>shape,<sp/>gamepad)<sp/>are<sp/>mishandled<sp/>when<sp/>using<sp/>multi-context.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct_im_gui___impl_win32___data" kindref="compound">ImGui_ImplWin32_Data</ref>*<sp/>ImGui_ImplWin32_GetBackendData(<ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>*<sp/>ctx)</highlight></codeline>
<codeline lineno="121"><highlight class="normal">{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ctx<sp/>?<sp/>(<ref refid="struct_im_gui___impl_win32___data" kindref="compound">ImGui_ImplWin32_Data</ref>*)<ref refid="namespace_im_gui_1a447aaaa626101bcb4057ab7fad5c63b2" kindref="member">ImGui::GetIO</ref>(ctx).BackendPlatformUserData<sp/>:<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="123"><highlight class="normal">}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui_ImplWin32_UpdateKeyboardCodePage(<ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>*<sp/>ctx)</highlight></codeline>
<codeline lineno="127"><highlight class="normal">{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Retrieve<sp/>keyboard<sp/>code<sp/>page,<sp/>required<sp/>for<sp/>handling<sp/>of<sp/>non-Unicode<sp/>Windows.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_win32___data" kindref="compound">ImGui_ImplWin32_Data</ref>*<sp/>bd<sp/>=<sp/>ImGui_ImplWin32_GetBackendData(ctx);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>HKL<sp/>keyboard_layout<sp/>=<sp/>::GetKeyboardLayout(0);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>LCID<sp/>keyboard_lcid<sp/>=<sp/>MAKELCID(HIWORD(keyboard_layout),<sp/>SORT_DEFAULT);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(::GetLocaleInfoA(keyboard_lcid,<sp/>(LOCALE_RETURN_NUMBER<sp/>|<sp/>LOCALE_IDEFAULTANSICODEPAGE),<sp/>(LPSTR)&amp;bd-&gt;<ref refid="struct_im_gui___impl_win32___data_1a47341927f3324620368575f0888b32d6" kindref="member">KeyboardCodePage</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(bd-&gt;<ref refid="struct_im_gui___impl_win32___data_1a47341927f3324620368575f0888b32d6" kindref="member">KeyboardCodePage</ref>))<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bd-&gt;<ref refid="struct_im_gui___impl_win32___data_1a47341927f3324620368575f0888b32d6" kindref="member">KeyboardCodePage</ref><sp/>=<sp/>CP_ACP;<sp/></highlight><highlight class="comment">//<sp/>Fallback<sp/>to<sp/>default<sp/>ANSI<sp/>code<sp/>page<sp/>when<sp/>fails.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal">}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui_ImplWin32_InitEx(<ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>*<sp/>ctx,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>hwnd,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>platform_has_own_dc)</highlight></codeline>
<codeline lineno="137"><highlight class="normal">{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_i_o" kindref="compound">ImGuiIO</ref>&amp;<sp/>io<sp/>=<sp/><ref refid="namespace_im_gui_1a447aaaa626101bcb4057ab7fad5c63b2" kindref="member">ImGui::GetIO</ref>(ctx);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui_8h_1acb09e7dc42e8e3cefb0ecaa197978920" kindref="member">IM_ASSERT</ref>(io.<ref refid="struct_im_gui_i_o_1a6c0c878d0d5ca6ef90f0968bd59309d3" kindref="member">BackendPlatformUserData</ref><sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;Already<sp/>initialized<sp/>a<sp/>platform<sp/>backend!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>INT64<sp/>perf_frequency,<sp/>perf_counter;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!::QueryPerformanceFrequency((LARGE_INTEGER*)&amp;perf_frequency))</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!::QueryPerformanceCounter((LARGE_INTEGER*)&amp;perf_counter))</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Setup<sp/>backend<sp/>capabilities<sp/>flags</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_win32___data" kindref="compound">ImGui_ImplWin32_Data</ref>*<sp/>bd<sp/>=<sp/><ref refid="imgui_8h_1a5e3b2a8968432747cd4932c539d76723" kindref="member">IM_NEW</ref>(<ref refid="struct_im_gui___impl_win32___data" kindref="compound">ImGui_ImplWin32_Data</ref>)();</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>io.<ref refid="struct_im_gui_i_o_1a6c0c878d0d5ca6ef90f0968bd59309d3" kindref="member">BackendPlatformUserData</ref><sp/>=<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)bd;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>io.<ref refid="struct_im_gui_i_o_1a58510e764707bf979d086f6bc4c8b670" kindref="member">BackendPlatformName</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;imgui_impl_win32&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>io.<ref refid="struct_im_gui_i_o_1a92288d3e802788c8c408eac2c12e709c" kindref="member">BackendFlags</ref><sp/>|=<sp/><ref refid="imgui_8h_1a29add481c904a47bbbd2980555524fbea394bf9fbce96b77be78b418d2d0e5186" kindref="member">ImGuiBackendFlags_HasMouseCursors</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>honor<sp/>GetMouseCursor()<sp/>values<sp/>(optional)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>io.<ref refid="struct_im_gui_i_o_1a92288d3e802788c8c408eac2c12e709c" kindref="member">BackendFlags</ref><sp/>|=<sp/><ref refid="imgui_8h_1a29add481c904a47bbbd2980555524fbea778655f9f19d7a7783d158397701ae9c" kindref="member">ImGuiBackendFlags_HasSetMousePos</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>honor<sp/>io.WantSetMousePos<sp/>requests<sp/>(optional,<sp/>rarely<sp/>used)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>bd-&gt;<ref refid="struct_im_gui___impl_win32___data_1a73c8b66f6315225a32f5143165d61df4" kindref="member">hWnd</ref><sp/>=<sp/>(HWND)hwnd;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>bd-&gt;<ref refid="struct_im_gui___impl_win32___data_1a5972f4dac8c637341fd4ef430b197e40" kindref="member">TicksPerSecond</ref><sp/>=<sp/>perf_frequency;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>bd-&gt;<ref refid="struct_im_gui___impl_win32___data_1a0315351258bfd91d5263214c2549b8ce" kindref="member">Time</ref><sp/>=<sp/>perf_counter;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>bd-&gt;<ref refid="struct_im_gui___impl_win32___data_1abe5e7a0c85bcc474f44efc6b2238fdc0" kindref="member">LastMouseCursor</ref><sp/>=<sp/><ref refid="imgui_8h_1a2eb1181cc1d7872a061df8731141dde9a4c24ccc8f37a57d6341da1cfd3b337a5" kindref="member">ImGuiMouseCursor_COUNT</ref>;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGui_ImplWin32_UpdateKeyboardCodePage(ctx);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>platform<sp/>dependent<sp/>data<sp/>in<sp/>viewport</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_im_gui_1a443160d97f356984c3409259faa76f73" kindref="member">ImGui::GetMainViewport</ref>(ctx)-&gt;<ref refid="struct_im_gui_viewport_1ab0c79a0acf985c75f5cadd56ebab8eb5" kindref="member">PlatformHandleRaw</ref><sp/>=<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)hwnd;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui_8h_1a27f58d195412a83fd20f60587d77e111" kindref="member">IM_UNUSED</ref>(platform_has_own_dc);<sp/></highlight><highlight class="comment">//<sp/>Used<sp/>in<sp/>&apos;docking&apos;<sp/>branch</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Dynamically<sp/>load<sp/>XInput<sp/>library</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>IMGUI_IMPL_WIN32_DISABLE_GAMEPAD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>bd-&gt;<ref refid="struct_im_gui___impl_win32___data_1a8ef3569b604731a30016d042121f30e0" kindref="member">WantUpdateHasGamepad</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>xinput_dll_names[]<sp/>=</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;xinput1_4.dll&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Windows<sp/>8+</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;xinput1_3.dll&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>DirectX<sp/>SDK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;xinput9_1_0.dll&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="comment">//<sp/>Windows<sp/>Vista,<sp/>Windows<sp/>7</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;xinput1_2.dll&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>DirectX<sp/>SDK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;xinput1_1.dll&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>DirectX<sp/>SDK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/><ref refid="imgui_8h_1aeabe36f60fe45cf64cbc9641bcd58cca" kindref="member">IM_ARRAYSIZE</ref>(xinput_dll_names);<sp/>n++)</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(HMODULE<sp/>dll<sp/>=<sp/>::LoadLibraryA(xinput_dll_names[n]))</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bd-&gt;<ref refid="struct_im_gui___impl_win32___data_1a7d7d8913825fdbb5d02784e3b6bb13d4" kindref="member">XInputDLL</ref><sp/>=<sp/>dll;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bd-&gt;<ref refid="struct_im_gui___impl_win32___data_1ae895ba0fc430d1641a8d2ca2e97ef6fa" kindref="member">XInputGetCapabilities</ref><sp/>=<sp/>(<ref refid="imgui__impl__win32_8cpp_1ab894020cfaceec8e0a7e24a2b8cf003a" kindref="member">PFN_XInputGetCapabilities</ref>)::GetProcAddress(dll,<sp/></highlight><highlight class="stringliteral">&quot;XInputGetCapabilities&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bd-&gt;<ref refid="struct_im_gui___impl_win32___data_1aa2964c950cda44c731557c5b1fb5e278" kindref="member">XInputGetState</ref><sp/>=<sp/>(<ref refid="imgui__impl__win32_8cpp_1a0554b333dae0845c369b9d7234c695e9" kindref="member">PFN_XInputGetState</ref>)::GetProcAddress(dll,<sp/></highlight><highlight class="stringliteral">&quot;XInputGetState&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>IMGUI_IMPL_WIN32_DISABLE_GAMEPAD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="186"><highlight class="normal">}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><ref refid="imgui_8h_1a665f6b404eea9a640b1222a87236fe19" kindref="member">IMGUI_IMPL_API</ref><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="imgui__impl__win32_8cpp_1afc1bec3634a6b4db30efeaf74c50d1ac" kindref="member">ImGui_ImplWin32_Init</ref>(<ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>*<sp/>ctx,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>hwnd)</highlight></codeline>
<codeline lineno="189"><highlight class="normal">{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGui_ImplWin32_InitEx(ctx,<sp/>hwnd,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="191"><highlight class="normal">}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><ref refid="imgui_8h_1a665f6b404eea9a640b1222a87236fe19" kindref="member">IMGUI_IMPL_API</ref><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="imgui__impl__win32_8cpp_1a2895bb0414a96097220f24c89279b95c" kindref="member">ImGui_ImplWin32_InitForOpenGL</ref>(<ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>*<sp/>ctx,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>hwnd)</highlight></codeline>
<codeline lineno="194"><highlight class="normal">{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>OpenGL<sp/>needs<sp/>CS_OWNDC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImGui_ImplWin32_InitEx(ctx,<sp/>hwnd,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="197"><highlight class="normal">}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui__impl__win32_8cpp_1a6156a5053a8b51add010850b4ade30a1" kindref="member">ImGui_ImplWin32_Shutdown</ref>(<ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>*<sp/>ctx)</highlight></codeline>
<codeline lineno="200"><highlight class="normal">{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_win32___data" kindref="compound">ImGui_ImplWin32_Data</ref>*<sp/>bd<sp/>=<sp/>ImGui_ImplWin32_GetBackendData(ctx);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui_8h_1acb09e7dc42e8e3cefb0ecaa197978920" kindref="member">IM_ASSERT</ref>(bd<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;No<sp/>platform<sp/>backend<sp/>to<sp/>shutdown,<sp/>or<sp/>already<sp/>shutdown?&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_i_o" kindref="compound">ImGuiIO</ref>&amp;<sp/>io<sp/>=<sp/><ref refid="namespace_im_gui_1a447aaaa626101bcb4057ab7fad5c63b2" kindref="member">ImGui::GetIO</ref>(ctx);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Unload<sp/>XInput<sp/>library</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>IMGUI_IMPL_WIN32_DISABLE_GAMEPAD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bd-&gt;<ref refid="struct_im_gui___impl_win32___data_1a7d7d8913825fdbb5d02784e3b6bb13d4" kindref="member">XInputDLL</ref>)</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::FreeLibrary(bd-&gt;<ref refid="struct_im_gui___impl_win32___data_1a7d7d8913825fdbb5d02784e3b6bb13d4" kindref="member">XInputDLL</ref>);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>IMGUI_IMPL_WIN32_DISABLE_GAMEPAD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>io.<ref refid="struct_im_gui_i_o_1a58510e764707bf979d086f6bc4c8b670" kindref="member">BackendPlatformName</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>io.<ref refid="struct_im_gui_i_o_1a6c0c878d0d5ca6ef90f0968bd59309d3" kindref="member">BackendPlatformUserData</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>io.<ref refid="struct_im_gui_i_o_1a92288d3e802788c8c408eac2c12e709c" kindref="member">BackendFlags</ref><sp/>&amp;=<sp/>~(<ref refid="imgui_8h_1a29add481c904a47bbbd2980555524fbea394bf9fbce96b77be78b418d2d0e5186" kindref="member">ImGuiBackendFlags_HasMouseCursors</ref><sp/>|<sp/><ref refid="imgui_8h_1a29add481c904a47bbbd2980555524fbea778655f9f19d7a7783d158397701ae9c" kindref="member">ImGuiBackendFlags_HasSetMousePos</ref><sp/>|<sp/><ref refid="imgui_8h_1a29add481c904a47bbbd2980555524fbea3351643d21ff34cdd9c3d925b2d4bd3b" kindref="member">ImGuiBackendFlags_HasGamepad</ref>);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui_8h_1a3c856832c3fe1da8767a9353da3707e1" kindref="member">IM_DELETE</ref>(bd);</highlight></codeline>
<codeline lineno="215"><highlight class="normal">}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ImGui_ImplWin32_UpdateMouseCursor(<ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>*<sp/>ctx)</highlight></codeline>
<codeline lineno="218"><highlight class="normal">{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_i_o" kindref="compound">ImGuiIO</ref>&amp;<sp/>io<sp/>=<sp/><ref refid="namespace_im_gui_1a447aaaa626101bcb4057ab7fad5c63b2" kindref="member">ImGui::GetIO</ref>(ctx);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(io.<ref refid="struct_im_gui_i_o_1a6267b8a1ffa964035e6540f5e4296e39" kindref="member">ConfigFlags</ref><sp/>&amp;<sp/><ref refid="imgui_8h_1a1853976c82e4686085530721ab586743a8dd43b39c0341d092e2a19d41965d8f9" kindref="member">ImGuiConfigFlags_NoMouseCursorChange</ref>)</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui_8h_1a9223d6c82bb5d12c2eab5f829ca520ef" kindref="member">ImGuiMouseCursor</ref><sp/>imgui_cursor<sp/>=<sp/><ref refid="namespace_im_gui_1abefdbfd91ed5e3211c049e1c3cb518a0" kindref="member">ImGui::GetMouseCursor</ref>(ctx);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(imgui_cursor<sp/>==<sp/><ref refid="imgui_8h_1a2eb1181cc1d7872a061df8731141dde9a025f083574198762f5a7337ef2aaffef" kindref="member">ImGuiMouseCursor_None</ref><sp/>||<sp/>io.<ref refid="struct_im_gui_i_o_1a9b240460966bf2bd35c30f27b8db4028" kindref="member">MouseDrawCursor</ref>)</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Hide<sp/>OS<sp/>mouse<sp/>cursor<sp/>if<sp/>imgui<sp/>is<sp/>drawing<sp/>it<sp/>or<sp/>if<sp/>it<sp/>wants<sp/>no<sp/>cursor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::SetCursor(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Show<sp/>OS<sp/>mouse<sp/>cursor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LPTSTR<sp/>win32_cursor<sp/>=<sp/>IDC_ARROW;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(imgui_cursor)</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1a2eb1181cc1d7872a061df8731141dde9ad0616df87319845990941ce7c9deb197" kindref="member">ImGuiMouseCursor_Arrow</ref>:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>win32_cursor<sp/>=<sp/>IDC_ARROW;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1a2eb1181cc1d7872a061df8731141dde9aa9c04a9b16a3180bd0ae63f6bc6f3276" kindref="member">ImGuiMouseCursor_TextInput</ref>:<sp/><sp/><sp/><sp/>win32_cursor<sp/>=<sp/>IDC_IBEAM;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1a2eb1181cc1d7872a061df8731141dde9ac50944459f555534556d6bd9fc8a0de3" kindref="member">ImGuiMouseCursor_ResizeAll</ref>:<sp/><sp/><sp/><sp/>win32_cursor<sp/>=<sp/>IDC_SIZEALL;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1a2eb1181cc1d7872a061df8731141dde9a3991f275034545aeccd3971d7e61f2d7" kindref="member">ImGuiMouseCursor_ResizeEW</ref>:<sp/><sp/><sp/><sp/><sp/>win32_cursor<sp/>=<sp/>IDC_SIZEWE;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1a2eb1181cc1d7872a061df8731141dde9ab094fcdc4d060c27124e4b3c06723767" kindref="member">ImGuiMouseCursor_ResizeNS</ref>:<sp/><sp/><sp/><sp/><sp/>win32_cursor<sp/>=<sp/>IDC_SIZENS;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1a2eb1181cc1d7872a061df8731141dde9ab689cf7f2345d8ad4543571bb747f81b" kindref="member">ImGuiMouseCursor_ResizeNESW</ref>:<sp/><sp/><sp/>win32_cursor<sp/>=<sp/>IDC_SIZENESW;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1a2eb1181cc1d7872a061df8731141dde9a03de2f2452166228fba909d8c40c8722" kindref="member">ImGuiMouseCursor_ResizeNWSE</ref>:<sp/><sp/><sp/>win32_cursor<sp/>=<sp/>IDC_SIZENWSE;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1a2eb1181cc1d7872a061df8731141dde9a067d56ede2f28445c498fbc83789806f" kindref="member">ImGuiMouseCursor_Hand</ref>:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>win32_cursor<sp/>=<sp/>IDC_HAND;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1a2eb1181cc1d7872a061df8731141dde9a89133cbaa87e4ae6b1d2e80e45e8133c" kindref="member">ImGuiMouseCursor_NotAllowed</ref>:<sp/><sp/><sp/>win32_cursor<sp/>=<sp/>IDC_NO;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::SetCursor(::LoadCursor(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>win32_cursor));</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="248"><highlight class="normal">}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsVkDown(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vk)</highlight></codeline>
<codeline lineno="251"><highlight class="normal">{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(::GetKeyState(vk)<sp/>&amp;<sp/>0x8000)<sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="253"><highlight class="normal">}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui_ImplWin32_AddKeyEvent(<ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>*<sp/>ctx,<sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4" kindref="member">ImGuiKey</ref><sp/>key,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>down,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>native_keycode,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>native_scancode<sp/>=<sp/>-1)</highlight></codeline>
<codeline lineno="256"><highlight class="normal">{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_i_o" kindref="compound">ImGuiIO</ref>&amp;<sp/>io<sp/>=<sp/><ref refid="namespace_im_gui_1a447aaaa626101bcb4057ab7fad5c63b2" kindref="member">ImGui::GetIO</ref>(ctx);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>io.<ref refid="struct_im_gui_i_o_1a50c3ab6883647aacdf5153a4dbe2cdbe" kindref="member">AddKeyEvent</ref>(key,<sp/>down);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>io.<ref refid="struct_im_gui_i_o_1a6b2fa57fb6af5aa1c99f58115542e1dc" kindref="member">SetKeyEventNativeData</ref>(key,<sp/>native_keycode,<sp/>native_scancode);<sp/></highlight><highlight class="comment">//<sp/>To<sp/>support<sp/>legacy<sp/>indexing<sp/>(&lt;1.87<sp/>user<sp/>code)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui_8h_1a27f58d195412a83fd20f60587d77e111" kindref="member">IM_UNUSED</ref>(native_scancode);</highlight></codeline>
<codeline lineno="261"><highlight class="normal">}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui_ImplWin32_ProcessKeyEventsWorkarounds(<ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>*<sp/>ctx)</highlight></codeline>
<codeline lineno="264"><highlight class="normal">{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Left<sp/>&amp;<sp/>right<sp/>Shift<sp/>keys:<sp/>when<sp/>both<sp/>are<sp/>pressed<sp/>together,<sp/>Windows<sp/>tend<sp/>to<sp/>not<sp/>generate<sp/>the<sp/>WM_KEYUP<sp/>event<sp/>for<sp/>the<sp/>first<sp/>released<sp/>one.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespace_im_gui_1a1ae8d81ad1b3a042f723cc6b19a0f7ea" kindref="member">ImGui::IsKeyDown</ref>(ctx,<sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4a12090d4d4d6d2a49f59d5cdcedc31653" kindref="member">ImGuiKey_LeftShift</ref>)<sp/>&amp;&amp;<sp/>!IsVkDown(VK_LSHIFT))</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGui_ImplWin32_AddKeyEvent(ctx,<sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4a12090d4d4d6d2a49f59d5cdcedc31653" kindref="member">ImGuiKey_LeftShift</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>VK_LSHIFT);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespace_im_gui_1a1ae8d81ad1b3a042f723cc6b19a0f7ea" kindref="member">ImGui::IsKeyDown</ref>(ctx,<sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4a20c574bb154d150a7ce88b38d7d2a2ee" kindref="member">ImGuiKey_RightShift</ref>)<sp/>&amp;&amp;<sp/>!IsVkDown(VK_RSHIFT))</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGui_ImplWin32_AddKeyEvent(ctx,<sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4a20c574bb154d150a7ce88b38d7d2a2ee" kindref="member">ImGuiKey_RightShift</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>VK_RSHIFT);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Sometimes<sp/>WM_KEYUP<sp/>for<sp/>Win<sp/>key<sp/>is<sp/>not<sp/>passed<sp/>down<sp/>to<sp/>the<sp/>app<sp/>(e.g.<sp/>for<sp/>Win+V<sp/>on<sp/>some<sp/>setups,<sp/>according<sp/>to<sp/>GLFW).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespace_im_gui_1a1ae8d81ad1b3a042f723cc6b19a0f7ea" kindref="member">ImGui::IsKeyDown</ref>(ctx,<sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4a2282b2390a71a1435319e632a731645e" kindref="member">ImGuiKey_LeftSuper</ref>)<sp/>&amp;&amp;<sp/>!IsVkDown(VK_LWIN))</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGui_ImplWin32_AddKeyEvent(ctx,<sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4a2282b2390a71a1435319e632a731645e" kindref="member">ImGuiKey_LeftSuper</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>VK_LWIN);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespace_im_gui_1a1ae8d81ad1b3a042f723cc6b19a0f7ea" kindref="member">ImGui::IsKeyDown</ref>(ctx,<sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4a073826a6f6fe63bc3681a647b82d015f" kindref="member">ImGuiKey_RightSuper</ref>)<sp/>&amp;&amp;<sp/>!IsVkDown(VK_RWIN))</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGui_ImplWin32_AddKeyEvent(ctx,<sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4a073826a6f6fe63bc3681a647b82d015f" kindref="member">ImGuiKey_RightSuper</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>VK_RWIN);</highlight></codeline>
<codeline lineno="276"><highlight class="normal">}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui_ImplWin32_UpdateKeyModifiers(<ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>*<sp/>ctx)</highlight></codeline>
<codeline lineno="279"><highlight class="normal">{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_i_o" kindref="compound">ImGuiIO</ref>&amp;<sp/>io<sp/>=<sp/><ref refid="namespace_im_gui_1a447aaaa626101bcb4057ab7fad5c63b2" kindref="member">ImGui::GetIO</ref>(ctx);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>io.<ref refid="struct_im_gui_i_o_1a50c3ab6883647aacdf5153a4dbe2cdbe" kindref="member">AddKeyEvent</ref>(<ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4a4119aa71502a19344f5c5d616a6678be" kindref="member">ImGuiMod_Ctrl</ref>,<sp/>IsVkDown(VK_CONTROL));</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>io.<ref refid="struct_im_gui_i_o_1a50c3ab6883647aacdf5153a4dbe2cdbe" kindref="member">AddKeyEvent</ref>(<ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4a3b3b2b07d780fecd40b020d43b74379f" kindref="member">ImGuiMod_Shift</ref>,<sp/>IsVkDown(VK_SHIFT));</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>io.<ref refid="struct_im_gui_i_o_1a50c3ab6883647aacdf5153a4dbe2cdbe" kindref="member">AddKeyEvent</ref>(<ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4a3f644df58f39e4009b2bf9d0f8ecdcac" kindref="member">ImGuiMod_Alt</ref>,<sp/>IsVkDown(VK_MENU));</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>io.<ref refid="struct_im_gui_i_o_1a50c3ab6883647aacdf5153a4dbe2cdbe" kindref="member">AddKeyEvent</ref>(<ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4a6f1b9e3a8904d20fd375510fc9d18724" kindref="member">ImGuiMod_Super</ref>,<sp/>IsVkDown(VK_APPS));</highlight></codeline>
<codeline lineno="285"><highlight class="normal">}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui_ImplWin32_UpdateMouseData(<ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>*<sp/>ctx)</highlight></codeline>
<codeline lineno="288"><highlight class="normal">{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_win32___data" kindref="compound">ImGui_ImplWin32_Data</ref>*<sp/>bd<sp/>=<sp/>ImGui_ImplWin32_GetBackendData(ctx);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_i_o" kindref="compound">ImGuiIO</ref>&amp;<sp/>io<sp/>=<sp/><ref refid="namespace_im_gui_1a447aaaa626101bcb4057ab7fad5c63b2" kindref="member">ImGui::GetIO</ref>(ctx);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui_8h_1acb09e7dc42e8e3cefb0ecaa197978920" kindref="member">IM_ASSERT</ref>(bd-&gt;<ref refid="struct_im_gui___impl_win32___data_1a73c8b66f6315225a32f5143165d61df4" kindref="member">hWnd</ref><sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>HWND<sp/>focused_window<sp/>=<sp/>::GetForegroundWindow();</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_app_focused<sp/>=<sp/>(focused_window<sp/>==<sp/>bd-&gt;<ref refid="struct_im_gui___impl_win32___data_1a73c8b66f6315225a32f5143165d61df4" kindref="member">hWnd</ref>);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_app_focused)</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(Optional)<sp/>Set<sp/>OS<sp/>mouse<sp/>position<sp/>from<sp/>Dear<sp/>ImGui<sp/>if<sp/>requested<sp/>(rarely<sp/>used,<sp/>only<sp/>when<sp/>ImGuiConfigFlags_NavEnableSetMousePos<sp/>is<sp/>enabled<sp/>by<sp/>user)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(io.<ref refid="struct_im_gui_i_o_1a877f6adba2c961f361df7697f908649a" kindref="member">WantSetMousePos</ref>)</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>POINT<sp/>pos<sp/>=<sp/>{<sp/>(int)io.<ref refid="struct_im_gui_i_o_1ad2e9e547cb4d2abe8e7d27407efffeb8" kindref="member">MousePos</ref>.<ref refid="struct_im_vec2_1a5802a68560961ed8cb8cc5fb2a244c2d" kindref="member">x</ref>,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)io.<ref refid="struct_im_gui_i_o_1ad2e9e547cb4d2abe8e7d27407efffeb8" kindref="member">MousePos</ref>.<ref refid="struct_im_vec2_1a1f9d136ca837e147b793b19d25a3a618" kindref="member">y</ref><sp/>};</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(::ClientToScreen(bd-&gt;<ref refid="struct_im_gui___impl_win32___data_1a73c8b66f6315225a32f5143165d61df4" kindref="member">hWnd</ref>,<sp/>&amp;pos))</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::SetCursorPos(pos.x,<sp/>pos.y);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(Optional)<sp/>Fallback<sp/>to<sp/>provide<sp/>mouse<sp/>position<sp/>when<sp/>focused<sp/>(WM_MOUSEMOVE<sp/>already<sp/>provides<sp/>this<sp/>when<sp/>hovered<sp/>or<sp/>captured)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>also<sp/>fills<sp/>a<sp/>short<sp/>gap<sp/>when<sp/>clicking<sp/>non-client<sp/>area:<sp/>WM_NCMOUSELEAVE<sp/>-&gt;<sp/>modal<sp/>OS<sp/>move<sp/>-&gt;<sp/>gap<sp/>-&gt;<sp/>WM_NCMOUSEMOVE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!io.<ref refid="struct_im_gui_i_o_1a877f6adba2c961f361df7697f908649a" kindref="member">WantSetMousePos</ref><sp/>&amp;&amp;<sp/>bd-&gt;<ref refid="struct_im_gui___impl_win32___data_1a8e4cc11ebc1b86988195fab10dff3c38" kindref="member">MouseTrackedArea</ref><sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>POINT<sp/>pos;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(::GetCursorPos(&amp;pos)<sp/>&amp;&amp;<sp/>::ScreenToClient(bd-&gt;<ref refid="struct_im_gui___impl_win32___data_1a73c8b66f6315225a32f5143165d61df4" kindref="member">hWnd</ref>,<sp/>&amp;pos))</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>io.<ref refid="struct_im_gui_i_o_1ab6423058bbb3503c3cf66e0e45ee606d" kindref="member">AddMousePosEvent</ref>((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)pos.x,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)pos.y);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="314"><highlight class="normal">}</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Gamepad<sp/>navigation<sp/>mapping</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImGui_ImplWin32_UpdateGamepads(<ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>*<sp/>ctx)</highlight></codeline>
<codeline lineno="318"><highlight class="normal">{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>IMGUI_IMPL_WIN32_DISABLE_GAMEPAD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_i_o" kindref="compound">ImGuiIO</ref>&amp;<sp/>io<sp/>=<sp/><ref refid="namespace_im_gui_1a447aaaa626101bcb4057ab7fad5c63b2" kindref="member">ImGui::GetIO</ref>(ctx);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_win32___data" kindref="compound">ImGui_ImplWin32_Data</ref>*<sp/>bd<sp/>=<sp/>ImGui_ImplWin32_GetBackendData(ctx);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>((io.ConfigFlags<sp/>&amp;<sp/>ImGuiConfigFlags_NavEnableGamepad)<sp/>==<sp/>0)<sp/>//<sp/>FIXME:<sp/>Technically<sp/>feeding<sp/>gamepad<sp/>shouldn&apos;t<sp/>depend<sp/>on<sp/>this<sp/>now<sp/>that<sp/>they<sp/>are<sp/>regular<sp/>inputs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>return;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calling<sp/>XInputGetState()<sp/>every<sp/>frame<sp/>on<sp/>disconnected<sp/>gamepads<sp/>is<sp/>unfortunately<sp/>too<sp/>slow.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Instead<sp/>we<sp/>refresh<sp/>gamepad<sp/>availability<sp/>by<sp/>calling<sp/>XInputGetCapabilities()<sp/>_only_<sp/>after<sp/>receiving<sp/>WM_DEVICECHANGE.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bd-&gt;<ref refid="struct_im_gui___impl_win32___data_1a8ef3569b604731a30016d042121f30e0" kindref="member">WantUpdateHasGamepad</ref>)</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>XINPUT_CAPABILITIES<sp/>caps<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bd-&gt;<ref refid="struct_im_gui___impl_win32___data_1a3ebc71caf46955c90bb8d6f4f94c08ce" kindref="member">HasGamepad</ref><sp/>=<sp/>bd-&gt;<ref refid="struct_im_gui___impl_win32___data_1ae895ba0fc430d1641a8d2ca2e97ef6fa" kindref="member">XInputGetCapabilities</ref><sp/>?<sp/>(bd-&gt;<ref refid="struct_im_gui___impl_win32___data_1ae895ba0fc430d1641a8d2ca2e97ef6fa" kindref="member">XInputGetCapabilities</ref>(0,<sp/>XINPUT_FLAG_GAMEPAD,<sp/>&amp;caps)<sp/>==<sp/>ERROR_SUCCESS)<sp/>:<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bd-&gt;<ref refid="struct_im_gui___impl_win32___data_1a8ef3569b604731a30016d042121f30e0" kindref="member">WantUpdateHasGamepad</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>io.<ref refid="struct_im_gui_i_o_1a92288d3e802788c8c408eac2c12e709c" kindref="member">BackendFlags</ref><sp/>&amp;=<sp/><ref refid="imgui_8h_1a29add481c904a47bbbd2980555524fbea3351643d21ff34cdd9c3d925b2d4bd3b" kindref="member">~ImGuiBackendFlags_HasGamepad</ref>;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>XINPUT_STATE<sp/>xinput_state;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>XINPUT_GAMEPAD&amp;<sp/>gamepad<sp/>=<sp/>xinput_state.Gamepad;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!bd-&gt;<ref refid="struct_im_gui___impl_win32___data_1a3ebc71caf46955c90bb8d6f4f94c08ce" kindref="member">HasGamepad</ref><sp/>||<sp/>bd-&gt;<ref refid="struct_im_gui___impl_win32___data_1aa2964c950cda44c731557c5b1fb5e278" kindref="member">XInputGetState</ref><sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>||<sp/>bd-&gt;<ref refid="struct_im_gui___impl_win32___data_1aa2964c950cda44c731557c5b1fb5e278" kindref="member">XInputGetState</ref>(0,<sp/>&amp;xinput_state)<sp/>!=<sp/>ERROR_SUCCESS)</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>io.<ref refid="struct_im_gui_i_o_1a92288d3e802788c8c408eac2c12e709c" kindref="member">BackendFlags</ref><sp/>|=<sp/><ref refid="imgui_8h_1a29add481c904a47bbbd2980555524fbea3351643d21ff34cdd9c3d925b2d4bd3b" kindref="member">ImGuiBackendFlags_HasGamepad</ref>;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>IM_SATURATE(V)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(V<sp/>&lt;<sp/>0.0f<sp/>?<sp/>0.0f<sp/>:<sp/>V<sp/>&gt;<sp/>1.0f<sp/>?<sp/>1.0f<sp/>:<sp/>V)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>MAP_BUTTON(KEY_NO,<sp/>BUTTON_ENUM)<sp/><sp/><sp/><sp/><sp/>{<sp/>io.AddKeyEvent(KEY_NO,<sp/>(gamepad.wButtons<sp/>&amp;<sp/>BUTTON_ENUM)<sp/>!=<sp/>0);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>MAP_ANALOG(KEY_NO,<sp/>VALUE,<sp/>V0,<sp/>V1)<sp/><sp/><sp/>{<sp/>float<sp/>vn<sp/>=<sp/>(float)(VALUE<sp/>-<sp/>V0)<sp/>/<sp/>(float)(V1<sp/>-<sp/>V0);<sp/>io.AddKeyAnalogEvent(KEY_NO,<sp/>vn<sp/>&gt;<sp/>0.10f,<sp/>IM_SATURATE(vn));<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui__impl__win32_8cpp_1a2836771b67b5a6453c60b139320d255c" kindref="member">MAP_BUTTON</ref>(<ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4a5192cea38c78dfcabffa123ac8a4d8f8" kindref="member">ImGuiKey_GamepadStart</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>XINPUT_GAMEPAD_START);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui__impl__win32_8cpp_1a2836771b67b5a6453c60b139320d255c" kindref="member">MAP_BUTTON</ref>(<ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4a733407099af09e7b8ebc63ecefb39115" kindref="member">ImGuiKey_GamepadBack</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>XINPUT_GAMEPAD_BACK);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui__impl__win32_8cpp_1a2836771b67b5a6453c60b139320d255c" kindref="member">MAP_BUTTON</ref>(<ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4adea873d7459e00206d717cb74f6f56d8" kindref="member">ImGuiKey_GamepadFaceLeft</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>XINPUT_GAMEPAD_X);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui__impl__win32_8cpp_1a2836771b67b5a6453c60b139320d255c" kindref="member">MAP_BUTTON</ref>(<ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4a008272a0952adfc990011a49e547b4fe" kindref="member">ImGuiKey_GamepadFaceRight</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>XINPUT_GAMEPAD_B);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui__impl__win32_8cpp_1a2836771b67b5a6453c60b139320d255c" kindref="member">MAP_BUTTON</ref>(<ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4a1d30cccf15bd66a5909f370acdfc5966" kindref="member">ImGuiKey_GamepadFaceUp</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>XINPUT_GAMEPAD_Y);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui__impl__win32_8cpp_1a2836771b67b5a6453c60b139320d255c" kindref="member">MAP_BUTTON</ref>(<ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4a9845f52d8c705bce80cfe1d1ee7706c8" kindref="member">ImGuiKey_GamepadFaceDown</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>XINPUT_GAMEPAD_A);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui__impl__win32_8cpp_1a2836771b67b5a6453c60b139320d255c" kindref="member">MAP_BUTTON</ref>(<ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4aca4bab58dd1f5b2ad13f06cd6fa3a40f" kindref="member">ImGuiKey_GamepadDpadLeft</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>XINPUT_GAMEPAD_DPAD_LEFT);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui__impl__win32_8cpp_1a2836771b67b5a6453c60b139320d255c" kindref="member">MAP_BUTTON</ref>(<ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4ac86285ce6005ecae1cdc3e0412ee9302" kindref="member">ImGuiKey_GamepadDpadRight</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>XINPUT_GAMEPAD_DPAD_RIGHT);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui__impl__win32_8cpp_1a2836771b67b5a6453c60b139320d255c" kindref="member">MAP_BUTTON</ref>(<ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4ac59e36a031b26737484057f6750ce898" kindref="member">ImGuiKey_GamepadDpadUp</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>XINPUT_GAMEPAD_DPAD_UP);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui__impl__win32_8cpp_1a2836771b67b5a6453c60b139320d255c" kindref="member">MAP_BUTTON</ref>(<ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4a4498589e8aad445cd9ac45fda839923f" kindref="member">ImGuiKey_GamepadDpadDown</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>XINPUT_GAMEPAD_DPAD_DOWN);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui__impl__win32_8cpp_1a2836771b67b5a6453c60b139320d255c" kindref="member">MAP_BUTTON</ref>(<ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4a8899f6702a01ebf410645a248e329121" kindref="member">ImGuiKey_GamepadL1</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>XINPUT_GAMEPAD_LEFT_SHOULDER);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui__impl__win32_8cpp_1a2836771b67b5a6453c60b139320d255c" kindref="member">MAP_BUTTON</ref>(<ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4a6d4216ba620843cb378fe74543ed18c9" kindref="member">ImGuiKey_GamepadR1</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>XINPUT_GAMEPAD_RIGHT_SHOULDER);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui__impl__win32_8cpp_1ab9e788661f93cea16f50bdd44f7228f2" kindref="member">MAP_ANALOG</ref>(<ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4a183cd37b5ac994e3fbe7d3ba76508880" kindref="member">ImGuiKey_GamepadL2</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gamepad.bLeftTrigger,<sp/>XINPUT_GAMEPAD_TRIGGER_THRESHOLD,<sp/>255);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui__impl__win32_8cpp_1ab9e788661f93cea16f50bdd44f7228f2" kindref="member">MAP_ANALOG</ref>(<ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4ae8d5393ae6393e37ea914a9f4c099114" kindref="member">ImGuiKey_GamepadR2</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gamepad.bRightTrigger,<sp/>XINPUT_GAMEPAD_TRIGGER_THRESHOLD,<sp/>255);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui__impl__win32_8cpp_1a2836771b67b5a6453c60b139320d255c" kindref="member">MAP_BUTTON</ref>(<ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4ac10d0a77c512cee185ae210ef519ff3c" kindref="member">ImGuiKey_GamepadL3</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>XINPUT_GAMEPAD_LEFT_THUMB);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui__impl__win32_8cpp_1a2836771b67b5a6453c60b139320d255c" kindref="member">MAP_BUTTON</ref>(<ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4a7cbc06a9d26725262dbfdba3e893947b" kindref="member">ImGuiKey_GamepadR3</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>XINPUT_GAMEPAD_RIGHT_THUMB);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui__impl__win32_8cpp_1ab9e788661f93cea16f50bdd44f7228f2" kindref="member">MAP_ANALOG</ref>(<ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4a9d8c7e725baa1245358e7af71f8e6e66" kindref="member">ImGuiKey_GamepadLStickLeft</ref>,<sp/><sp/><sp/><sp/><sp/><sp/>gamepad.sThumbLX,<sp/>-XINPUT_GAMEPAD_LEFT_THUMB_DEADZONE,<sp/>-32768);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui__impl__win32_8cpp_1ab9e788661f93cea16f50bdd44f7228f2" kindref="member">MAP_ANALOG</ref>(<ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4af7741f7b019d11fbcf81a79558cc22bd" kindref="member">ImGuiKey_GamepadLStickRight</ref>,<sp/><sp/><sp/><sp/><sp/>gamepad.sThumbLX,<sp/>+XINPUT_GAMEPAD_LEFT_THUMB_DEADZONE,<sp/>+32767);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui__impl__win32_8cpp_1ab9e788661f93cea16f50bdd44f7228f2" kindref="member">MAP_ANALOG</ref>(<ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4a8a8c41c8c732ded79485774317a726d9" kindref="member">ImGuiKey_GamepadLStickUp</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gamepad.sThumbLY,<sp/>+XINPUT_GAMEPAD_LEFT_THUMB_DEADZONE,<sp/>+32767);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui__impl__win32_8cpp_1ab9e788661f93cea16f50bdd44f7228f2" kindref="member">MAP_ANALOG</ref>(<ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4a145691184d1c08be84b63644d83aa6ca" kindref="member">ImGuiKey_GamepadLStickDown</ref>,<sp/><sp/><sp/><sp/><sp/><sp/>gamepad.sThumbLY,<sp/>-XINPUT_GAMEPAD_LEFT_THUMB_DEADZONE,<sp/>-32768);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui__impl__win32_8cpp_1ab9e788661f93cea16f50bdd44f7228f2" kindref="member">MAP_ANALOG</ref>(<ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4afbd49d19245d7343df4de17976824e18" kindref="member">ImGuiKey_GamepadRStickLeft</ref>,<sp/><sp/><sp/><sp/><sp/><sp/>gamepad.sThumbRX,<sp/>-XINPUT_GAMEPAD_LEFT_THUMB_DEADZONE,<sp/>-32768);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui__impl__win32_8cpp_1ab9e788661f93cea16f50bdd44f7228f2" kindref="member">MAP_ANALOG</ref>(<ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4abfa50c4a81defc3d8c11f3b82b92120b" kindref="member">ImGuiKey_GamepadRStickRight</ref>,<sp/><sp/><sp/><sp/><sp/>gamepad.sThumbRX,<sp/>+XINPUT_GAMEPAD_LEFT_THUMB_DEADZONE,<sp/>+32767);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui__impl__win32_8cpp_1ab9e788661f93cea16f50bdd44f7228f2" kindref="member">MAP_ANALOG</ref>(<ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4a58b94e4213b46ccae6ac4bfcee95e37d" kindref="member">ImGuiKey_GamepadRStickUp</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gamepad.sThumbRY,<sp/>+XINPUT_GAMEPAD_LEFT_THUMB_DEADZONE,<sp/>+32767);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui__impl__win32_8cpp_1ab9e788661f93cea16f50bdd44f7228f2" kindref="member">MAP_ANALOG</ref>(<ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4a48d4f3127ee36647a2cb26f951a01b1a" kindref="member">ImGuiKey_GamepadRStickDown</ref>,<sp/><sp/><sp/><sp/><sp/><sp/>gamepad.sThumbRY,<sp/>-XINPUT_GAMEPAD_LEFT_THUMB_DEADZONE,<sp/>-32768);</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#undef<sp/>MAP_BUTTON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#undef<sp/>MAP_ANALOG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>#ifndef<sp/>IMGUI_IMPL_WIN32_DISABLE_GAMEPAD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal">}</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui__impl__win32_8cpp_1a1dffd4f9df71d362a4745000eb2e6c5a" kindref="member">ImGui_ImplWin32_NewFrame</ref>(<ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>*<sp/>ctx)</highlight></codeline>
<codeline lineno="374"><highlight class="normal">{</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_i_o" kindref="compound">ImGuiIO</ref>&amp;<sp/>io<sp/>=<sp/><ref refid="namespace_im_gui_1a447aaaa626101bcb4057ab7fad5c63b2" kindref="member">ImGui::GetIO</ref>(ctx);</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_win32___data" kindref="compound">ImGui_ImplWin32_Data</ref>*<sp/>bd<sp/>=<sp/>ImGui_ImplWin32_GetBackendData(ctx);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui_8h_1acb09e7dc42e8e3cefb0ecaa197978920" kindref="member">IM_ASSERT</ref>(bd<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;Did<sp/>you<sp/>call<sp/>ImGui_ImplWin32_Init()?&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Setup<sp/>display<sp/>size<sp/>(every<sp/>frame<sp/>to<sp/>accommodate<sp/>for<sp/>window<sp/>resizing)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>RECT<sp/>rect<sp/>=<sp/>{<sp/>0,<sp/>0,<sp/>0,<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>::GetClientRect(bd-&gt;<ref refid="struct_im_gui___impl_win32___data_1a73c8b66f6315225a32f5143165d61df4" kindref="member">hWnd</ref>,<sp/>&amp;rect);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>io.<ref refid="struct_im_gui_i_o_1a042cfb90bdc9ccfe37f86b92ade759fd" kindref="member">DisplaySize</ref><sp/>=<sp/><ref refid="struct_im_vec2" kindref="compound">ImVec2</ref>((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)(rect.right<sp/>-<sp/>rect.left),<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)(rect.bottom<sp/>-<sp/>rect.top));</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Setup<sp/>time<sp/>step</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>INT64<sp/>current_time<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/>::QueryPerformanceCounter((LARGE_INTEGER*)&amp;current_time);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/>io.<ref refid="struct_im_gui_i_o_1a5068d5414a19c2a1bf58029bd732a7c7" kindref="member">DeltaTime</ref><sp/>=<sp/>(float)(current_time<sp/>-<sp/>bd-&gt;<ref refid="struct_im_gui___impl_win32___data_1a0315351258bfd91d5263214c2549b8ce" kindref="member">Time</ref>)<sp/>/<sp/>bd-&gt;<ref refid="struct_im_gui___impl_win32___data_1a5972f4dac8c637341fd4ef430b197e40" kindref="member">TicksPerSecond</ref>;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/>bd-&gt;<ref refid="struct_im_gui___impl_win32___data_1a0315351258bfd91d5263214c2549b8ce" kindref="member">Time</ref><sp/>=<sp/>current_time;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>OS<sp/>mouse<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGui_ImplWin32_UpdateMouseData(ctx);</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Process<sp/>workarounds<sp/>for<sp/>known<sp/>Windows<sp/>key<sp/>handling<sp/>issues</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGui_ImplWin32_ProcessKeyEventsWorkarounds(ctx);</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>OS<sp/>mouse<sp/>cursor<sp/>with<sp/>the<sp/>cursor<sp/>requested<sp/>by<sp/>imgui</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui_8h_1a9223d6c82bb5d12c2eab5f829ca520ef" kindref="member">ImGuiMouseCursor</ref><sp/>mouse_cursor<sp/>=<sp/>io.<ref refid="struct_im_gui_i_o_1a9b240460966bf2bd35c30f27b8db4028" kindref="member">MouseDrawCursor</ref><sp/>?<sp/><ref refid="imgui_8h_1a2eb1181cc1d7872a061df8731141dde9a025f083574198762f5a7337ef2aaffef" kindref="member">ImGuiMouseCursor_None</ref><sp/>:<sp/><ref refid="namespace_im_gui_1abefdbfd91ed5e3211c049e1c3cb518a0" kindref="member">ImGui::GetMouseCursor</ref>(ctx);</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bd-&gt;<ref refid="struct_im_gui___impl_win32___data_1abe5e7a0c85bcc474f44efc6b2238fdc0" kindref="member">LastMouseCursor</ref><sp/>!=<sp/>mouse_cursor)</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bd-&gt;<ref refid="struct_im_gui___impl_win32___data_1abe5e7a0c85bcc474f44efc6b2238fdc0" kindref="member">LastMouseCursor</ref><sp/>=<sp/>mouse_cursor;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGui_ImplWin32_UpdateMouseCursor(ctx);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>game<sp/>controllers<sp/>(if<sp/>enabled<sp/>and<sp/>available)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGui_ImplWin32_UpdateGamepads(ctx);</highlight></codeline>
<codeline lineno="406"><highlight class="normal">}</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight><highlight class="comment">//<sp/>There<sp/>is<sp/>no<sp/>distinct<sp/>VK_xxx<sp/>for<sp/>keypad<sp/>enter,<sp/>instead<sp/>it<sp/>is<sp/>VK_RETURN<sp/>+<sp/>KF_EXTENDED,<sp/>we<sp/>assign<sp/>it<sp/>an<sp/>arbitrary<sp/>value<sp/>to<sp/>make<sp/>code<sp/>more<sp/>readable<sp/>(VK_<sp/>codes<sp/>go<sp/>up<sp/>to<sp/>255)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IM_VK_KEYPAD_ENTER<sp/><sp/><sp/><sp/><sp/><sp/>(VK_RETURN<sp/>+<sp/>256)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Map<sp/>VK_xxx<sp/>to<sp/>ImGuiKey_xxx.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4" kindref="member">ImGuiKey</ref><sp/>ImGui_ImplWin32_VirtualKeyToImGuiKey(WPARAM<sp/>wParam)</highlight></codeline>
<codeline lineno="413"><highlight class="normal">{</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(wParam)</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_TAB:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4a6a22a2d4fb95440b2367f2c3eca2bc2a" kindref="member">ImGuiKey_Tab</ref>;</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_LEFT:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4aac40844f0caf0ddfe7170c61ef997a01" kindref="member">ImGuiKey_LeftArrow</ref>;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_RIGHT:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4a068acdf6d9dc33c984ed0e10257fb6f7" kindref="member">ImGuiKey_RightArrow</ref>;</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_UP:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4a99dfe2206237954fe64edab18941c2d9" kindref="member">ImGuiKey_UpArrow</ref>;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_DOWN:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4a1aabc52aacf21b7411161d3fa69bd001" kindref="member">ImGuiKey_DownArrow</ref>;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_PRIOR:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4a0198d71ee58f9dc80efac621a24ad2ec" kindref="member">ImGuiKey_PageUp</ref>;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_NEXT:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4a77d39b49c342038c113922abac93910a" kindref="member">ImGuiKey_PageDown</ref>;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_HOME:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4a28262a56a48a233c7c72cc8f8e5ce84c" kindref="member">ImGuiKey_Home</ref>;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_END:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4ac4dc607c96b366b6287247f45058f239" kindref="member">ImGuiKey_End</ref>;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_INSERT:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4a4a45bbba4802cdb5228f6362110b9d98" kindref="member">ImGuiKey_Insert</ref>;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_DELETE:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4a0b41653cee02d505cb672a0174875cc7" kindref="member">ImGuiKey_Delete</ref>;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_BACK:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4ae43a3d21b4466b2aef140349a2e7ddee" kindref="member">ImGuiKey_Backspace</ref>;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_SPACE:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4aa508c254bfb8e03335e9f9bf3d61979b" kindref="member">ImGuiKey_Space</ref>;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_RETURN:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4ad96397ad732f0954b43e72a73c48903b" kindref="member">ImGuiKey_Enter</ref>;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_ESCAPE:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4a0c9a91d1ff29c0e03c611e6959240a80" kindref="member">ImGuiKey_Escape</ref>;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_OEM_7:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4aa2f6d332c0f92f83f1f8c552a907d0f3" kindref="member">ImGuiKey_Apostrophe</ref>;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_OEM_COMMA:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4a7c3f83a6dec0fa819070c2dc99ee3e83" kindref="member">ImGuiKey_Comma</ref>;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_OEM_MINUS:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4a8ab122010dfc9a857235645865a5f38d" kindref="member">ImGuiKey_Minus</ref>;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_OEM_PERIOD:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4aa164e8e5ad5afa5fdd1eed283ce6e8ad" kindref="member">ImGuiKey_Period</ref>;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_OEM_2:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4a8125047f0e02ecc62652e0ead1433d88" kindref="member">ImGuiKey_Slash</ref>;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_OEM_1:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4a990839497969e024b68570104730c810" kindref="member">ImGuiKey_Semicolon</ref>;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_OEM_PLUS:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4a33464d20185796aeeec89d03d42a122a" kindref="member">ImGuiKey_Equal</ref>;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_OEM_4:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4aedab633c4420dbc596330c61178cc8b7" kindref="member">ImGuiKey_LeftBracket</ref>;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_OEM_5:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4a7ad28c23f3346c08510a3a3e690ca214" kindref="member">ImGuiKey_Backslash</ref>;</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_OEM_6:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4a8a8289776ec2c4b16fc6e0b585c83d1b" kindref="member">ImGuiKey_RightBracket</ref>;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_OEM_3:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4a5c3f1f5aebd1c5d56e8bb755eb82304c" kindref="member">ImGuiKey_GraveAccent</ref>;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_CAPITAL:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4ad00a7051fb3f07b7536a1f3b38740b00" kindref="member">ImGuiKey_CapsLock</ref>;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_SCROLL:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4a7d63807890b3ce02f3ee454977d2de5b" kindref="member">ImGuiKey_ScrollLock</ref>;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_NUMLOCK:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4a55ff0b73f92d2552cf5935519306d3b5" kindref="member">ImGuiKey_NumLock</ref>;</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_SNAPSHOT:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4a5750c41cf823e0aaee459f6cf9fdaf76" kindref="member">ImGuiKey_PrintScreen</ref>;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_PAUSE:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4a5645190f1d1203b0cd08fa0ac2d57247" kindref="member">ImGuiKey_Pause</ref>;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_NUMPAD0:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4a86298dcde7d394d2e2461de88a8464cd" kindref="member">ImGuiKey_Keypad0</ref>;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_NUMPAD1:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4af4a6703e2f06ac13af90b9b800ff606b" kindref="member">ImGuiKey_Keypad1</ref>;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_NUMPAD2:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4a13d4f6e7e4d926f61674ad729837c6d3" kindref="member">ImGuiKey_Keypad2</ref>;</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_NUMPAD3:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4a4d3a86b153b6513ff00582c97d685471" kindref="member">ImGuiKey_Keypad3</ref>;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_NUMPAD4:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4a86211927c610ee3195a50bbe452bdfc7" kindref="member">ImGuiKey_Keypad4</ref>;</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_NUMPAD5:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4a93e8b3c806865e802dddd1e6dac07b98" kindref="member">ImGuiKey_Keypad5</ref>;</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_NUMPAD6:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4acb79a81837c16bfcb1a09b6448965546" kindref="member">ImGuiKey_Keypad6</ref>;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_NUMPAD7:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4a384ee65b5d431cd5fa4b806d0eeba62e" kindref="member">ImGuiKey_Keypad7</ref>;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_NUMPAD8:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4abc75729dd604b690f4d7cf7e809868e2" kindref="member">ImGuiKey_Keypad8</ref>;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_NUMPAD9:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4a1aa7750bebcbd2dae9e1470a50097c0b" kindref="member">ImGuiKey_Keypad9</ref>;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_DECIMAL:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4a781420236b598d124b42d12feb414320" kindref="member">ImGuiKey_KeypadDecimal</ref>;</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_DIVIDE:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4ae2f3884b733e81c19938e91191e92a10" kindref="member">ImGuiKey_KeypadDivide</ref>;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_MULTIPLY:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4a13849306f003a11fba9c7e5de09dc284" kindref="member">ImGuiKey_KeypadMultiply</ref>;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_SUBTRACT:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4a818f7dc1046503b593c477dbd482b94c" kindref="member">ImGuiKey_KeypadSubtract</ref>;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_ADD:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4a4c5e7a3a58fdf718844d92d08081be16" kindref="member">ImGuiKey_KeypadAdd</ref>;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="imgui__impl__win32_8cpp_1aa2e13f774782031f8b49ae0edca83d69" kindref="member">IM_VK_KEYPAD_ENTER</ref>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4afaf3de3673b88871f8d40cd515ec6f01" kindref="member">ImGuiKey_KeypadEnter</ref>;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_LSHIFT:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4a12090d4d4d6d2a49f59d5cdcedc31653" kindref="member">ImGuiKey_LeftShift</ref>;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_LCONTROL:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4ae6faf6703d8d8a05fbb6c8ed98b75260" kindref="member">ImGuiKey_LeftCtrl</ref>;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_LMENU:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4af12706f51d5b1b373eb76d095acc0ef6" kindref="member">ImGuiKey_LeftAlt</ref>;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_LWIN:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4a2282b2390a71a1435319e632a731645e" kindref="member">ImGuiKey_LeftSuper</ref>;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_RSHIFT:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4a20c574bb154d150a7ce88b38d7d2a2ee" kindref="member">ImGuiKey_RightShift</ref>;</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_RCONTROL:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4a3a6391534b110b13ed9f9bb616683440" kindref="member">ImGuiKey_RightCtrl</ref>;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_RMENU:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4aafcf8801e7cb709a05be0e1b0dd487e2" kindref="member">ImGuiKey_RightAlt</ref>;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_RWIN:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4a073826a6f6fe63bc3681a647b82d015f" kindref="member">ImGuiKey_RightSuper</ref>;</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_APPS:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4a042f3fff8820033c805c35a1e6cc02cc" kindref="member">ImGuiKey_Menu</ref>;</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4a229fa7f1b142aba10425da2763f723e7" kindref="member">ImGuiKey_0</ref>;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;1&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4a8f27a47f17f14bf1bc8df3badbbc5b8c" kindref="member">ImGuiKey_1</ref>;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;2&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4a3c8dce660d75d7b4ace6b9dd0ec11cd8" kindref="member">ImGuiKey_2</ref>;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;3&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4ae9491ab2c6703c9c6cf36470d416cbd9" kindref="member">ImGuiKey_3</ref>;</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;4&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4ab349ba19ef02428ea4bd5b67f544b78e" kindref="member">ImGuiKey_4</ref>;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;5&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4a420b7eb0532fcb1958aa539b2768d94e" kindref="member">ImGuiKey_5</ref>;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;6&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4a07776ca24bec3520f4c4e787ec62ee3f" kindref="member">ImGuiKey_6</ref>;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;7&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4a8febd61d3cb96c1aa7dd8a5eb126e316" kindref="member">ImGuiKey_7</ref>;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;8&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4ad3b62cd8385e5be2431f4ee9d4f1d489" kindref="member">ImGuiKey_8</ref>;</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;9&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4aaa6ca76c583915f8de4e76f540c57791" kindref="member">ImGuiKey_9</ref>;</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;A&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4a7401e6639ddd41469092b3b2e81c4cc9" kindref="member">ImGuiKey_A</ref>;</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;B&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4af2dbcd14351ad2fcc0865fdc48abdc47" kindref="member">ImGuiKey_B</ref>;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;C&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4a74f76261f0aa7f8bcfcaf0cd639e859f" kindref="member">ImGuiKey_C</ref>;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;D&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4ae13809d85933c323c59072ccd7301bdc" kindref="member">ImGuiKey_D</ref>;</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;E&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4a99c7759a9390d9fd8cf7ed4865f40e97" kindref="member">ImGuiKey_E</ref>;</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;F&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4a7a4746b3a266f1a32a49aaa27cdd8d51" kindref="member">ImGuiKey_F</ref>;</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;G&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4ad037c2dda36db66e971d1070ea1ed7f7" kindref="member">ImGuiKey_G</ref>;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;H&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4a35327f0070ab6b095aba5e61788a028f" kindref="member">ImGuiKey_H</ref>;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;I&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4ae4636b7c818a97dcddb7ea286659c7c7" kindref="member">ImGuiKey_I</ref>;</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;J&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4a3c20322386fb9f04739b955eb13e9038" kindref="member">ImGuiKey_J</ref>;</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;K&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4a778d2e5b6a9acb78a9bc82df2ed25a47" kindref="member">ImGuiKey_K</ref>;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;L&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4acc4d716b3707d0f980b4173ffa288df8" kindref="member">ImGuiKey_L</ref>;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;M&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4a86cdfeac3e7378113474a7af426e367b" kindref="member">ImGuiKey_M</ref>;</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;N&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4a6e61f63e13ded679816b5e0b2b7948cd" kindref="member">ImGuiKey_N</ref>;</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;O&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4aaac1e6afb1e41a9dfa7640d4fc703c2f" kindref="member">ImGuiKey_O</ref>;</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;P&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4aca442bce629905ab73d786e177b1f781" kindref="member">ImGuiKey_P</ref>;</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;Q&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4abf73fbcd7ddc66da2eeb66648be7c8df" kindref="member">ImGuiKey_Q</ref>;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;R&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4a7c15996baf735b46c93dc83433efae41" kindref="member">ImGuiKey_R</ref>;</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;S&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4a05467aac64c5cd254c154ab3a7f99971" kindref="member">ImGuiKey_S</ref>;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;T&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4ae9bcf9b2c43c01abd26c44a6fb1d34e9" kindref="member">ImGuiKey_T</ref>;</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;U&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4a969bee56d54e3f1374fbe5ea96464cee" kindref="member">ImGuiKey_U</ref>;</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;V&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4ad028111ebec6a53d1360f37bedb8d002" kindref="member">ImGuiKey_V</ref>;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;W&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4a0e89b3b4f6f3fa9c6f69316020cbe3d6" kindref="member">ImGuiKey_W</ref>;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;X&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4a8754d283f635b3f176e5813eb41fc374" kindref="member">ImGuiKey_X</ref>;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;Y&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4a640b994b898d9bd209714c9c79bed289" kindref="member">ImGuiKey_Y</ref>;</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;Z&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4a3386a804f3a4c3ad0ff66d3808a29aa1" kindref="member">ImGuiKey_Z</ref>;</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_F1:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4a116cd91d9dd889129e1611f84e0f8edd" kindref="member">ImGuiKey_F1</ref>;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_F2:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4ad009ba349f847c20a6e8c70df65aaf1a" kindref="member">ImGuiKey_F2</ref>;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_F3:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4aca9da0e6511caa2d42eae02d8cf1fc03" kindref="member">ImGuiKey_F3</ref>;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_F4:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4a83ca3a538e923af7b9161dd59f028d6a" kindref="member">ImGuiKey_F4</ref>;</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_F5:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4a02766c50733adf83361f173ae7c4f815" kindref="member">ImGuiKey_F5</ref>;</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_F6:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4abdd98f6adb5fd10f33a5f392aa5df6a6" kindref="member">ImGuiKey_F6</ref>;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_F7:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4a84ffdcbe9cc808151a9a953fed54f606" kindref="member">ImGuiKey_F7</ref>;</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_F8:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4a2ee36fd5e3dfb6d56d0ab4f5135ab6de" kindref="member">ImGuiKey_F8</ref>;</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_F9:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4ad68378e2648a14fd94cb7fc10280fc04" kindref="member">ImGuiKey_F9</ref>;</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_F10:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4a7d944f806c77f4d9230e0e8b6a9428bd" kindref="member">ImGuiKey_F10</ref>;</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_F11:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4ae306f5e863b9e2f57d96ea00a16a00a7" kindref="member">ImGuiKey_F11</ref>;</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_F12:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4aa1f662bc4e0738f4e0216d1ae4994d2b" kindref="member">ImGuiKey_F12</ref>;</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_F13:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4a72229ff6a1703f385f5ee80a4cc52d35" kindref="member">ImGuiKey_F13</ref>;</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_F14:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4a022e8d87897acfe085c3da15b7d085d1" kindref="member">ImGuiKey_F14</ref>;</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_F15:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4a7e33f91bd6d4759fa8e05fa03c87197c" kindref="member">ImGuiKey_F15</ref>;</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_F16:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4a1b4d830afc00c557d5aa5b615d37df60" kindref="member">ImGuiKey_F16</ref>;</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_F17:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4ae801f9d1df78f4688d7d344abb8fa0f7" kindref="member">ImGuiKey_F17</ref>;</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_F18:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4a1ca3677e2f2ac151be622626527110f9" kindref="member">ImGuiKey_F18</ref>;</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_F19:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4a969e86a749ced8768e30d60ec5e4fb3f" kindref="member">ImGuiKey_F19</ref>;</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_F20:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4a20172832efa2d198d790e2b09a2c1d43" kindref="member">ImGuiKey_F20</ref>;</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_F21:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4a34ba5920c604c9f9fd6252a74898cb5c" kindref="member">ImGuiKey_F21</ref>;</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_F22:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4a2a8db99c97045c2e65f62a5910e384b9" kindref="member">ImGuiKey_F22</ref>;</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_F23:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4a967c0c510afcd9a62bb1d83b4227b7f1" kindref="member">ImGuiKey_F23</ref>;</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_F24:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4a49c9d77b21a64921e4ea150424352f40" kindref="member">ImGuiKey_F24</ref>;</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_BROWSER_BACK:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4a7feb8b1cd33f34eddf58160f978fe3b4" kindref="member">ImGuiKey_AppBack</ref>;</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VK_BROWSER_FORWARD:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4a0a5b0391c1edb7dd4d00802a0793d70f" kindref="member">ImGuiKey_AppForward</ref>;</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4a4d0a38d835a8092eeb8bbe2f7c5e057d" kindref="member">ImGuiKey_None</ref>;</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="536"><highlight class="normal">}</highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Allow<sp/>compilation<sp/>with<sp/>old<sp/>Windows<sp/>SDK.<sp/>MinGW<sp/>doesn&apos;t<sp/>have<sp/>default<sp/>_WIN32_WINNT/WINVER<sp/>versions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>WM_MOUSEHWHEEL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>WM_MOUSEHWHEEL<sp/>0x020E</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>DBT_DEVNODES_CHANGED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DBT_DEVNODES_CHANGED<sp/>0x0007</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Win32<sp/>message<sp/>handler<sp/>(process<sp/>Win32<sp/>mouse/keyboard<sp/>inputs,<sp/>etc.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Call<sp/>from<sp/>your<sp/>application&apos;s<sp/>message<sp/>handler.<sp/>Keep<sp/>calling<sp/>your<sp/>message<sp/>handler<sp/>unless<sp/>this<sp/>function<sp/>returns<sp/>TRUE.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight><highlight class="comment">//<sp/>When<sp/>implementing<sp/>your<sp/>own<sp/>backend,<sp/>you<sp/>can<sp/>read<sp/>the<sp/>io.WantCaptureMouse,<sp/>io.WantCaptureKeyboard<sp/>flags<sp/>to<sp/>tell<sp/>if<sp/>Dear<sp/>ImGui<sp/>wants<sp/>to<sp/>use<sp/>your<sp/>inputs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>When<sp/>io.WantCaptureMouse<sp/>is<sp/>true,<sp/>do<sp/>not<sp/>dispatch<sp/>mouse<sp/>input<sp/>data<sp/>to<sp/>your<sp/>main<sp/>application,<sp/>or<sp/>clear/overwrite<sp/>your<sp/>copy<sp/>of<sp/>the<sp/>mouse<sp/>data.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>When<sp/>io.WantCaptureKeyboard<sp/>is<sp/>true,<sp/>do<sp/>not<sp/>dispatch<sp/>keyboard<sp/>input<sp/>data<sp/>to<sp/>your<sp/>main<sp/>application,<sp/>or<sp/>clear/overwrite<sp/>your<sp/>copy<sp/>of<sp/>the<sp/>keyboard<sp/>data.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Generally<sp/>you<sp/>may<sp/>always<sp/>pass<sp/>all<sp/>inputs<sp/>to<sp/>Dear<sp/>ImGui,<sp/>and<sp/>hide<sp/>them<sp/>from<sp/>your<sp/>application<sp/>based<sp/>on<sp/>those<sp/>two<sp/>flags.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight><highlight class="comment">//<sp/>PS:<sp/>In<sp/>this<sp/>Win32<sp/>handler,<sp/>we<sp/>use<sp/>the<sp/>capture<sp/>API<sp/>(GetCapture/SetCapture/ReleaseCapture)<sp/>to<sp/>be<sp/>able<sp/>to<sp/>read<sp/>mouse<sp/>coordinates<sp/>when<sp/>dragging<sp/>mouse<sp/>outside<sp/>of<sp/>our<sp/>window<sp/>bounds.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight><highlight class="comment">//<sp/>PS:<sp/>We<sp/>treat<sp/>DBLCLK<sp/>messages<sp/>as<sp/>regular<sp/>mouse<sp/>down<sp/>messages,<sp/>so<sp/>this<sp/>code<sp/>will<sp/>work<sp/>on<sp/>windows<sp/>classes<sp/>that<sp/>have<sp/>the<sp/>CS_DBLCLKS<sp/>flag<sp/>set.<sp/>Our<sp/>own<sp/>example<sp/>app<sp/>code<sp/>doesn&apos;t<sp/>set<sp/>this<sp/>flag.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copy<sp/>this<sp/>line<sp/>into<sp/>your<sp/>.cpp<sp/>file<sp/>to<sp/>forward<sp/>declare<sp/>the<sp/>function.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1a665f6b404eea9a640b1222a87236fe19" kindref="member">IMGUI_IMPL_API</ref><sp/>LRESULT<sp/><ref refid="imgui__impl__win32_8cpp_1ab9ddbf7758dbd8965e0f6a9ac8c0ea1a" kindref="member">ImGui_ImplWin32_WndProcHandler</ref>(<ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>*<sp/>ctx,<sp/>HWND<sp/>hWnd,<sp/>UINT<sp/>msg,<sp/>WPARAM<sp/>wParam,<sp/>LPARAM<sp/>lParam);</highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>https://learn.microsoft.com/en-us/windows/win32/tablet/system-events-and-mouse-messages</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Prefer<sp/>to<sp/>call<sp/>this<sp/>at<sp/>the<sp/>top<sp/>of<sp/>the<sp/>message<sp/>handler<sp/>to<sp/>avoid<sp/>the<sp/>possibility<sp/>of<sp/>other<sp/>Win32<sp/>calls<sp/>interfering<sp/>with<sp/>this.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1a3a993a8d676ceae7ca25c4957be9600b" kindref="member">ImGuiMouseSource</ref><sp/>GetMouseSourceFromMessageExtraInfo()</highlight></codeline>
<codeline lineno="562"><highlight class="normal">{</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/>LPARAM<sp/>extra_info<sp/>=<sp/>::GetMessageExtraInfo();</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((extra_info<sp/>&amp;<sp/>0xFFFFFF80)<sp/>==<sp/>0xFF515700)</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1a3a993a8d676ceae7ca25c4957be9600ba789c112f07ad6d8b1985e49e2ebee94a" kindref="member">ImGuiMouseSource_Pen</ref>;</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((extra_info<sp/>&amp;<sp/>0xFFFFFF80)<sp/>==<sp/>0xFF515780)</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1a3a993a8d676ceae7ca25c4957be9600ba7446703eeb2be0a2e71aedbddc058b18" kindref="member">ImGuiMouseSource_TouchScreen</ref>;</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1a3a993a8d676ceae7ca25c4957be9600baf3bbf6ae4f9bad8a9856752f713b7dcb" kindref="member">ImGuiMouseSource_Mouse</ref>;</highlight></codeline>
<codeline lineno="569"><highlight class="normal">}</highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"><ref refid="imgui_8h_1a665f6b404eea9a640b1222a87236fe19" kindref="member">IMGUI_IMPL_API</ref><sp/>LRESULT<sp/><ref refid="imgui__impl__win32_8cpp_1ab9ddbf7758dbd8965e0f6a9ac8c0ea1a" kindref="member">ImGui_ImplWin32_WndProcHandler</ref>(<ref refid="struct_im_gui_context" kindref="compound">ImGuiContext</ref>*<sp/>ctx,<sp/>HWND<sp/>hwnd,<sp/>UINT<sp/>msg,<sp/>WPARAM<sp/>wParam,<sp/>LPARAM<sp/>lParam)</highlight></codeline>
<codeline lineno="572"><highlight class="normal">{</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui_8h_1acb09e7dc42e8e3cefb0ecaa197978920" kindref="member">IM_ASSERT</ref>(ctx<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui_i_o" kindref="compound">ImGuiIO</ref>&amp;<sp/>io<sp/>=<sp/><ref refid="namespace_im_gui_1a447aaaa626101bcb4057ab7fad5c63b2" kindref="member">ImGui::GetIO</ref>(ctx);</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_im_gui___impl_win32___data" kindref="compound">ImGui_ImplWin32_Data</ref>*<sp/>bd<sp/>=<sp/>ImGui_ImplWin32_GetBackendData(ctx);</highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(msg)</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WM_MOUSEMOVE:</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WM_NCMOUSEMOVE:</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>need<sp/>to<sp/>call<sp/>TrackMouseEvent<sp/>in<sp/>order<sp/>to<sp/>receive<sp/>WM_MOUSELEAVE<sp/>events</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imgui_8h_1a3a993a8d676ceae7ca25c4957be9600b" kindref="member">ImGuiMouseSource</ref><sp/>mouse_source<sp/>=<sp/>GetMouseSourceFromMessageExtraInfo();</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>area<sp/>=<sp/>(msg<sp/>==<sp/>WM_MOUSEMOVE)<sp/>?<sp/>1<sp/>:<sp/>2;</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bd-&gt;<ref refid="struct_im_gui___impl_win32___data_1adb9a1c9aec249e376290c7ae37ebca8a" kindref="member">MouseHwnd</ref><sp/>=<sp/>hwnd;</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bd-&gt;<ref refid="struct_im_gui___impl_win32___data_1a8e4cc11ebc1b86988195fab10dff3c38" kindref="member">MouseTrackedArea</ref><sp/>!=<sp/>area)</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TRACKMOUSEEVENT<sp/>tme_cancel<sp/>=<sp/>{<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(tme_cancel),<sp/>TME_CANCEL,<sp/>hwnd,<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TRACKMOUSEEVENT<sp/>tme_track<sp/>=<sp/>{<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(tme_track),<sp/>(DWORD)((area<sp/>==<sp/>2)<sp/>?<sp/>(TME_LEAVE<sp/>|<sp/>TME_NONCLIENT)<sp/>:<sp/>TME_LEAVE),<sp/>hwnd,<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bd-&gt;<ref refid="struct_im_gui___impl_win32___data_1a8e4cc11ebc1b86988195fab10dff3c38" kindref="member">MouseTrackedArea</ref><sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::TrackMouseEvent(&amp;tme_cancel);</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::TrackMouseEvent(&amp;tme_track);</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bd-&gt;<ref refid="struct_im_gui___impl_win32___data_1a8e4cc11ebc1b86988195fab10dff3c38" kindref="member">MouseTrackedArea</ref><sp/>=<sp/>area;</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>POINT<sp/>mouse_pos<sp/>=<sp/>{<sp/>(LONG)GET_X_LPARAM(lParam),<sp/>(LONG)GET_Y_LPARAM(lParam)<sp/>};</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(msg<sp/>==<sp/>WM_NCMOUSEMOVE<sp/>&amp;&amp;<sp/>::ScreenToClient(hwnd,<sp/>&amp;mouse_pos)<sp/>==<sp/>FALSE)<sp/></highlight><highlight class="comment">//<sp/>WM_NCMOUSEMOVE<sp/>are<sp/>provided<sp/>in<sp/>absolute<sp/>coordinates.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>io.<ref refid="struct_im_gui_i_o_1adc3cac2515e40a80c6dc961800ed221f" kindref="member">AddMouseSourceEvent</ref>(mouse_source);</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>io.<ref refid="struct_im_gui_i_o_1ab6423058bbb3503c3cf66e0e45ee606d" kindref="member">AddMousePosEvent</ref>((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)mouse_pos.x,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)mouse_pos.y);</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WM_MOUSELEAVE:</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WM_NCMOUSELEAVE:</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>area<sp/>=<sp/>(msg<sp/>==<sp/>WM_MOUSELEAVE)<sp/>?<sp/>1<sp/>:<sp/>2;</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bd-&gt;<ref refid="struct_im_gui___impl_win32___data_1a8e4cc11ebc1b86988195fab10dff3c38" kindref="member">MouseTrackedArea</ref><sp/>==<sp/>area)</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bd-&gt;<ref refid="struct_im_gui___impl_win32___data_1adb9a1c9aec249e376290c7ae37ebca8a" kindref="member">MouseHwnd</ref><sp/>==<sp/>hwnd)</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bd-&gt;<ref refid="struct_im_gui___impl_win32___data_1adb9a1c9aec249e376290c7ae37ebca8a" kindref="member">MouseHwnd</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bd-&gt;<ref refid="struct_im_gui___impl_win32___data_1a8e4cc11ebc1b86988195fab10dff3c38" kindref="member">MouseTrackedArea</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>io.<ref refid="struct_im_gui_i_o_1ab6423058bbb3503c3cf66e0e45ee606d" kindref="member">AddMousePosEvent</ref>(-FLT_MAX,<sp/>-FLT_MAX);</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WM_LBUTTONDOWN:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WM_LBUTTONDBLCLK:</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WM_RBUTTONDOWN:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WM_RBUTTONDBLCLK:</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WM_MBUTTONDOWN:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WM_MBUTTONDBLCLK:</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WM_XBUTTONDOWN:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WM_XBUTTONDBLCLK:</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imgui_8h_1a3a993a8d676ceae7ca25c4957be9600b" kindref="member">ImGuiMouseSource</ref><sp/>mouse_source<sp/>=<sp/>GetMouseSourceFromMessageExtraInfo();</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>button<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(msg<sp/>==<sp/>WM_LBUTTONDOWN<sp/>||<sp/>msg<sp/>==<sp/>WM_LBUTTONDBLCLK)<sp/>{<sp/>button<sp/>=<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(msg<sp/>==<sp/>WM_RBUTTONDOWN<sp/>||<sp/>msg<sp/>==<sp/>WM_RBUTTONDBLCLK)<sp/>{<sp/>button<sp/>=<sp/>1;<sp/>}</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(msg<sp/>==<sp/>WM_MBUTTONDOWN<sp/>||<sp/>msg<sp/>==<sp/>WM_MBUTTONDBLCLK)<sp/>{<sp/>button<sp/>=<sp/>2;<sp/>}</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(msg<sp/>==<sp/>WM_XBUTTONDOWN<sp/>||<sp/>msg<sp/>==<sp/>WM_XBUTTONDBLCLK)<sp/>{<sp/>button<sp/>=<sp/>(GET_XBUTTON_WPARAM(wParam)<sp/>==<sp/>XBUTTON1)<sp/>?<sp/>3<sp/>:<sp/>4;<sp/>}</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bd-&gt;<ref refid="struct_im_gui___impl_win32___data_1a56520b5fef030910fe4fe9af03a31bf8" kindref="member">MouseButtonsDown</ref><sp/>==<sp/>0<sp/>&amp;&amp;<sp/>::GetCapture()<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::SetCapture(hwnd);</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bd-&gt;<ref refid="struct_im_gui___impl_win32___data_1a56520b5fef030910fe4fe9af03a31bf8" kindref="member">MouseButtonsDown</ref><sp/>|=<sp/>1<sp/>&lt;&lt;<sp/>button;</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>io.<ref refid="struct_im_gui_i_o_1adc3cac2515e40a80c6dc961800ed221f" kindref="member">AddMouseSourceEvent</ref>(mouse_source);</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>io.<ref refid="struct_im_gui_i_o_1a9fa5df74047424bb03d7cb29c6fb6ea1" kindref="member">AddMouseButtonEvent</ref>(button,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WM_LBUTTONUP:</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WM_RBUTTONUP:</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WM_MBUTTONUP:</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WM_XBUTTONUP:</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imgui_8h_1a3a993a8d676ceae7ca25c4957be9600b" kindref="member">ImGuiMouseSource</ref><sp/>mouse_source<sp/>=<sp/>GetMouseSourceFromMessageExtraInfo();</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>button<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(msg<sp/>==<sp/>WM_LBUTTONUP)<sp/>{<sp/>button<sp/>=<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(msg<sp/>==<sp/>WM_RBUTTONUP)<sp/>{<sp/>button<sp/>=<sp/>1;<sp/>}</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(msg<sp/>==<sp/>WM_MBUTTONUP)<sp/>{<sp/>button<sp/>=<sp/>2;<sp/>}</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(msg<sp/>==<sp/>WM_XBUTTONUP)<sp/>{<sp/>button<sp/>=<sp/>(GET_XBUTTON_WPARAM(wParam)<sp/>==<sp/>XBUTTON1)<sp/>?<sp/>3<sp/>:<sp/>4;<sp/>}</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bd-&gt;<ref refid="struct_im_gui___impl_win32___data_1a56520b5fef030910fe4fe9af03a31bf8" kindref="member">MouseButtonsDown</ref><sp/>&amp;=<sp/>~(1<sp/>&lt;&lt;<sp/>button);</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bd-&gt;<ref refid="struct_im_gui___impl_win32___data_1a56520b5fef030910fe4fe9af03a31bf8" kindref="member">MouseButtonsDown</ref><sp/>==<sp/>0<sp/>&amp;&amp;<sp/>::GetCapture()<sp/>==<sp/>hwnd)</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::ReleaseCapture();</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>io.<ref refid="struct_im_gui_i_o_1adc3cac2515e40a80c6dc961800ed221f" kindref="member">AddMouseSourceEvent</ref>(mouse_source);</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>io.<ref refid="struct_im_gui_i_o_1a9fa5df74047424bb03d7cb29c6fb6ea1" kindref="member">AddMouseButtonEvent</ref>(button,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WM_MOUSEWHEEL:</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>io.<ref refid="struct_im_gui_i_o_1a3c5ad00141194e3a01c9efbcb53cd5a1" kindref="member">AddMouseWheelEvent</ref>(0.0f,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)GET_WHEEL_DELTA_WPARAM(wParam)<sp/>/<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)WHEEL_DELTA);</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="imgui__impl__win32_8cpp_1a7b2918d422b3a1fe86a641f74818bb55" kindref="member">WM_MOUSEHWHEEL</ref>:</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>io.<ref refid="struct_im_gui_i_o_1a3c5ad00141194e3a01c9efbcb53cd5a1" kindref="member">AddMouseWheelEvent</ref>(-(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)GET_WHEEL_DELTA_WPARAM(wParam)<sp/>/<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)WHEEL_DELTA,<sp/>0.0f);</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WM_KEYDOWN:</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WM_KEYUP:</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WM_SYSKEYDOWN:</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WM_SYSKEYUP:</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_key_down<sp/>=<sp/>(msg<sp/>==<sp/>WM_KEYDOWN<sp/>||<sp/>msg<sp/>==<sp/>WM_SYSKEYDOWN);</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wParam<sp/>&lt;<sp/>256)</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Submit<sp/>modifiers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGui_ImplWin32_UpdateKeyModifiers(ctx);</highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Obtain<sp/>virtual<sp/>key<sp/>code</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(keypad<sp/>enter<sp/>doesn&apos;t<sp/>have<sp/>its<sp/>own...<sp/>VK_RETURN<sp/>with<sp/>KF_EXTENDED<sp/>flag<sp/>means<sp/>keypad<sp/>enter,<sp/>see<sp/>IM_VK_KEYPAD_ENTER<sp/>definition<sp/>for<sp/>details,<sp/>it<sp/>is<sp/>mapped<sp/>to<sp/>ImGuiKey_KeyPadEnter.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vk<sp/>=<sp/>(int)wParam;</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((wParam<sp/>==<sp/>VK_RETURN)<sp/>&amp;&amp;<sp/>(HIWORD(lParam)<sp/>&amp;<sp/>KF_EXTENDED))</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vk<sp/>=<sp/><ref refid="imgui__impl__win32_8cpp_1aa2e13f774782031f8b49ae0edca83d69" kindref="member">IM_VK_KEYPAD_ENTER</ref>;</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4" kindref="member">ImGuiKey</ref><sp/>key<sp/>=<sp/>ImGui_ImplWin32_VirtualKeyToImGuiKey(vk);</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>scancode<sp/>=<sp/>(int)LOBYTE(HIWORD(lParam));</highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Special<sp/>behavior<sp/>for<sp/>VK_SNAPSHOT<sp/>/<sp/>ImGuiKey_PrintScreen<sp/>as<sp/>Windows<sp/>doesn&apos;t<sp/>emit<sp/>the<sp/>key<sp/>down<sp/>event.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(key<sp/>==<sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4a5750c41cf823e0aaee459f6cf9fdaf76" kindref="member">ImGuiKey_PrintScreen</ref><sp/>&amp;&amp;<sp/>!is_key_down)</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGui_ImplWin32_AddKeyEvent(ctx,<sp/>key,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>vk,<sp/>scancode);</highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Submit<sp/>key<sp/>event</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(key<sp/>!=<sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4a4d0a38d835a8092eeb8bbe2f7c5e057d" kindref="member">ImGuiKey_None</ref>)</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGui_ImplWin32_AddKeyEvent(ctx,<sp/>key,<sp/>is_key_down,<sp/>vk,<sp/>scancode);</highlight></codeline>
<codeline lineno="684"><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Submit<sp/>individual<sp/>left/right<sp/>modifier<sp/>events</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vk<sp/>==<sp/>VK_SHIFT)</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Important:<sp/>Shift<sp/>keys<sp/>tend<sp/>to<sp/>get<sp/>stuck<sp/>when<sp/>pressed<sp/>together,<sp/>missing<sp/>key-up<sp/>events<sp/>are<sp/>corrected<sp/>in<sp/>ImGui_ImplWin32_ProcessKeyEventsWorkarounds()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(IsVkDown(VK_LSHIFT)<sp/>==<sp/>is_key_down)<sp/>{<sp/>ImGui_ImplWin32_AddKeyEvent(ctx,<sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4a12090d4d4d6d2a49f59d5cdcedc31653" kindref="member">ImGuiKey_LeftShift</ref>,<sp/>is_key_down,<sp/>VK_LSHIFT,<sp/>scancode);<sp/>}</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(IsVkDown(VK_RSHIFT)<sp/>==<sp/>is_key_down)<sp/>{<sp/>ImGui_ImplWin32_AddKeyEvent(ctx,<sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4a20c574bb154d150a7ce88b38d7d2a2ee" kindref="member">ImGuiKey_RightShift</ref>,<sp/>is_key_down,<sp/>VK_RSHIFT,<sp/>scancode);<sp/>}</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vk<sp/>==<sp/>VK_CONTROL)</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(IsVkDown(VK_LCONTROL)<sp/>==<sp/>is_key_down)<sp/>{<sp/>ImGui_ImplWin32_AddKeyEvent(ctx,<sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4ae6faf6703d8d8a05fbb6c8ed98b75260" kindref="member">ImGuiKey_LeftCtrl</ref>,<sp/>is_key_down,<sp/>VK_LCONTROL,<sp/>scancode);<sp/>}</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(IsVkDown(VK_RCONTROL)<sp/>==<sp/>is_key_down)<sp/>{<sp/>ImGui_ImplWin32_AddKeyEvent(ctx,<sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4a3a6391534b110b13ed9f9bb616683440" kindref="member">ImGuiKey_RightCtrl</ref>,<sp/>is_key_down,<sp/>VK_RCONTROL,<sp/>scancode);<sp/>}</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vk<sp/>==<sp/>VK_MENU)</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(IsVkDown(VK_LMENU)<sp/>==<sp/>is_key_down)<sp/>{<sp/>ImGui_ImplWin32_AddKeyEvent(ctx,<sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4af12706f51d5b1b373eb76d095acc0ef6" kindref="member">ImGuiKey_LeftAlt</ref>,<sp/>is_key_down,<sp/>VK_LMENU,<sp/>scancode);<sp/>}</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(IsVkDown(VK_RMENU)<sp/>==<sp/>is_key_down)<sp/>{<sp/>ImGui_ImplWin32_AddKeyEvent(ctx,<sp/><ref refid="imgui_8h_1aa22ffe36b188427d712447ec465203d4aafcf8801e7cb709a05be0e1b0dd487e2" kindref="member">ImGuiKey_RightAlt</ref>,<sp/>is_key_down,<sp/>VK_RMENU,<sp/>scancode);<sp/>}</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WM_SETFOCUS:</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WM_KILLFOCUS:</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>io.<ref refid="struct_im_gui_i_o_1a051243815ff6305cdcd3db8f84c2dfef" kindref="member">AddFocusEvent</ref>(msg<sp/>==<sp/>WM_SETFOCUS);</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WM_INPUTLANGCHANGE:</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGui_ImplWin32_UpdateKeyboardCodePage(ctx);</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WM_CHAR:</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(::IsWindowUnicode(hwnd))</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>You<sp/>can<sp/>also<sp/>use<sp/>ToAscii()+GetKeyboardState()<sp/>to<sp/>retrieve<sp/>characters.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wParam<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>wParam<sp/>&lt;<sp/>0x10000)</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>io.<ref refid="struct_im_gui_i_o_1a09ce496becb406f0fbe94dc35915af64" kindref="member">AddInputCharacterUTF16</ref>((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal">)wParam);</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>wch<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::MultiByteToWideChar(bd-&gt;<ref refid="struct_im_gui___impl_win32___data_1a47341927f3324620368575f0888b32d6" kindref="member">KeyboardCodePage</ref>,<sp/>MB_PRECOMPOSED,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)&amp;wParam,<sp/>1,<sp/>&amp;wch,<sp/>1);</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>io.<ref refid="struct_im_gui_i_o_1a0ded7ab1043ea14b65e1d81819878ccc" kindref="member">AddInputCharacter</ref>(wch);</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WM_SETCURSOR:</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>required<sp/>to<sp/>restore<sp/>cursor<sp/>when<sp/>transitioning<sp/>from<sp/>e.g<sp/>resize<sp/>borders<sp/>to<sp/>client<sp/>area.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(LOWORD(lParam)<sp/>==<sp/>HTCLIENT<sp/>&amp;&amp;<sp/>ImGui_ImplWin32_UpdateMouseCursor(ctx))</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WM_DEVICECHANGE:</highlight></codeline>
<codeline lineno="732"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>IMGUI_IMPL_WIN32_DISABLE_GAMEPAD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((UINT)wParam<sp/>==<sp/><ref refid="imgui__impl__win32_8cpp_1a454522b0cfb3a366cc14230e62be3e94" kindref="member">DBT_DEVNODES_CHANGED</ref>)</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bd-&gt;<ref refid="struct_im_gui___impl_win32___data_1a8ef3569b604731a30016d042121f30e0" kindref="member">WantUpdateHasGamepad</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="735"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="739"><highlight class="normal">}</highlight></codeline>
<codeline lineno="740"><highlight class="normal"></highlight></codeline>
<codeline lineno="741"><highlight class="normal"></highlight></codeline>
<codeline lineno="742"><highlight class="normal"></highlight><highlight class="comment">//--------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="743"><highlight class="normal"></highlight><highlight class="comment">//<sp/>DPI-related<sp/>helpers<sp/>(optional)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"></highlight><highlight class="comment">//--------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>Use<sp/>to<sp/>enable<sp/>DPI<sp/>awareness<sp/>without<sp/>having<sp/>to<sp/>create<sp/>an<sp/>application<sp/>manifest.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>Your<sp/>own<sp/>app<sp/>may<sp/>already<sp/>do<sp/>this<sp/>via<sp/>a<sp/>manifest<sp/>or<sp/>explicit<sp/>calls.<sp/>This<sp/>is<sp/>mostly<sp/>useful<sp/>for<sp/>our<sp/>examples/<sp/>apps.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>In<sp/>theory<sp/>we<sp/>could<sp/>call<sp/>simple<sp/>functions<sp/>from<sp/>Windows<sp/>SDK<sp/>such<sp/>as<sp/>SetProcessDPIAware(),<sp/>SetProcessDpiAwareness(),<sp/>etc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>but<sp/>most<sp/>of<sp/>the<sp/>functions<sp/>provided<sp/>by<sp/>Microsoft<sp/>require<sp/>Windows<sp/>8.1/10+<sp/>SDK<sp/>at<sp/>compile<sp/>time<sp/>and<sp/>Windows<sp/>8/10+<sp/>at<sp/>runtime,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>neither<sp/>we<sp/>want<sp/>to<sp/>require<sp/>the<sp/>user<sp/>to<sp/>have.<sp/>So<sp/>we<sp/>dynamically<sp/>select<sp/>and<sp/>load<sp/>those<sp/>functions<sp/>to<sp/>avoid<sp/>dependencies.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>the<sp/>scheme<sp/>successfully<sp/>used<sp/>by<sp/>GLFW<sp/>(from<sp/>which<sp/>we<sp/>borrowed<sp/>some<sp/>of<sp/>the<sp/>code)<sp/>and<sp/>other<sp/>apps<sp/>aiming<sp/>to<sp/>be<sp/>highly<sp/>portable.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ImGui_ImplWin32_EnableDpiAwareness()<sp/>is<sp/>just<sp/>a<sp/>helper<sp/>called<sp/>by<sp/>main.cpp,<sp/>we<sp/>don&apos;t<sp/>call<sp/>it<sp/>automatically.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="753"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>you<sp/>are<sp/>trying<sp/>to<sp/>implement<sp/>your<sp/>own<sp/>backend<sp/>for<sp/>your<sp/>own<sp/>engine,<sp/>you<sp/>may<sp/>ignore<sp/>that<sp/>noise.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Perform<sp/>our<sp/>own<sp/>check<sp/>with<sp/>RtlVerifyVersionInfo()<sp/>instead<sp/>of<sp/>using<sp/>functions<sp/>from<sp/>&lt;VersionHelpers.h&gt;<sp/>as<sp/>they</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"></highlight><highlight class="comment">//<sp/>require<sp/>a<sp/>manifest<sp/>to<sp/>be<sp/>functional<sp/>for<sp/>checks<sp/>above<sp/>8.1.<sp/>See<sp/>https://github.com/ocornut/imgui/issues/4200</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="758"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>BOOL<sp/>_IsWindowsVersionOrGreater(WORD<sp/>major,<sp/>WORD<sp/>minor,<sp/>WORD)</highlight></codeline>
<codeline lineno="759"><highlight class="normal">{</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>LONG(WINAPI*<sp/>PFN_RtlVerifyVersionInfo)(OSVERSIONINFOEXW*,<sp/>ULONG,<sp/>ULONGLONG);</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PFN_RtlVerifyVersionInfo<sp/>RtlVerifyVersionInfoFn<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(RtlVerifyVersionInfoFn<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(HMODULE<sp/>ntdllModule<sp/>=<sp/>::GetModuleHandleA(</highlight><highlight class="stringliteral">&quot;ntdll.dll&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RtlVerifyVersionInfoFn<sp/>=<sp/>(PFN_RtlVerifyVersionInfo)GetProcAddress(ntdllModule,<sp/></highlight><highlight class="stringliteral">&quot;RtlVerifyVersionInfo&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(RtlVerifyVersionInfoFn<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FALSE;</highlight></codeline>
<codeline lineno="767"><highlight class="normal"></highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/>RTL_OSVERSIONINFOEXW<sp/>versionInfo<sp/>=<sp/>{<sp/>};</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/>ULONGLONG<sp/>conditionMask<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/>versionInfo.dwOSVersionInfoSize<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(RTL_OSVERSIONINFOEXW);</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/>versionInfo.dwMajorVersion<sp/>=<sp/>major;</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/>versionInfo.dwMinorVersion<sp/>=<sp/>minor;</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/>VER_SET_CONDITION(conditionMask,<sp/>VER_MAJORVERSION,<sp/>VER_GREATER_EQUAL);</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/>VER_SET_CONDITION(conditionMask,<sp/>VER_MINORVERSION,<sp/>VER_GREATER_EQUAL);</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(RtlVerifyVersionInfoFn(&amp;versionInfo,<sp/>VER_MAJORVERSION<sp/>|<sp/>VER_MINORVERSION,<sp/>conditionMask)<sp/>==<sp/>0)<sp/>?<sp/>TRUE<sp/>:<sp/>FALSE;</highlight></codeline>
<codeline lineno="776"><highlight class="normal">}</highlight></codeline>
<codeline lineno="777"><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_IsWindowsVistaOrGreater()<sp/><sp/><sp/>_IsWindowsVersionOrGreater(HIBYTE(0x0600),<sp/>LOBYTE(0x0600),<sp/>0)<sp/></highlight><highlight class="comment">//<sp/>_WIN32_WINNT_VISTA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="779"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_IsWindows8OrGreater()<sp/><sp/><sp/><sp/><sp/><sp/><sp/>_IsWindowsVersionOrGreater(HIBYTE(0x0602),<sp/>LOBYTE(0x0602),<sp/>0)<sp/></highlight><highlight class="comment">//<sp/>_WIN32_WINNT_WIN8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="780"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_IsWindows8Point1OrGreater()<sp/>_IsWindowsVersionOrGreater(HIBYTE(0x0603),<sp/>LOBYTE(0x0603),<sp/>0)<sp/></highlight><highlight class="comment">//<sp/>_WIN32_WINNT_WINBLUE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="781"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_IsWindows10OrGreater()<sp/><sp/><sp/><sp/><sp/><sp/>_IsWindowsVersionOrGreater(HIBYTE(0x0A00),<sp/>LOBYTE(0x0A00),<sp/>0)<sp/></highlight><highlight class="comment">//<sp/>_WIN32_WINNT_WINTHRESHOLD<sp/>/<sp/>_WIN32_WINNT_WIN10</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="782"><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>DPI_ENUMS_DECLARED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="784"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{<sp/><ref refid="imgui__impl__win32_8cpp_1a0b4072c3e306aab56e4b1f41f66ecfd0ab42f9fa8bef80716253ff5732f98d019" kindref="member">PROCESS_DPI_UNAWARE</ref><sp/>=<sp/>0,<sp/><ref refid="imgui__impl__win32_8cpp_1a0b4072c3e306aab56e4b1f41f66ecfd0a2690b1d0f73cd71a24c38dbccc99be8b" kindref="member">PROCESS_SYSTEM_DPI_AWARE</ref><sp/>=<sp/>1,<sp/><ref refid="imgui__impl__win32_8cpp_1a0b4072c3e306aab56e4b1f41f66ecfd0aad0077e9938715939b18fc533eeae097" kindref="member">PROCESS_PER_MONITOR_DPI_AWARE</ref><sp/>=<sp/>2<sp/>}<sp/><ref refid="imgui__impl__win32_8cpp_1a0b4072c3e306aab56e4b1f41f66ecfd0" kindref="member">PROCESS_DPI_AWARENESS</ref>;</highlight></codeline>
<codeline lineno="785"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{<sp/><ref refid="imgui__impl__win32_8cpp_1a6d3b6e6160452fd0315bf529461dadcfa75d3ba3b96559377e5cac23d6e380162" kindref="member">MDT_EFFECTIVE_DPI</ref><sp/>=<sp/>0,<sp/><ref refid="imgui__impl__win32_8cpp_1a6d3b6e6160452fd0315bf529461dadcfa7c555ba8472b1bcc44a2b8b7da7bc1c3" kindref="member">MDT_ANGULAR_DPI</ref><sp/>=<sp/>1,<sp/><ref refid="imgui__impl__win32_8cpp_1a6d3b6e6160452fd0315bf529461dadcfa3a8c01568cf5b17569b53587783e9851" kindref="member">MDT_RAW_DPI</ref><sp/>=<sp/>2,<sp/><ref refid="imgui__impl__win32_8cpp_1a6d3b6e6160452fd0315bf529461dadcfacf96ef9f03d6fbbef385b67cfbe2578f" kindref="member">MDT_DEFAULT</ref><sp/>=<sp/><ref refid="imgui__impl__win32_8cpp_1a6d3b6e6160452fd0315bf529461dadcfa75d3ba3b96559377e5cac23d6e380162" kindref="member">MDT_EFFECTIVE_DPI</ref><sp/>}<sp/><ref refid="imgui__impl__win32_8cpp_1a6d3b6e6160452fd0315bf529461dadcf" kindref="member">MONITOR_DPI_TYPE</ref>;</highlight></codeline>
<codeline lineno="786"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="787"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_DPI_AWARENESS_CONTEXTS_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="788"><highlight class="normal"><ref refid="imgui__impl__win32_8cpp_1a3d68bc19ea52dbb5682b42f9a3316189" kindref="member">DECLARE_HANDLE</ref>(DPI_AWARENESS_CONTEXT);</highlight></codeline>
<codeline lineno="789"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DPI_AWARENESS_CONTEXT_PER_MONITOR_AWARE<sp/><sp/><sp/><sp/>(DPI_AWARENESS_CONTEXT)-3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="791"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>DPI_AWARENESS_CONTEXT_PER_MONITOR_AWARE_V2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="792"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DPI_AWARENESS_CONTEXT_PER_MONITOR_AWARE_V2<sp/>(DPI_AWARENESS_CONTEXT)-4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="793"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>HRESULT(WINAPI*<sp/><ref refid="imgui__impl__win32_8cpp_1a36d30a5f5f7942a50b272fa13058cf96" kindref="member">PFN_SetProcessDpiAwareness</ref>)(<ref refid="imgui__impl__win32_8cpp_1a0b4072c3e306aab56e4b1f41f66ecfd0" kindref="member">PROCESS_DPI_AWARENESS</ref>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Shcore.lib<sp/>+<sp/>dll,<sp/>Windows<sp/>8.1+</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="795"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>HRESULT(WINAPI*<sp/><ref refid="imgui__impl__win32_8cpp_1a411247e61a6621babce2d06bb8a434db" kindref="member">PFN_GetDpiForMonitor</ref>)(HMONITOR,<sp/><ref refid="imgui__impl__win32_8cpp_1a6d3b6e6160452fd0315bf529461dadcf" kindref="member">MONITOR_DPI_TYPE</ref>,<sp/>UINT*,<sp/>UINT*);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Shcore.lib<sp/>+<sp/>dll,<sp/>Windows<sp/>8.1+</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>DPI_AWARENESS_CONTEXT(WINAPI*<sp/><ref refid="imgui__impl__win32_8cpp_1ac4fd09e8ec8568aa443549a1286800b1" kindref="member">PFN_SetThreadDpiAwarenessContext</ref>)(DPI_AWARENESS_CONTEXT);<sp/></highlight><highlight class="comment">//<sp/>User32.lib<sp/>+<sp/>dll,<sp/>Windows<sp/>10<sp/>v1607+<sp/>(Creators<sp/>Update)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"></highlight></codeline>
<codeline lineno="798"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helper<sp/>function<sp/>to<sp/>enable<sp/>DPI<sp/>awareness<sp/>without<sp/>setting<sp/>up<sp/>a<sp/>manifest</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="799"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="imgui__impl__win32_8cpp_1afda525ac1c8a2b4e357f19488f661014" kindref="member">ImGui_ImplWin32_EnableDpiAwareness</ref>()</highlight></codeline>
<codeline lineno="800"><highlight class="normal">{</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="imgui__impl__win32_8cpp_1a2b8cd4078bf40e54b53124033cf274a4" kindref="member">_IsWindows10OrGreater</ref>())</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>HINSTANCE<sp/>user32_dll<sp/>=<sp/>::LoadLibraryA(</highlight><highlight class="stringliteral">&quot;user32.dll&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>Reference<sp/>counted<sp/>per-process</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="imgui__impl__win32_8cpp_1ac4fd09e8ec8568aa443549a1286800b1" kindref="member">PFN_SetThreadDpiAwarenessContext</ref><sp/>SetThreadDpiAwarenessContextFn<sp/>=<sp/>(<ref refid="imgui__impl__win32_8cpp_1ac4fd09e8ec8568aa443549a1286800b1" kindref="member">PFN_SetThreadDpiAwarenessContext</ref>)::GetProcAddress(user32_dll,<sp/></highlight><highlight class="stringliteral">&quot;SetThreadDpiAwarenessContext&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetThreadDpiAwarenessContextFn(<ref refid="imgui__impl__win32_8cpp_1ac007743843b15f477f33dc5c3dd0507a" kindref="member">DPI_AWARENESS_CONTEXT_PER_MONITOR_AWARE_V2</ref>);</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="imgui__impl__win32_8cpp_1a7befc644ed0e43855853f48c1045e9d3" kindref="member">_IsWindows8Point1OrGreater</ref>())</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>HINSTANCE<sp/>shcore_dll<sp/>=<sp/>::LoadLibraryA(</highlight><highlight class="stringliteral">&quot;shcore.dll&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>Reference<sp/>counted<sp/>per-process</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="imgui__impl__win32_8cpp_1a36d30a5f5f7942a50b272fa13058cf96" kindref="member">PFN_SetProcessDpiAwareness</ref><sp/>SetProcessDpiAwarenessFn<sp/>=<sp/>(<ref refid="imgui__impl__win32_8cpp_1a36d30a5f5f7942a50b272fa13058cf96" kindref="member">PFN_SetProcessDpiAwareness</ref>)::GetProcAddress(shcore_dll,<sp/></highlight><highlight class="stringliteral">&quot;SetProcessDpiAwareness&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetProcessDpiAwarenessFn(<ref refid="imgui__impl__win32_8cpp_1a0b4072c3e306aab56e4b1f41f66ecfd0aad0077e9938715939b18fc533eeae097" kindref="member">PROCESS_PER_MONITOR_DPI_AWARE</ref>);</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="819"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>_WIN32_WINNT<sp/>&gt;=<sp/>0x0600</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/>::SetProcessDPIAware();</highlight></codeline>
<codeline lineno="821"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="822"><highlight class="normal">}</highlight></codeline>
<codeline lineno="823"><highlight class="normal"></highlight></codeline>
<codeline lineno="824"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(_MSC_VER)<sp/>&amp;&amp;<sp/>!defined(NOGDI)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="825"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>comment(lib,<sp/>&quot;gdi32&quot;)<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Link<sp/>with<sp/>gdi32.lib<sp/>for<sp/>GetDeviceCaps().<sp/>MinGW<sp/>will<sp/>require<sp/>linking<sp/>with<sp/>&apos;-lgdi32&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="827"><highlight class="normal"></highlight></codeline>
<codeline lineno="828"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="imgui__impl__win32_8cpp_1a765356269dc7e4f7f521d5f9c9bc42a5" kindref="member">ImGui_ImplWin32_GetDpiScaleForMonitor</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>monitor)</highlight></codeline>
<codeline lineno="829"><highlight class="normal">{</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/>UINT<sp/>xdpi<sp/>=<sp/>96,<sp/>ydpi<sp/>=<sp/>96;</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="imgui__impl__win32_8cpp_1a7befc644ed0e43855853f48c1045e9d3" kindref="member">_IsWindows8Point1OrGreater</ref>())</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>HINSTANCE<sp/>shcore_dll<sp/>=<sp/>::LoadLibraryA(</highlight><highlight class="stringliteral">&quot;shcore.dll&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>Reference<sp/>counted<sp/>per-process</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="imgui__impl__win32_8cpp_1a411247e61a6621babce2d06bb8a434db" kindref="member">PFN_GetDpiForMonitor</ref><sp/>GetDpiForMonitorFn<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(GetDpiForMonitorFn<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>shcore_dll<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetDpiForMonitorFn<sp/>=<sp/>(<ref refid="imgui__impl__win32_8cpp_1a411247e61a6621babce2d06bb8a434db" kindref="member">PFN_GetDpiForMonitor</ref>)::GetProcAddress(shcore_dll,<sp/></highlight><highlight class="stringliteral">&quot;GetDpiForMonitor&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(GetDpiForMonitorFn<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetDpiForMonitorFn((HMONITOR)monitor,<sp/><ref refid="imgui__impl__win32_8cpp_1a6d3b6e6160452fd0315bf529461dadcfa75d3ba3b96559377e5cac23d6e380162" kindref="member">MDT_EFFECTIVE_DPI</ref>,<sp/>&amp;xdpi,<sp/>&amp;ydpi);</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="imgui_8h_1acb09e7dc42e8e3cefb0ecaa197978920" kindref="member">IM_ASSERT</ref>(xdpi<sp/>==<sp/>ydpi);<sp/></highlight><highlight class="comment">//<sp/>Please<sp/>contact<sp/>me<sp/>if<sp/>you<sp/>hit<sp/>this<sp/>assert!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>xdpi<sp/>/<sp/>96.0f;</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="844"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NOGDI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>HDC<sp/>dc<sp/>=<sp/>::GetDC(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/>xdpi<sp/>=<sp/>::GetDeviceCaps(dc,<sp/>LOGPIXELSX);</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/>ydpi<sp/>=<sp/>::GetDeviceCaps(dc,<sp/>LOGPIXELSY);</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="imgui_8h_1acb09e7dc42e8e3cefb0ecaa197978920" kindref="member">IM_ASSERT</ref>(xdpi<sp/>==<sp/>ydpi);<sp/></highlight><highlight class="comment">//<sp/>Please<sp/>contact<sp/>me<sp/>if<sp/>you<sp/>hit<sp/>this<sp/>assert!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/>::ReleaseDC(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>dc);</highlight></codeline>
<codeline lineno="850"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>xdpi<sp/>/<sp/>96.0f;</highlight></codeline>
<codeline lineno="852"><highlight class="normal">}</highlight></codeline>
<codeline lineno="853"><highlight class="normal"></highlight></codeline>
<codeline lineno="854"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="imgui__impl__win32_8cpp_1a63408fa92e0f85dcf74b27ba6b81f7f4" kindref="member">ImGui_ImplWin32_GetDpiScaleForHwnd</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>hwnd)</highlight></codeline>
<codeline lineno="855"><highlight class="normal">{</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/>HMONITOR<sp/>monitor<sp/>=<sp/>::MonitorFromWindow((HWND)hwnd,<sp/>MONITOR_DEFAULTTONEAREST);</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imgui__impl__win32_8cpp_1a765356269dc7e4f7f521d5f9c9bc42a5" kindref="member">ImGui_ImplWin32_GetDpiScaleForMonitor</ref>(monitor);</highlight></codeline>
<codeline lineno="858"><highlight class="normal">}</highlight></codeline>
<codeline lineno="859"><highlight class="normal"></highlight></codeline>
<codeline lineno="860"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="861"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Transparency<sp/>related<sp/>helpers<sp/>(optional)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="862"><highlight class="normal"></highlight><highlight class="comment">//--------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="863"><highlight class="normal"></highlight></codeline>
<codeline lineno="864"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(_MSC_VER)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="865"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>comment(lib,<sp/>&quot;dwmapi&quot;)<sp/><sp/></highlight><highlight class="comment">//<sp/>Link<sp/>with<sp/>dwmapi.lib.<sp/>MinGW<sp/>will<sp/>require<sp/>linking<sp/>with<sp/>&apos;-ldwmapi&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="866"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="867"><highlight class="normal"></highlight></codeline>
<codeline lineno="868"><highlight class="normal"></highlight><highlight class="comment">//<sp/>[experimental]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="869"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Borrowed<sp/>from<sp/>GLFW&apos;s<sp/>function<sp/>updateFramebufferTransparency()<sp/>in<sp/>src/win32_window.c</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="870"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(the<sp/>Dwm*<sp/>functions<sp/>are<sp/>Vista<sp/>era<sp/>functions<sp/>but<sp/>we<sp/>are<sp/>borrowing<sp/>logic<sp/>from<sp/>GLFW)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="871"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="imgui__impl__win32_8cpp_1a726a328080634cc7b808de6b7e1cec9e" kindref="member">ImGui_ImplWin32_EnableAlphaCompositing</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>hwnd)</highlight></codeline>
<codeline lineno="872"><highlight class="normal">{</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="imgui__impl__win32_8cpp_1a742997db6a6fe03581d2244ea085618e" kindref="member">_IsWindowsVistaOrGreater</ref>())</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="875"><highlight class="normal"></highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOL<sp/>composition;</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(FAILED(::DwmIsCompositionEnabled(&amp;composition))<sp/>||<sp/>!composition)</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="879"><highlight class="normal"></highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOL<sp/>opaque;</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/>DWORD<sp/>color;</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="imgui__impl__win32_8cpp_1ae8ca9bc7824bd084363ae25af2df8991" kindref="member">_IsWindows8OrGreater</ref>()<sp/>||<sp/>(SUCCEEDED(::DwmGetColorizationColor(&amp;color,<sp/>&amp;opaque))<sp/>&amp;&amp;<sp/>!opaque))</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HRGN<sp/>region<sp/>=<sp/>::CreateRectRgn(0,<sp/>0,<sp/>-1,<sp/>-1);</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DWM_BLURBEHIND<sp/>bb<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bb.dwFlags<sp/>=<sp/>DWM_BB_ENABLE<sp/>|<sp/>DWM_BB_BLURREGION;</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bb.hRgnBlur<sp/>=<sp/>region;</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bb.fEnable<sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::DwmEnableBlurBehindWindow((HWND)hwnd,<sp/>&amp;bb);</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::DeleteObject(region);</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DWM_BLURBEHIND<sp/>bb<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bb.dwFlags<sp/>=<sp/>DWM_BB_ENABLE;</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::DwmEnableBlurBehindWindow((HWND)hwnd,<sp/>&amp;bb);</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="898"><highlight class="normal">}</highlight></codeline>
<codeline lineno="899"><highlight class="normal"></highlight></codeline>
<codeline lineno="900"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="901"><highlight class="normal"></highlight></codeline>
<codeline lineno="902"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>#ifndef<sp/>IMGUI_DISABLE</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="graphics/imgui/imgui_impl_win32.cpp"/>
  </compounddef>
</doxygen>
