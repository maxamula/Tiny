<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="scene_8cpp" kind="file" language="C++">
    <compoundname>scene.cpp</compoundname>
    <includes refid="scene_8h" local="yes">scene.h</includes>
    <incdepgraph>
      <node id="19">
        <label>../entt.hpp</label>
      </node>
      <node id="4">
        <label>content/content.h</label>
        <link refid="content_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>camera.h</label>
        <link refid="camera_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>engine/scene.cpp</label>
        <link refid="scene_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>scene.h</label>
        <link refid="scene_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>fx/shaderfx.h</label>
        <link refid="shaderfx_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>graphics/copyqueue.h</label>
        <link refid="copyqueue_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>graphics/descriptors.h</label>
        <link refid="descriptors_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>DirectXMath.h</label>
      </node>
      <node id="6">
        <label>atlbase.h</label>
      </node>
      <node id="5">
        <label>d3d12.h</label>
      </node>
      <node id="20">
        <label>d3dx12.hpp</label>
      </node>
      <node id="16">
        <label>dxcapi.h</label>
      </node>
      <node id="3">
        <label>entt.hpp</label>
      </node>
      <node id="14">
        <label>future</label>
      </node>
      <node id="9">
        <label>map</label>
      </node>
      <node id="10">
        <label>mutex</label>
      </node>
      <node id="17">
        <label>stdexcept</label>
      </node>
      <node id="22">
        <label>taskflow/taskflow.hpp</label>
      </node>
      <node id="7">
        <label>tuple</label>
      </node>
      <node id="11">
        <label>unordered_map</label>
      </node>
      <node id="21">
        <label>variant</label>
      </node>
      <node id="13">
        <label>vector</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacetiny">tiny</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="scene_8h" kindref="compound">scene.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetiny" kindref="compound">tiny</ref></highlight></codeline>
<codeline lineno="4"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5"><highlight class="normal"><sp/><sp/><sp/><sp/>entt::entity<sp/><ref refid="structtiny_1_1_scene_1a66a5f2693c80601529277bcef84b1ac4" kindref="member">Scene::CreateObject</ref>(entt::entity<sp/>entity,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>tag)</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>child<sp/>=<sp/>mRegistry.create();</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ComponentHierarchy&amp;<sp/>hierarchy<sp/>=<sp/>mRegistry.emplace&lt;ComponentHierarchy&gt;(child);</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hierarchy.parent<sp/>=<sp/>entity;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hierarchy.tag<sp/>=<sp/>tag;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mRegistry.get&lt;ComponentHierarchy&gt;(entity).children.push_back(child);</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>child;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>entt::entity<sp/><ref refid="structtiny_1_1_scene_1a66a5f2693c80601529277bcef84b1ac4" kindref="member">Scene::CreateObject</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>tag)</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>entity<sp/>=<sp/>mRegistry.create();</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ComponentHierarchy&amp;<sp/>hierarchy<sp/>=<sp/>mRegistry.emplace&lt;ComponentHierarchy&gt;(entity);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hierarchy.tag<sp/>=<sp/>tag;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtiny_1_1_scene_1a6f06c07dc15f0cc93d12165b2440ed98" kindref="member">mRootEntities</ref>.insert(entity);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>entity;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>DirectX::XMMATRIX<sp/><ref refid="structtiny_1_1_scene_1a828e1560e303c30cd8b0b01efb3c7f8d" kindref="member">Scene::GetWorldMatrix</ref>(entt::entity<sp/>entity)</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ComponentTransform&amp;<sp/>transform<sp/>=<sp/>mRegistry.get&lt;ComponentTransform&gt;(entity);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DirectX::XMMATRIX<sp/>worldMatrix<sp/>=<sp/>DirectX::XMMatrixScaling(transform.position.m128_f32[0],<sp/>transform.position.m128_f32[1],<sp/>transform.position.m128_f32[2])<sp/>*</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DirectX::XMMatrixRotationRollPitchYaw(transform.rotation.m128_f32[0],<sp/>transform.rotation.m128_f32[1],<sp/>transform.rotation.m128_f32[2])<sp/>*</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DirectX::XMMatrixTranslation(transform.scale.m128_f32[0],<sp/>transform.scale.m128_f32[1],<sp/>transform.scale.m128_f32[2]);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ComponentHierarchy&amp;<sp/>hierarchy<sp/>=<sp/>mRegistry.get&lt;ComponentHierarchy&gt;(entity);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hierarchy.parent<sp/>!=<sp/>entt::null)</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DirectX::XMMATRIX<sp/>parentMatrix<sp/>=<sp/><ref refid="structtiny_1_1_scene_1a828e1560e303c30cd8b0b01efb3c7f8d" kindref="member">GetWorldMatrix</ref>(hierarchy.parent);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>worldMatrix<sp/>=<sp/>worldMatrix<sp/>*<sp/>parentMatrix;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>worldMatrix;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*void<sp/>Scene::Present(tf::Subflow&amp;<sp/>sf)</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>auto<sp/>view<sp/>=<sp/>mRegistry.view&lt;ComponentGeometry,<sp/>ComponentMaterial&gt;().each();</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sf.for_each(view.begin(),<sp/>view.end(),<sp/>[](auto&amp;<sp/>entry)</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;Processing<sp/>object:<sp/>&quot;<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="48"><highlight class="comment"></highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mWriteIdx<sp/>=<sp/>(mWriteIdx<sp/>+<sp/>1)<sp/>%<sp/>TINY_SCENE_RING_BUFFER_COUNT;</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mReadIdx<sp/>=<sp/>(mReadIdx<sp/>+<sp/>1)<sp/>%<sp/>TINY_SCENE_RING_BUFFER_COUNT;</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/><sp/><sp/><sp/>}*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="engine/scene.cpp"/>
  </compounddef>
</doxygen>
