<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_generic_document" kind="class" language="C++" prot="public">
    <compoundname>GenericDocument</compoundname>
    <basecompoundref refid="class_generic_value" prot="public" virt="non-virtual">GenericValue&lt; Encoding, MemoryPoolAllocator&lt;&gt; &gt;</basecompoundref>
    <includes refid="document_8h" local="no">document.h</includes>
    <innerclass refid="struct_generic_document_1_1_clear_stack_on_exit" prot="private">GenericDocument::ClearStackOnExit</innerclass>
    <templateparamlist>
      <param>
        <type>typename <ref refid="classrapidjson_1_1_encoding" kindref="compound">Encoding</ref></type>
      </param>
      <param>
        <type>typename <ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref></type>
        <defval><ref refid="class_memory_pool_allocator" kindref="compound">MemoryPoolAllocator</ref>&lt;&gt;</defval>
      </param>
      <param>
        <type>typename StackAllocator</type>
        <defval><ref refid="class_crt_allocator" kindref="compound">CrtAllocator</ref></defval>
      </param>
    </templateparamlist>
    <sectiondef kind="user-defined">
      <header>Parse from stream</header>
      <memberdef kind="function" id="class_generic_document_1a7bc1827a7ab04de4789fe46237f0e921" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>unsigned</type>
            <declname>parseFlags</declname>
            <defname>parseFlags</defname>
          </param>
          <param>
            <type>typename SourceEncoding</type>
          </param>
          <param>
            <type>typename InputStream</type>
          </param>
        </templateparamlist>
        <type><ref refid="class_generic_document" kindref="compound">GenericDocument</ref> &amp;</type>
        <definition>GenericDocument &amp; GenericDocument&lt; Encoding, Allocator, StackAllocator &gt;::ParseStream</definition>
        <argsstring>(InputStream &amp;is)</argsstring>
        <name>ParseStream</name>
        <qualifiedname>GenericDocument::ParseStream</qualifiedname>
        <param>
          <type>InputStream &amp;</type>
          <declname>is</declname>
        </param>
        <briefdescription>
<para>Parse JSON text from an input stream (with <ref refid="classrapidjson_1_1_encoding" kindref="compound">Encoding</ref> conversion) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>parseFlags</parametername>
</parameternamelist>
<parameterdescription>
<para>Combination of <ref refid="reader_8h_1ab7be7dabe6ffcba60fad441505583450" kindref="member">ParseFlag</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>SourceEncoding</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classrapidjson_1_1_encoding" kindref="compound">Encoding</ref> of input stream </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>InputStream</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7" kindref="member">Type</ref> of input stream, implementing <ref refid="classrapidjson_1_1_stream" kindref="compound">Stream</ref> concept </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>is</parametername>
</parameternamelist>
<parameterdescription>
<para>Input stream to be parsed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The document itself for fluent API. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="content/cereal/external/rapidjson/document.h" line="2266" column="21" bodyfile="content/cereal/external/rapidjson/document.h" bodystart="2266" bodyend="2276"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_document_1a54d96ce0902d2afe033faebfd2863bbc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>unsigned</type>
            <declname>parseFlags</declname>
            <defname>parseFlags</defname>
          </param>
          <param>
            <type>typename InputStream</type>
          </param>
        </templateparamlist>
        <type><ref refid="class_generic_document" kindref="compound">GenericDocument</ref> &amp;</type>
        <definition>GenericDocument &amp; GenericDocument&lt; Encoding, Allocator, StackAllocator &gt;::ParseStream</definition>
        <argsstring>(InputStream &amp;is)</argsstring>
        <name>ParseStream</name>
        <qualifiedname>GenericDocument::ParseStream</qualifiedname>
        <param>
          <type>InputStream &amp;</type>
          <declname>is</declname>
        </param>
        <briefdescription>
<para>Parse JSON text from an input stream. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>parseFlags</parametername>
</parameternamelist>
<parameterdescription>
<para>Combination of <ref refid="reader_8h_1ab7be7dabe6ffcba60fad441505583450" kindref="member">ParseFlag</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>InputStream</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7" kindref="member">Type</ref> of input stream, implementing <ref refid="classrapidjson_1_1_stream" kindref="compound">Stream</ref> concept </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>is</parametername>
</parameternamelist>
<parameterdescription>
<para>Input stream to be parsed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The document itself for fluent API. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="content/cereal/external/rapidjson/document.h" line="2285" column="21" bodyfile="content/cereal/external/rapidjson/document.h" bodystart="2285" bodyend="2287"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_document_1a78f0a1448172e3e998778662e2beb0e3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename InputStream</type>
          </param>
        </templateparamlist>
        <type><ref refid="class_generic_document" kindref="compound">GenericDocument</ref> &amp;</type>
        <definition>GenericDocument &amp; GenericDocument&lt; Encoding, Allocator, StackAllocator &gt;::ParseStream</definition>
        <argsstring>(InputStream &amp;is)</argsstring>
        <name>ParseStream</name>
        <qualifiedname>GenericDocument::ParseStream</qualifiedname>
        <param>
          <type>InputStream &amp;</type>
          <declname>is</declname>
        </param>
        <briefdescription>
<para>Parse JSON text from an input stream (with <ref refid="reader_8h_1ab7be7dabe6ffcba60fad441505583450a9104b0946d648e9467cb7a967401ec80" kindref="member">kParseDefaultFlags</ref>) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>InputStream</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7" kindref="member">Type</ref> of input stream, implementing <ref refid="classrapidjson_1_1_stream" kindref="compound">Stream</ref> concept </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>is</parametername>
</parameternamelist>
<parameterdescription>
<para>Input stream to be parsed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The document itself for fluent API. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="content/cereal/external/rapidjson/document.h" line="2295" column="21" bodyfile="content/cereal/external/rapidjson/document.h" bodystart="2295" bodyend="2297"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="user-defined">
      <header>Parse in-place from mutable string</header>
      <memberdef kind="function" id="class_generic_document_1a13f68b1896a24eea4cdbc03a3916225f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>unsigned</type>
            <declname>parseFlags</declname>
            <defname>parseFlags</defname>
          </param>
        </templateparamlist>
        <type><ref refid="class_generic_document" kindref="compound">GenericDocument</ref> &amp;</type>
        <definition>GenericDocument &amp; GenericDocument&lt; Encoding, Allocator, StackAllocator &gt;::ParseInsitu</definition>
        <argsstring>(Ch *str)</argsstring>
        <name>ParseInsitu</name>
        <qualifiedname>GenericDocument::ParseInsitu</qualifiedname>
        <param>
          <type><ref refid="class_generic_document_1a6f5b0b7b6626508d094ae67490269700" kindref="member">Ch</ref> *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
<para>Parse JSON text from a mutable string. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>parseFlags</parametername>
</parameternamelist>
<parameterdescription>
<para>Combination of <ref refid="reader_8h_1ab7be7dabe6ffcba60fad441505583450" kindref="member">ParseFlag</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>Mutable zero-terminated string to be parsed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The document itself for fluent API. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="content/cereal/external/rapidjson/document.h" line="2309" column="21" bodyfile="content/cereal/external/rapidjson/document.h" bodystart="2309" bodyend="2312"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_document_1a9bd648666f9c538e272bc980aff1b807" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_generic_document" kindref="compound">GenericDocument</ref> &amp;</type>
        <definition>GenericDocument &amp; GenericDocument&lt; Encoding, Allocator, StackAllocator &gt;::ParseInsitu</definition>
        <argsstring>(Ch *str)</argsstring>
        <name>ParseInsitu</name>
        <qualifiedname>GenericDocument::ParseInsitu</qualifiedname>
        <param>
          <type><ref refid="class_generic_document_1a6f5b0b7b6626508d094ae67490269700" kindref="member">Ch</ref> *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
<para>Parse JSON text from a mutable string (with <ref refid="reader_8h_1ab7be7dabe6ffcba60fad441505583450a9104b0946d648e9467cb7a967401ec80" kindref="member">kParseDefaultFlags</ref>) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>Mutable zero-terminated string to be parsed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The document itself for fluent API. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="content/cereal/external/rapidjson/document.h" line="2318" column="21" bodyfile="content/cereal/external/rapidjson/document.h" bodystart="2318" bodyend="2320"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="user-defined">
      <header>Parse from read-only string</header>
      <memberdef kind="function" id="class_generic_document_1a901db1678f99a1b550003eed75bc380a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>unsigned</type>
            <declname>parseFlags</declname>
            <defname>parseFlags</defname>
          </param>
          <param>
            <type>typename SourceEncoding</type>
          </param>
        </templateparamlist>
        <type><ref refid="class_generic_document" kindref="compound">GenericDocument</ref> &amp;</type>
        <definition>GenericDocument &amp; GenericDocument&lt; Encoding, Allocator, StackAllocator &gt;::Parse</definition>
        <argsstring>(const typename SourceEncoding::Ch *str)</argsstring>
        <name>Parse</name>
        <qualifiedname>GenericDocument::Parse</qualifiedname>
        <param>
          <type>const typename SourceEncoding::Ch *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
<para>Parse JSON text from a read-only string (with <ref refid="classrapidjson_1_1_encoding" kindref="compound">Encoding</ref> conversion) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>parseFlags</parametername>
</parameternamelist>
<parameterdescription>
<para>Combination of <ref refid="reader_8h_1ab7be7dabe6ffcba60fad441505583450" kindref="member">ParseFlag</ref> (must not contain <ref refid="reader_8h_1ab7be7dabe6ffcba60fad441505583450a13188bd483b4df0b6582bebe2aeb5b01" kindref="member">kParseInsituFlag</ref>). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>SourceEncoding</parametername>
</parameternamelist>
<parameterdescription>
<para>Transcoding from input <ref refid="classrapidjson_1_1_encoding" kindref="compound">Encoding</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>Read-only zero-terminated string to be parsed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="content/cereal/external/rapidjson/document.h" line="2332" column="21" bodyfile="content/cereal/external/rapidjson/document.h" bodystart="2332" bodyend="2336"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_document_1a3c3977dcf15fafe17d57f6784e0ce2b5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>unsigned</type>
            <declname>parseFlags</declname>
            <defname>parseFlags</defname>
          </param>
        </templateparamlist>
        <type><ref refid="class_generic_document" kindref="compound">GenericDocument</ref> &amp;</type>
        <definition>GenericDocument &amp; GenericDocument&lt; Encoding, Allocator, StackAllocator &gt;::Parse</definition>
        <argsstring>(const Ch *str)</argsstring>
        <name>Parse</name>
        <qualifiedname>GenericDocument::Parse</qualifiedname>
        <param>
          <type>const <ref refid="class_generic_document_1a6f5b0b7b6626508d094ae67490269700" kindref="member">Ch</ref> *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
<para>Parse JSON text from a read-only string. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>parseFlags</parametername>
</parameternamelist>
<parameterdescription>
<para>Combination of <ref refid="reader_8h_1ab7be7dabe6ffcba60fad441505583450" kindref="member">ParseFlag</ref> (must not contain <ref refid="reader_8h_1ab7be7dabe6ffcba60fad441505583450a13188bd483b4df0b6582bebe2aeb5b01" kindref="member">kParseInsituFlag</ref>). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>Read-only zero-terminated string to be parsed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="content/cereal/external/rapidjson/document.h" line="2343" column="21" bodyfile="content/cereal/external/rapidjson/document.h" bodystart="2343" bodyend="2345"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_document_1afc8eb27bf748df642d27f5767ae4eaab" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_generic_document" kindref="compound">GenericDocument</ref> &amp;</type>
        <definition>GenericDocument &amp; GenericDocument&lt; Encoding, Allocator, StackAllocator &gt;::Parse</definition>
        <argsstring>(const Ch *str)</argsstring>
        <name>Parse</name>
        <qualifiedname>GenericDocument::Parse</qualifiedname>
        <param>
          <type>const <ref refid="class_generic_document_1a6f5b0b7b6626508d094ae67490269700" kindref="member">Ch</ref> *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
<para>Parse JSON text from a read-only string (with <ref refid="reader_8h_1ab7be7dabe6ffcba60fad441505583450a9104b0946d648e9467cb7a967401ec80" kindref="member">kParseDefaultFlags</ref>) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>Read-only zero-terminated string to be parsed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="content/cereal/external/rapidjson/document.h" line="2350" column="21" bodyfile="content/cereal/external/rapidjson/document.h" bodystart="2350" bodyend="2352"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_document_1ae9f7f4eeb5950d342e71bdca6437ff27" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>unsigned</type>
            <declname>parseFlags</declname>
            <defname>parseFlags</defname>
          </param>
          <param>
            <type>typename SourceEncoding</type>
          </param>
        </templateparamlist>
        <type><ref refid="class_generic_document" kindref="compound">GenericDocument</ref> &amp;</type>
        <definition>GenericDocument &amp; GenericDocument&lt; Encoding, Allocator, StackAllocator &gt;::Parse</definition>
        <argsstring>(const typename SourceEncoding::Ch *str, size_t length)</argsstring>
        <name>Parse</name>
        <qualifiedname>GenericDocument::Parse</qualifiedname>
        <param>
          <type>const typename SourceEncoding::Ch *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="content/cereal/external/rapidjson/document.h" line="2355" column="21" bodyfile="content/cereal/external/rapidjson/document.h" bodystart="2355" bodyend="2361"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_document_1a40ca30aefee5016888756cac60dec261" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>unsigned</type>
            <declname>parseFlags</declname>
            <defname>parseFlags</defname>
          </param>
        </templateparamlist>
        <type><ref refid="class_generic_document" kindref="compound">GenericDocument</ref> &amp;</type>
        <definition>GenericDocument &amp; GenericDocument&lt; Encoding, Allocator, StackAllocator &gt;::Parse</definition>
        <argsstring>(const Ch *str, size_t length)</argsstring>
        <name>Parse</name>
        <qualifiedname>GenericDocument::Parse</qualifiedname>
        <param>
          <type>const <ref refid="class_generic_document_1a6f5b0b7b6626508d094ae67490269700" kindref="member">Ch</ref> *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="content/cereal/external/rapidjson/document.h" line="2364" column="21" bodyfile="content/cereal/external/rapidjson/document.h" bodystart="2364" bodyend="2366"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_document_1a7b436b2c997ffaa7d965e6ecec2f7ae4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_generic_document" kindref="compound">GenericDocument</ref> &amp;</type>
        <definition>GenericDocument &amp; GenericDocument&lt; Encoding, Allocator, StackAllocator &gt;::Parse</definition>
        <argsstring>(const Ch *str, size_t length)</argsstring>
        <name>Parse</name>
        <qualifiedname>GenericDocument::Parse</qualifiedname>
        <param>
          <type>const <ref refid="class_generic_document_1a6f5b0b7b6626508d094ae67490269700" kindref="member">Ch</ref> *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="content/cereal/external/rapidjson/document.h" line="2368" column="21" bodyfile="content/cereal/external/rapidjson/document.h" bodystart="2368" bodyend="2370"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="user-defined">
      <header>Handling parse errors</header>
      <memberdef kind="function" id="class_generic_document_1a510a0588db4eb372f5d81bc3646578fb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool GenericDocument&lt; Encoding, Allocator, StackAllocator &gt;::HasParseError</definition>
        <argsstring>() const</argsstring>
        <name>HasParseError</name>
        <qualifiedname>GenericDocument::HasParseError</qualifiedname>
        <briefdescription>
<para>Whether a parse error has occurred in the last parsing. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="content/cereal/external/rapidjson/document.h" line="2395" column="10" bodyfile="content/cereal/external/rapidjson/document.h" bodystart="2395" bodyend="2395"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_document_1a9400a5bd3169cc6ed545e681ccc06070" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="group___c_e_r_e_a_l___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1ga8d4b32dfc45840bca189ade2bbcb6ba7" kindref="member">ParseErrorCode</ref></type>
        <definition>ParseErrorCode GenericDocument&lt; Encoding, Allocator, StackAllocator &gt;::GetParseError</definition>
        <argsstring>() const</argsstring>
        <name>GetParseError</name>
        <qualifiedname>GenericDocument::GetParseError</qualifiedname>
        <briefdescription>
<para>Get the <ref refid="group___c_e_r_e_a_l___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1ga8d4b32dfc45840bca189ade2bbcb6ba7" kindref="member">ParseErrorCode</ref> of last parsing. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="content/cereal/external/rapidjson/document.h" line="2398" column="20" bodyfile="content/cereal/external/rapidjson/document.h" bodystart="2398" bodyend="2398"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_document_1ae1ef7ca99ced428e9300c68e5142afdb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t GenericDocument&lt; Encoding, Allocator, StackAllocator &gt;::GetErrorOffset</definition>
        <argsstring>() const</argsstring>
        <name>GetErrorOffset</name>
        <qualifiedname>GenericDocument::GetErrorOffset</qualifiedname>
        <briefdescription>
<para>Get the position of last parsing error in input, 0 otherwise. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="content/cereal/external/rapidjson/document.h" line="2401" column="12" bodyfile="content/cereal/external/rapidjson/document.h" bodystart="2401" bodyend="2401"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_document_1af9bb8eade3eae0c039161378e8d2923a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>GenericDocument&lt; Encoding, Allocator, StackAllocator &gt;::operator ParseResult</definition>
        <argsstring>() const</argsstring>
        <name>operator ParseResult</name>
        <qualifiedname>GenericDocument::operator ParseResult</qualifiedname>
        <briefdescription>
<para>Implicit conversion to get the last parse result. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><ref refid="struct_parse_result" kindref="compound">ParseResult</ref> of the last parse operation</para>
</simplesect>
<programlisting><codeline><highlight class="normal"><ref refid="document_8h_1ac6ea5b168e3fe8c7fa532450fc9391f7" kindref="member">Document</ref><sp/>doc;</highlight></codeline>
<codeline><highlight class="normal">ParseResult<sp/>ok<sp/>=<sp/>doc.<ref refid="class_generic_document_1a901db1678f99a1b550003eed75bc380a" kindref="member">Parse</ref>(json);</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ok)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;JSON<sp/>parse<sp/>error:<sp/>%s<sp/>(%u)\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="group___c_e_r_e_a_l___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1ga0a32ff59b1edd6cdfe219c23e996974e" kindref="member">GetParseError_En</ref>(ok.<ref refid="struct_parse_result_1a2aae3c2f42b31cc2409ee1e03bc4852e" kindref="member">Code</ref>()),<sp/>ok.<ref refid="struct_parse_result_1afbe762766ac21b2aae266105f1dfa643" kindref="member">Offset</ref>());</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="content/cereal/external/rapidjson/document.h" line="2415" column="5" bodyfile="content/cereal/external/rapidjson/document.h" bodystart="2415" bodyend="2415"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_generic_document_1a6f5b0b7b6626508d094ae67490269700" prot="public" static="no">
        <type>Encoding::Ch</type>
        <definition>typedef Encoding::Ch GenericDocument&lt; Encoding, Allocator, StackAllocator &gt;::Ch</definition>
        <argsstring></argsstring>
        <name>Ch</name>
        <qualifiedname>GenericDocument::Ch</qualifiedname>
        <briefdescription>
<para>Character type derived from <ref refid="classrapidjson_1_1_encoding" kindref="compound">Encoding</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="content/cereal/external/rapidjson/document.h" line="2133" column="35" bodyfile="content/cereal/external/rapidjson/document.h" bodystart="2133" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_generic_document_1a8936205dc215dda029060d7e835e0549" prot="public" static="no">
        <type><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&lt; <ref refid="classrapidjson_1_1_encoding" kindref="compound">Encoding</ref>, <ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref> &gt;</type>
        <definition>typedef GenericValue&lt;Encoding, Allocator&gt; GenericDocument&lt; Encoding, Allocator, StackAllocator &gt;::ValueType</definition>
        <argsstring></argsstring>
        <name>ValueType</name>
        <qualifiedname>GenericDocument::ValueType</qualifiedname>
        <briefdescription>
<para><ref refid="document_8h_1a071cf97155ba72ac9a1fc4ad7e63d481" kindref="member">Value</ref> type of the document. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="content/cereal/external/rapidjson/document.h" line="2134" column="26" bodyfile="content/cereal/external/rapidjson/document.h" bodystart="2134" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_generic_document_1a35155b912da66ced38d22e2551364c57" prot="public" static="no">
        <type><ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref></type>
        <definition>typedef Allocator GenericDocument&lt; Encoding, Allocator, StackAllocator &gt;::AllocatorType</definition>
        <argsstring></argsstring>
        <name>AllocatorType</name>
        <qualifiedname>GenericDocument::AllocatorType</qualifiedname>
        <briefdescription>
<para><ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref> type from template parameter. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="content/cereal/external/rapidjson/document.h" line="2135" column="23" bodyfile="content/cereal/external/rapidjson/document.h" bodystart="2135" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="friend">
      <memberdef kind="friend" id="class_generic_document_1a899449e1a645b5e377af059fb61113d8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename</type>
          </param>
          <param>
            <type>typename</type>
          </param>
        </templateparamlist>
        <type>class</type>
        <definition>friend class GenericValue</definition>
        <argsstring></argsstring>
        <name>GenericValue</name>
        <qualifiedname>GenericDocument::GenericValue</qualifiedname>
        <param>
          <type><ref refid="class_generic_value" kindref="compound">GenericValue</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="content/cereal/external/rapidjson/document.h" line="2440" column="30" bodyfile="content/cereal/external/rapidjson/document.h" bodystart="2440" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="class_generic_document_1a3182978743c2e82408c76a3e3b9a83be" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void swap</definition>
        <argsstring>(GenericDocument &amp;a, GenericDocument &amp;b) CEREAL_RAPIDJSON_NOEXCEPT</argsstring>
        <name>swap</name>
        <qualifiedname>GenericDocument::swap</qualifiedname>
        <param>
          <type><ref refid="class_generic_document" kindref="compound">GenericDocument</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="class_generic_document" kindref="compound">GenericDocument</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>free-standing swap function helper </para>
        </briefdescription>
        <detaileddescription>
<para>Helper function to enable support for common swap implementation pattern based on <computeroutput>std::swap:</computeroutput> <programlisting><codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_generic_document_1a3182978743c2e82408c76a3e3b9a83be" kindref="member">swap</ref>(MyClass&amp;<sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>,<sp/>MyClass&amp;<sp/>b)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">std::swap;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_document_1a3182978743c2e82408c76a3e3b9a83be" kindref="member">swap</ref>(<ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>.doc,<sp/>b.doc);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>...</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> <simplesect kind="see"><para><ref refid="class_generic_document_1a52e66069197b23731a723b933869c013" kindref="member">Swap()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="content/cereal/external/rapidjson/document.h" line="2238" column="24" bodyfile="content/cereal/external/rapidjson/document.h" bodystart="2238" bodyend="2238"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="class_generic_document_1a90d452abe8940d8a9c9634d1c49d8f49" prot="private" static="yes" mutable="no">
        <type>const size_t</type>
        <definition>const size_t GenericDocument&lt; Encoding, Allocator, StackAllocator &gt;::kDefaultStackCapacity</definition>
        <argsstring></argsstring>
        <name>kDefaultStackCapacity</name>
        <qualifiedname>GenericDocument::kDefaultStackCapacity</qualifiedname>
        <initializer>= 1024</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="content/cereal/external/rapidjson/document.h" line="2505" column="25" bodyfile="content/cereal/external/rapidjson/document.h" bodystart="2505" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_generic_document_1a9b5f15fc75c8035612c37f796548e87a" prot="private" static="no" mutable="no">
        <type><ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref> *</type>
        <definition>Allocator* GenericDocument&lt; Encoding, Allocator, StackAllocator &gt;::allocator_</definition>
        <argsstring></argsstring>
        <name>allocator_</name>
        <qualifiedname>GenericDocument::allocator_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="content/cereal/external/rapidjson/document.h" line="2506" column="15" bodyfile="content/cereal/external/rapidjson/document.h" bodystart="2506" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_generic_document_1ada153f6865201106b3a753861c870266" prot="private" static="no" mutable="no">
        <type><ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref> *</type>
        <definition>Allocator* GenericDocument&lt; Encoding, Allocator, StackAllocator &gt;::ownAllocator_</definition>
        <argsstring></argsstring>
        <name>ownAllocator_</name>
        <qualifiedname>GenericDocument::ownAllocator_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="content/cereal/external/rapidjson/document.h" line="2507" column="15" bodyfile="content/cereal/external/rapidjson/document.h" bodystart="2507" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_generic_document_1ad2169359326bdf8a7180338fec77e77f" prot="private" static="no" mutable="no">
        <type><ref refid="classinternal_1_1_stack" kindref="compound">internal::Stack</ref>&lt; StackAllocator &gt;</type>
        <definition>internal::Stack&lt;StackAllocator&gt; GenericDocument&lt; Encoding, Allocator, StackAllocator &gt;::stack_</definition>
        <argsstring></argsstring>
        <name>stack_</name>
        <qualifiedname>GenericDocument::stack_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="content/cereal/external/rapidjson/document.h" line="2508" column="21" bodyfile="content/cereal/external/rapidjson/document.h" bodystart="2508" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_generic_document_1a499058f1c615928337d96cfaf374373e" prot="private" static="no" mutable="no">
        <type><ref refid="struct_parse_result" kindref="compound">ParseResult</ref></type>
        <definition>ParseResult GenericDocument&lt; Encoding, Allocator, StackAllocator &gt;::parseResult_</definition>
        <argsstring></argsstring>
        <name>parseResult_</name>
        <qualifiedname>GenericDocument::parseResult_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="content/cereal/external/rapidjson/document.h" line="2509" column="17" bodyfile="content/cereal/external/rapidjson/document.h" bodystart="2509" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_generic_document_1a3da21e72ec8f26b9da77d86cc1d41cdd" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>GenericDocument&lt; Encoding, Allocator, StackAllocator &gt;::GenericDocument</definition>
        <argsstring>(Type type, Allocator *allocator=0, size_t stackCapacity=kDefaultStackCapacity, StackAllocator *stackAllocator=0)</argsstring>
        <name>GenericDocument</name>
        <qualifiedname>GenericDocument::GenericDocument</qualifiedname>
        <param>
          <type><ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7" kindref="member">Type</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref> *</type>
          <declname>allocator</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>size_t</type>
          <declname>stackCapacity</declname>
          <defval>kDefaultStackCapacity</defval>
        </param>
        <param>
          <type>StackAllocator *</type>
          <declname>stackAllocator</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
<para>Creates an empty document of specified type. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>Mandatory type of object to create. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>allocator</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional allocator for allocating memory. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stackCapacity</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional initial capacity of stack in bytes. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stackAllocator</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional allocator for allocating memory for stack. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="content/cereal/external/rapidjson/document.h" line="2144" column="14" bodyfile="content/cereal/external/rapidjson/document.h" bodystart="2144" bodyend="2149"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_document_1a6b1c313ad538cafc4d23d4bd5f97178c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>GenericDocument&lt; Encoding, Allocator, StackAllocator &gt;::GenericDocument</definition>
        <argsstring>(Allocator *allocator=0, size_t stackCapacity=kDefaultStackCapacity, StackAllocator *stackAllocator=0)</argsstring>
        <name>GenericDocument</name>
        <qualifiedname>GenericDocument::GenericDocument</qualifiedname>
        <param>
          <type><ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref> *</type>
          <declname>allocator</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>size_t</type>
          <declname>stackCapacity</declname>
          <defval>kDefaultStackCapacity</defval>
        </param>
        <param>
          <type>StackAllocator *</type>
          <declname>stackAllocator</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
<para>Creates an empty document which type is Null. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>allocator</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional allocator for allocating memory. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stackCapacity</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional initial capacity of stack in bytes. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stackAllocator</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional allocator for allocating memory for stack. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="content/cereal/external/rapidjson/document.h" line="2157" column="5" bodyfile="content/cereal/external/rapidjson/document.h" bodystart="2157" bodyend="2162"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_document_1aa9f980909298a4de32f66526484820bf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>GenericDocument&lt; Encoding, Allocator, StackAllocator &gt;::~GenericDocument</definition>
        <argsstring>()</argsstring>
        <name>~GenericDocument</name>
        <qualifiedname>GenericDocument::~GenericDocument</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="content/cereal/external/rapidjson/document.h" line="2179" column="5" bodyfile="content/cereal/external/rapidjson/document.h" bodystart="2179" bodyend="2181"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_document_1a52e66069197b23731a723b933869c013" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_generic_document" kindref="compound">GenericDocument</ref> &amp;</type>
        <definition>GenericDocument &amp; GenericDocument&lt; Encoding, Allocator, StackAllocator &gt;::Swap</definition>
        <argsstring>(GenericDocument &amp;rhs) CEREAL_RAPIDJSON_NOEXCEPT</argsstring>
        <name>Swap</name>
        <qualifiedname>GenericDocument::Swap</qualifiedname>
        <param>
          <type><ref refid="class_generic_document" kindref="compound">GenericDocument</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Exchange the contents of this document with those of another. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rhs</parametername>
</parameternamelist>
<parameterdescription>
<para>Another document. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Constant complexity. </para>
</simplesect>
<simplesect kind="see"><para>GenericValue::Swap </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="content/cereal/external/rapidjson/document.h" line="2213" column="21" bodyfile="content/cereal/external/rapidjson/document.h" bodystart="2213" bodyend="2220"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_document_1ac30b4e8887974060b695be20c3ceb02c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Generator</type>
          </param>
        </templateparamlist>
        <type><ref refid="class_generic_document" kindref="compound">GenericDocument</ref> &amp;</type>
        <definition>GenericDocument &amp; GenericDocument&lt; Encoding, Allocator, StackAllocator &gt;::Populate</definition>
        <argsstring>(Generator &amp;g)</argsstring>
        <name>Populate</name>
        <qualifiedname>GenericDocument::Populate</qualifiedname>
        <param>
          <type>Generator &amp;</type>
          <declname>g</declname>
        </param>
        <briefdescription>
<para>Populate this document by a generator which produces SAX events. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Generator</parametername>
</parameternamelist>
<parameterdescription>
<para>A functor with <computeroutput>bool f(Handler)</computeroutput> prototype. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>g</parametername>
</parameternamelist>
<parameterdescription>
<para>Generator functor which sends SAX events to the parameter. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The document itself for fluent API. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="content/cereal/external/rapidjson/document.h" line="2246" column="21" bodyfile="content/cereal/external/rapidjson/document.h" bodystart="2246" bodyend="2253"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_document_1a1362cbdcce6ca37356744a3a0dbb11d6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref> &amp;</type>
        <definition>Allocator &amp; GenericDocument&lt; Encoding, Allocator, StackAllocator &gt;::GetAllocator</definition>
        <argsstring>()</argsstring>
        <name>GetAllocator</name>
        <qualifiedname>GenericDocument::GetAllocator</qualifiedname>
        <briefdescription>
<para>Get the allocator of this document. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="content/cereal/external/rapidjson/document.h" line="2419" column="15" bodyfile="content/cereal/external/rapidjson/document.h" bodystart="2419" bodyend="2422"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_document_1a9e2e543c326b8b981d4f2c3d6793d15b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t GenericDocument&lt; Encoding, Allocator, StackAllocator &gt;::GetStackCapacity</definition>
        <argsstring>() const</argsstring>
        <name>GetStackCapacity</name>
        <qualifiedname>GenericDocument::GetStackCapacity</qualifiedname>
        <briefdescription>
<para>Get the capacity of stack in bytes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="content/cereal/external/rapidjson/document.h" line="2425" column="12" bodyfile="content/cereal/external/rapidjson/document.h" bodystart="2425" bodyend="2425"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_document_1a87dc7f66b2b92660b8a43546733f9df2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool GenericDocument&lt; Encoding, Allocator, StackAllocator &gt;::Null</definition>
        <argsstring>()</argsstring>
        <name>Null</name>
        <qualifiedname>GenericDocument::Null</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="content/cereal/external/rapidjson/document.h" line="2444" column="10" bodyfile="content/cereal/external/rapidjson/document.h" bodystart="2444" bodyend="2444"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_document_1a4c44780642518dd34bd241a1ea0ceaf1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool GenericDocument&lt; Encoding, Allocator, StackAllocator &gt;::Bool</definition>
        <argsstring>(bool b)</argsstring>
        <name>Bool</name>
        <qualifiedname>GenericDocument::Bool</qualifiedname>
        <param>
          <type>bool</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="content/cereal/external/rapidjson/document.h" line="2445" column="10" bodyfile="content/cereal/external/rapidjson/document.h" bodystart="2445" bodyend="2445"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_document_1a8cc986266becaa268474c607489745c7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool GenericDocument&lt; Encoding, Allocator, StackAllocator &gt;::Int</definition>
        <argsstring>(int i)</argsstring>
        <name>Int</name>
        <qualifiedname>GenericDocument::Int</qualifiedname>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="content/cereal/external/rapidjson/document.h" line="2446" column="10" bodyfile="content/cereal/external/rapidjson/document.h" bodystart="2446" bodyend="2446"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_document_1a530dd899a04a00ba74f52507b488d2c1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool GenericDocument&lt; Encoding, Allocator, StackAllocator &gt;::Uint</definition>
        <argsstring>(unsigned i)</argsstring>
        <name>Uint</name>
        <qualifiedname>GenericDocument::Uint</qualifiedname>
        <param>
          <type>unsigned</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="content/cereal/external/rapidjson/document.h" line="2447" column="10" bodyfile="content/cereal/external/rapidjson/document.h" bodystart="2447" bodyend="2447"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_document_1a934b1b7a7ed89917615a5410db77a942" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool GenericDocument&lt; Encoding, Allocator, StackAllocator &gt;::Int64</definition>
        <argsstring>(int64_t i)</argsstring>
        <name>Int64</name>
        <qualifiedname>GenericDocument::Int64</qualifiedname>
        <param>
          <type><ref refid="stdint_8h_1a414156feea104f8f75b4ed9e3121b2f6" kindref="member">int64_t</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="content/cereal/external/rapidjson/document.h" line="2448" column="10" bodyfile="content/cereal/external/rapidjson/document.h" bodystart="2448" bodyend="2448"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_document_1a50ac3451a1afd0ce248dcc023d5e09e8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool GenericDocument&lt; Encoding, Allocator, StackAllocator &gt;::Uint64</definition>
        <argsstring>(uint64_t i)</argsstring>
        <name>Uint64</name>
        <qualifiedname>GenericDocument::Uint64</qualifiedname>
        <param>
          <type><ref refid="stdint_8h_1aec6fcb673ff035718c238c8c9d544c47" kindref="member">uint64_t</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="content/cereal/external/rapidjson/document.h" line="2449" column="10" bodyfile="content/cereal/external/rapidjson/document.h" bodystart="2449" bodyend="2449"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_document_1a934bf7a5d1ff062ab079756d842e4f6b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool GenericDocument&lt; Encoding, Allocator, StackAllocator &gt;::Double</definition>
        <argsstring>(double d)</argsstring>
        <name>Double</name>
        <qualifiedname>GenericDocument::Double</qualifiedname>
        <param>
          <type>double</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="content/cereal/external/rapidjson/document.h" line="2450" column="10" bodyfile="content/cereal/external/rapidjson/document.h" bodystart="2450" bodyend="2450"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_document_1af703994dec5af6ef049a24b5243aceab" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool GenericDocument&lt; Encoding, Allocator, StackAllocator &gt;::RawNumber</definition>
        <argsstring>(const Ch *str, SizeType length, bool copy)</argsstring>
        <name>RawNumber</name>
        <qualifiedname>GenericDocument::RawNumber</qualifiedname>
        <param>
          <type>const <ref refid="class_generic_document_1a6f5b0b7b6626508d094ae67490269700" kindref="member">Ch</ref> *</type>
          <declname>str</declname>
        </param>
        <param>
          <type><ref refid="rapidjson_8h_1a8f194bfff5bcc5b4b0d483ff0504a336" kindref="member">SizeType</ref></type>
          <declname>length</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>copy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="content/cereal/external/rapidjson/document.h" line="2452" column="10" bodyfile="content/cereal/external/rapidjson/document.h" bodystart="2452" bodyend="2458"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_document_1ad319fcc9e13606b6795424b9374a7398" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool GenericDocument&lt; Encoding, Allocator, StackAllocator &gt;::String</definition>
        <argsstring>(const Ch *str, SizeType length, bool copy)</argsstring>
        <name>String</name>
        <qualifiedname>GenericDocument::String</qualifiedname>
        <param>
          <type>const <ref refid="class_generic_document_1a6f5b0b7b6626508d094ae67490269700" kindref="member">Ch</ref> *</type>
          <declname>str</declname>
        </param>
        <param>
          <type><ref refid="rapidjson_8h_1a8f194bfff5bcc5b4b0d483ff0504a336" kindref="member">SizeType</ref></type>
          <declname>length</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>copy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="content/cereal/external/rapidjson/document.h" line="2460" column="10" bodyfile="content/cereal/external/rapidjson/document.h" bodystart="2460" bodyend="2466"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_document_1abb1417fde52cc34cb340e3b50a3295da" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool GenericDocument&lt; Encoding, Allocator, StackAllocator &gt;::StartObject</definition>
        <argsstring>()</argsstring>
        <name>StartObject</name>
        <qualifiedname>GenericDocument::StartObject</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="content/cereal/external/rapidjson/document.h" line="2468" column="10" bodyfile="content/cereal/external/rapidjson/document.h" bodystart="2468" bodyend="2468"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_document_1a600d0950baabbcab11197cacb1459c7a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool GenericDocument&lt; Encoding, Allocator, StackAllocator &gt;::Key</definition>
        <argsstring>(const Ch *str, SizeType length, bool copy)</argsstring>
        <name>Key</name>
        <qualifiedname>GenericDocument::Key</qualifiedname>
        <param>
          <type>const <ref refid="class_generic_document_1a6f5b0b7b6626508d094ae67490269700" kindref="member">Ch</ref> *</type>
          <declname>str</declname>
        </param>
        <param>
          <type><ref refid="rapidjson_8h_1a8f194bfff5bcc5b4b0d483ff0504a336" kindref="member">SizeType</ref></type>
          <declname>length</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>copy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="content/cereal/external/rapidjson/document.h" line="2470" column="10" bodyfile="content/cereal/external/rapidjson/document.h" bodystart="2470" bodyend="2470"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_document_1a42f2df68f9c9d8b88a15b609716867d9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool GenericDocument&lt; Encoding, Allocator, StackAllocator &gt;::EndObject</definition>
        <argsstring>(SizeType memberCount)</argsstring>
        <name>EndObject</name>
        <qualifiedname>GenericDocument::EndObject</qualifiedname>
        <param>
          <type><ref refid="rapidjson_8h_1a8f194bfff5bcc5b4b0d483ff0504a336" kindref="member">SizeType</ref></type>
          <declname>memberCount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="content/cereal/external/rapidjson/document.h" line="2472" column="10" bodyfile="content/cereal/external/rapidjson/document.h" bodystart="2472" bodyend="2476"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_document_1ae12c513c61745ae731a47b1ca33db063" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool GenericDocument&lt; Encoding, Allocator, StackAllocator &gt;::StartArray</definition>
        <argsstring>()</argsstring>
        <name>StartArray</name>
        <qualifiedname>GenericDocument::StartArray</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="content/cereal/external/rapidjson/document.h" line="2478" column="10" bodyfile="content/cereal/external/rapidjson/document.h" bodystart="2478" bodyend="2478"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_document_1a14097c833bed1a9c7be064ea619c887f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool GenericDocument&lt; Encoding, Allocator, StackAllocator &gt;::EndArray</definition>
        <argsstring>(SizeType elementCount)</argsstring>
        <name>EndArray</name>
        <qualifiedname>GenericDocument::EndArray</qualifiedname>
        <param>
          <type><ref refid="rapidjson_8h_1a8f194bfff5bcc5b4b0d483ff0504a336" kindref="member">SizeType</ref></type>
          <declname>elementCount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="content/cereal/external/rapidjson/document.h" line="2480" column="10" bodyfile="content/cereal/external/rapidjson/document.h" bodystart="2480" bodyend="2484"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_generic_document_1a58dd6c300949aeb9627de7f9e34796db" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>GenericDocument&lt; Encoding, Allocator, StackAllocator &gt;::GenericDocument</definition>
        <argsstring>(const GenericDocument &amp;)</argsstring>
        <name>GenericDocument</name>
        <qualifiedname>GenericDocument::GenericDocument</qualifiedname>
        <param>
          <type>const <ref refid="class_generic_document" kindref="compound">GenericDocument</ref> &amp;</type>
        </param>
        <briefdescription>
<para>Prohibit copying. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="content/cereal/external/rapidjson/document.h" line="2488" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_document_1a78dfa0732175b3d721d97fdcf8ad66a6" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_generic_document" kindref="compound">GenericDocument</ref> &amp;</type>
        <definition>GenericDocument &amp; GenericDocument&lt; Encoding, Allocator, StackAllocator &gt;::operator=</definition>
        <argsstring>(const GenericDocument &amp;)</argsstring>
        <name>operator=</name>
        <qualifiedname>GenericDocument::operator=</qualifiedname>
        <param>
          <type>const <ref refid="class_generic_document" kindref="compound">GenericDocument</ref> &amp;</type>
        </param>
        <briefdescription>
<para>Prohibit assignment. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="content/cereal/external/rapidjson/document.h" line="2490" column="21"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_document_1aa6f040219ed1d4cdd48f7ed9353942a4" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void GenericDocument&lt; Encoding, Allocator, StackAllocator &gt;::ClearStack</definition>
        <argsstring>()</argsstring>
        <name>ClearStack</name>
        <qualifiedname>GenericDocument::ClearStack</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="content/cereal/external/rapidjson/document.h" line="2492" column="10" bodyfile="content/cereal/external/rapidjson/document.h" bodystart="2492" bodyend="2499"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_document_1ad72f36087f5129ad4b5321cf8418c923" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void GenericDocument&lt; Encoding, Allocator, StackAllocator &gt;::Destroy</definition>
        <argsstring>()</argsstring>
        <name>Destroy</name>
        <qualifiedname>GenericDocument::Destroy</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="content/cereal/external/rapidjson/document.h" line="2501" column="10" bodyfile="content/cereal/external/rapidjson/document.h" bodystart="2501" bodyend="2503"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>A document for parsing JSON text as DOM. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="note"><para>implements <ref refid="classrapidjson_1_1_handler" kindref="compound">Handler</ref> concept </para>
</simplesect>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername><ref refid="classrapidjson_1_1_encoding" kindref="compound">Encoding</ref></parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classrapidjson_1_1_encoding" kindref="compound">Encoding</ref> for both parsing and string storage. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref></parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref> for allocating memory for the DOM </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>StackAllocator</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref> for allocating memory for stack during parsing. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="warning"><para>Although <ref refid="class_generic_document" kindref="compound">GenericDocument</ref> inherits from <ref refid="class_generic_value" kindref="compound">GenericValue</ref>, the API does <bold>not</bold> provide any virtual functions, especially no virtual destructor. To avoid memory leaks, do not <computeroutput>delete</computeroutput> a <ref refid="class_generic_document" kindref="compound">GenericDocument</ref> object via a pointer to a <ref refid="class_generic_value" kindref="compound">GenericValue</ref>. </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>GenericDocument&lt; Encoding, Allocator, StackAllocator &gt;</label>
        <link refid="class_generic_document"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>GenericValue&lt; Encoding, MemoryPoolAllocator&lt;&gt; &gt;</label>
        <link refid="class_generic_value"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>GenericDocument&lt; Encoding, Allocator, StackAllocator &gt;</label>
        <link refid="class_generic_document"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>GenericMember&lt; Encoding, Allocator &gt;</label>
        <link refid="struct_generic_member"/>
        <childnode refid="11" relation="usage">
          <edgelabel>name</edgelabel>
          <edgelabel>value</edgelabel>
        </childnode>
      </node>
      <node id="13">
        <label>GenericValue&lt; Encoding, Allocator &gt;</label>
        <link refid="class_generic_value"/>
        <childnode refid="3" relation="usage">
          <edgelabel>data_</edgelabel>
        </childnode>
      </node>
      <node id="12">
        <label>GenericValue&lt; Encoding, Allocator &gt;::ArrayData</label>
        <link refid="struct_generic_value_1_1_array_data"/>
        <childnode refid="13" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>GenericValue&lt; Encoding, Allocator &gt;::Data</label>
        <link refid="union_generic_value_1_1_data"/>
        <childnode refid="4" relation="usage">
          <edgelabel>s</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>ss</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>n</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>o</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>a</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>f</edgelabel>
        </childnode>
      </node>
      <node id="14">
        <label>GenericValue&lt; Encoding, Allocator &gt;::Flag</label>
        <link refid="struct_generic_value_1_1_flag"/>
      </node>
      <node id="6">
        <label>GenericValue&lt; Encoding, Allocator &gt;::Number</label>
        <link refid="union_generic_value_1_1_number"/>
        <childnode refid="7" relation="usage">
          <edgelabel>i</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>u</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>GenericValue&lt; Encoding, Allocator &gt;::Number::I</label>
        <link refid="struct_generic_value_1_1_number_1_1_i"/>
      </node>
      <node id="8">
        <label>GenericValue&lt; Encoding, Allocator &gt;::Number::U</label>
        <link refid="struct_generic_value_1_1_number_1_1_u"/>
      </node>
      <node id="9">
        <label>GenericValue&lt; Encoding, Allocator &gt;::ObjectData</label>
        <link refid="struct_generic_value_1_1_object_data"/>
        <childnode refid="10" relation="usage">
          <edgelabel>members</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>GenericValue&lt; Encoding, Allocator &gt;::ShortString</label>
        <link refid="struct_generic_value_1_1_short_string"/>
      </node>
      <node id="4">
        <label>GenericValue&lt; Encoding, Allocator &gt;::String</label>
        <link refid="struct_generic_value_1_1_string"/>
      </node>
      <node id="2">
        <label>GenericValue&lt; Encoding, MemoryPoolAllocator&lt;&gt; &gt;</label>
        <link refid="class_generic_value"/>
        <childnode refid="3" relation="usage">
          <edgelabel>data_</edgelabel>
        </childnode>
      </node>
      <node id="11">
        <label>GenericValue&lt; rapidjson::Encoding, rapidjson::Allocator &gt;</label>
        <link refid="class_generic_value"/>
        <childnode refid="3" relation="usage">
          <edgelabel>data_</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="content/cereal/external/rapidjson/document.h" line="2131" column="1" bodyfile="content/cereal/external/rapidjson/document.h" bodystart="2131" bodyend="2510"/>
    <listofallmembers>
      <member refid="class_generic_document_1a9b5f15fc75c8035612c37f796548e87a" prot="private" virt="non-virtual"><scope>GenericDocument</scope><name>allocator_</name></member>
      <member refid="class_generic_document_1a35155b912da66ced38d22e2551364c57" prot="public" virt="non-virtual"><scope>GenericDocument</scope><name>AllocatorType</name></member>
      <member refid="class_generic_value_1a149e12992b8f6064c865a4cf55981b89" prot="public" virt="non-virtual"><scope>GenericDocument</scope><name>Array</name></member>
      <member refid="class_generic_document_1a4c44780642518dd34bd241a1ea0ceaf1" prot="public" virt="non-virtual"><scope>GenericDocument</scope><name>Bool</name></member>
      <member refid="class_generic_value_1aa88264424038ed2c012c3b762a686f01" prot="public" virt="non-virtual"><scope>GenericDocument</scope><name>CEREAL_RAPIDJSON_DISABLEIF_RETURN</name></member>
      <member refid="class_generic_document_1a6f5b0b7b6626508d094ae67490269700" prot="public" virt="non-virtual"><scope>GenericDocument</scope><name>Ch</name></member>
      <member refid="class_generic_document_1aa6f040219ed1d4cdd48f7ed9353942a4" prot="private" virt="non-virtual"><scope>GenericDocument</scope><name>ClearStack</name></member>
      <member refid="class_generic_value_1a8f1d2728de56600b5f3df596e2a8a181" prot="public" virt="non-virtual"><scope>GenericDocument</scope><name>ConstArray</name></member>
      <member refid="class_generic_value_1aac08c3e660a9036d3dcb8b10ff6c61f4" prot="public" virt="non-virtual"><scope>GenericDocument</scope><name>ConstMemberIterator</name></member>
      <member refid="class_generic_value_1a55ad310f5434e0e4a93df616b326ba7e" prot="public" virt="non-virtual"><scope>GenericDocument</scope><name>ConstObject</name></member>
      <member refid="class_generic_value_1a49010c6d6886f96ff0b0c51bccc7f6ea" prot="public" virt="non-virtual"><scope>GenericDocument</scope><name>ConstValueIterator</name></member>
      <member refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" prot="public" virt="non-virtual"><scope>GenericDocument</scope><name>data_</name></member>
      <member refid="class_generic_document_1ad72f36087f5129ad4b5321cf8418c923" prot="private" virt="non-virtual"><scope>GenericDocument</scope><name>Destroy</name></member>
      <member refid="class_generic_document_1a934bf7a5d1ff062ab079756d842e4f6b" prot="public" virt="non-virtual"><scope>GenericDocument</scope><name>Double</name></member>
      <member refid="class_generic_value_1a28c2cb8d04d12566c1af37597a46d209" prot="public" virt="non-virtual"><scope>GenericDocument</scope><name>EncodingType</name></member>
      <member refid="class_generic_document_1a14097c833bed1a9c7be064ea619c887f" prot="public" virt="non-virtual"><scope>GenericDocument</scope><name>EndArray</name></member>
      <member refid="class_generic_document_1a42f2df68f9c9d8b88a15b609716867d9" prot="public" virt="non-virtual"><scope>GenericDocument</scope><name>EndObject</name></member>
      <member refid="class_generic_document_1a3da21e72ec8f26b9da77d86cc1d41cdd" prot="public" virt="non-virtual"><scope>GenericDocument</scope><name>GenericDocument</name></member>
      <member refid="class_generic_document_1a6b1c313ad538cafc4d23d4bd5f97178c" prot="public" virt="non-virtual"><scope>GenericDocument</scope><name>GenericDocument</name></member>
      <member refid="class_generic_document_1a58dd6c300949aeb9627de7f9e34796db" prot="private" virt="non-virtual"><scope>GenericDocument</scope><name>GenericDocument</name></member>
      <member refid="class_generic_document_1a899449e1a645b5e377af059fb61113d8" prot="private" virt="non-virtual"><scope>GenericDocument</scope><name>GenericValue</name></member>
      <member refid="class_generic_value_1ae789c969de22511bb2234cff2709fcc1" prot="public" virt="non-virtual" ambiguityscope="GenericValue&lt; Encoding, MemoryPoolAllocator&lt;&gt; &gt;::"><scope>GenericDocument</scope><name>GenericValue</name></member>
      <member refid="class_generic_value_1a76c68b72723a06045776dbd425f9e8b6" prot="public" virt="non-virtual" ambiguityscope="GenericValue&lt; Encoding, MemoryPoolAllocator&lt;&gt; &gt;::"><scope>GenericDocument</scope><name>GenericValue</name></member>
      <member refid="class_generic_value_1a4c82aebe5364882378d6ef711beb390b" prot="public" virt="non-virtual" ambiguityscope="GenericValue&lt; Encoding, MemoryPoolAllocator&lt;&gt; &gt;::"><scope>GenericDocument</scope><name>GenericValue</name></member>
      <member refid="class_generic_value_1aab93865ca73eba49516ff01e6ba63774" prot="public" virt="non-virtual" ambiguityscope="GenericValue&lt; Encoding, MemoryPoolAllocator&lt;&gt; &gt;::"><scope>GenericDocument</scope><name>GenericValue</name></member>
      <member refid="class_generic_value_1a50f02561a7e6462fa33681a7ae9410a5" prot="public" virt="non-virtual" ambiguityscope="GenericValue&lt; Encoding, MemoryPoolAllocator&lt;&gt; &gt;::"><scope>GenericDocument</scope><name>GenericValue</name></member>
      <member refid="class_generic_value_1a06e8fc85f62ce6110e6d5638ee8d0246" prot="public" virt="non-virtual" ambiguityscope="GenericValue&lt; Encoding, MemoryPoolAllocator&lt;&gt; &gt;::"><scope>GenericDocument</scope><name>GenericValue</name></member>
      <member refid="class_generic_value_1af8b18704d89500daaf6d15d7fdb54562" prot="public" virt="non-virtual" ambiguityscope="GenericValue&lt; Encoding, MemoryPoolAllocator&lt;&gt; &gt;::"><scope>GenericDocument</scope><name>GenericValue</name></member>
      <member refid="class_generic_value_1a1c2ea09d784774c499d24e20de810fc0" prot="public" virt="non-virtual" ambiguityscope="GenericValue&lt; Encoding, MemoryPoolAllocator&lt;&gt; &gt;::"><scope>GenericDocument</scope><name>GenericValue</name></member>
      <member refid="class_generic_value_1a37c25568775f8e7239db58800861a89c" prot="public" virt="non-virtual" ambiguityscope="GenericValue&lt; Encoding, MemoryPoolAllocator&lt;&gt; &gt;::"><scope>GenericDocument</scope><name>GenericValue</name></member>
      <member refid="class_generic_value_1abb691e35678b2daf80eddc2870da37df" prot="public" virt="non-virtual" ambiguityscope="GenericValue&lt; Encoding, MemoryPoolAllocator&lt;&gt; &gt;::"><scope>GenericDocument</scope><name>GenericValue</name></member>
      <member refid="class_generic_value_1a85aea4ad0637f698ab81549aa3a5106b" prot="public" virt="non-virtual" ambiguityscope="GenericValue&lt; Encoding, MemoryPoolAllocator&lt;&gt; &gt;::"><scope>GenericDocument</scope><name>GenericValue</name></member>
      <member refid="class_generic_value_1a9ec2c7cda8c8845acfa3565c6b1b4e10" prot="public" virt="non-virtual" ambiguityscope="GenericValue&lt; Encoding, MemoryPoolAllocator&lt;&gt; &gt;::"><scope>GenericDocument</scope><name>GenericValue</name></member>
      <member refid="class_generic_value_1a9b72b2e3347d4cd77b16c3b45e8decf1" prot="public" virt="non-virtual" ambiguityscope="GenericValue&lt; Encoding, MemoryPoolAllocator&lt;&gt; &gt;::"><scope>GenericDocument</scope><name>GenericValue</name></member>
      <member refid="class_generic_value_1ad1eb24c3e9b960f879f86b48403063b4" prot="public" virt="non-virtual" ambiguityscope="GenericValue&lt; Encoding, MemoryPoolAllocator&lt;&gt; &gt;::"><scope>GenericDocument</scope><name>GenericValue</name></member>
      <member refid="class_generic_value_1aec18d2d07fbeccaa60f725bdb1ee5b80" prot="public" virt="non-virtual" ambiguityscope="GenericValue&lt; Encoding, MemoryPoolAllocator&lt;&gt; &gt;::"><scope>GenericDocument</scope><name>GenericValue</name></member>
      <member refid="class_generic_document_1a1362cbdcce6ca37356744a3a0dbb11d6" prot="public" virt="non-virtual"><scope>GenericDocument</scope><name>GetAllocator</name></member>
      <member refid="class_generic_value_1afc80c1fc91b546b2b2a1bce2591ad55b" prot="public" virt="non-virtual"><scope>GenericDocument</scope><name>GetElementsPointer</name></member>
      <member refid="class_generic_document_1ae1ef7ca99ced428e9300c68e5142afdb" prot="public" virt="non-virtual"><scope>GenericDocument</scope><name>GetErrorOffset</name></member>
      <member refid="class_generic_value_1a234f39f7320d3ac75a459638636f40c2" prot="public" virt="non-virtual"><scope>GenericDocument</scope><name>GetMembersPointer</name></member>
      <member refid="class_generic_document_1a9400a5bd3169cc6ed545e681ccc06070" prot="public" virt="non-virtual"><scope>GenericDocument</scope><name>GetParseError</name></member>
      <member refid="class_generic_document_1a9e2e543c326b8b981d4f2c3d6793d15b" prot="public" virt="non-virtual"><scope>GenericDocument</scope><name>GetStackCapacity</name></member>
      <member refid="class_generic_value_1a140a31b9a741843720ad51e76b3a1af2" prot="public" virt="non-virtual"><scope>GenericDocument</scope><name>GetStringPointer</name></member>
      <member refid="class_generic_document_1a510a0588db4eb372f5d81bc3646578fb" prot="public" virt="non-virtual"><scope>GenericDocument</scope><name>HasParseError</name></member>
      <member refid="class_generic_document_1a8cc986266becaa268474c607489745c7" prot="public" virt="non-virtual"><scope>GenericDocument</scope><name>Int</name></member>
      <member refid="class_generic_document_1a934b1b7a7ed89917615a5410db77a942" prot="public" virt="non-virtual"><scope>GenericDocument</scope><name>Int64</name></member>
      <member refid="class_generic_value_1af2d4de578b0dc4d3ed34d0384a1ab1f3af7d99965ba807c718b482a9a7fb28b47" prot="public" virt="non-virtual"><scope>GenericDocument</scope><name>kArrayFlag</name></member>
      <member refid="class_generic_value_1af2d4de578b0dc4d3ed34d0384a1ab1f3ac48966386b231124da7c3fb870e237ee" prot="public" virt="non-virtual"><scope>GenericDocument</scope><name>kBoolFlag</name></member>
      <member refid="class_generic_value_1af2d4de578b0dc4d3ed34d0384a1ab1f3a5d26a84f26833eafd0028c0102a388a9" prot="public" virt="non-virtual"><scope>GenericDocument</scope><name>kConstStringFlag</name></member>
      <member refid="class_generic_value_1af2d4de578b0dc4d3ed34d0384a1ab1f3a10ef921aef1773bc1f88796bf1828f92" prot="public" virt="non-virtual"><scope>GenericDocument</scope><name>kCopyFlag</name></member>
      <member refid="class_generic_value_1af2d4de578b0dc4d3ed34d0384a1ab1f3a10c83f7f191dce81bb0273adc0d838de" prot="public" virt="non-virtual"><scope>GenericDocument</scope><name>kCopyStringFlag</name></member>
      <member refid="class_generic_value_1a188f57bdb1923c1fefe74baa995871a3" prot="public" virt="non-virtual"><scope>GenericDocument</scope><name>kDefaultArrayCapacity</name></member>
      <member refid="class_generic_value_1a284d018914629aed9a4bd97fe2dc5899" prot="public" virt="non-virtual"><scope>GenericDocument</scope><name>kDefaultObjectCapacity</name></member>
      <member refid="class_generic_document_1a90d452abe8940d8a9c9634d1c49d8f49" prot="private" virt="non-virtual"><scope>GenericDocument</scope><name>kDefaultStackCapacity</name></member>
      <member refid="class_generic_value_1af2d4de578b0dc4d3ed34d0384a1ab1f3a70c741e7c488835892aa857f50090d7c" prot="public" virt="non-virtual"><scope>GenericDocument</scope><name>kDoubleFlag</name></member>
      <member refid="class_generic_document_1a600d0950baabbcab11197cacb1459c7a" prot="public" virt="non-virtual"><scope>GenericDocument</scope><name>Key</name></member>
      <member refid="class_generic_value_1af2d4de578b0dc4d3ed34d0384a1ab1f3a66d3877b074bb1a0455a6f6d3f7f91a3" prot="public" virt="non-virtual"><scope>GenericDocument</scope><name>kFalseFlag</name></member>
      <member refid="class_generic_value_1af2d4de578b0dc4d3ed34d0384a1ab1f3ae58a76d504c6a67566aebfa4a6bd2e55" prot="public" virt="non-virtual"><scope>GenericDocument</scope><name>kInlineStrFlag</name></member>
      <member refid="class_generic_value_1af2d4de578b0dc4d3ed34d0384a1ab1f3a87c567a71dfa5a63363d82d32346884a" prot="public" virt="non-virtual"><scope>GenericDocument</scope><name>kInt64Flag</name></member>
      <member refid="class_generic_value_1af2d4de578b0dc4d3ed34d0384a1ab1f3ae3fb211193e0067efaddeb5a067120fb" prot="public" virt="non-virtual"><scope>GenericDocument</scope><name>kIntFlag</name></member>
      <member refid="class_generic_value_1af2d4de578b0dc4d3ed34d0384a1ab1f3a8c5507cf143edac6e50abec2d89cc40d" prot="public" virt="non-virtual"><scope>GenericDocument</scope><name>kNullFlag</name></member>
      <member refid="class_generic_value_1af2d4de578b0dc4d3ed34d0384a1ab1f3ab7805b1908fd181afc8d70fe07b17e18" prot="public" virt="non-virtual"><scope>GenericDocument</scope><name>kNumberAnyFlag</name></member>
      <member refid="class_generic_value_1af2d4de578b0dc4d3ed34d0384a1ab1f3a29bc91c155577923abd8f19aa050058b" prot="public" virt="non-virtual"><scope>GenericDocument</scope><name>kNumberDoubleFlag</name></member>
      <member refid="class_generic_value_1af2d4de578b0dc4d3ed34d0384a1ab1f3aa4776df2584fe4f341b183cdf3e00a79" prot="public" virt="non-virtual"><scope>GenericDocument</scope><name>kNumberFlag</name></member>
      <member refid="class_generic_value_1af2d4de578b0dc4d3ed34d0384a1ab1f3ad117eb41bb8015a76aadf6149bbd8ce5" prot="public" virt="non-virtual"><scope>GenericDocument</scope><name>kNumberInt64Flag</name></member>
      <member refid="class_generic_value_1af2d4de578b0dc4d3ed34d0384a1ab1f3acfe8b720220d0a2e378683367386cbaf" prot="public" virt="non-virtual"><scope>GenericDocument</scope><name>kNumberIntFlag</name></member>
      <member refid="class_generic_value_1af2d4de578b0dc4d3ed34d0384a1ab1f3aaa1ee6a546d4db67f4bdef41d1f54f02" prot="public" virt="non-virtual"><scope>GenericDocument</scope><name>kNumberUint64Flag</name></member>
      <member refid="class_generic_value_1af2d4de578b0dc4d3ed34d0384a1ab1f3ae8c6c6286edf9c309e77af0ea0cf039c" prot="public" virt="non-virtual"><scope>GenericDocument</scope><name>kNumberUintFlag</name></member>
      <member refid="class_generic_value_1af2d4de578b0dc4d3ed34d0384a1ab1f3aba5811d4baeb56dc793a6510fe28748c" prot="public" virt="non-virtual"><scope>GenericDocument</scope><name>kObjectFlag</name></member>
      <member refid="class_generic_value_1af2d4de578b0dc4d3ed34d0384a1ab1f3aca24fa09485fa10b17071509a985ff01" prot="public" virt="non-virtual"><scope>GenericDocument</scope><name>kShortStringFlag</name></member>
      <member refid="class_generic_value_1af2d4de578b0dc4d3ed34d0384a1ab1f3af3bf3661275a38c86addba900c52dccb" prot="public" virt="non-virtual"><scope>GenericDocument</scope><name>kStringFlag</name></member>
      <member refid="class_generic_value_1af2d4de578b0dc4d3ed34d0384a1ab1f3a75dbcdbacc82f9379c602f0b6c41cf07" prot="public" virt="non-virtual"><scope>GenericDocument</scope><name>kTrueFlag</name></member>
      <member refid="class_generic_value_1af2d4de578b0dc4d3ed34d0384a1ab1f3a793e0bc40e0abe1ed8bcb3e6fbba65c2" prot="public" virt="non-virtual"><scope>GenericDocument</scope><name>kTypeMask</name></member>
      <member refid="class_generic_value_1af2d4de578b0dc4d3ed34d0384a1ab1f3ac9200c78f749b6efaae640167a370c94" prot="public" virt="non-virtual"><scope>GenericDocument</scope><name>kUint64Flag</name></member>
      <member refid="class_generic_value_1af2d4de578b0dc4d3ed34d0384a1ab1f3a7eba561e6cc6dcd704f907c5a005f3ce" prot="public" virt="non-virtual"><scope>GenericDocument</scope><name>kUintFlag</name></member>
      <member refid="class_generic_value_1a7ccf27c44058b4c11c3efc6473afb886" prot="public" virt="non-virtual"><scope>GenericDocument</scope><name>Member</name></member>
      <member refid="class_generic_value_1a349b8faae61edc42b4289726820be439" prot="public" virt="non-virtual"><scope>GenericDocument</scope><name>MemberIterator</name></member>
      <member refid="class_generic_document_1a87dc7f66b2b92660b8a43546733f9df2" prot="public" virt="non-virtual"><scope>GenericDocument</scope><name>Null</name></member>
      <member refid="class_generic_value_1aee3606d69d411ce0d98f29639585989b" prot="public" virt="non-virtual"><scope>GenericDocument</scope><name>Object</name></member>
      <member refid="class_generic_document_1af9bb8eade3eae0c039161378e8d2923a" prot="public" virt="non-virtual"><scope>GenericDocument</scope><name>operator ParseResult</name></member>
      <member refid="class_generic_document_1a78dfa0732175b3d721d97fdcf8ad66a6" prot="private" virt="non-virtual"><scope>GenericDocument</scope><name>operator=</name></member>
      <member refid="class_generic_value_1af75080e5cfdcd0de031fdabe32de788b" prot="public" virt="non-virtual" ambiguityscope="GenericValue&lt; Encoding, MemoryPoolAllocator&lt;&gt; &gt;::"><scope>GenericDocument</scope><name>operator=</name></member>
      <member refid="class_generic_value_1a918ea37e37ed7d051dbf91f29a8a8d57" prot="public" virt="non-virtual" ambiguityscope="GenericValue&lt; Encoding, MemoryPoolAllocator&lt;&gt; &gt;::"><scope>GenericDocument</scope><name>operator=</name></member>
      <member refid="class_generic_document_1ada153f6865201106b3a753861c870266" prot="private" virt="non-virtual"><scope>GenericDocument</scope><name>ownAllocator_</name></member>
      <member refid="class_generic_document_1a901db1678f99a1b550003eed75bc380a" prot="public" virt="non-virtual"><scope>GenericDocument</scope><name>Parse</name></member>
      <member refid="class_generic_document_1a3c3977dcf15fafe17d57f6784e0ce2b5" prot="public" virt="non-virtual"><scope>GenericDocument</scope><name>Parse</name></member>
      <member refid="class_generic_document_1afc8eb27bf748df642d27f5767ae4eaab" prot="public" virt="non-virtual"><scope>GenericDocument</scope><name>Parse</name></member>
      <member refid="class_generic_document_1ae9f7f4eeb5950d342e71bdca6437ff27" prot="public" virt="non-virtual"><scope>GenericDocument</scope><name>Parse</name></member>
      <member refid="class_generic_document_1a40ca30aefee5016888756cac60dec261" prot="public" virt="non-virtual"><scope>GenericDocument</scope><name>Parse</name></member>
      <member refid="class_generic_document_1a7b436b2c997ffaa7d965e6ecec2f7ae4" prot="public" virt="non-virtual"><scope>GenericDocument</scope><name>Parse</name></member>
      <member refid="class_generic_document_1a13f68b1896a24eea4cdbc03a3916225f" prot="public" virt="non-virtual"><scope>GenericDocument</scope><name>ParseInsitu</name></member>
      <member refid="class_generic_document_1a9bd648666f9c538e272bc980aff1b807" prot="public" virt="non-virtual"><scope>GenericDocument</scope><name>ParseInsitu</name></member>
      <member refid="class_generic_document_1a499058f1c615928337d96cfaf374373e" prot="private" virt="non-virtual"><scope>GenericDocument</scope><name>parseResult_</name></member>
      <member refid="class_generic_document_1a7bc1827a7ab04de4789fe46237f0e921" prot="public" virt="non-virtual"><scope>GenericDocument</scope><name>ParseStream</name></member>
      <member refid="class_generic_document_1a54d96ce0902d2afe033faebfd2863bbc" prot="public" virt="non-virtual"><scope>GenericDocument</scope><name>ParseStream</name></member>
      <member refid="class_generic_document_1a78f0a1448172e3e998778662e2beb0e3" prot="public" virt="non-virtual"><scope>GenericDocument</scope><name>ParseStream</name></member>
      <member refid="class_generic_document_1ac30b4e8887974060b695be20c3ceb02c" prot="public" virt="non-virtual"><scope>GenericDocument</scope><name>Populate</name></member>
      <member refid="class_generic_value_1a13572c15dfbeda3531647a4bb61f3fe4" prot="public" virt="non-virtual"><scope>GenericDocument</scope><name>RawAssign</name></member>
      <member refid="class_generic_document_1af703994dec5af6ef049a24b5243aceab" prot="public" virt="non-virtual"><scope>GenericDocument</scope><name>RawNumber</name></member>
      <member refid="class_generic_value_1a8f5f309065479de40a16cf28a340da65" prot="public" virt="non-virtual"><scope>GenericDocument</scope><name>SetArrayRaw</name></member>
      <member refid="class_generic_value_1a7d23c9148e9dd398ad37debf3591844f" prot="public" virt="non-virtual"><scope>GenericDocument</scope><name>SetElementsPointer</name></member>
      <member refid="class_generic_value_1a217a17bfa0059ae9af5724486fccc691" prot="public" virt="non-virtual"><scope>GenericDocument</scope><name>SetMembersPointer</name></member>
      <member refid="class_generic_value_1a26c8ec7d68858df1038506df7fcff22d" prot="public" virt="non-virtual"><scope>GenericDocument</scope><name>SetObjectRaw</name></member>
      <member refid="class_generic_value_1a96051e24468e47a8ea5cefa7f8daae0a" prot="public" virt="non-virtual"><scope>GenericDocument</scope><name>SetStringPointer</name></member>
      <member refid="class_generic_value_1a16365de3720923e76ae9aad72a44aaae" prot="public" virt="non-virtual"><scope>GenericDocument</scope><name>SetStringRaw</name></member>
      <member refid="class_generic_value_1ad3d91db36dfdbfc1af40a79aae07723c" prot="public" virt="non-virtual"><scope>GenericDocument</scope><name>SetStringRaw</name></member>
      <member refid="class_generic_document_1ad2169359326bdf8a7180338fec77e77f" prot="private" virt="non-virtual"><scope>GenericDocument</scope><name>stack_</name></member>
      <member refid="class_generic_document_1ae12c513c61745ae731a47b1ca33db063" prot="public" virt="non-virtual"><scope>GenericDocument</scope><name>StartArray</name></member>
      <member refid="class_generic_document_1abb1417fde52cc34cb340e3b50a3295da" prot="public" virt="non-virtual"><scope>GenericDocument</scope><name>StartObject</name></member>
      <member refid="class_generic_document_1ad319fcc9e13606b6795424b9374a7398" prot="public" virt="non-virtual"><scope>GenericDocument</scope><name>String</name></member>
      <member refid="class_generic_value_1ad4d088dc601d99fea9d16300a7ec7ee1" prot="public" virt="non-virtual"><scope>GenericDocument</scope><name>StringEqual</name></member>
      <member refid="class_generic_value_1a32e0f30ee278072374c8168b14d3317f" prot="public" virt="non-virtual"><scope>GenericDocument</scope><name>StringRefType</name></member>
      <member refid="class_generic_document_1a52e66069197b23731a723b933869c013" prot="public" virt="non-virtual"><scope>GenericDocument</scope><name>Swap</name></member>
      <member refid="class_generic_document_1a3182978743c2e82408c76a3e3b9a83be" prot="public" virt="non-virtual"><scope>GenericDocument</scope><name>swap</name></member>
      <member refid="class_generic_document_1a530dd899a04a00ba74f52507b488d2c1" prot="public" virt="non-virtual"><scope>GenericDocument</scope><name>Uint</name></member>
      <member refid="class_generic_document_1a50ac3451a1afd0ce248dcc023d5e09e8" prot="public" virt="non-virtual"><scope>GenericDocument</scope><name>Uint64</name></member>
      <member refid="class_generic_value_1aee30721a49688ba0f865f5d581eb6be9" prot="public" virt="non-virtual"><scope>GenericDocument</scope><name>ValueIterator</name></member>
      <member refid="class_generic_document_1a8936205dc215dda029060d7e835e0549" prot="public" virt="non-virtual"><scope>GenericDocument</scope><name>ValueType</name></member>
      <member refid="class_generic_document_1aa9f980909298a4de32f66526484820bf" prot="public" virt="non-virtual"><scope>GenericDocument</scope><name>~GenericDocument</name></member>
      <member refid="class_generic_value_1a213ba89ef5ef961a5e655bd8c78ac9f4" prot="public" virt="non-virtual"><scope>GenericDocument</scope><name>~GenericValue</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
