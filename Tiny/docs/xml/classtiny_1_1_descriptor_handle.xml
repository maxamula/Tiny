<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="classtiny_1_1_descriptor_handle" kind="class" language="C++" prot="public" final="yes">
    <compoundname>tiny::DescriptorHandle</compoundname>
    <includes refid="descriptors_8h" local="no">descriptors.h</includes>
    <sectiondef kind="friend">
      <memberdef kind="friend" id="classtiny_1_1_descriptor_handle_1a45b2fa354081f2834f6664cd95807ada" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class D3DDescriptorHeap</definition>
        <argsstring></argsstring>
        <name>D3DDescriptorHeap</name>
        <qualifiedname>tiny::DescriptorHandle::D3DDescriptorHeap</qualifiedname>
        <param>
          <type><ref refid="classtiny_1_1_d3_d_descriptor_heap" kindref="compound">D3DDescriptorHeap</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/descriptors.h" line="16" column="14" bodyfile="graphics/descriptors.h" bodystart="16" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classtiny_1_1_descriptor_handle_1a8b433616c62381ad86c86255a7562f75" prot="private" static="no" mutable="no">
        <type><ref refid="classtiny_1_1_d3_d_descriptor_heap" kindref="compound">D3DDescriptorHeap</ref> *</type>
        <definition>D3DDescriptorHeap* tiny::DescriptorHandle::mHeap</definition>
        <argsstring></argsstring>
        <name>mHeap</name>
        <qualifiedname>tiny::DescriptorHandle::mHeap</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/descriptors.h" line="42" column="19" bodyfile="graphics/descriptors.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtiny_1_1_descriptor_handle_1a9083f54af6ae0b02390302c1b35927ba" prot="private" static="no" mutable="no">
        <type>u32</type>
        <definition>u32 tiny::DescriptorHandle::mIndex</definition>
        <argsstring></argsstring>
        <name>mIndex</name>
        <qualifiedname>tiny::DescriptorHandle::mIndex</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/descriptors.h" line="43" column="4" bodyfile="graphics/descriptors.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtiny_1_1_descriptor_handle_1a16d7cc57dc34a2a530618b68e25dc45e" prot="private" static="no" mutable="no">
        <type>D3D12_CPU_DESCRIPTOR_HANDLE</type>
        <definition>D3D12_CPU_DESCRIPTOR_HANDLE tiny::DescriptorHandle::mCpu</definition>
        <argsstring></argsstring>
        <name>mCpu</name>
        <qualifiedname>tiny::DescriptorHandle::mCpu</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/descriptors.h" line="44" column="28" bodyfile="graphics/descriptors.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtiny_1_1_descriptor_handle_1a7b3ff1f8b5bb2847bee0e179f9b86cc5" prot="private" static="no" mutable="no">
        <type>D3D12_GPU_DESCRIPTOR_HANDLE</type>
        <definition>D3D12_GPU_DESCRIPTOR_HANDLE tiny::DescriptorHandle::mGpu</definition>
        <argsstring></argsstring>
        <name>mGpu</name>
        <qualifiedname>tiny::DescriptorHandle::mGpu</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/descriptors.h" line="45" column="28" bodyfile="graphics/descriptors.h" bodystart="45" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classtiny_1_1_descriptor_handle_1ad92637db50880ded8adca78e8dffeb54" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tiny::DescriptorHandle::DescriptorHandle</definition>
        <argsstring>()</argsstring>
        <name>DescriptorHandle</name>
        <qualifiedname>tiny::DescriptorHandle::DescriptorHandle</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/descriptors.h" line="18" column="1" bodyfile="graphics/descriptors.cpp" bodystart="168" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="classtiny_1_1_descriptor_handle_1a91724ef98176beda0c9d1e192d78e950" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>tiny::DescriptorHandle::DescriptorHandle</definition>
        <argsstring>(const DescriptorHandle &amp;) noexcept</argsstring>
        <name>DescriptorHandle</name>
        <qualifiedname>tiny::DescriptorHandle::DescriptorHandle</qualifiedname>
        <param>
          <type>const <ref refid="classtiny_1_1_descriptor_handle" kindref="compound">DescriptorHandle</ref> &amp;</type>
          <defname>other</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/descriptors.h" line="19" column="1" bodyfile="graphics/descriptors.cpp" bodystart="180" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="classtiny_1_1_descriptor_handle_1a7a286b5660f44631c9ca864e7bf92ea8" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="classtiny_1_1_descriptor_handle" kindref="compound">DescriptorHandle</ref> &amp;</type>
        <definition>DescriptorHandle &amp; tiny::DescriptorHandle::operator=</definition>
        <argsstring>(const DescriptorHandle &amp;) noexcept</argsstring>
        <name>operator=</name>
        <qualifiedname>tiny::DescriptorHandle::operator=</qualifiedname>
        <param>
          <type>const <ref refid="classtiny_1_1_descriptor_handle" kindref="compound">DescriptorHandle</ref> &amp;</type>
          <defname>other</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/descriptors.h" line="20" column="18" bodyfile="graphics/descriptors.cpp" bodystart="187" bodyend="203"/>
      </memberdef>
      <memberdef kind="function" id="classtiny_1_1_descriptor_handle_1a57ba835e4225572ff3dff94b9110138a" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>tiny::DescriptorHandle::DescriptorHandle</definition>
        <argsstring>(DescriptorHandle &amp;&amp;) noexcept</argsstring>
        <name>DescriptorHandle</name>
        <qualifiedname>tiny::DescriptorHandle::DescriptorHandle</qualifiedname>
        <param>
          <type><ref refid="classtiny_1_1_descriptor_handle" kindref="compound">DescriptorHandle</ref> &amp;&amp;</type>
          <defname>other</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/descriptors.h" line="21" column="1" bodyfile="graphics/descriptors.cpp" bodystart="205" bodyend="212"/>
      </memberdef>
      <memberdef kind="function" id="classtiny_1_1_descriptor_handle_1a45912d4e2af83de54eaf95a697f1a6bd" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="classtiny_1_1_descriptor_handle" kindref="compound">DescriptorHandle</ref> &amp;</type>
        <definition>DescriptorHandle &amp; tiny::DescriptorHandle::operator=</definition>
        <argsstring>(DescriptorHandle &amp;&amp;) noexcept</argsstring>
        <name>operator=</name>
        <qualifiedname>tiny::DescriptorHandle::operator=</qualifiedname>
        <param>
          <type><ref refid="classtiny_1_1_descriptor_handle" kindref="compound">DescriptorHandle</ref> &amp;&amp;</type>
          <defname>other</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/descriptors.h" line="22" column="18" bodyfile="graphics/descriptors.cpp" bodystart="214" bodyend="232"/>
      </memberdef>
      <memberdef kind="function" id="classtiny_1_1_descriptor_handle_1aced61db9f61f696884cf28c33f81c2c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tiny::DescriptorHandle::~DescriptorHandle</definition>
        <argsstring>()</argsstring>
        <name>~DescriptorHandle</name>
        <qualifiedname>tiny::DescriptorHandle::~DescriptorHandle</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/descriptors.h" line="23" column="1" bodyfile="graphics/descriptors.cpp" bodystart="234" bodyend="237"/>
      </memberdef>
      <memberdef kind="function" id="classtiny_1_1_descriptor_handle_1aa6247c6de7efffd2a19b6faea8d39674" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool tiny::DescriptorHandle::operator&lt;</definition>
        <argsstring>(DescriptorHandle const &amp;o) const noexcept</argsstring>
        <name>operator&lt;</name>
        <qualifiedname>tiny::DescriptorHandle::operator&lt;</qualifiedname>
        <param>
          <type><ref refid="classtiny_1_1_descriptor_handle" kindref="compound">DescriptorHandle</ref> const &amp;</type>
          <declname>o</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/descriptors.h" line="25" column="1" bodyfile="graphics/descriptors.h" bodystart="25" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="classtiny_1_1_descriptor_handle_1a1d93611bd99a41ca4f8795bf1d691ab5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tiny::DescriptorHandle::Release</definition>
        <argsstring>()</argsstring>
        <name>Release</name>
        <qualifiedname>tiny::DescriptorHandle::Release</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/descriptors.h" line="32" column="6" bodyfile="graphics/descriptors.cpp" bodystart="239" bodyend="243"/>
      </memberdef>
      <memberdef kind="function" id="classtiny_1_1_descriptor_handle_1ad7b4d849165d7d4c57eca3443d5bb992" prot="public" static="no" nodiscard="yes" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>D3D12_CPU_DESCRIPTOR_HANDLE</type>
        <definition>D3D12_CPU_DESCRIPTOR_HANDLE tiny::DescriptorHandle::GetCpuHandle</definition>
        <argsstring>() const noexcept</argsstring>
        <name>GetCpuHandle</name>
        <qualifiedname>tiny::DescriptorHandle::GetCpuHandle</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/descriptors.h" line="34" column="30" bodyfile="graphics/descriptors.cpp" bodystart="245" bodyend="248"/>
      </memberdef>
      <memberdef kind="function" id="classtiny_1_1_descriptor_handle_1a3bab910ef5bf9f02d4156e255365f2b2" prot="public" static="no" nodiscard="yes" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>D3D12_GPU_DESCRIPTOR_HANDLE</type>
        <definition>D3D12_GPU_DESCRIPTOR_HANDLE tiny::DescriptorHandle::GetGpuHandle</definition>
        <argsstring>() const noexcept</argsstring>
        <name>GetGpuHandle</name>
        <qualifiedname>tiny::DescriptorHandle::GetGpuHandle</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/descriptors.h" line="35" column="30" bodyfile="graphics/descriptors.cpp" bodystart="250" bodyend="253"/>
      </memberdef>
      <memberdef kind="function" id="classtiny_1_1_descriptor_handle_1aee7f67e65788fbdecb44c3135a184782" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tiny::DescriptorHandle::__declspec</definition>
        <argsstring>(property(get=GetCpuHandle)) D3D12_CPU_DESCRIPTOR_HANDLE cpu</argsstring>
        <name>__declspec</name>
        <qualifiedname>tiny::DescriptorHandle::__declspec</qualifiedname>
        <param>
          <type>property(get=<ref refid="classtiny_1_1_descriptor_handle_1ad7b4d849165d7d4c57eca3443d5bb992" kindref="member">GetCpuHandle</ref>)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/descriptors.h" line="37" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtiny_1_1_descriptor_handle_1a4a642a32c97df543ef7c585ae027d6e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tiny::DescriptorHandle::__declspec</definition>
        <argsstring>(property(get=GetGpuHandle)) D3D12_GPU_DESCRIPTOR_HANDLE gpu</argsstring>
        <name>__declspec</name>
        <qualifiedname>tiny::DescriptorHandle::__declspec</qualifiedname>
        <param>
          <type>property(get=<ref refid="classtiny_1_1_descriptor_handle_1a3bab910ef5bf9f02d4156e255365f2b2" kindref="member">GetGpuHandle</ref>)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/descriptors.h" line="38" column="1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="classtiny_1_1_descriptor_handle_1a72aeeee2fdaf9b3ebd385c55c00ca5f4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tiny::DescriptorHandle::DescriptorHandle</definition>
        <argsstring>(D3DDescriptorHeap *heap, u32 index, D3D12_CPU_DESCRIPTOR_HANDLE cpu, D3D12_GPU_DESCRIPTOR_HANDLE gpu)</argsstring>
        <name>DescriptorHandle</name>
        <qualifiedname>tiny::DescriptorHandle::DescriptorHandle</qualifiedname>
        <param>
          <type><ref refid="classtiny_1_1_d3_d_descriptor_heap" kindref="compound">D3DDescriptorHeap</ref> *</type>
          <declname>heap</declname>
        </param>
        <param>
          <type>u32</type>
          <declname>index</declname>
        </param>
        <param>
          <type>D3D12_CPU_DESCRIPTOR_HANDLE</type>
          <declname>cpu</declname>
        </param>
        <param>
          <type>D3D12_GPU_DESCRIPTOR_HANDLE</type>
          <declname>gpu</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graphics/descriptors.h" line="40" column="1" bodyfile="graphics/descriptors.cpp" bodystart="173" bodyend="178"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="graphics/descriptors.h" line="14" column="1" bodyfile="graphics/descriptors.h" bodystart="15" bodyend="46"/>
    <listofallmembers>
      <member refid="classtiny_1_1_descriptor_handle_1aee7f67e65788fbdecb44c3135a184782" prot="public" virt="non-virtual"><scope>tiny::DescriptorHandle</scope><name>__declspec</name></member>
      <member refid="classtiny_1_1_descriptor_handle_1a4a642a32c97df543ef7c585ae027d6e6" prot="public" virt="non-virtual"><scope>tiny::DescriptorHandle</scope><name>__declspec</name></member>
      <member refid="classtiny_1_1_descriptor_handle_1a45b2fa354081f2834f6664cd95807ada" prot="private" virt="non-virtual"><scope>tiny::DescriptorHandle</scope><name>D3DDescriptorHeap</name></member>
      <member refid="classtiny_1_1_descriptor_handle_1ad92637db50880ded8adca78e8dffeb54" prot="public" virt="non-virtual"><scope>tiny::DescriptorHandle</scope><name>DescriptorHandle</name></member>
      <member refid="classtiny_1_1_descriptor_handle_1a91724ef98176beda0c9d1e192d78e950" prot="public" virt="non-virtual"><scope>tiny::DescriptorHandle</scope><name>DescriptorHandle</name></member>
      <member refid="classtiny_1_1_descriptor_handle_1a57ba835e4225572ff3dff94b9110138a" prot="public" virt="non-virtual"><scope>tiny::DescriptorHandle</scope><name>DescriptorHandle</name></member>
      <member refid="classtiny_1_1_descriptor_handle_1a72aeeee2fdaf9b3ebd385c55c00ca5f4" prot="private" virt="non-virtual"><scope>tiny::DescriptorHandle</scope><name>DescriptorHandle</name></member>
      <member refid="classtiny_1_1_descriptor_handle_1ad7b4d849165d7d4c57eca3443d5bb992" prot="public" virt="non-virtual"><scope>tiny::DescriptorHandle</scope><name>GetCpuHandle</name></member>
      <member refid="classtiny_1_1_descriptor_handle_1a3bab910ef5bf9f02d4156e255365f2b2" prot="public" virt="non-virtual"><scope>tiny::DescriptorHandle</scope><name>GetGpuHandle</name></member>
      <member refid="classtiny_1_1_descriptor_handle_1a16d7cc57dc34a2a530618b68e25dc45e" prot="private" virt="non-virtual"><scope>tiny::DescriptorHandle</scope><name>mCpu</name></member>
      <member refid="classtiny_1_1_descriptor_handle_1a7b3ff1f8b5bb2847bee0e179f9b86cc5" prot="private" virt="non-virtual"><scope>tiny::DescriptorHandle</scope><name>mGpu</name></member>
      <member refid="classtiny_1_1_descriptor_handle_1a8b433616c62381ad86c86255a7562f75" prot="private" virt="non-virtual"><scope>tiny::DescriptorHandle</scope><name>mHeap</name></member>
      <member refid="classtiny_1_1_descriptor_handle_1a9083f54af6ae0b02390302c1b35927ba" prot="private" virt="non-virtual"><scope>tiny::DescriptorHandle</scope><name>mIndex</name></member>
      <member refid="classtiny_1_1_descriptor_handle_1aa6247c6de7efffd2a19b6faea8d39674" prot="public" virt="non-virtual"><scope>tiny::DescriptorHandle</scope><name>operator&lt;</name></member>
      <member refid="classtiny_1_1_descriptor_handle_1a7a286b5660f44631c9ca864e7bf92ea8" prot="public" virt="non-virtual"><scope>tiny::DescriptorHandle</scope><name>operator=</name></member>
      <member refid="classtiny_1_1_descriptor_handle_1a45912d4e2af83de54eaf95a697f1a6bd" prot="public" virt="non-virtual"><scope>tiny::DescriptorHandle</scope><name>operator=</name></member>
      <member refid="classtiny_1_1_descriptor_handle_1a1d93611bd99a41ca4f8795bf1d691ab5" prot="public" virt="non-virtual"><scope>tiny::DescriptorHandle</scope><name>Release</name></member>
      <member refid="classtiny_1_1_descriptor_handle_1aced61db9f61f696884cf28c33f81c2c1" prot="public" virt="non-virtual"><scope>tiny::DescriptorHandle</scope><name>~DescriptorHandle</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
