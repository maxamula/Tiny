<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="registry_8cpp" kind="file" language="C++">
    <compoundname>registry.cpp</compoundname>
    <includes refid="registry_8h" local="yes">registry.h</includes>
    <includes refid="registry__internal_8h" local="yes">registry_internal.h</includes>
    <includes local="no">unordered_map</includes>
    <incdepgraph>
      <node id="11">
        <label>../entt.hpp</label>
      </node>
      <node id="1">
        <label>fx/registry.cpp</label>
        <link refid="registry_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>registry.h</label>
        <link refid="registry_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>registry_internal.h</label>
        <link refid="registry__internal_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>shaderfx.h</label>
        <link refid="shaderfx_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>DirectXMath.h</label>
      </node>
      <node id="7">
        <label>atlbase.h</label>
      </node>
      <node id="5">
        <label>d3d12.h</label>
      </node>
      <node id="12">
        <label>d3dx12.hpp</label>
      </node>
      <node id="6">
        <label>dxcapi.h</label>
      </node>
      <node id="3">
        <label>memory</label>
      </node>
      <node id="9">
        <label>stdexcept</label>
      </node>
      <node id="8">
        <label>unordered_map</label>
      </node>
      <node id="13">
        <label>variant</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacetiny">tiny</innernamespace>
    <innernamespace refid="namespacetiny_1_1fx">tiny::fx</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="registry_8h" kindref="compound">registry.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="registry__internal_8h" kindref="compound">registry_internal.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unordered_map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5" refid="namespacetiny" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetiny_1_1fx" kindref="compound">tiny::fx</ref></highlight></codeline>
<codeline lineno="6"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unordered_map&lt;u64,<sp/>MaterialInfo&gt;&amp;<sp/><ref refid="namespacetiny_1_1fx_1a6e7da883a5a2cde178fd00b3bdc309d1" kindref="member">GetMaterialsRegistry</ref>()</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::unordered_map&lt;u64,<sp/>MaterialInfo&gt;<sp/>materials;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>materials;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unordered_map&lt;u64,<sp/>MeshMaterialInfo&gt;&amp;<sp/><ref refid="namespacetiny_1_1fx_1a5dcdac73bc93a023477acf1423dfde21" kindref="member">GetMeshMaterialsRegistry</ref>()</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::unordered_map&lt;u64,<sp/>MeshMaterialInfo&gt;<sp/>meshMaterials;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>meshMaterials;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>u8<sp/><ref refid="namespacetiny_1_1fx_1a4c111c317a63b98bf44782ae3b0451d9" kindref="member">RegisterMaterial</ref>(u64<sp/>instanceId,<sp/><ref refid="namespacetiny_1_1fx_1a6bd9a295b6079d943cd9af9b51e44422" kindref="member">fnMaterialInitializer</ref><sp/>initializer,<sp/><ref refid="namespacetiny_1_1fx_1a3600761e86b5350b1e6429bb740dc3f4" kindref="member">fnMaterialFactory</ref><sp/>factory)</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>materials<sp/>=<sp/><ref refid="namespacetiny_1_1fx_1a6e7da883a5a2cde178fd00b3bdc309d1" kindref="member">GetMaterialsRegistry</ref>();</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(materials.find(instanceId)<sp/>!=<sp/>materials.end())</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>materials[instanceId]<sp/>=<sp/>MaterialInfo</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.initializer<sp/>=<sp/>initializer,</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.factory<sp/>=<sp/>factory,</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.material<sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>u8<sp/><ref refid="namespacetiny_1_1fx_1a449f348d799f8a645180aa5224fae42c" kindref="member">RegisterMeshMaterial</ref>(u64<sp/>instanceId,<sp/><ref refid="namespacetiny_1_1fx_1ae87e351d57ff1333afe1f08ae2bd1be2" kindref="member">fnMeshMaterialInitializer</ref><sp/>initializer,<sp/><ref refid="namespacetiny_1_1fx_1ad23ba76794ce90cd692edc000db902ec" kindref="member">fnMeshMaterialFactory</ref><sp/>factory)</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>meshMaterials<sp/>=<sp/><ref refid="namespacetiny_1_1fx_1a5dcdac73bc93a023477acf1423dfde21" kindref="member">GetMeshMaterialsRegistry</ref>();</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(meshMaterials.find(instanceId)<sp/>!=<sp/>meshMaterials.end())</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>meshMaterials[instanceId]<sp/>=<sp/>MeshMaterialInfo</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.initializer<sp/>=<sp/>initializer,</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.factory<sp/>=<sp/>factory,</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.material<sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="fx/registry.cpp"/>
  </compounddef>
</doxygen>
